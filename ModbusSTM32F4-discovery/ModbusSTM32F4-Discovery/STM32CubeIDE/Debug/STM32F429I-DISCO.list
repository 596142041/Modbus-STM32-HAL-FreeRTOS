
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001a914  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003478  0801aac4  0801aac4  0002aac4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000ab6  0801df3c  0801df3c  0002df3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000000c  0801e9f4  0801e9f4  0002e9f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000007c  0801ea00  0801ea00  0002ea00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00009800  0801ea7c  0801ea7c  0002ea7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0802827c  0802827c  00040160  2**0
                  CONTENTS
  8 .ARM          00000008  0802827c  0802827c  0003827c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08028284  08028284  00040160  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08028284  08028284  00038284  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08028298  08028298  00038298  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000160  20000000  080282a0  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00012620  20000160  08028400  00040160  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20012780  08028400  00042780  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00040160  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  00050000  2**2
                  ALLOC
 17 .debug_line   00031190  00000000  00000000  00040190  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_info   00092c79  00000000  00000000  00071320  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_abbrev 00010fe8  00000000  00000000  00103f99  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_aranges 00002830  00000000  00000000  00114f88  2**3
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_str    0010bef2  00000000  00000000  001177b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_ranges 000039d8  00000000  00000000  002236b0  2**3
                  CONTENTS, READONLY, DEBUGGING
 23 .debug_loc    0001d7d7  00000000  00000000  00227088  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .debug_macro  0002fd51  00000000  00000000  0024485f  2**0
                  CONTENTS, READONLY, DEBUGGING
 25 .comment      000000fa  00000000  00000000  002745b0  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00007a44  00000000  00000000  002746ac  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000160 	.word	0x20000160
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801aaac 	.word	0x0801aaac

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000164 	.word	0x20000164
 80001ec:	0801aaac 	.word	0x0801aaac

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 80002a4:	f000 b972 	b.w	800058c <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	4688      	mov	r8, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14b      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4615      	mov	r5, r2
 80002d2:	d967      	bls.n	80003a4 <__udivmoddi4+0xe4>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b14a      	cbz	r2, 80002ee <__udivmoddi4+0x2e>
 80002da:	f1c2 0720 	rsb	r7, r2, #32
 80002de:	fa01 f302 	lsl.w	r3, r1, r2
 80002e2:	fa20 f707 	lsr.w	r7, r0, r7
 80002e6:	4095      	lsls	r5, r2
 80002e8:	ea47 0803 	orr.w	r8, r7, r3
 80002ec:	4094      	lsls	r4, r2
 80002ee:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80002f2:	0c23      	lsrs	r3, r4, #16
 80002f4:	fbb8 f7fe 	udiv	r7, r8, lr
 80002f8:	fa1f fc85 	uxth.w	ip, r5
 80002fc:	fb0e 8817 	mls	r8, lr, r7, r8
 8000300:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000304:	fb07 f10c 	mul.w	r1, r7, ip
 8000308:	4299      	cmp	r1, r3
 800030a:	d909      	bls.n	8000320 <__udivmoddi4+0x60>
 800030c:	18eb      	adds	r3, r5, r3
 800030e:	f107 30ff 	add.w	r0, r7, #4294967295	; 0xffffffff
 8000312:	f080 811b 	bcs.w	800054c <__udivmoddi4+0x28c>
 8000316:	4299      	cmp	r1, r3
 8000318:	f240 8118 	bls.w	800054c <__udivmoddi4+0x28c>
 800031c:	3f02      	subs	r7, #2
 800031e:	442b      	add	r3, r5
 8000320:	1a5b      	subs	r3, r3, r1
 8000322:	b2a4      	uxth	r4, r4
 8000324:	fbb3 f0fe 	udiv	r0, r3, lr
 8000328:	fb0e 3310 	mls	r3, lr, r0, r3
 800032c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000330:	fb00 fc0c 	mul.w	ip, r0, ip
 8000334:	45a4      	cmp	ip, r4
 8000336:	d909      	bls.n	800034c <__udivmoddi4+0x8c>
 8000338:	192c      	adds	r4, r5, r4
 800033a:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 800033e:	f080 8107 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000342:	45a4      	cmp	ip, r4
 8000344:	f240 8104 	bls.w	8000550 <__udivmoddi4+0x290>
 8000348:	3802      	subs	r0, #2
 800034a:	442c      	add	r4, r5
 800034c:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000350:	eba4 040c 	sub.w	r4, r4, ip
 8000354:	2700      	movs	r7, #0
 8000356:	b11e      	cbz	r6, 8000360 <__udivmoddi4+0xa0>
 8000358:	40d4      	lsrs	r4, r2
 800035a:	2300      	movs	r3, #0
 800035c:	e9c6 4300 	strd	r4, r3, [r6]
 8000360:	4639      	mov	r1, r7
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d909      	bls.n	800037e <__udivmoddi4+0xbe>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80eb 	beq.w	8000546 <__udivmoddi4+0x286>
 8000370:	2700      	movs	r7, #0
 8000372:	e9c6 0100 	strd	r0, r1, [r6]
 8000376:	4638      	mov	r0, r7
 8000378:	4639      	mov	r1, r7
 800037a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037e:	fab3 f783 	clz	r7, r3
 8000382:	2f00      	cmp	r7, #0
 8000384:	d147      	bne.n	8000416 <__udivmoddi4+0x156>
 8000386:	428b      	cmp	r3, r1
 8000388:	d302      	bcc.n	8000390 <__udivmoddi4+0xd0>
 800038a:	4282      	cmp	r2, r0
 800038c:	f200 80fa 	bhi.w	8000584 <__udivmoddi4+0x2c4>
 8000390:	1a84      	subs	r4, r0, r2
 8000392:	eb61 0303 	sbc.w	r3, r1, r3
 8000396:	2001      	movs	r0, #1
 8000398:	4698      	mov	r8, r3
 800039a:	2e00      	cmp	r6, #0
 800039c:	d0e0      	beq.n	8000360 <__udivmoddi4+0xa0>
 800039e:	e9c6 4800 	strd	r4, r8, [r6]
 80003a2:	e7dd      	b.n	8000360 <__udivmoddi4+0xa0>
 80003a4:	b902      	cbnz	r2, 80003a8 <__udivmoddi4+0xe8>
 80003a6:	deff      	udf	#255	; 0xff
 80003a8:	fab2 f282 	clz	r2, r2
 80003ac:	2a00      	cmp	r2, #0
 80003ae:	f040 808f 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b2:	1b49      	subs	r1, r1, r5
 80003b4:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80003b8:	fa1f f885 	uxth.w	r8, r5
 80003bc:	2701      	movs	r7, #1
 80003be:	fbb1 fcfe 	udiv	ip, r1, lr
 80003c2:	0c23      	lsrs	r3, r4, #16
 80003c4:	fb0e 111c 	mls	r1, lr, ip, r1
 80003c8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80003cc:	fb08 f10c 	mul.w	r1, r8, ip
 80003d0:	4299      	cmp	r1, r3
 80003d2:	d907      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d4:	18eb      	adds	r3, r5, r3
 80003d6:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4299      	cmp	r1, r3
 80003de:	f200 80cd 	bhi.w	800057c <__udivmoddi4+0x2bc>
 80003e2:	4684      	mov	ip, r0
 80003e4:	1a59      	subs	r1, r3, r1
 80003e6:	b2a3      	uxth	r3, r4
 80003e8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003ec:	fb0e 1410 	mls	r4, lr, r0, r1
 80003f0:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 80003f4:	fb08 f800 	mul.w	r8, r8, r0
 80003f8:	45a0      	cmp	r8, r4
 80003fa:	d907      	bls.n	800040c <__udivmoddi4+0x14c>
 80003fc:	192c      	adds	r4, r5, r4
 80003fe:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000402:	d202      	bcs.n	800040a <__udivmoddi4+0x14a>
 8000404:	45a0      	cmp	r8, r4
 8000406:	f200 80b6 	bhi.w	8000576 <__udivmoddi4+0x2b6>
 800040a:	4618      	mov	r0, r3
 800040c:	eba4 0408 	sub.w	r4, r4, r8
 8000410:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000414:	e79f      	b.n	8000356 <__udivmoddi4+0x96>
 8000416:	f1c7 0c20 	rsb	ip, r7, #32
 800041a:	40bb      	lsls	r3, r7
 800041c:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000420:	ea4e 0e03 	orr.w	lr, lr, r3
 8000424:	fa01 f407 	lsl.w	r4, r1, r7
 8000428:	fa20 f50c 	lsr.w	r5, r0, ip
 800042c:	fa21 f30c 	lsr.w	r3, r1, ip
 8000430:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000434:	4325      	orrs	r5, r4
 8000436:	fbb3 f9f8 	udiv	r9, r3, r8
 800043a:	0c2c      	lsrs	r4, r5, #16
 800043c:	fb08 3319 	mls	r3, r8, r9, r3
 8000440:	fa1f fa8e 	uxth.w	sl, lr
 8000444:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000448:	fb09 f40a 	mul.w	r4, r9, sl
 800044c:	429c      	cmp	r4, r3
 800044e:	fa02 f207 	lsl.w	r2, r2, r7
 8000452:	fa00 f107 	lsl.w	r1, r0, r7
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1e 0303 	adds.w	r3, lr, r3
 800045c:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
 8000460:	f080 8087 	bcs.w	8000572 <__udivmoddi4+0x2b2>
 8000464:	429c      	cmp	r4, r3
 8000466:	f240 8084 	bls.w	8000572 <__udivmoddi4+0x2b2>
 800046a:	f1a9 0902 	sub.w	r9, r9, #2
 800046e:	4473      	add	r3, lr
 8000470:	1b1b      	subs	r3, r3, r4
 8000472:	b2ad      	uxth	r5, r5
 8000474:	fbb3 f0f8 	udiv	r0, r3, r8
 8000478:	fb08 3310 	mls	r3, r8, r0, r3
 800047c:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000480:	fb00 fa0a 	mul.w	sl, r0, sl
 8000484:	45a2      	cmp	sl, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1e 0404 	adds.w	r4, lr, r4
 800048c:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000490:	d26b      	bcs.n	800056a <__udivmoddi4+0x2aa>
 8000492:	45a2      	cmp	sl, r4
 8000494:	d969      	bls.n	800056a <__udivmoddi4+0x2aa>
 8000496:	3802      	subs	r0, #2
 8000498:	4474      	add	r4, lr
 800049a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800049e:	fba0 8902 	umull	r8, r9, r0, r2
 80004a2:	eba4 040a 	sub.w	r4, r4, sl
 80004a6:	454c      	cmp	r4, r9
 80004a8:	46c2      	mov	sl, r8
 80004aa:	464b      	mov	r3, r9
 80004ac:	d354      	bcc.n	8000558 <__udivmoddi4+0x298>
 80004ae:	d051      	beq.n	8000554 <__udivmoddi4+0x294>
 80004b0:	2e00      	cmp	r6, #0
 80004b2:	d069      	beq.n	8000588 <__udivmoddi4+0x2c8>
 80004b4:	ebb1 050a 	subs.w	r5, r1, sl
 80004b8:	eb64 0403 	sbc.w	r4, r4, r3
 80004bc:	fa04 fc0c 	lsl.w	ip, r4, ip
 80004c0:	40fd      	lsrs	r5, r7
 80004c2:	40fc      	lsrs	r4, r7
 80004c4:	ea4c 0505 	orr.w	r5, ip, r5
 80004c8:	e9c6 5400 	strd	r5, r4, [r6]
 80004cc:	2700      	movs	r7, #0
 80004ce:	e747      	b.n	8000360 <__udivmoddi4+0xa0>
 80004d0:	f1c2 0320 	rsb	r3, r2, #32
 80004d4:	fa20 f703 	lsr.w	r7, r0, r3
 80004d8:	4095      	lsls	r5, r2
 80004da:	fa01 f002 	lsl.w	r0, r1, r2
 80004de:	fa21 f303 	lsr.w	r3, r1, r3
 80004e2:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80004e6:	4338      	orrs	r0, r7
 80004e8:	0c01      	lsrs	r1, r0, #16
 80004ea:	fbb3 f7fe 	udiv	r7, r3, lr
 80004ee:	fa1f f885 	uxth.w	r8, r5
 80004f2:	fb0e 3317 	mls	r3, lr, r7, r3
 80004f6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80004fa:	fb07 f308 	mul.w	r3, r7, r8
 80004fe:	428b      	cmp	r3, r1
 8000500:	fa04 f402 	lsl.w	r4, r4, r2
 8000504:	d907      	bls.n	8000516 <__udivmoddi4+0x256>
 8000506:	1869      	adds	r1, r5, r1
 8000508:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
 800050c:	d22f      	bcs.n	800056e <__udivmoddi4+0x2ae>
 800050e:	428b      	cmp	r3, r1
 8000510:	d92d      	bls.n	800056e <__udivmoddi4+0x2ae>
 8000512:	3f02      	subs	r7, #2
 8000514:	4429      	add	r1, r5
 8000516:	1acb      	subs	r3, r1, r3
 8000518:	b281      	uxth	r1, r0
 800051a:	fbb3 f0fe 	udiv	r0, r3, lr
 800051e:	fb0e 3310 	mls	r3, lr, r0, r3
 8000522:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000526:	fb00 f308 	mul.w	r3, r0, r8
 800052a:	428b      	cmp	r3, r1
 800052c:	d907      	bls.n	800053e <__udivmoddi4+0x27e>
 800052e:	1869      	adds	r1, r5, r1
 8000530:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8000534:	d217      	bcs.n	8000566 <__udivmoddi4+0x2a6>
 8000536:	428b      	cmp	r3, r1
 8000538:	d915      	bls.n	8000566 <__udivmoddi4+0x2a6>
 800053a:	3802      	subs	r0, #2
 800053c:	4429      	add	r1, r5
 800053e:	1ac9      	subs	r1, r1, r3
 8000540:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000544:	e73b      	b.n	80003be <__udivmoddi4+0xfe>
 8000546:	4637      	mov	r7, r6
 8000548:	4630      	mov	r0, r6
 800054a:	e709      	b.n	8000360 <__udivmoddi4+0xa0>
 800054c:	4607      	mov	r7, r0
 800054e:	e6e7      	b.n	8000320 <__udivmoddi4+0x60>
 8000550:	4618      	mov	r0, r3
 8000552:	e6fb      	b.n	800034c <__udivmoddi4+0x8c>
 8000554:	4541      	cmp	r1, r8
 8000556:	d2ab      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 8000558:	ebb8 0a02 	subs.w	sl, r8, r2
 800055c:	eb69 020e 	sbc.w	r2, r9, lr
 8000560:	3801      	subs	r0, #1
 8000562:	4613      	mov	r3, r2
 8000564:	e7a4      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000566:	4660      	mov	r0, ip
 8000568:	e7e9      	b.n	800053e <__udivmoddi4+0x27e>
 800056a:	4618      	mov	r0, r3
 800056c:	e795      	b.n	800049a <__udivmoddi4+0x1da>
 800056e:	4667      	mov	r7, ip
 8000570:	e7d1      	b.n	8000516 <__udivmoddi4+0x256>
 8000572:	4681      	mov	r9, r0
 8000574:	e77c      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000576:	3802      	subs	r0, #2
 8000578:	442c      	add	r4, r5
 800057a:	e747      	b.n	800040c <__udivmoddi4+0x14c>
 800057c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000580:	442b      	add	r3, r5
 8000582:	e72f      	b.n	80003e4 <__udivmoddi4+0x124>
 8000584:	4638      	mov	r0, r7
 8000586:	e708      	b.n	800039a <__udivmoddi4+0xda>
 8000588:	4637      	mov	r7, r6
 800058a:	e6e9      	b.n	8000360 <__udivmoddi4+0xa0>

0800058c <__aeabi_idiv0>:
 800058c:	4770      	bx	lr
 800058e:	bf00      	nop

08000590 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000590:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005c8 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000594:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000596:	e003      	b.n	80005a0 <LoopCopyDataInit>

08000598 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000598:	4b0c      	ldr	r3, [pc, #48]	; (80005cc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 800059c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800059e:	3104      	adds	r1, #4

080005a0 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a0:	480b      	ldr	r0, [pc, #44]	; (80005d0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a2:	4b0c      	ldr	r3, [pc, #48]	; (80005d4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a4:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005a6:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005a8:	d3f6      	bcc.n	8000598 <CopyDataInit>
  ldr  r2, =_sbss
 80005aa:	4a0b      	ldr	r2, [pc, #44]	; (80005d8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005ac:	e002      	b.n	80005b4 <LoopFillZerobss>

080005ae <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005ae:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b0:	f842 3b04 	str.w	r3, [r2], #4

080005b4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b4:	4b09      	ldr	r3, [pc, #36]	; (80005dc <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005b6:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005b8:	d3f9      	bcc.n	80005ae <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005ba:	f002 ff7d 	bl	80034b8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005be:	f019 fab9 	bl	8019b34 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c2:	f000 fe8f 	bl	80012e4 <main>
  bx  lr    
 80005c6:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005c8:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005cc:	080282a0 	.word	0x080282a0
  ldr  r0, =_sdata
 80005d0:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d4:	20000160 	.word	0x20000160
  ldr  r2, =_sbss
 80005d8:	20000160 	.word	0x20000160
  ldr  r3, = _ebss
 80005dc:	20012780 	.word	0x20012780

080005e0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e0:	e7fe      	b.n	80005e0 <ADC_IRQHandler>

080005e2 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e2:	f000 bc93 	b.w	8000f0c <touchgfx_init>

080005e6 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 80005e6:	f000 bcfb 	b.w	8000fe0 <touchgfx_taskEntry>

080005ea <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ea:	4770      	bx	lr

080005ec <_ZN20STM32TouchControllerD0Ev>:
 80005ec:	b510      	push	{r4, lr}
 80005ee:	2104      	movs	r1, #4
 80005f0:	4604      	mov	r4, r0
 80005f2:	f019 fa29 	bl	8019a48 <_ZdlPvj>
 80005f6:	4620      	mov	r0, r4
 80005f8:	bd10      	pop	{r4, pc}
	...

080005fc <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80005fc:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80005fe:	4b0c      	ldr	r3, [pc, #48]	; (8000630 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000600:	4c0c      	ldr	r4, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000602:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000604:	4b0c      	ldr	r3, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000606:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000608:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	6863      	ldr	r3, [r4, #4]
 800060c:	4798      	blx	r3
 800060e:	f640 0311 	movw	r3, #2065	; 0x811
 8000612:	4298      	cmp	r0, r3
 8000614:	d10a      	bne.n	800062c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000616:	4d09      	ldr	r5, [pc, #36]	; (800063c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000618:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	2082      	movs	r0, #130	; 0x82
 800061e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000620:	682b      	ldr	r3, [r5, #0]
 8000622:	2082      	movs	r0, #130	; 0x82
 8000624:	68db      	ldr	r3, [r3, #12]
 8000626:	4798      	blx	r3
        ret = TS_OK;
 8000628:	2000      	movs	r0, #0
    }

    return ret;
}
 800062a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 800062c:	2001      	movs	r0, #1
 800062e:	e7fc      	b.n	800062a <_Z11BSP_TS_Inittt+0x2e>
 8000630:	2000017c 	.word	0x2000017c
 8000634:	2000004c 	.word	0x2000004c
 8000638:	2000017e 	.word	0x2000017e
 800063c:	20000180 	.word	0x20000180

08000640 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000640:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000644:	20f0      	movs	r0, #240	; 0xf0
 8000646:	f7ff bfd9 	b.w	80005fc <_Z11BSP_TS_Inittt>
	...

0800064c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 800064c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800064e:	4d2c      	ldr	r5, [pc, #176]	; (8000700 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb4>)
 8000650:	682b      	ldr	r3, [r5, #0]
{
 8000652:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000654:	691b      	ldr	r3, [r3, #16]
 8000656:	2082      	movs	r0, #130	; 0x82
 8000658:	4798      	blx	r3
 800065a:	b280      	uxth	r0, r0
 800065c:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800065e:	2800      	cmp	r0, #0
 8000660:	d04b      	beq.n	80006fa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xae>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000662:	682b      	ldr	r3, [r5, #0]
 8000664:	f10d 0206 	add.w	r2, sp, #6
 8000668:	695b      	ldr	r3, [r3, #20]
 800066a:	a901      	add	r1, sp, #4
 800066c:	2082      	movs	r0, #130	; 0x82
 800066e:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000670:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000674:	f5a3 73b4 	sub.w	r3, r3, #360	; 0x168

        /* Y value second correction */
        yr = y / 11;
 8000678:	b29b      	uxth	r3, r3
 800067a:	220b      	movs	r2, #11
 800067c:	fbb3 f3f2 	udiv	r3, r3, r2

        /* Return y position value */
        if (yr <= 0)
 8000680:	b133      	cbz	r3, 8000690 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000682:	4a20      	ldr	r2, [pc, #128]	; (8000704 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000684:	8812      	ldrh	r2, [r2, #0]
 8000686:	429a      	cmp	r2, r3
        {
            yr = TsYBoundary - 1;
 8000688:	bf3c      	itt	cc
 800068a:	f102 33ff 	addcc.w	r3, r2, #4294967295	; 0xffffffff
 800068e:	b29b      	uxthcc	r3, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000690:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8000694:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000698:	428a      	cmp	r2, r1
        {
            x = 3870 - x;
 800069a:	bf95      	itete	ls
 800069c:	f5c2 6271 	rsbls	r2, r2, #3856	; 0xf10
        }
        else
        {
            x = 3800 - x;
 80006a0:	f5c2 626d 	rsbhi	r2, r2, #3792	; 0xed0
            x = 3870 - x;
 80006a4:	320e      	addls	r2, #14
            x = 3800 - x;
 80006a6:	3208      	addhi	r2, #8
 80006a8:	f8ad 2004 	strh.w	r2, [sp, #4]
        }

        /* X value second correction */
        xr = x / 15;
 80006ac:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80006b0:	220f      	movs	r2, #15
 80006b2:	fbb1 f1f2 	udiv	r1, r1, r2

        /* Return X position value */
        if (xr <= 0)
 80006b6:	b131      	cbz	r1, 80006c6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x7a>
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006b8:	4a13      	ldr	r2, [pc, #76]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 80006ba:	8812      	ldrh	r2, [r2, #0]
 80006bc:	428a      	cmp	r2, r1
        {
            xr = TsXBoundary - 1;
 80006be:	bf3c      	itt	cc
 80006c0:	f102 31ff 	addcc.w	r1, r2, #4294967295	; 0xffffffff
 80006c4:	b289      	uxthcc	r1, r1
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c6:	4e11      	ldr	r6, [pc, #68]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c8:	4d11      	ldr	r5, [pc, #68]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ca:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	682f      	ldr	r7, [r5, #0]
 80006ce:	b282      	uxth	r2, r0
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d0:	4281      	cmp	r1, r0
 80006d2:	bf88      	it	hi
 80006d4:	1a8a      	subhi	r2, r1, r2
 80006d6:	b2b8      	uxth	r0, r7
 80006d8:	bf98      	it	ls
 80006da:	1a52      	subls	r2, r2, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006dc:	42bb      	cmp	r3, r7
 80006de:	bf8c      	ite	hi
 80006e0:	1a18      	subhi	r0, r3, r0
 80006e2:	1ac0      	subls	r0, r0, r3
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006e4:	b292      	uxth	r2, r2
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006e6:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006e8:	4402      	add	r2, r0
 80006ea:	2a05      	cmp	r2, #5
        {
            _x = x;
 80006ec:	bfc4      	itt	gt
 80006ee:	6031      	strgt	r1, [r6, #0]
            _y = y;
 80006f0:	602b      	strgt	r3, [r5, #0]
        }

        /* Update the X position */
        TsState->X = _x;
 80006f2:	6833      	ldr	r3, [r6, #0]
 80006f4:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006f6:	682b      	ldr	r3, [r5, #0]
 80006f8:	80a3      	strh	r3, [r4, #4]
    }
}
 80006fa:	b003      	add	sp, #12
 80006fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80006fe:	bf00      	nop
 8000700:	20000180 	.word	0x20000180
 8000704:	2000017e 	.word	0x2000017e
 8000708:	2000017c 	.word	0x2000017c
 800070c:	20000184 	.word	0x20000184
 8000710:	20000188 	.word	0x20000188

08000714 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000714:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000716:	4668      	mov	r0, sp
{
 8000718:	460d      	mov	r5, r1
 800071a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 800071c:	f7ff ff96 	bl	800064c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000720:	f8bd 0000 	ldrh.w	r0, [sp]
 8000724:	b130      	cbz	r0, 8000734 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 8000726:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800072a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 800072c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000730:	6023      	str	r3, [r4, #0]
        return true;
 8000732:	2001      	movs	r0, #1
}
 8000734:	b003      	add	sp, #12
 8000736:	bd30      	pop	{r4, r5, pc}

08000738 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000738:	4770      	bx	lr

0800073a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 800073a:	4770      	bx	lr

0800073c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 800073c:	4770      	bx	lr

0800073e <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 800073e:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000740:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8000744:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000748:	4770      	bx	lr

0800074a <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 800074a:	2000      	movs	r0, #0
 800074c:	4770      	bx	lr

0800074e <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800074e:	2000      	movs	r0, #0
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000752:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000754:	b10b      	cbz	r3, 800075a <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000756:	4608      	mov	r0, r1
 8000758:	4718      	bx	r3
        }
    }
 800075a:	4770      	bx	lr

0800075c <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800075c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000760:	4770      	bx	lr

08000762 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000762:	6840      	ldr	r0, [r0, #4]
 8000764:	6803      	ldr	r3, [r0, #0]
 8000766:	699b      	ldr	r3, [r3, #24]
 8000768:	4718      	bx	r3

0800076a <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800076a:	4770      	bx	lr

0800076c <_ZN11TouchGFXHAL9taskEntryEv>:

    TouchGFXGeneratedHAL::initialize();
}

void TouchGFXHAL::taskEntry()
{
 800076c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 800076e:	6803      	ldr	r3, [r0, #0]
{
 8000770:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000772:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8000774:	4798      	blx	r3
    enableInterrupts();
 8000776:	6823      	ldr	r3, [r4, #0]
 8000778:	4620      	mov	r0, r4
 800077a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800077c:	4798      	blx	r3

    OSWrappers::waitForVSync();
 800077e:	f000 f957 	bl	8000a30 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000782:	6823      	ldr	r3, [r4, #0]
 8000784:	4620      	mov	r0, r4
 8000786:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000788:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 800078a:	2029      	movs	r0, #41	; 0x29
 800078c:	f000 fffa 	bl	8001784 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000790:	f000 f94e 	bl	8000a30 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000794:	6823      	ldr	r3, [r4, #0]
 8000796:	4620      	mov	r0, r4
 8000798:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800079a:	4798      	blx	r3
 800079c:	e7f8      	b.n	8000790 <_ZN11TouchGFXHAL9taskEntryEv+0x24>

0800079e <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800079e:	b510      	push	{r4, lr}
 80007a0:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007a2:	f009 fb95 	bl	8009ed0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007a6:	6823      	ldr	r3, [r4, #0]
 80007a8:	4620      	mov	r0, r4
 80007aa:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
    }
 80007ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007b2:	4718      	bx	r3

080007b4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007b4:	f000 bcb0 	b.w	8001118 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007b8 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007b8:	f000 bcb4 	b.w	8001124 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007bc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007bc:	f000 bcba 	b.w	8001134 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007c0 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007c0:	f000 bc86 	b.w	80010d0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007c4 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007c4:	f000 bcb8 	b.w	8001138 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007c8 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007c8:	f000 bcc0 	b.w	800114c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007cc <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007cc:	f000 bc8a 	b.w	80010e4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007d0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80007d0:	b508      	push	{r3, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80007d2:	b931      	cbnz	r1, 80007e2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x12>
 80007d4:	4b0a      	ldr	r3, [pc, #40]	; (8000800 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80007d6:	4a0b      	ldr	r2, [pc, #44]	; (8000804 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80007d8:	480b      	ldr	r0, [pc, #44]	; (8000808 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80007da:	f44f 7127 	mov.w	r1, #668	; 0x29c
 80007de:	f019 f95f 	bl	8019aa0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80007e2:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80007e6:	3200      	adds	r2, #0
 80007e8:	4908      	ldr	r1, [pc, #32]	; (800080c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80007ea:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80007ec:	bf18      	it	ne
 80007ee:	2201      	movne	r2, #1
 80007f0:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80007f2:	3300      	adds	r3, #0
 80007f4:	4a06      	ldr	r2, [pc, #24]	; (8000810 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
 80007f6:	bf18      	it	ne
 80007f8:	2301      	movne	r3, #1
 80007fa:	7013      	strb	r3, [r2, #0]
    }
 80007fc:	bd08      	pop	{r3, pc}
 80007fe:	bf00      	nop
 8000800:	0801ab41 	.word	0x0801ab41
 8000804:	0801accc 	.word	0x0801accc
 8000808:	0801ab79 	.word	0x0801ab79
 800080c:	2001217a 	.word	0x2001217a
 8000810:	2001217b 	.word	0x2001217b

08000814 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb>:
    TOUCHGFX_DEPRECATED(
 8000814:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000818:	4699      	mov	r9, r3
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800081a:	4b1c      	ldr	r3, [pc, #112]	; (800088c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x78>)
    TOUCHGFX_DEPRECATED(
 800081c:	f89d 5020 	ldrb.w	r5, [sp, #32]
 8000820:	4688      	mov	r8, r1
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8000822:	6819      	ldr	r1, [r3, #0]
 8000824:	f891 3076 	ldrb.w	r3, [r1, #118]	; 0x76
    TOUCHGFX_DEPRECATED(
 8000828:	4607      	mov	r7, r0
 800082a:	4614      	mov	r4, r2
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800082c:	b10b      	cbz	r3, 8000832 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x1e>
 800082e:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8000830:	b900      	cbnz	r0, 8000834 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x20>
            return instance->lcdRef;
 8000832:	6888      	ldr	r0, [r1, #8]
        uint16_t stride = lcd().framebufferStride();
 8000834:	6803      	ldr	r3, [r0, #0]
 8000836:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000838:	4798      	blx	r3
        uint32_t bufferSizeInBytes = stride * FRAME_BUFFER_HEIGHT;
 800083a:	4b15      	ldr	r3, [pc, #84]	; (8000890 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x7c>)
 800083c:	881e      	ldrh	r6, [r3, #0]
 800083e:	4370      	muls	r0, r6
        if (useDoubleBuffering)
 8000840:	f1b9 0f00 	cmp.w	r9, #0
 8000844:	d016      	beq.n	8000874 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x60>
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer)
 8000846:	eb08 0100 	add.w	r1, r8, r0
            double_buf = (void*)ptr;
 800084a:	460a      	mov	r2, r1
        if (useAnimationStorage)
 800084c:	b1ad      	cbz	r5, 800087a <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x66>
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer and possibly double buffer)
 800084e:	180b      	adds	r3, r1, r0
 8000850:	3c01      	subs	r4, #1
 8000852:	b2a4      	uxth	r4, r4
 8000854:	2c1f      	cmp	r4, #31
 8000856:	d812      	bhi.n	800087e <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x6a>
 8000858:	2101      	movs	r1, #1
 800085a:	fa01 f404 	lsl.w	r4, r1, r4
 800085e:	490d      	ldr	r1, [pc, #52]	; (8000894 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x80>)
 8000860:	4021      	ands	r1, r4
 8000862:	b161      	cbz	r1, 800087e <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x6a>
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 8000864:	6839      	ldr	r1, [r7, #0]
 8000866:	6f4c      	ldr	r4, [r1, #116]	; 0x74
 8000868:	4638      	mov	r0, r7
 800086a:	4641      	mov	r1, r8
 800086c:	46a4      	mov	ip, r4
    }
 800086e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 8000872:	4760      	bx	ip
        uint8_t* ptr = (uint8_t*)adr;
 8000874:	4641      	mov	r1, r8
        void* double_buf = 0;
 8000876:	464a      	mov	r2, r9
 8000878:	e7e8      	b.n	800084c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x38>
        void* anim_store = 0;
 800087a:	462b      	mov	r3, r5
 800087c:	e7e8      	b.n	8000850 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x3c>
            assert(0 && "Unsupported bit depth");
 800087e:	4b06      	ldr	r3, [pc, #24]	; (8000898 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x84>)
 8000880:	4a06      	ldr	r2, [pc, #24]	; (800089c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x88>)
 8000882:	4807      	ldr	r0, [pc, #28]	; (80008a0 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x8c>)
 8000884:	f240 2189 	movw	r1, #649	; 0x289
 8000888:	f019 f90a 	bl	8019aa0 <__assert_func>
 800088c:	2001217c 	.word	0x2001217c
 8000890:	20012178 	.word	0x20012178
 8000894:	8080808b 	.word	0x8080808b
 8000898:	0801ab24 	.word	0x0801ab24
 800089c:	0801ac78 	.word	0x0801ac78
 80008a0:	0801ab79 	.word	0x0801ab79

080008a4 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80008a4:	f008 bda4 	b.w	80093f0 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080008a8 <_ZN11TouchGFXHALD0Ev>:
 80008a8:	b510      	push	{r4, lr}
 80008aa:	2178      	movs	r1, #120	; 0x78
 80008ac:	4604      	mov	r4, r0
 80008ae:	f019 f8cb 	bl	8019a48 <_ZdlPvj>
 80008b2:	4620      	mov	r0, r4
 80008b4:	bd10      	pop	{r4, pc}

080008b6 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80008b6:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80008ba:	b11b      	cbz	r3, 80008c4 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80008bc:	6840      	ldr	r0, [r0, #4]
 80008be:	6803      	ldr	r3, [r0, #0]
 80008c0:	681b      	ldr	r3, [r3, #0]
 80008c2:	4718      	bx	r3
    }
 80008c4:	4618      	mov	r0, r3
 80008c6:	4770      	bx	lr

080008c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 80008c8:	b530      	push	{r4, r5, lr}
    {
        if (requestedOrientation != nativeDisplayOrientation)
 80008ca:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80008ce:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 80008d2:	4b10      	ldr	r3, [pc, #64]	; (8000914 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
 80008d4:	428c      	cmp	r4, r1
 80008d6:	781a      	ldrb	r2, [r3, #0]
 80008d8:	d00d      	beq.n	80008f6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
        {
            if (DISPLAY_ROTATION == rotate0)
 80008da:	b95a      	cbnz	r2, 80008f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80008dc:	4a0e      	ldr	r2, [pc, #56]	; (8000918 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80008de:	490f      	ldr	r1, [pc, #60]	; (800091c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80008e0:	480f      	ldr	r0, [pc, #60]	; (8000920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80008e2:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80008e4:	4d0f      	ldr	r5, [pc, #60]	; (8000924 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80008e6:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80008e8:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 80008ea:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80008ec:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 80008ee:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 80008f0:	2201      	movs	r2, #1
        {
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
 80008f2:	701a      	strb	r2, [r3, #0]
        }
    }
 80008f4:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 80008f6:	2a00      	cmp	r2, #0
 80008f8:	d0fc      	beq.n	80008f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 80008fa:	4809      	ldr	r0, [pc, #36]	; (8000920 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 80008fc:	4a07      	ldr	r2, [pc, #28]	; (800091c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 80008fe:	8801      	ldrh	r1, [r0, #0]
 8000900:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 8000902:	4a05      	ldr	r2, [pc, #20]	; (8000918 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 8000904:	4d07      	ldr	r5, [pc, #28]	; (8000924 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 8000906:	8814      	ldrh	r4, [r2, #0]
 8000908:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 800090a:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 800090c:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 800090e:	2200      	movs	r2, #0
 8000910:	e7ef      	b.n	80008f2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 8000912:	bf00      	nop
 8000914:	20012174 	.word	0x20012174
 8000918:	20012170 	.word	0x20012170
 800091c:	20012176 	.word	0x20012176
 8000920:	20012172 	.word	0x20012172
 8000924:	20012178 	.word	0x20012178

08000928 <_ZN11TouchGFXHAL10initializeEv>:
    TouchGFXGeneratedHAL::initialize();
 8000928:	f000 bc24 	b.w	8001174 <_ZN20TouchGFXGeneratedHAL10initializeEv>

0800092c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800092c:	2101      	movs	r1, #1
{
 800092e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000930:	2200      	movs	r2, #0
 8000932:	4608      	mov	r0, r1
 8000934:	f006 f8e2 	bl	8006afc <osSemaphoreNew>
 8000938:	4b06      	ldr	r3, [pc, #24]	; (8000954 <_ZN8touchgfx10OSWrappers10initializeEv+0x28>)
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever); // take the lock
 800093a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800093e:	6018      	str	r0, [r3, #0]
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever); // take the lock
 8000940:	f006 f932 	bl	8006ba8 <osSemaphoreAcquire>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000944:	2200      	movs	r2, #0
 8000946:	2104      	movs	r1, #4
 8000948:	2001      	movs	r0, #1
 800094a:	f006 f9a1 	bl	8006c90 <osMessageQueueNew>
 800094e:	4b02      	ldr	r3, [pc, #8]	; (8000958 <_ZN8touchgfx10OSWrappers10initializeEv+0x2c>)
 8000950:	6018      	str	r0, [r3, #0]
}
 8000952:	bd08      	pop	{r3, pc}
 8000954:	20000190 	.word	0x20000190
 8000958:	2000018c 	.word	0x2000018c

0800095c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800095c:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 800095e:	4b07      	ldr	r3, [pc, #28]	; (800097c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x20>)
 8000960:	6818      	ldr	r0, [r3, #0]
 8000962:	b928      	cbnz	r0, 8000970 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x14>
 8000964:	4b06      	ldr	r3, [pc, #24]	; (8000980 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x24>)
 8000966:	4a07      	ldr	r2, [pc, #28]	; (8000984 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 8000968:	4807      	ldr	r0, [pc, #28]	; (8000988 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x2c>)
 800096a:	2131      	movs	r1, #49	; 0x31
 800096c:	f019 f898 	bl	8019aa0 <__assert_func>
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000970:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
}
 8000974:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000978:	f006 b916 	b.w	8006ba8 <osSemaphoreAcquire>
 800097c:	20000190 	.word	0x20000190
 8000980:	0801ad1a 	.word	0x0801ad1a
 8000984:	0801adf5 	.word	0x0801adf5
 8000988:	0801ad2b 	.word	0x0801ad2b

0800098c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800098c:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 800098e:	4b06      	ldr	r3, [pc, #24]	; (80009a8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x1c>)
 8000990:	6818      	ldr	r0, [r3, #0]
 8000992:	b928      	cbnz	r0, 80009a0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>
 8000994:	4b05      	ldr	r3, [pc, #20]	; (80009ac <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x20>)
 8000996:	4a06      	ldr	r2, [pc, #24]	; (80009b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x24>)
 8000998:	4806      	ldr	r0, [pc, #24]	; (80009b4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x28>)
 800099a:	213a      	movs	r1, #58	; 0x3a
 800099c:	f019 f880 	bl	8019aa0 <__assert_func>
    osSemaphoreRelease(frame_buffer_sem);
}
 80009a0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreRelease(frame_buffer_sem);
 80009a4:	f006 b93c 	b.w	8006c20 <osSemaphoreRelease>
 80009a8:	20000190 	.word	0x20000190
 80009ac:	0801ad1a 	.word	0x0801ad1a
 80009b0:	0801adb8 	.word	0x0801adb8
 80009b4:	0801ad2b 	.word	0x0801ad2b

080009b8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 80009b8:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 80009ba:	4b07      	ldr	r3, [pc, #28]	; (80009d8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x20>)
 80009bc:	6818      	ldr	r0, [r3, #0]
 80009be:	b928      	cbnz	r0, 80009cc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>
 80009c0:	4b06      	ldr	r3, [pc, #24]	; (80009dc <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x24>)
 80009c2:	4a07      	ldr	r2, [pc, #28]	; (80009e0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x28>)
 80009c4:	4807      	ldr	r0, [pc, #28]	; (80009e4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x2c>)
 80009c6:	2147      	movs	r1, #71	; 0x47
 80009c8:	f019 f86a 	bl	8019aa0 <__assert_func>
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80009cc:	2100      	movs	r1, #0
}
 80009ce:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80009d2:	f006 b8e9 	b.w	8006ba8 <osSemaphoreAcquire>
 80009d6:	bf00      	nop
 80009d8:	20000190 	.word	0x20000190
 80009dc:	0801ad1a 	.word	0x0801ad1a
 80009e0:	0801ae32 	.word	0x0801ae32
 80009e4:	0801ad2b 	.word	0x0801ad2b

080009e8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 80009e8:	b508      	push	{r3, lr}
    assert(frame_buffer_sem);
 80009ea:	4b06      	ldr	r3, [pc, #24]	; (8000a04 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x1c>)
 80009ec:	6818      	ldr	r0, [r3, #0]
 80009ee:	b928      	cbnz	r0, 80009fc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>
 80009f0:	4b05      	ldr	r3, [pc, #20]	; (8000a08 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x20>)
 80009f2:	4a06      	ldr	r2, [pc, #24]	; (8000a0c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x24>)
 80009f4:	4806      	ldr	r0, [pc, #24]	; (8000a10 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x28>)
 80009f6:	2154      	movs	r1, #84	; 0x54
 80009f8:	f019 f852 	bl	8019aa0 <__assert_func>
    osSemaphoreRelease(frame_buffer_sem);
}
 80009fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSemaphoreRelease(frame_buffer_sem);
 8000a00:	f006 b90e 	b.w	8006c20 <osSemaphoreRelease>
 8000a04:	20000190 	.word	0x20000190
 8000a08:	0801ad1a 	.word	0x0801ad1a
 8000a0c:	0801ae72 	.word	0x0801ae72
 8000a10:	0801ad2b 	.word	0x0801ad2b

08000a14 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    if (vsync_queue)
 8000a14:	4b04      	ldr	r3, [pc, #16]	; (8000a28 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000a16:	6818      	ldr	r0, [r3, #0]
 8000a18:	b120      	cbz	r0, 8000a24 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>
    {
        osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000a1a:	2300      	movs	r3, #0
 8000a1c:	461a      	mov	r2, r3
 8000a1e:	4903      	ldr	r1, [pc, #12]	; (8000a2c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x18>)
 8000a20:	f006 b97c 	b.w	8006d1c <osMessageQueuePut>
    }
}
 8000a24:	4770      	bx	lr
 8000a26:	bf00      	nop
 8000a28:	2000018c 	.word	0x2000018c
 8000a2c:	20000004 	.word	0x20000004

08000a30 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000a30:	b513      	push	{r0, r1, r4, lr}
    if (vsync_queue)
 8000a32:	4c08      	ldr	r4, [pc, #32]	; (8000a54 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000a34:	6820      	ldr	r0, [r4, #0]
 8000a36:	b158      	cbz	r0, 8000a50 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x20>
    {
        uint32_t dummyGet;
        // First make sure the queue is empty, by trying to remove an element with 0 timeout.
        osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000a38:	2300      	movs	r3, #0
 8000a3a:	461a      	mov	r2, r3
 8000a3c:	a901      	add	r1, sp, #4
 8000a3e:	f006 f9af 	bl	8006da0 <osMessageQueueGet>

        // Then, wait for next VSYNC to occur.
        osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000a42:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000a46:	2200      	movs	r2, #0
 8000a48:	a901      	add	r1, sp, #4
 8000a4a:	6820      	ldr	r0, [r4, #0]
 8000a4c:	f006 f9a8 	bl	8006da0 <osMessageQueueGet>
    }
}
 8000a50:	b002      	add	sp, #8
 8000a52:	bd10      	pop	{r4, pc}
 8000a54:	2000018c 	.word	0x2000018c

08000a58 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000a58:	6803      	ldr	r3, [r0, #0]
 8000a5a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000a5c:	4718      	bx	r3

08000a5e <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
    {
        return DMA_TYPE_GENERIC;
    }
 8000a5e:	2000      	movs	r0, #0
 8000a60:	4770      	bx	lr

08000a62 <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000a62:	6803      	ldr	r3, [r0, #0]
 8000a64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000a66:	4718      	bx	r3

08000a68 <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a68:	f240 10ef 	movw	r0, #495	; 0x1ef
 8000a6c:	4770      	bx	lr
	...

08000a70 <_ZN10STM32F4DMA10initializeEv>:
{
 8000a70:	b510      	push	{r4, lr}
    hdma2d.Instance = DMA2D;
 8000a72:	4c07      	ldr	r4, [pc, #28]	; (8000a90 <_ZN10STM32F4DMA10initializeEv+0x20>)
 8000a74:	4b07      	ldr	r3, [pc, #28]	; (8000a94 <_ZN10STM32F4DMA10initializeEv+0x24>)
 8000a76:	6023      	str	r3, [r4, #0]
    HAL_DMA2D_Init(&hdma2d);
 8000a78:	4620      	mov	r0, r4
 8000a7a:	f003 fba3 	bl	80041c4 <HAL_DMA2D_Init>
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000a7e:	4b06      	ldr	r3, [pc, #24]	; (8000a98 <_ZN10STM32F4DMA10initializeEv+0x28>)
 8000a80:	6123      	str	r3, [r4, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8000a82:	4b06      	ldr	r3, [pc, #24]	; (8000a9c <_ZN10STM32F4DMA10initializeEv+0x2c>)
 8000a84:	6163      	str	r3, [r4, #20]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a86:	4b06      	ldr	r3, [pc, #24]	; (8000aa0 <_ZN10STM32F4DMA10initializeEv+0x30>)
 8000a88:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a8c:	609a      	str	r2, [r3, #8]
}
 8000a8e:	bd10      	pop	{r4, pc}
 8000a90:	20012684 	.word	0x20012684
 8000a94:	4002b000 	.word	0x4002b000
 8000a98:	08000ac1 	.word	0x08000ac1
 8000a9c:	08000aa5 	.word	0x08000aa5
 8000aa0:	e000e100 	.word	0xe000e100

08000aa4 <DMA2D_XferErrorCallback>:
    {
 8000aa4:	b508      	push	{r3, lr}
        assert(0);
 8000aa6:	4a03      	ldr	r2, [pc, #12]	; (8000ab4 <DMA2D_XferErrorCallback+0x10>)
 8000aa8:	4b03      	ldr	r3, [pc, #12]	; (8000ab8 <DMA2D_XferErrorCallback+0x14>)
 8000aaa:	4804      	ldr	r0, [pc, #16]	; (8000abc <DMA2D_XferErrorCallback+0x18>)
 8000aac:	2136      	movs	r1, #54	; 0x36
 8000aae:	f018 fff7 	bl	8019aa0 <__assert_func>
 8000ab2:	bf00      	nop
 8000ab4:	0801af94 	.word	0x0801af94
 8000ab8:	0801b88b 	.word	0x0801b88b
 8000abc:	0801aeb6 	.word	0x0801aeb6

08000ac0 <DMA2D_XferCpltCallback>:
        touchgfx::HAL::getInstance()->signalDMAInterrupt();
 8000ac0:	4b02      	ldr	r3, [pc, #8]	; (8000acc <DMA2D_XferCpltCallback+0xc>)
 8000ac2:	681b      	ldr	r3, [r3, #0]
 8000ac4:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000ac6:	6803      	ldr	r3, [r0, #0]
 8000ac8:	695b      	ldr	r3, [r3, #20]
 8000aca:	4718      	bx	r3
 8000acc:	2001217c 	.word	0x2001217c

08000ad0 <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 8000ad0:	4b08      	ldr	r3, [pc, #32]	; (8000af4 <_ZN10STM32F4DMAD1Ev+0x24>)
 8000ad2:	b510      	push	{r4, lr}
 8000ad4:	6003      	str	r3, [r0, #0]
 8000ad6:	4604      	mov	r4, r0
    HAL_DMA2D_DeInit(&hdma2d);
 8000ad8:	4807      	ldr	r0, [pc, #28]	; (8000af8 <_ZN10STM32F4DMAD1Ev+0x28>)
 8000ada:	f003 fc3b 	bl	8004354 <HAL_DMA2D_DeInit>
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000ade:	4b07      	ldr	r3, [pc, #28]	; (8000afc <_ZN10STM32F4DMAD1Ev+0x2c>)
 8000ae0:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000ae4:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000ae8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000aec:	f3bf 8f6f 	isb	sy
}
 8000af0:	4620      	mov	r0, r4
 8000af2:	bd10      	pop	{r4, pc}
 8000af4:	0801af4c 	.word	0x0801af4c
 8000af8:	20012684 	.word	0x20012684
 8000afc:	e000e100 	.word	0xe000e100

08000b00 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 8000b00:	b510      	push	{r4, lr}
 8000b02:	4604      	mov	r4, r0
}
 8000b04:	f7ff ffe4 	bl	8000ad0 <_ZN10STM32F4DMAD1Ev>
 8000b08:	4620      	mov	r0, r4
 8000b0a:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8000b0e:	f018 ff9b 	bl	8019a48 <_ZdlPvj>
 8000b12:	4620      	mov	r0, r4
 8000b14:	bd10      	pop	{r4, pc}
	...

08000b18 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8000b18:	4b04      	ldr	r3, [pc, #16]	; (8000b2c <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8000b1a:	681b      	ldr	r3, [r3, #0]
 8000b1c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8000b20:	b10a      	cbz	r2, 8000b26 <_ZN8touchgfx3HAL3lcdEv+0xe>
 8000b22:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8000b24:	b900      	cbnz	r0, 8000b28 <_ZN8touchgfx3HAL3lcdEv+0x10>
            return instance->lcdRef;
 8000b26:	6898      	ldr	r0, [r3, #8]
    }
 8000b28:	4770      	bx	lr
 8000b2a:	bf00      	nop
 8000b2c:	2001217c 	.word	0x2001217c

08000b30 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b30:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
    uint32_t dma2dColorMode = 0;

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 8000b34:	680d      	ldr	r5, [r1, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000b36:	2d20      	cmp	r5, #32
{
 8000b38:	460c      	mov	r4, r1
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000b3a:	f000 8097 	beq.w	8000c6c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 8000b3e:	2d40      	cmp	r5, #64	; 0x40
 8000b40:	f000 8094 	beq.w	8000c6c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000b44:	1f2a      	subs	r2, r5, #4
 8000b46:	4256      	negs	r6, r2
 8000b48:	4156      	adcs	r6, r2

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8000b4a:	2d80      	cmp	r5, #128	; 0x80
 8000b4c:	f000 8090 	beq.w	8000c70 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>
 8000b50:	f5a5 7380 	sub.w	r3, r5, #256	; 0x100
 8000b54:	425d      	negs	r5, r3
 8000b56:	415d      	adcs	r5, r3

    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000b58:	f7ff ffde 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8000b5c:	6803      	ldr	r3, [r0, #0]
 8000b5e:	69db      	ldr	r3, [r3, #28]
 8000b60:	4798      	blx	r3

    switch (blitOp.operation)
 8000b62:	6823      	ldr	r3, [r4, #0]
 8000b64:	2b40      	cmp	r3, #64	; 0x40
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000b66:	4686      	mov	lr, r0
    switch (blitOp.operation)
 8000b68:	f000 8099 	beq.w	8000c9e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
 8000b6c:	f200 8082 	bhi.w	8000c74 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>
 8000b70:	2b04      	cmp	r3, #4
 8000b72:	f000 808d 	beq.w	8000c90 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>
 8000b76:	2b20      	cmp	r3, #32
 8000b78:	f000 8091 	beq.w	8000c9e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
        break;
    default:
        dma2dTransferMode = DMA2D_M2M;
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000b7c:	f1be 0f10 	cmp.w	lr, #16
 8000b80:	bf14      	ite	ne
 8000b82:	f04f 0c01 	movne.w	ip, #1
 8000b86:	f04f 0c02 	moveq.w	ip, #2
 8000b8a:	2200      	movs	r2, #0
        break;
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8000b8c:	4b4b      	ldr	r3, [pc, #300]	; (8000cbc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000b8e:	f8b4 8010 	ldrh.w	r8, [r4, #16]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000b92:	6819      	ldr	r1, [r3, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000b94:	8ae7      	ldrh	r7, [r4, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000b96:	f8d1 9000 	ldr.w	r9, [r1]
    hdma2d.Init.Mode = dma2dTransferMode;
 8000b9a:	605a      	str	r2, [r3, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000b9c:	f1be 0f10 	cmp.w	lr, #16
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000ba0:	f429 3940 	bic.w	r9, r9, #196608	; 0x30000
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000ba4:	bf14      	ite	ne
 8000ba6:	2001      	movne	r0, #1
 8000ba8:	2002      	moveq	r0, #2
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000baa:	eba7 0708 	sub.w	r7, r7, r8
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000bae:	ea49 0202 	orr.w	r2, r9, r2
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000bb2:	6098      	str	r0, [r3, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000bb4:	60df      	str	r7, [r3, #12]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000bb6:	600a      	str	r2, [r1, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000bb8:	6b4a      	ldr	r2, [r1, #52]	; 0x34

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8000bba:	f8c3 c02c 	str.w	ip, [r3, #44]	; 0x2c
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000bbe:	f022 0207 	bic.w	r2, r2, #7
 8000bc2:	4302      	orrs	r2, r0
 8000bc4:	634a      	str	r2, [r1, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8000bc6:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8000bc8:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
 8000bcc:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 8000bd0:	433a      	orrs	r2, r7
 8000bd2:	640a      	str	r2, [r1, #64]	; 0x40
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 8000bd4:	8aa2      	ldrh	r2, [r4, #20]
 8000bd6:	eba2 0208 	sub.w	r2, r2, r8
 8000bda:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 8000bdc:	b906      	cbnz	r6, 8000be0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
 8000bde:	b395      	cbz	r5, 8000c46 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x116>
    {
        if (blitOp.alpha < 255)
 8000be0:	7f22      	ldrb	r2, [r4, #28]
 8000be2:	2aff      	cmp	r2, #255	; 0xff
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 8000be4:	bf15      	itete	ne
 8000be6:	2102      	movne	r1, #2
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000be8:	2200      	moveq	r2, #0
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 8000bea:	e9c3 120c 	strdne	r1, r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000bee:	631a      	streq	r2, [r3, #48]	; 0x30
        }

        if (blendingText)
 8000bf0:	b31d      	cbz	r5, 8000c3a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10a>
 8000bf2:	7f22      	ldrb	r2, [r4, #28]
 8000bf4:	69a1      	ldr	r1, [r4, #24]
        {
            if (bitDepth == 16)
 8000bf6:	f1be 0f10 	cmp.w	lr, #16
 8000bfa:	ea4f 6c02 	mov.w	ip, r2, lsl #24
 8000bfe:	d151      	bne.n	8000ca4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000c00:	f04f 081f 	mov.w	r8, #31
 8000c04:	f3c1 22c4 	ubfx	r2, r1, #11, #5
 8000c08:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000c0c:	fbb2 fef8 	udiv	lr, r2, r8
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000c10:	ea01 0208 	and.w	r2, r1, r8
 8000c14:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000c18:	fbb2 f2f8 	udiv	r2, r2, r8
                uint32_t alpha = blitOp.alpha;
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000c1c:	ea42 020c 	orr.w	r2, r2, ip
 8000c20:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000c24:	f3c1 1145 	ubfx	r1, r1, #5, #6
 8000c28:	ebc1 2101 	rsb	r1, r1, r1, lsl #8
 8000c2c:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
 8000c30:	fbb1 f1fc 	udiv	r1, r1, ip
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000c34:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000c38:	635a      	str	r2, [r3, #52]	; 0x34
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000c3a:	e9c3 7006 	strd	r7, r0, [r3, #24]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8000c3e:	2100      	movs	r1, #0
 8000c40:	481e      	ldr	r0, [pc, #120]	; (8000cbc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8000c42:	f003 fc47 	bl	80044d4 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8000c46:	2101      	movs	r1, #1
 8000c48:	481c      	ldr	r0, [pc, #112]	; (8000cbc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8000c4a:	f003 fc43 	bl	80044d4 <HAL_DMA2D_ConfigLayer>
 8000c4e:	8a23      	ldrh	r3, [r4, #16]
 8000c50:	8a62      	ldrh	r2, [r4, #18]

    if (blendingImage || blendingText)
 8000c52:	b906      	cbnz	r6, 8000c56 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x126>
 8000c54:	b355      	cbz	r5, 8000cac <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8000c56:	e9cd 3200 	strd	r3, r2, [sp]
 8000c5a:	68e3      	ldr	r3, [r4, #12]
 8000c5c:	6861      	ldr	r1, [r4, #4]
 8000c5e:	4817      	ldr	r0, [pc, #92]	; (8000cbc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8000c60:	461a      	mov	r2, r3
 8000c62:	f003 faf9 	bl	8004258 <HAL_DMA2D_BlendingStart_IT>
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
                           (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
    }
}
 8000c66:	b003      	add	sp, #12
 8000c68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8000c6c:	2601      	movs	r6, #1
 8000c6e:	e76f      	b.n	8000b50 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8000c70:	2501      	movs	r5, #1
 8000c72:	e771      	b.n	8000b58 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28>
    switch (blitOp.operation)
 8000c74:	2b80      	cmp	r3, #128	; 0x80
 8000c76:	d006      	beq.n	8000c86 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x156>
 8000c78:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000c7c:	f47f af7e 	bne.w	8000b7c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4c>
        dma2dColorMode = CM_A8;
 8000c80:	f04f 0c09 	mov.w	ip, #9
 8000c84:	e001      	b.n	8000c8a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
        dma2dColorMode = CM_A4;
 8000c86:	f04f 0c0a 	mov.w	ip, #10
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
 8000c8a:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8000c8e:	e77d      	b.n	8000b8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000c90:	2810      	cmp	r0, #16
 8000c92:	bf14      	ite	ne
 8000c94:	f04f 0c01 	movne.w	ip, #1
 8000c98:	f04f 0c02 	moveq.w	ip, #2
 8000c9c:	e7f5      	b.n	8000c8a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
        dma2dColorMode = CM_ARGB8888;
 8000c9e:	f04f 0c00 	mov.w	ip, #0
 8000ca2:	e7f2      	b.n	8000c8a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 8000ca4:	ea4c 0101 	orr.w	r1, ip, r1
 8000ca8:	6359      	str	r1, [r3, #52]	; 0x34
 8000caa:	e7c6      	b.n	8000c3a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10a>
        HAL_DMA2D_Start_IT(&hdma2d,
 8000cac:	9200      	str	r2, [sp, #0]
 8000cae:	6861      	ldr	r1, [r4, #4]
 8000cb0:	68e2      	ldr	r2, [r4, #12]
 8000cb2:	4802      	ldr	r0, [pc, #8]	; (8000cbc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
 8000cb4:	f003 fab2 	bl	800421c <HAL_DMA2D_Start_IT>
}
 8000cb8:	e7d5      	b.n	8000c66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
 8000cba:	bf00      	nop
 8000cbc:	20012684 	.word	0x20012684

08000cc0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8000cc0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000cc2:	460d      	mov	r5, r1
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8000cc4:	f7ff ff28 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8000cc8:	6803      	ldr	r3, [r0, #0]
 8000cca:	69db      	ldr	r3, [r3, #28]
 8000ccc:	4798      	blx	r3
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000cce:	2810      	cmp	r0, #16
 8000cd0:	69ab      	ldr	r3, [r5, #24]
 8000cd2:	7f29      	ldrb	r1, [r5, #28]
 8000cd4:	d166      	bne.n	8000da4 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe4>
    uint32_t color = 0;
    if (bitDepth == 16)
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8000cd6:	f003 021f 	and.w	r2, r3, #31
 8000cda:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
 8000cde:	201f      	movs	r0, #31
 8000ce0:	fbb2 f4f0 	udiv	r4, r2, r0
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000ce4:	f3c3 22c4 	ubfx	r2, r3, #11, #5
        uint32_t alpha = blitOp.alpha;
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000ce8:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000cec:	ebc2 2202 	rsb	r2, r2, r2, lsl #8
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000cf0:	f3c3 1345 	ubfx	r3, r3, #5, #6
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8000cf4:	fbb2 f2f0 	udiv	r2, r2, r0
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000cf8:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000cfc:	ebc3 2303 	rsb	r3, r3, r3, lsl #8
 8000d00:	223f      	movs	r2, #63	; 0x3f
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000d02:	2102      	movs	r1, #2
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8000d04:	fbb3 f3f2 	udiv	r3, r3, r2
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8000d08:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
    }

    switch (blitOp.operation)
 8000d0c:	682b      	ldr	r3, [r5, #0]
        dma2dTransferMode = DMA2D_R2M;
        break;
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8000d0e:	4827      	ldr	r0, [pc, #156]	; (8000dac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000d10:	8aee      	ldrh	r6, [r5, #22]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000d12:	6802      	ldr	r2, [r0, #0]
    switch (blitOp.operation)
 8000d14:	2b08      	cmp	r3, #8
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000d16:	8a2b      	ldrh	r3, [r5, #16]
 8000d18:	eba6 0603 	sub.w	r6, r6, r3
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000d1c:	6813      	ldr	r3, [r2, #0]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8000d1e:	60c6      	str	r6, [r0, #12]
        dma2dTransferMode = DMA2D_R2M;
 8000d20:	bf0c      	ite	eq
 8000d22:	f44f 3700 	moveq.w	r7, #131072	; 0x20000
 8000d26:	f44f 3740 	movne.w	r7, #196608	; 0x30000
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000d2a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000d2e:	433b      	orrs	r3, r7
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8000d30:	e9c0 7101 	strd	r7, r1, [r0, #4]
    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 8000d34:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 8000d36:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8000d38:	f023 0307 	bic.w	r3, r3, #7
 8000d3c:	430b      	orrs	r3, r1
 8000d3e:	6353      	str	r3, [r2, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8000d40:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8000d42:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8000d46:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8000d4a:	4333      	orrs	r3, r6

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8000d4c:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 8000d50:	6413      	str	r3, [r2, #64]	; 0x40
    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8000d52:	d11c      	bne.n	8000d8e <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xce>
    {
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 8000d54:	2301      	movs	r3, #1
        hdma2d.LayerCfg[1].InputAlpha = color;
 8000d56:	e9c0 340c 	strd	r3, r4, [r0, #48]	; 0x30
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8000d5a:	2309      	movs	r3, #9
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000d5c:	e9c0 6106 	strd	r6, r1, [r0, #24]
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8000d60:	62c3      	str	r3, [r0, #44]	; 0x2c
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8000d62:	2100      	movs	r1, #0
 8000d64:	f003 fbb6 	bl	80044d4 <HAL_DMA2D_ConfigLayer>
    {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
        hdma2d.LayerCfg[1].InputOffset = 0;
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8000d68:	2101      	movs	r1, #1
 8000d6a:	4810      	ldr	r0, [pc, #64]	; (8000dac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 8000d6c:	f003 fbb2 	bl	80044d4 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8000d70:	f5b7 3f00 	cmp.w	r7, #131072	; 0x20000
 8000d74:	8a2b      	ldrh	r3, [r5, #16]
 8000d76:	8a6a      	ldrh	r2, [r5, #18]
 8000d78:	d10d      	bne.n	8000d96 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xd6>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8000d7a:	68e9      	ldr	r1, [r5, #12]
 8000d7c:	480b      	ldr	r0, [pc, #44]	; (8000dac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 8000d7e:	e9cd 3200 	strd	r3, r2, [sp]
 8000d82:	460b      	mov	r3, r1
 8000d84:	460a      	mov	r2, r1
 8000d86:	f003 fa67 	bl	8004258 <HAL_DMA2D_BlendingStart_IT>
                                   (unsigned int)blitOp.pDst,
                                   blitOp.nSteps, blitOp.nLoops);
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 8000d8a:	b003      	add	sp, #12
 8000d8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hdma2d.LayerCfg[1].InputOffset = 0;
 8000d8e:	2300      	movs	r3, #0
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8000d90:	62c1      	str	r1, [r0, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 8000d92:	6283      	str	r3, [r0, #40]	; 0x28
 8000d94:	e7e8      	b.n	8000d68 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8000d96:	9200      	str	r2, [sp, #0]
 8000d98:	4621      	mov	r1, r4
 8000d9a:	68ea      	ldr	r2, [r5, #12]
 8000d9c:	4803      	ldr	r0, [pc, #12]	; (8000dac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xec>)
 8000d9e:	f003 fa3d 	bl	800421c <HAL_DMA2D_Start_IT>
}
 8000da2:	e7f2      	b.n	8000d8a <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xca>
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 8000da4:	ea43 6401 	orr.w	r4, r3, r1, lsl #24
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8000da8:	2101      	movs	r1, #1
 8000daa:	e7af      	b.n	8000d0c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x4c>
 8000dac:	20012684 	.word	0x20012684

08000db0 <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 8000db0:	b570      	push	{r4, r5, r6, lr}
 8000db2:	4605      	mov	r5, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000db4:	462c      	mov	r4, r5
 8000db6:	4b0a      	ldr	r3, [pc, #40]	; (8000de0 <_ZN10STM32F4DMAC1Ev+0x30>)
 8000db8:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000dba:	2600      	movs	r6, #0
 8000dbc:	6068      	str	r0, [r5, #4]
 8000dbe:	722e      	strb	r6, [r5, #8]
 8000dc0:	726e      	strb	r6, [r5, #9]
 8000dc2:	f844 3b20 	str.w	r3, [r4], #32
 8000dc6:	2260      	movs	r2, #96	; 0x60
 8000dc8:	4621      	mov	r1, r4
 8000dca:	f009 f9ad 	bl	800a128 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000dce:	f505 6342 	add.w	r3, r5, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000dd2:	61a6      	str	r6, [r4, #24]
 8000dd4:	3420      	adds	r4, #32
 8000dd6:	42a3      	cmp	r3, r4
 8000dd8:	d1fb      	bne.n	8000dd2 <_ZN10STM32F4DMAC1Ev+0x22>
{}
 8000dda:	4628      	mov	r0, r5
 8000ddc:	bd70      	pop	{r4, r5, r6, pc}
 8000dde:	bf00      	nop
 8000de0:	0801af4c 	.word	0x0801af4c

08000de4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
     * @see touchgfx::AbstractPartition::capacity
     */
    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000de4:	2001      	movs	r0, #1
 8000de6:	4770      	bx	lr

08000de8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
     * @see touchgfx::AbstractPartition::element_size
     */
    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000de8:	200c      	movs	r0, #12
 8000dea:	4770      	bx	lr

08000dec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @see touchgfx::AbstractPartition::element
     */
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000dec:	230c      	movs	r3, #12
 8000dee:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000df2:	3008      	adds	r0, #8
 8000df4:	4770      	bx	lr

08000df6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @see touchgfx::AbstractPartition::element
     */
    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000df6:	230c      	movs	r3, #12
 8000df8:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000dfc:	3008      	adds	r0, #8
 8000dfe:	4770      	bx	lr

08000e00 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e00:	2001      	movs	r0, #1
 8000e02:	4770      	bx	lr

08000e04 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e04:	f44f 7054 	mov.w	r0, #848	; 0x350
 8000e08:	4770      	bx	lr

08000e0a <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e0a:	f44f 7354 	mov.w	r3, #848	; 0x350
 8000e0e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e12:	3008      	adds	r0, #8
 8000e14:	4770      	bx	lr

08000e16 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e16:	f44f 7354 	mov.w	r3, #848	; 0x350
 8000e1a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e1e:	3008      	adds	r0, #8
 8000e20:	4770      	bx	lr

08000e22 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e22:	2001      	movs	r0, #1
 8000e24:	4770      	bx	lr

08000e26 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e26:	2010      	movs	r0, #16
 8000e28:	4770      	bx	lr

08000e2a <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e2a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e2e:	3008      	adds	r0, #8
 8000e30:	4770      	bx	lr

08000e32 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e32:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e36:	3008      	adds	r0, #8
 8000e38:	4770      	bx	lr

08000e3a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000e3a:	4608      	mov	r0, r1
 8000e3c:	f001 b8fc 	b.w	8002038 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000e40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000e40:	b510      	push	{r4, lr}
 8000e42:	4b03      	ldr	r3, [pc, #12]	; (8000e50 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000e44:	6003      	str	r3, [r0, #0]
 8000e46:	4604      	mov	r4, r0
 8000e48:	f008 f8e8 	bl	800901c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	bd10      	pop	{r4, pc}
 8000e50:	0801b038 	.word	0x0801b038

08000e54 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000e54:	b510      	push	{r4, lr}
 8000e56:	4604      	mov	r4, r0
 8000e58:	f7ff fff2 	bl	8000e40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e5c:	4620      	mov	r0, r4
 8000e5e:	2114      	movs	r1, #20
 8000e60:	f018 fdf2 	bl	8019a48 <_ZdlPvj>
 8000e64:	4620      	mov	r0, r4
 8000e66:	bd10      	pop	{r4, pc}

08000e68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000e68:	b510      	push	{r4, lr}
 8000e6a:	4b03      	ldr	r3, [pc, #12]	; (8000e78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000e6c:	6003      	str	r3, [r0, #0]
 8000e6e:	4604      	mov	r4, r0
 8000e70:	f008 f8d4 	bl	800901c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000e74:	4620      	mov	r0, r4
 8000e76:	bd10      	pop	{r4, pc}
 8000e78:	0801b004 	.word	0x0801b004

08000e7c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000e7c:	b510      	push	{r4, lr}
 8000e7e:	4604      	mov	r4, r0
 8000e80:	f7ff fff2 	bl	8000e68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e84:	4620      	mov	r0, r4
 8000e86:	f44f 7156 	mov.w	r1, #856	; 0x358
 8000e8a:	f018 fddd 	bl	8019a48 <_ZdlPvj>
 8000e8e:	4620      	mov	r0, r4
 8000e90:	bd10      	pop	{r4, pc}
	...

08000e94 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000e94:	b510      	push	{r4, lr}
 8000e96:	4b03      	ldr	r3, [pc, #12]	; (8000ea4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000e98:	6003      	str	r3, [r0, #0]
 8000e9a:	4604      	mov	r4, r0
 8000e9c:	f008 f8be 	bl	800901c <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ea0:	4620      	mov	r0, r4
 8000ea2:	bd10      	pop	{r4, pc}
 8000ea4:	0801afd0 	.word	0x0801afd0

08000ea8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000ea8:	b510      	push	{r4, lr}
 8000eaa:	4604      	mov	r4, r0
 8000eac:	f7ff fff2 	bl	8000e94 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000eb0:	4620      	mov	r0, r4
 8000eb2:	2118      	movs	r1, #24
 8000eb4:	f018 fdc8 	bl	8019a48 <_ZdlPvj>
 8000eb8:	4620      	mov	r0, r4
 8000eba:	bd10      	pop	{r4, pc}

08000ebc <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000ebc:	b510      	push	{r4, lr}
 8000ebe:	4b08      	ldr	r3, [pc, #32]	; (8000ee0 <_ZN12FrontendHeapD1Ev+0x24>)
 8000ec0:	6003      	str	r3, [r0, #0]
 8000ec2:	4604      	mov	r4, r0
 8000ec4:	f500 7061 	add.w	r0, r0, #900	; 0x384
 8000ec8:	f7ff ffba 	bl	8000e40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ecc:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000ed0:	f7ff ffca 	bl	8000e68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ed4:	f104 0014 	add.w	r0, r4, #20
 8000ed8:	f7ff ffdc 	bl	8000e94 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000edc:	4620      	mov	r0, r4
 8000ede:	bd10      	pop	{r4, pc}
 8000ee0:	0801b06c 	.word	0x0801b06c

08000ee4 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000ee4:	b508      	push	{r3, lr}
 8000ee6:	4802      	ldr	r0, [pc, #8]	; (8000ef0 <__tcf_0+0xc>)
 8000ee8:	f7ff ffe8 	bl	8000ebc <_ZN12FrontendHeapD1Ev>
 8000eec:	bd08      	pop	{r3, pc}
 8000eee:	bf00      	nop
 8000ef0:	20000198 	.word	0x20000198

08000ef4 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000ef4:	b510      	push	{r4, lr}
 8000ef6:	4604      	mov	r4, r0
 8000ef8:	f7ff ffe0 	bl	8000ebc <_ZN12FrontendHeapD1Ev>
 8000efc:	4620      	mov	r0, r4
 8000efe:	f240 5104 	movw	r1, #1284	; 0x504
 8000f02:	f018 fda1 	bl	8019a48 <_ZdlPvj>
 8000f06:	4620      	mov	r0, r4
 8000f08:	bd10      	pop	{r4, pc}
	...

08000f0c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000f0c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000f10:	f000 ffce 	bl	8001eb0 <_ZN14BitmapDatabase11getInstanceEv>
 8000f14:	4605      	mov	r5, r0
 8000f16:	f000 ffcf 	bl	8001eb8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000f1a:	2400      	movs	r4, #0
 8000f1c:	4601      	mov	r1, r0
 8000f1e:	4623      	mov	r3, r4
 8000f20:	4622      	mov	r2, r4
 8000f22:	4628      	mov	r0, r5
 8000f24:	9400      	str	r4, [sp, #0]
 8000f26:	f00d f8d9 	bl	800e0dc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000f2a:	4b22      	ldr	r3, [pc, #136]	; (8000fb4 <touchgfx_init+0xa8>)
 8000f2c:	4a22      	ldr	r2, [pc, #136]	; (8000fb8 <touchgfx_init+0xac>)
        static FrontendHeap instance;
 8000f2e:	4e23      	ldr	r6, [pc, #140]	; (8000fbc <touchgfx_init+0xb0>)
 8000f30:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000f32:	4620      	mov	r0, r4
 8000f34:	f001 fe94 	bl	8002c60 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000f38:	4821      	ldr	r0, [pc, #132]	; (8000fc0 <touchgfx_init+0xb4>)
 8000f3a:	f00d f819 	bl	800df70 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000f3e:	6833      	ldr	r3, [r6, #0]
 8000f40:	07db      	lsls	r3, r3, #31
 8000f42:	d430      	bmi.n	8000fa6 <touchgfx_init+0x9a>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000f44:	4c1f      	ldr	r4, [pc, #124]	; (8000fc4 <touchgfx_init+0xb8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000f46:	4b20      	ldr	r3, [pc, #128]	; (8000fc8 <touchgfx_init+0xbc>)
 8000f48:	6023      	str	r3, [r4, #0]
 8000f4a:	f504 756b 	add.w	r5, r4, #940	; 0x3ac
 8000f4e:	f104 0014 	add.w	r0, r4, #20
 8000f52:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000f56:	f504 7761 	add.w	r7, r4, #900	; 0x384
 8000f5a:	6060      	str	r0, [r4, #4]
 8000f5c:	f8c4 8008 	str.w	r8, [r4, #8]
 8000f60:	60e7      	str	r7, [r4, #12]
 8000f62:	6125      	str	r5, [r4, #16]
 8000f64:	f008 f85c 	bl	8009020 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000f68:	4b18      	ldr	r3, [pc, #96]	; (8000fcc <touchgfx_init+0xc0>)
 8000f6a:	6163      	str	r3, [r4, #20]
 8000f6c:	4640      	mov	r0, r8
 8000f6e:	f008 f857 	bl	8009020 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000f72:	4b17      	ldr	r3, [pc, #92]	; (8000fd0 <touchgfx_init+0xc4>)
 8000f74:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000f76:	4638      	mov	r0, r7
 8000f78:	f008 f852 	bl	8009020 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000f7c:	4b15      	ldr	r3, [pc, #84]	; (8000fd4 <touchgfx_init+0xc8>)
 8000f7e:	f8c4 3384 	str.w	r3, [r4, #900]	; 0x384
 8000f82:	f504 7066 	add.w	r0, r4, #920	; 0x398
 8000f86:	f001 ff29 	bl	8002ddc <_ZN5ModelC1Ev>
 8000f8a:	4622      	mov	r2, r4
 8000f8c:	f504 7166 	add.w	r1, r4, #920	; 0x398
 8000f90:	4628      	mov	r0, r5
 8000f92:	f001 fed5 	bl	8002d40 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000f96:	4628      	mov	r0, r5
 8000f98:	f001 f84e 	bl	8002038 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000f9c:	2301      	movs	r3, #1
 8000f9e:	480e      	ldr	r0, [pc, #56]	; (8000fd8 <touchgfx_init+0xcc>)
 8000fa0:	6033      	str	r3, [r6, #0]
 8000fa2:	f018 fd9b 	bl	8019adc <atexit>

    FrontendHeap& heap = FrontendHeap::getInstance();
    (void)heap; // we need to obtain the reference above to initialize the frontend heap.

    hal.initialize();
 8000fa6:	480d      	ldr	r0, [pc, #52]	; (8000fdc <touchgfx_init+0xd0>)
}
 8000fa8:	b002      	add	sp, #8
 8000faa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000fae:	f7ff bcbb 	b.w	8000928 <_ZN11TouchGFXHAL10initializeEv>
 8000fb2:	bf00      	nop
 8000fb4:	200121f8 	.word	0x200121f8
 8000fb8:	20001338 	.word	0x20001338
 8000fbc:	20000194 	.word	0x20000194
 8000fc0:	20000008 	.word	0x20000008
 8000fc4:	20000198 	.word	0x20000198
 8000fc8:	0801b06c 	.word	0x0801b06c
 8000fcc:	0801afd0 	.word	0x0801afd0
 8000fd0:	0801b004 	.word	0x0801b004
 8000fd4:	0801b038 	.word	0x0801b038
 8000fd8:	08000ee5 	.word	0x08000ee5
 8000fdc:	200012c0 	.word	0x200012c0

08000fe0 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000fe0:	4801      	ldr	r0, [pc, #4]	; (8000fe8 <touchgfx_taskEntry+0x8>)
 8000fe2:	f7ff bbc3 	b.w	800076c <_ZN11TouchGFXHAL9taskEntryEv>
 8000fe6:	bf00      	nop
 8000fe8:	200012c0 	.word	0x200012c0

08000fec <_GLOBAL__sub_I_touchgfx_init>:
}
 8000fec:	b570      	push	{r4, r5, r6, lr}
static STM32F4DMA dma;
 8000fee:	4e28      	ldr	r6, [pc, #160]	; (8001090 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
{
public:

    STM32TouchController() {}
 8000ff0:	4c28      	ldr	r4, [pc, #160]	; (8001094 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
static LCD16bpp display;
 8000ff2:	4d29      	ldr	r5, [pc, #164]	; (8001098 <_GLOBAL__sub_I_touchgfx_init+0xac>)
 8000ff4:	4b29      	ldr	r3, [pc, #164]	; (800109c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
 8000ff6:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 8000ff8:	4630      	mov	r0, r6
 8000ffa:	f7ff fed9 	bl	8000db0 <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 8000ffe:	4628      	mov	r0, r5
 8001000:	f010 f866 	bl	80110d0 <_ZN8touchgfx8LCD16bppC1Ev>
          useDMAAcceleration(true)
 8001004:	4b26      	ldr	r3, [pc, #152]	; (80010a0 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
 8001006:	4827      	ldr	r0, [pc, #156]	; (80010a4 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8001008:	6658      	str	r0, [r3, #100]	; 0x64
        instance = this;
 800100a:	4827      	ldr	r0, [pc, #156]	; (80010a8 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
          useDMAAcceleration(true)
 800100c:	60dc      	str	r4, [r3, #12]
 800100e:	2200      	movs	r2, #0
 8001010:	2101      	movs	r1, #1
 8001012:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8001016:	e9c3 2204 	strd	r2, r2, [r3, #16]
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 800101a:	e9c3 2206 	strd	r2, r2, [r3, #24]
 800101e:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001022:	851a      	strh	r2, [r3, #40]	; 0x28
 8001024:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : listener(0), dragThresholdValue(0)
 8001028:	62da      	str	r2, [r3, #44]	; 0x2c
 800102a:	861a      	strh	r2, [r3, #48]	; 0x30
 800102c:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001030:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
 8001034:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8001038:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
    {
        this->x = 0;
 800103c:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
        this->y = 0;
 8001040:	655a      	str	r2, [r3, #84]	; 0x54
 8001042:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 8001046:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 800104a:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 800104e:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 8001052:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8001056:	671a      	str	r2, [r3, #112]	; 0x70
 8001058:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 800105c:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 8001060:	f883 1049 	strb.w	r1, [r3, #73]	; 0x49
 8001064:	f883 1077 	strb.w	r1, [r3, #119]	; 0x77
        instance = this;
 8001068:	6003      	str	r3, [r0, #0]
        DISPLAY_WIDTH = width;
 800106a:	4810      	ldr	r0, [pc, #64]	; (80010ac <_GLOBAL__sub_I_touchgfx_init+0xc0>)
        DISPLAY_HEIGHT = height;
 800106c:	4d10      	ldr	r5, [pc, #64]	; (80010b0 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800106e:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        DISPLAY_WIDTH = width;
 8001072:	24f0      	movs	r4, #240	; 0xf0
 8001074:	8004      	strh	r4, [r0, #0]
        DISPLAY_HEIGHT = height;
 8001076:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800107a:	8028      	strh	r0, [r5, #0]
        DISPLAY_ROTATION = rotate0;
 800107c:	4d0d      	ldr	r5, [pc, #52]	; (80010b4 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
 800107e:	702a      	strb	r2, [r5, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8001080:	4a0d      	ldr	r2, [pc, #52]	; (80010b8 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 8001082:	8014      	strh	r4, [r2, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001084:	4a0d      	ldr	r2, [pc, #52]	; (80010bc <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 8001086:	8010      	strh	r0, [r2, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001088:	4a0d      	ldr	r2, [pc, #52]	; (80010c0 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
 800108a:	601a      	str	r2, [r3, #0]
}
 800108c:	bd70      	pop	{r4, r5, r6, pc}
 800108e:	bf00      	nop
 8001090:	200006a0 	.word	0x200006a0
 8001094:	2000069c 	.word	0x2000069c
 8001098:	2000133c 	.word	0x2000133c
 800109c:	0801ab14 	.word	0x0801ab14
 80010a0:	200012c0 	.word	0x200012c0
 80010a4:	01000001 	.word	0x01000001
 80010a8:	2001217c 	.word	0x2001217c
 80010ac:	20012170 	.word	0x20012170
 80010b0:	20012172 	.word	0x20012172
 80010b4:	20012174 	.word	0x20012174
 80010b8:	20012176 	.word	0x20012176
 80010bc:	20012178 	.word	0x20012178
 80010c0:	0801abc8 	.word	0x0801abc8

080010c4 <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 80010c4:	4801      	ldr	r0, [pc, #4]	; (80010cc <_GLOBAL__sub_D_touchgfx_init+0x8>)
 80010c6:	f7ff bd03 	b.w	8000ad0 <_ZN10STM32F4DMAD1Ev>
 80010ca:	bf00      	nop
 80010cc:	200006a0 	.word	0x200006a0

080010d0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80010d0:	4b03      	ldr	r3, [pc, #12]	; (80010e0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 80010d2:	2290      	movs	r2, #144	; 0x90
 80010d4:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 80010d8:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80010dc:	4770      	bx	lr
 80010de:	bf00      	nop
 80010e0:	e000e100 	.word	0xe000e100

080010e4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80010e4:	4a09      	ldr	r2, [pc, #36]	; (800110c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80010e6:	490a      	ldr	r1, [pc, #40]	; (8001110 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80010e8:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80010ea:	480a      	ldr	r0, [pc, #40]	; (8001114 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80010ec:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80010f0:	3b01      	subs	r3, #1
 80010f2:	b29b      	uxth	r3, r3
 80010f4:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80010f6:	6911      	ldr	r1, [r2, #16]
 80010f8:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80010fc:	3901      	subs	r1, #1
 80010fe:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001100:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001102:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001104:	f043 0301 	orr.w	r3, r3, #1
 8001108:	6353      	str	r3, [r2, #52]	; 0x34
}
 800110a:	4770      	bx	lr
 800110c:	40016800 	.word	0x40016800
 8001110:	200013b6 	.word	0x200013b6
 8001114:	200013b4 	.word	0x200013b4

08001118 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001118:	4b01      	ldr	r3, [pc, #4]	; (8001120 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800111a:	6a98      	ldr	r0, [r3, #40]	; 0x28
}
 800111c:	4770      	bx	lr
 800111e:	bf00      	nop
 8001120:	40016884 	.word	0x40016884

08001124 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001124:	4b02      	ldr	r3, [pc, #8]	; (8001130 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001126:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001128:	6299      	str	r1, [r3, #40]	; 0x28
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800112a:	f843 2c60 	str.w	r2, [r3, #-96]
}
 800112e:	4770      	bx	lr
 8001130:	40016884 	.word	0x40016884

08001134 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001134:	f008 b962 	b.w	80093fc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001138 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001138:	4b03      	ldr	r3, [pc, #12]	; (8001148 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800113a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800113e:	609a      	str	r2, [r3, #8]
 8001140:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001144:	609a      	str	r2, [r3, #8]
}
 8001146:	4770      	bx	lr
 8001148:	e000e100 	.word	0xe000e100

0800114c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800114c:	4b08      	ldr	r3, [pc, #32]	; (8001170 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 800114e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001152:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001156:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800115a:	f3bf 8f6f 	isb	sy
 800115e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001162:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001166:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800116a:	f3bf 8f6f 	isb	sy
}
 800116e:	4770      	bx	lr
 8001170:	e000e100 	.word	0xe000e100

08001174 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001174:	b538      	push	{r3, r4, r5, lr}
 8001176:	4604      	mov	r4, r0
    HAL::initialize();
 8001178:	f008 fc22 	bl	80099c0 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(touchgfx::Application::getInstance()));
 800117c:	6823      	ldr	r3, [r4, #0]
 800117e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8001180:	f00a fc62 	bl	800ba48 <_ZN8touchgfx11Application11getInstanceEv>
 8001184:	4601      	mov	r1, r0
 8001186:	4620      	mov	r0, r4
 8001188:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800118a:	6823      	ldr	r3, [r4, #0]
 800118c:	4a05      	ldr	r2, [pc, #20]	; (80011a4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800118e:	6f5d      	ldr	r5, [r3, #116]	; 0x74
 8001190:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001194:	2300      	movs	r3, #0
 8001196:	4620      	mov	r0, r4
 8001198:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 800119a:	2300      	movs	r3, #0
 800119c:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 80011a0:	bd38      	pop	{r3, r4, r5, pc}
 80011a2:	bf00      	nop
 80011a4:	d0025800 	.word	0xd0025800

080011a8 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
        if (LTDC->LIPCR == lcd_int_active_line)
 80011a8:	4b13      	ldr	r3, [pc, #76]	; (80011f8 <HAL_LTDC_LineEventCallback+0x50>)
 80011aa:	4a14      	ldr	r2, [pc, #80]	; (80011fc <HAL_LTDC_LineEventCallback+0x54>)
 80011ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011ae:	8811      	ldrh	r1, [r2, #0]
 80011b0:	428b      	cmp	r3, r1
    {
 80011b2:	b510      	push	{r4, lr}
 80011b4:	4c12      	ldr	r4, [pc, #72]	; (8001200 <HAL_LTDC_LineEventCallback+0x58>)
        if (LTDC->LIPCR == lcd_int_active_line)
 80011b6:	d113      	bne.n	80011e0 <HAL_LTDC_LineEventCallback+0x38>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80011b8:	4b12      	ldr	r3, [pc, #72]	; (8001204 <HAL_LTDC_LineEventCallback+0x5c>)
 80011ba:	8819      	ldrh	r1, [r3, #0]
 80011bc:	f004 f89a 	bl	80052f4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80011c0:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80011c2:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 80011c6:	3301      	adds	r3, #1
 80011c8:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80011cc:	f7ff fc22 	bl	8000a14 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80011d0:	6820      	ldr	r0, [r4, #0]
 80011d2:	f008 fe7d 	bl	8009ed0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 80011d6:	2000      	movs	r0, #0
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 80011d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80011dc:	f7ff baac 	b.w	8000738 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80011e0:	f004 f888 	bl	80052f4 <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 80011e4:	2000      	movs	r0, #0
 80011e6:	f7ff faa8 	bl	800073a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
        return instance;
 80011ea:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80011ec:	6803      	ldr	r3, [r0, #0]
    }
 80011ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80011f2:	699b      	ldr	r3, [r3, #24]
 80011f4:	4718      	bx	r3
 80011f6:	bf00      	nop
 80011f8:	40016800 	.word	0x40016800
 80011fc:	200013b6 	.word	0x200013b6
 8001200:	2001217c 	.word	0x2001217c
 8001204:	200013b4 	.word	0x200013b4

08001208 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001208:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800120a:	4b06      	ldr	r3, [pc, #24]	; (8001224 <SPI5_Write+0x1c>)
{
 800120c:	a902      	add	r1, sp, #8
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800120e:	681b      	ldr	r3, [r3, #0]
{
 8001210:	f821 0d02 	strh.w	r0, [r1, #-2]!
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001214:	2201      	movs	r2, #1
 8001216:	4804      	ldr	r0, [pc, #16]	; (8001228 <SPI5_Write+0x20>)
 8001218:	f004 fd77 	bl	8005d0a <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800121c:	b003      	add	sp, #12
 800121e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001222:	bf00      	nop
 8001224:	20000010 	.word	0x20000010
 8001228:	20012528 	.word	0x20012528

0800122c <SystemClock_Config>:
{
 800122c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800122e:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001230:	2210      	movs	r2, #16
 8001232:	2100      	movs	r1, #0
 8001234:	a80a      	add	r0, sp, #40	; 0x28
 8001236:	f018 fcbc 	bl	8019bb2 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800123a:	2214      	movs	r2, #20
 800123c:	2100      	movs	r1, #0
 800123e:	a803      	add	r0, sp, #12
 8001240:	f018 fcb7 	bl	8019bb2 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001244:	2100      	movs	r1, #0
 8001246:	2230      	movs	r2, #48	; 0x30
 8001248:	a814      	add	r0, sp, #80	; 0x50
 800124a:	f018 fcb2 	bl	8019bb2 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800124e:	2400      	movs	r4, #0
 8001250:	4b22      	ldr	r3, [pc, #136]	; (80012dc <SystemClock_Config+0xb0>)
 8001252:	9401      	str	r4, [sp, #4]
 8001254:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001256:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800125a:	641a      	str	r2, [r3, #64]	; 0x40
 800125c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800125e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001262:	9301      	str	r3, [sp, #4]
 8001264:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001266:	4b1e      	ldr	r3, [pc, #120]	; (80012e0 <SystemClock_Config+0xb4>)
 8001268:	9402      	str	r4, [sp, #8]
 800126a:	681a      	ldr	r2, [r3, #0]
 800126c:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001270:	601a      	str	r2, [r3, #0]
 8001272:	681b      	ldr	r3, [r3, #0]
 8001274:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001278:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800127a:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800127c:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800127e:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001282:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001286:	2502      	movs	r5, #2
 8001288:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800128c:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001290:	2708      	movs	r7, #8
 8001292:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001296:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001298:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 800129a:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800129e:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80012a0:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80012a2:	f004 f845 	bl	8005330 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80012a6:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80012a8:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80012ac:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80012b0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80012b4:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80012b8:	a803      	add	r0, sp, #12
 80012ba:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80012bc:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80012be:	f004 fa0b 	bl	80056d8 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80012c2:	23c0      	movs	r3, #192	; 0xc0
 80012c4:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80012c6:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80012c8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80012cc:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80012ce:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80012d0:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80012d2:	f004 fad9 	bl	8005888 <HAL_RCCEx_PeriphCLKConfig>
}
 80012d6:	b021      	add	sp, #132	; 0x84
 80012d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012da:	bf00      	nop
 80012dc:	40023800 	.word	0x40023800
 80012e0:	40007000 	.word	0x40007000

080012e4 <main>:
{
 80012e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80012e8:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 80012ea:	f002 fe5f 	bl	8003fac <HAL_Init>
  SystemClock_Config();
 80012ee:	f7ff ff9d 	bl	800122c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012f2:	2214      	movs	r2, #20
 80012f4:	2100      	movs	r1, #0
 80012f6:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80012f8:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80012fa:	f018 fc5a 	bl	8019bb2 <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80012fe:	4bc6      	ldr	r3, [pc, #792]	; (8001618 <main+0x334>)
 8001300:	9400      	str	r4, [sp, #0]
 8001302:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001304:	48c5      	ldr	r0, [pc, #788]	; (800161c <main+0x338>)
  hi2c3.Instance = I2C3;
 8001306:	4dc6      	ldr	r5, [pc, #792]	; (8001620 <main+0x33c>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001308:	f042 0220 	orr.w	r2, r2, #32
 800130c:	631a      	str	r2, [r3, #48]	; 0x30
 800130e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001310:	f002 0220 	and.w	r2, r2, #32
 8001314:	9200      	str	r2, [sp, #0]
 8001316:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001318:	9401      	str	r4, [sp, #4]
 800131a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800131c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001320:	631a      	str	r2, [r3, #48]	; 0x30
 8001322:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001324:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001328:	9201      	str	r2, [sp, #4]
 800132a:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800132c:	9402      	str	r4, [sp, #8]
 800132e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001330:	f042 0204 	orr.w	r2, r2, #4
 8001334:	631a      	str	r2, [r3, #48]	; 0x30
 8001336:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001338:	f002 0204 	and.w	r2, r2, #4
 800133c:	9202      	str	r2, [sp, #8]
 800133e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001340:	9403      	str	r4, [sp, #12]
 8001342:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001344:	f042 0201 	orr.w	r2, r2, #1
 8001348:	631a      	str	r2, [r3, #48]	; 0x30
 800134a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800134c:	f002 0201 	and.w	r2, r2, #1
 8001350:	9203      	str	r2, [sp, #12]
 8001352:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001354:	9404      	str	r4, [sp, #16]
 8001356:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001358:	f042 0202 	orr.w	r2, r2, #2
 800135c:	631a      	str	r2, [r3, #48]	; 0x30
 800135e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001360:	f002 0202 	and.w	r2, r2, #2
 8001364:	9204      	str	r2, [sp, #16]
 8001366:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001368:	9405      	str	r4, [sp, #20]
 800136a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800136c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001370:	631a      	str	r2, [r3, #48]	; 0x30
 8001372:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001374:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001378:	9205      	str	r2, [sp, #20]
 800137a:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800137c:	9406      	str	r4, [sp, #24]
 800137e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001380:	f042 0210 	orr.w	r2, r2, #16
 8001384:	631a      	str	r2, [r3, #48]	; 0x30
 8001386:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001388:	f002 0210 	and.w	r2, r2, #16
 800138c:	9206      	str	r2, [sp, #24]
 800138e:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001390:	9407      	str	r4, [sp, #28]
 8001392:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001394:	f042 0208 	orr.w	r2, r2, #8
 8001398:	631a      	str	r2, [r3, #48]	; 0x30
 800139a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800139c:	f003 0308 	and.w	r3, r3, #8
 80013a0:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80013a2:	4622      	mov	r2, r4
 80013a4:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80013a6:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80013a8:	f003 f9ca 	bl	8004740 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80013ac:	4622      	mov	r2, r4
 80013ae:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 80013b2:	489c      	ldr	r0, [pc, #624]	; (8001624 <main+0x340>)
 80013b4:	f003 f9c4 	bl	8004740 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013b8:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80013ba:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013bc:	f04f 0804 	mov.w	r8, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80013c0:	a90d      	add	r1, sp, #52	; 0x34
 80013c2:	4896      	ldr	r0, [pc, #600]	; (800161c <main+0x338>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013c4:	940f      	str	r4, [sp, #60]	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013c6:	e9cd 860d 	strd	r8, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80013ca:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80013cc:	f003 f8cc 	bl	8004568 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80013d0:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80013d2:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80013d6:	4893      	ldr	r0, [pc, #588]	; (8001624 <main+0x340>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013d8:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80013dc:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80013e0:	f003 f8c2 	bl	8004568 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80013e4:	4890      	ldr	r0, [pc, #576]	; (8001628 <main+0x344>)
 80013e6:	4b91      	ldr	r3, [pc, #580]	; (800162c <main+0x348>)
 80013e8:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80013ea:	f002 fe87 	bl	80040fc <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80013ee:	4a90      	ldr	r2, [pc, #576]	; (8001630 <main+0x34c>)
 80013f0:	4b90      	ldr	r3, [pc, #576]	; (8001634 <main+0x350>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80013f2:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80013f4:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80013f8:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80013fa:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80013fe:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001402:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001406:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800140a:	f003 fb73 	bl	8004af4 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800140e:	2110      	movs	r1, #16
 8001410:	4628      	mov	r0, r5
 8001412:	f003 fdb7 	bl	8004f84 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001416:	4621      	mov	r1, r4
 8001418:	4628      	mov	r0, r5
 800141a:	f003 fdd2 	bl	8004fc2 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 800141e:	4886      	ldr	r0, [pc, #536]	; (8001638 <main+0x354>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001420:	4986      	ldr	r1, [pc, #536]	; (800163c <main+0x358>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001422:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001424:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001428:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 800142c:	f44f 7500 	mov.w	r5, #512	; 0x200
 8001430:	2318      	movs	r3, #24
  hspi5.Init.CRCPolynomial = 10;
 8001432:	f04f 090a 	mov.w	r9, #10
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001436:	e9c0 5306 	strd	r5, r3, [r0, #24]
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800143a:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800143e:	4d80      	ldr	r5, [pc, #512]	; (8001640 <main+0x35c>)
  hspi5.Init.CRCPolynomial = 10;
 8001440:	f8c0 902c 	str.w	r9, [r0, #44]	; 0x2c
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001444:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001448:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 800144c:	f004 fc20 	bl	8005c90 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001450:	4b7c      	ldr	r3, [pc, #496]	; (8001644 <main+0x360>)
  SdramTiming.LoadToActiveDelay = 2;
 8001452:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001454:	f04f 0c10 	mov.w	ip, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001458:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800145c:	2340      	movs	r3, #64	; 0x40
 800145e:	e9c5 c304 	strd	ip, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001462:	f44f 73c0 	mov.w	r3, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001466:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800146a:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 800146e:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001472:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  SdramTiming.WriteRecoveryTime = 3;
 8001476:	f04f 0b03 	mov.w	fp, #3
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800147a:	62ab      	str	r3, [r5, #40]	; 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800147c:	a90d      	add	r1, sp, #52	; 0x34
  SdramTiming.ExitSelfRefreshDelay = 7;
 800147e:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001480:	4628      	mov	r0, r5
  SdramTiming.SelfRefreshTime = 4;
 8001482:	e9cd 380e 	strd	r3, r8, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 8001486:	9310      	str	r3, [sp, #64]	; 0x40
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001488:	f04f 0a08 	mov.w	sl, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800148c:	e9c5 4802 	strd	r4, r8, [r5, #8]
  SdramTiming.RPDelay = 2;
 8001490:	e9cd b711 	strd	fp, r7, [sp, #68]	; 0x44
  SdramTiming.RCDDelay = 2;
 8001494:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001496:	f004 fb21 	bl	8005adc <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800149a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800149e:	a909      	add	r1, sp, #36	; 0x24
 80014a0:	4628      	mov	r0, r5
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 80014a2:	9609      	str	r6, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80014a4:	e9cd a60a 	strd	sl, r6, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 80014a8:	9408      	str	r4, [sp, #32]
  Command->ModeRegisterDefinition  = 0;
 80014aa:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014ac:	f004 fb36 	bl	8005b1c <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80014b0:	4630      	mov	r0, r6
 80014b2:	f002 fda7 	bl	8004004 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80014b6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80014ba:	a909      	add	r1, sp, #36	; 0x24
 80014bc:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 80014be:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80014c2:	e9cd 7a09 	strd	r7, sl, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80014c6:	f004 fb29 	bl	8005b1c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014ca:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80014ce:	a909      	add	r1, sp, #36	; 0x24
 80014d0:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80014d2:	e9cd ba09 	strd	fp, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80014d6:	e9cd 840b 	strd	r8, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014da:	f004 fb1f 	bl	8005b1c <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80014de:	f44f 730c 	mov.w	r3, #560	; 0x230
 80014e2:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80014e4:	9b08      	ldr	r3, [sp, #32]
 80014e6:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014e8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80014ec:	a909      	add	r1, sp, #36	; 0x24
 80014ee:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 80014f0:	960b      	str	r6, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80014f2:	e9cd 8a09 	strd	r8, sl, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80014f6:	f004 fb11 	bl	8005b1c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 80014fa:	f240 516a 	movw	r1, #1386	; 0x56a
 80014fe:	4628      	mov	r0, r5
 8001500:	f004 fb23 	bl	8005b4a <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001504:	2234      	movs	r2, #52	; 0x34
 8001506:	4621      	mov	r1, r4
 8001508:	eb0d 0002 	add.w	r0, sp, r2
 800150c:	f018 fb51 	bl	8019bb2 <memset>
  hltdc.Instance = LTDC;
 8001510:	4d4d      	ldr	r5, [pc, #308]	; (8001648 <main+0x364>)
 8001512:	4b4e      	ldr	r3, [pc, #312]	; (800164c <main+0x368>)
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001514:	612c      	str	r4, [r5, #16]
  hltdc.Instance = LTDC;
 8001516:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800151a:	2309      	movs	r3, #9
  hltdc.Init.HorizontalSync = 9;
 800151c:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.VerticalSync = 1;
 8001520:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveW = 269;
 8001522:	f240 1e0d 	movw	lr, #269	; 0x10d
  hltdc.Init.AccumulatedHBP = 29;
 8001526:	e9c5 3b07 	strd	r3, fp, [r5, #28]
  hltdc.Init.AccumulatedActiveW = 269;
 800152a:	f240 1343 	movw	r3, #323	; 0x143
 800152e:	e9c5 e309 	strd	lr, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalWidth = 279;
 8001532:	f240 1b17 	movw	fp, #279	; 0x117
 8001536:	f240 1347 	movw	r3, #327	; 0x147
 800153a:	e9c5 b30b 	strd	fp, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 800153e:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.TotalHeigh = 327;
 8001542:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 8001544:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001548:	4628      	mov	r0, r5
 800154a:	f003 fddf 	bl	800510c <HAL_LTDC_Init>
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800154e:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
 8001550:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha = 255;
 8001552:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001556:	f44f 6080 	mov.w	r0, #1024	; 0x400
 800155a:	2105      	movs	r1, #5
  pLayerCfg.WindowY0 = 0;
 800155c:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001560:	e9cd 0114 	strd	r0, r1, [sp, #80]	; 0x50
  pLayerCfg.WindowX1 = 240;
 8001564:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001568:	a90d      	add	r1, sp, #52	; 0x34
  pLayerCfg.FBStartAdress = 0;
 800156a:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800156e:	4628      	mov	r0, r5
 8001570:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 8001572:	4d37      	ldr	r5, [pc, #220]	; (8001650 <main+0x36c>)
  pLayerCfg.ImageWidth = 240;
 8001574:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowY1 = 320;
 8001576:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  pLayerCfg.WindowX0 = 0;
 800157a:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.ImageHeight = 320;
 800157c:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Green = 0;
 8001580:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001584:	f003 fe8d 	bl	80052a2 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001588:	4b32      	ldr	r3, [pc, #200]	; (8001654 <main+0x370>)
 800158a:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 800158c:	681b      	ldr	r3, [r3, #0]
 800158e:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001590:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001592:	4d31      	ldr	r5, [pc, #196]	; (8001658 <main+0x374>)
  LcdDrv->DisplayOff();
 8001594:	68db      	ldr	r3, [r3, #12]
 8001596:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001598:	4b30      	ldr	r3, [pc, #192]	; (800165c <main+0x378>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800159a:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 800159e:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80015a2:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 80015a4:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 80015a8:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80015ac:	f002 fe0a 	bl	80041c4 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80015b0:	4631      	mov	r1, r6
 80015b2:	4628      	mov	r0, r5
  huart1.Init.BaudRate = 115200;
 80015b4:	4e2a      	ldr	r6, [pc, #168]	; (8001660 <main+0x37c>)
  huart1.Instance = USART1;
 80015b6:	4d2b      	ldr	r5, [pc, #172]	; (8001664 <main+0x380>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80015b8:	f002 ff8c 	bl	80044d4 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 80015bc:	f7ff f811 	bl	80005e2 <MX_TouchGFX_Init>
  huart1.Init.BaudRate = 115200;
 80015c0:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 80015c4:	e9c5 6300 	strd	r6, r3, [r5]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80015c8:	4628      	mov	r0, r5
  huart1.Init.Mode = UART_MODE_TX_RX;
 80015ca:	230c      	movs	r3, #12
  ModbusH.uiModbusType = MASTER_RTU;
 80015cc:	4e26      	ldr	r6, [pc, #152]	; (8001668 <main+0x384>)
  huart1.Init.Parity = UART_PARITY_NONE;
 80015ce:	612c      	str	r4, [r5, #16]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80015d0:	e9c5 3405 	strd	r3, r4, [r5, #20]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80015d4:	e9c5 4402 	strd	r4, r4, [r5, #8]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80015d8:	61ec      	str	r4, [r5, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80015da:	f004 ffa5 	bl	8006528 <HAL_UART_Init>
  HAL_UART_Transmit(&huart1,(uint8_t *)data, 10, 1000);
 80015de:	464a      	mov	r2, r9
 80015e0:	4922      	ldr	r1, [pc, #136]	; (800166c <main+0x388>)
 80015e2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80015e6:	4628      	mov	r0, r5
 80015e8:	f004 ffcc 	bl	8006584 <HAL_UART_Transmit>
  ModbusH.u16timeOut = 1000;
 80015ec:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80015f0:	f8a6 3062 	strh.w	r3, [r6, #98]	; 0x62
  ModbusInit(&ModbusH);
 80015f4:	4630      	mov	r0, r6
  ModbusH.au16regs = ModbusDATARX;
 80015f6:	4b1e      	ldr	r3, [pc, #120]	; (8001670 <main+0x38c>)
 80015f8:	65b3      	str	r3, [r6, #88]	; 0x58
  ModbusH.uiModbusType = MASTER_RTU;
 80015fa:	f886 8000 	strb.w	r8, [r6]
  ModbusH.port =  &huart1; // This is the UART port connected to STLINK in the discovery F429
 80015fe:	6075      	str	r5, [r6, #4]
  ModbusH.u8id = 0; //Master ID
 8001600:	7234      	strb	r4, [r6, #8]
  ModbusH.EN_Port = NULL; // No RS485
 8001602:	60f4      	str	r4, [r6, #12]
  ModbusH.u32overTime = 0;
 8001604:	66f4      	str	r4, [r6, #108]	; 0x6c
  ModbusH.u8regsize= sizeof(ModbusDATARX)/sizeof(ModbusDATARX[0]);
 8001606:	f886 a070 	strb.w	sl, [r6, #112]	; 0x70
  ModbusInit(&ModbusH);
 800160a:	f001 ffcf 	bl	80035ac <ModbusInit>
  ModbusStart(&ModbusH);
 800160e:	4630      	mov	r0, r6
 8001610:	f002 f832 	bl	8003678 <ModbusStart>
 8001614:	e02e      	b.n	8001674 <main+0x390>
 8001616:	bf00      	nop
 8001618:	40023800 	.word	0x40023800
 800161c:	40020800 	.word	0x40020800
 8001620:	20012448 	.word	0x20012448
 8001624:	40020c00 	.word	0x40020c00
 8001628:	20012580 	.word	0x20012580
 800162c:	40023000 	.word	0x40023000
 8001630:	40005c00 	.word	0x40005c00
 8001634:	000186a0 	.word	0x000186a0
 8001638:	20012528 	.word	0x20012528
 800163c:	40015000 	.word	0x40015000
 8001640:	200126c4 	.word	0x200126c4
 8001644:	a0000140 	.word	0xa0000140
 8001648:	20012598 	.word	0x20012598
 800164c:	40016800 	.word	0x40016800
 8001650:	200013b8 	.word	0x200013b8
 8001654:	20000014 	.word	0x20000014
 8001658:	20012684 	.word	0x20012684
 800165c:	4002b000 	.word	0x4002b000
 8001660:	40011000 	.word	0x40011000
 8001664:	20012640 	.word	0x20012640
 8001668:	2001249c 	.word	0x2001249c
 800166c:	0801b09c 	.word	0x0801b09c
 8001670:	20012438 	.word	0x20012438
  osKernelInitialize();
 8001674:	f005 f9b2 	bl	80069dc <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001678:	4a04      	ldr	r2, [pc, #16]	; (800168c <main+0x3a8>)
 800167a:	4805      	ldr	r0, [pc, #20]	; (8001690 <main+0x3ac>)
 800167c:	4621      	mov	r1, r4
 800167e:	f005 f9e7 	bl	8006a50 <osThreadNew>
 8001682:	4b04      	ldr	r3, [pc, #16]	; (8001694 <main+0x3b0>)
 8001684:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001686:	f005 f9c3 	bl	8006a10 <osKernelStart>
 800168a:	e7fe      	b.n	800168a <main+0x3a6>
 800168c:	0801b078 	.word	0x0801b078
 8001690:	080005e7 	.word	0x080005e7
 8001694:	20012680 	.word	0x20012680

08001698 <IOE_Init>:
 8001698:	4770      	bx	lr

0800169a <IOE_ITConfig>:
 800169a:	4770      	bx	lr

0800169c <IOE_Write>:
{
 800169c:	b510      	push	{r4, lr}
 800169e:	b086      	sub	sp, #24
 80016a0:	ac06      	add	r4, sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 80016a2:	4b07      	ldr	r3, [pc, #28]	; (80016c0 <IOE_Write+0x24>)
 80016a4:	f804 2d01 	strb.w	r2, [r4, #-1]!
 80016a8:	681b      	ldr	r3, [r3, #0]
 80016aa:	9302      	str	r3, [sp, #8]
 80016ac:	2301      	movs	r3, #1
 80016ae:	460a      	mov	r2, r1
 80016b0:	e9cd 4300 	strd	r4, r3, [sp]
 80016b4:	4601      	mov	r1, r0
 80016b6:	4803      	ldr	r0, [pc, #12]	; (80016c4 <IOE_Write+0x28>)
 80016b8:	f003 fac8 	bl	8004c4c <HAL_I2C_Mem_Write>
}
 80016bc:	b006      	add	sp, #24
 80016be:	bd10      	pop	{r4, pc}
 80016c0:	2000000c 	.word	0x2000000c
 80016c4:	20012448 	.word	0x20012448

080016c8 <IOE_Read>:
{
 80016c8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 80016ca:	aa06      	add	r2, sp, #24
 80016cc:	2300      	movs	r3, #0
 80016ce:	f802 3d01 	strb.w	r3, [r2, #-1]!
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80016d2:	4b08      	ldr	r3, [pc, #32]	; (80016f4 <IOE_Read+0x2c>)
 80016d4:	681b      	ldr	r3, [r3, #0]
 80016d6:	9302      	str	r3, [sp, #8]
 80016d8:	2301      	movs	r3, #1
 80016da:	e9cd 2300 	strd	r2, r3, [sp]
 80016de:	460a      	mov	r2, r1
 80016e0:	4601      	mov	r1, r0
 80016e2:	4805      	ldr	r0, [pc, #20]	; (80016f8 <IOE_Read+0x30>)
 80016e4:	f003 fb42 	bl	8004d6c <HAL_I2C_Mem_Read>
}
 80016e8:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80016ec:	b007      	add	sp, #28
 80016ee:	f85d fb04 	ldr.w	pc, [sp], #4
 80016f2:	bf00      	nop
 80016f4:	2000000c 	.word	0x2000000c
 80016f8:	20012448 	.word	0x20012448

080016fc <IOE_ReadMultiple>:
{
 80016fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80016fe:	4c08      	ldr	r4, [pc, #32]	; (8001720 <IOE_ReadMultiple+0x24>)
 8001700:	6824      	ldr	r4, [r4, #0]
 8001702:	9200      	str	r2, [sp, #0]
 8001704:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001708:	460a      	mov	r2, r1
 800170a:	2301      	movs	r3, #1
 800170c:	4601      	mov	r1, r0
 800170e:	4805      	ldr	r0, [pc, #20]	; (8001724 <IOE_ReadMultiple+0x28>)
 8001710:	f003 fb2c 	bl	8004d6c <HAL_I2C_Mem_Read>
}
 8001714:	3000      	adds	r0, #0
 8001716:	bf18      	it	ne
 8001718:	2001      	movne	r0, #1
 800171a:	b004      	add	sp, #16
 800171c:	bd10      	pop	{r4, pc}
 800171e:	bf00      	nop
 8001720:	2000000c 	.word	0x2000000c
 8001724:	20012448 	.word	0x20012448

08001728 <IOE_Delay>:
 8001728:	f002 bc6c 	b.w	8004004 <HAL_Delay>

0800172c <LCD_IO_Init>:
  /* Re- Initialize the SPI communication BUS */
  //SPIx_Init();
}

void LCD_IO_Init(void)
{
 800172c:	b510      	push	{r4, lr}
  /* Set or Reset the control line */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800172e:	4c06      	ldr	r4, [pc, #24]	; (8001748 <LCD_IO_Init+0x1c>)
 8001730:	2200      	movs	r2, #0
 8001732:	4620      	mov	r0, r4
 8001734:	2104      	movs	r1, #4
 8001736:	f003 f803 	bl	8004740 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800173a:	4620      	mov	r0, r4
 800173c:	2201      	movs	r2, #1
 800173e:	2104      	movs	r1, #4
}
 8001740:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001744:	f002 bffc 	b.w	8004740 <HAL_GPIO_WritePin>
 8001748:	40020800 	.word	0x40020800

0800174c <LCD_IO_WriteData>:

/**
  * @brief  Writes register value.
  */
void LCD_IO_WriteData(uint16_t RegValue) 
{
 800174c:	b538      	push	{r3, r4, r5, lr}
  /* Set WRX to send data */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
  
  /* Reset LCD control line(/CS) and Send data */  
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800174e:	4c0b      	ldr	r4, [pc, #44]	; (800177c <LCD_IO_WriteData+0x30>)
{
 8001750:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001752:	2201      	movs	r2, #1
 8001754:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001758:	4809      	ldr	r0, [pc, #36]	; (8001780 <LCD_IO_WriteData+0x34>)
 800175a:	f002 fff1 	bl	8004740 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800175e:	2200      	movs	r2, #0
 8001760:	2104      	movs	r1, #4
 8001762:	4620      	mov	r0, r4
 8001764:	f002 ffec 	bl	8004740 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001768:	4628      	mov	r0, r5
 800176a:	f7ff fd4d 	bl	8001208 <SPI5_Write>
  
  /* Deselect: Chip Select high */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800176e:	4620      	mov	r0, r4
 8001770:	2201      	movs	r2, #1
 8001772:	2104      	movs	r1, #4
}
 8001774:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001778:	f002 bfe2 	b.w	8004740 <HAL_GPIO_WritePin>
 800177c:	40020800 	.word	0x40020800
 8001780:	40020c00 	.word	0x40020c00

08001784 <LCD_IO_WriteReg>:

/**
  * @brief  Writes register address.
  */
void LCD_IO_WriteReg(uint8_t Reg) 
{
 8001784:	b538      	push	{r3, r4, r5, lr}
  /* Reset WRX to send command */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
  
  /* Reset LCD control line(/CS) and Send command */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001786:	4c0b      	ldr	r4, [pc, #44]	; (80017b4 <LCD_IO_WriteReg+0x30>)
{
 8001788:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800178a:	2200      	movs	r2, #0
 800178c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001790:	4809      	ldr	r0, [pc, #36]	; (80017b8 <LCD_IO_WriteReg+0x34>)
 8001792:	f002 ffd5 	bl	8004740 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001796:	2200      	movs	r2, #0
 8001798:	2104      	movs	r1, #4
 800179a:	4620      	mov	r0, r4
 800179c:	f002 ffd0 	bl	8004740 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 80017a0:	4628      	mov	r0, r5
 80017a2:	f7ff fd31 	bl	8001208 <SPI5_Write>
  
  /* Deselect: Chip Select high */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80017a6:	4620      	mov	r0, r4
 80017a8:	2201      	movs	r2, #1
 80017aa:	2104      	movs	r1, #4
}
 80017ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80017b0:	f002 bfc6 	b.w	8004740 <HAL_GPIO_WritePin>
 80017b4:	40020800 	.word	0x40020800
 80017b8:	40020c00 	.word	0x40020c00

080017bc <LCD_IO_ReadData>:
  * @param  RegValue Address of the register to read
  * @param  ReadSize Number of bytes to read
  * @retval Content of the register value
  */
uint32_t LCD_IO_ReadData(uint16_t RegValue, uint8_t ReadSize) 
{
 80017bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  uint32_t readvalue = 0;

  /* Select: Chip Select low */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80017be:	4c14      	ldr	r4, [pc, #80]	; (8001810 <LCD_IO_ReadData+0x54>)

  /* Reset WRX to send command */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80017c0:	4d14      	ldr	r5, [pc, #80]	; (8001814 <LCD_IO_ReadData+0x58>)
{
 80017c2:	4607      	mov	r7, r0
 80017c4:	460e      	mov	r6, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80017c6:	4620      	mov	r0, r4
 80017c8:	2200      	movs	r2, #0
 80017ca:	2104      	movs	r1, #4
 80017cc:	f002 ffb8 	bl	8004740 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80017d0:	2200      	movs	r2, #0
 80017d2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80017d6:	4628      	mov	r0, r5
 80017d8:	f002 ffb2 	bl	8004740 <HAL_GPIO_WritePin>
  
  SPI5_Write(RegValue);
 80017dc:	4638      	mov	r0, r7
 80017de:	f7ff fd13 	bl	8001208 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80017e2:	4b0d      	ldr	r3, [pc, #52]	; (8001818 <LCD_IO_ReadData+0x5c>)
 80017e4:	480d      	ldr	r0, [pc, #52]	; (800181c <LCD_IO_ReadData+0x60>)
 80017e6:	681b      	ldr	r3, [r3, #0]
 80017e8:	4632      	mov	r2, r6
 80017ea:	a901      	add	r1, sp, #4
 80017ec:	f004 fc25 	bl	800603a <HAL_SPI_Receive>
  
  readvalue = SPI5_Read(ReadSize);

  /* Set WRX to send data */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80017f0:	4628      	mov	r0, r5
 80017f2:	2201      	movs	r2, #1
 80017f4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 80017f8:	9e01      	ldr	r6, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80017fa:	f002 ffa1 	bl	8004740 <HAL_GPIO_WritePin>

  /* Deselect: Chip Select high */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80017fe:	4620      	mov	r0, r4
 8001800:	2201      	movs	r2, #1
 8001802:	2104      	movs	r1, #4
 8001804:	f002 ff9c 	bl	8004740 <HAL_GPIO_WritePin>
  
  return readvalue;
}
 8001808:	4630      	mov	r0, r6
 800180a:	b003      	add	sp, #12
 800180c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800180e:	bf00      	nop
 8001810:	40020800 	.word	0x40020800
 8001814:	40020c00 	.word	0x40020c00
 8001818:	20000010 	.word	0x20000010
 800181c:	20012528 	.word	0x20012528

08001820 <LCD_Delay>:
  * @brief  Wait for loop in ms.
  * @param  Delay in ms.
  */
void LCD_Delay(uint32_t Delay)
{
  HAL_Delay(Delay);
 8001820:	f002 bbf0 	b.w	8004004 <HAL_Delay>

08001824 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001824:	6802      	ldr	r2, [r0, #0]
 8001826:	4b03      	ldr	r3, [pc, #12]	; (8001834 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001828:	429a      	cmp	r2, r3
 800182a:	d101      	bne.n	8001830 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 800182c:	f002 bbd8 	b.w	8003fe0 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001830:	4770      	bx	lr
 8001832:	bf00      	nop
 8001834:	40001000 	.word	0x40001000

08001838 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001838:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800183a:	4b0e      	ldr	r3, [pc, #56]	; (8001874 <HAL_MspInit+0x3c>)
 800183c:	2200      	movs	r2, #0
 800183e:	9200      	str	r2, [sp, #0]
 8001840:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001842:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001846:	6459      	str	r1, [r3, #68]	; 0x44
 8001848:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800184a:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800184e:	9100      	str	r1, [sp, #0]
 8001850:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001852:	9201      	str	r2, [sp, #4]
 8001854:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001856:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 800185a:	6419      	str	r1, [r3, #64]	; 0x40
 800185c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800185e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001862:	9301      	str	r3, [sp, #4]
 8001864:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001866:	210f      	movs	r1, #15
 8001868:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800186c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800186e:	f002 bbef 	b.w	8004050 <HAL_NVIC_SetPriority>
 8001872:	bf00      	nop
 8001874:	40023800 	.word	0x40023800

08001878 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001878:	6802      	ldr	r2, [r0, #0]
 800187a:	4b09      	ldr	r3, [pc, #36]	; (80018a0 <HAL_CRC_MspInit+0x28>)
 800187c:	429a      	cmp	r2, r3
{
 800187e:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001880:	d10b      	bne.n	800189a <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001882:	2300      	movs	r3, #0
 8001884:	9301      	str	r3, [sp, #4]
 8001886:	4b07      	ldr	r3, [pc, #28]	; (80018a4 <HAL_CRC_MspInit+0x2c>)
 8001888:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800188a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800188e:	631a      	str	r2, [r3, #48]	; 0x30
 8001890:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001892:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001896:	9301      	str	r3, [sp, #4]
 8001898:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800189a:	b002      	add	sp, #8
 800189c:	4770      	bx	lr
 800189e:	bf00      	nop
 80018a0:	40023000 	.word	0x40023000
 80018a4:	40023800 	.word	0x40023800

080018a8 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80018a8:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80018aa:	4b0f      	ldr	r3, [pc, #60]	; (80018e8 <HAL_DMA2D_MspInit+0x40>)
 80018ac:	6802      	ldr	r2, [r0, #0]
 80018ae:	429a      	cmp	r2, r3
 80018b0:	d116      	bne.n	80018e0 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80018b2:	2200      	movs	r2, #0
 80018b4:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 80018b8:	9201      	str	r2, [sp, #4]
 80018ba:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80018bc:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 80018c0:	6319      	str	r1, [r3, #48]	; 0x30
 80018c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018c4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80018c8:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80018ca:	2105      	movs	r1, #5
 80018cc:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80018ce:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80018d0:	f002 fbbe 	bl	8004050 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80018d4:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 80018d6:	b003      	add	sp, #12
 80018d8:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80018dc:	f002 bbec 	b.w	80040b8 <HAL_NVIC_EnableIRQ>
}
 80018e0:	b003      	add	sp, #12
 80018e2:	f85d fb04 	ldr.w	pc, [sp], #4
 80018e6:	bf00      	nop
 80018e8:	4002b000 	.word	0x4002b000

080018ec <HAL_DMA2D_MspDeInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 80018ec:	6802      	ldr	r2, [r0, #0]
 80018ee:	4b06      	ldr	r3, [pc, #24]	; (8001908 <HAL_DMA2D_MspDeInit+0x1c>)
 80018f0:	429a      	cmp	r2, r3
 80018f2:	d107      	bne.n	8001904 <HAL_DMA2D_MspDeInit+0x18>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 80018f4:	4a05      	ldr	r2, [pc, #20]	; (800190c <HAL_DMA2D_MspDeInit+0x20>)
 80018f6:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80018f8:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80018fc:	6313      	str	r3, [r2, #48]	; 0x30

    /* DMA2D interrupt DeInit */
    HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 80018fe:	205a      	movs	r0, #90	; 0x5a
 8001900:	f002 bbe8 	b.w	80040d4 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 8001904:	4770      	bx	lr
 8001906:	bf00      	nop
 8001908:	4002b000 	.word	0x4002b000
 800190c:	40023800 	.word	0x40023800

08001910 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001910:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001914:	4604      	mov	r4, r0
 8001916:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001918:	2214      	movs	r2, #20
 800191a:	2100      	movs	r1, #0
 800191c:	a803      	add	r0, sp, #12
 800191e:	f018 f948 	bl	8019bb2 <memset>
  if(hi2c->Instance==I2C3)
 8001922:	6822      	ldr	r2, [r4, #0]
 8001924:	4b24      	ldr	r3, [pc, #144]	; (80019b8 <HAL_I2C_MspInit+0xa8>)
 8001926:	429a      	cmp	r2, r3
 8001928:	d143      	bne.n	80019b2 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */
  
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800192a:	4c24      	ldr	r4, [pc, #144]	; (80019bc <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800192c:	4824      	ldr	r0, [pc, #144]	; (80019c0 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800192e:	2500      	movs	r5, #0
 8001930:	9500      	str	r5, [sp, #0]
 8001932:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001934:	f043 0304 	orr.w	r3, r3, #4
 8001938:	6323      	str	r3, [r4, #48]	; 0x30
 800193a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800193c:	f003 0304 	and.w	r3, r3, #4
 8001940:	9300      	str	r3, [sp, #0]
 8001942:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001944:	9501      	str	r5, [sp, #4]
 8001946:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001948:	f043 0301 	orr.w	r3, r3, #1
 800194c:	6323      	str	r3, [r4, #48]	; 0x30
 800194e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001950:	f003 0301 	and.w	r3, r3, #1
 8001954:	9301      	str	r3, [sp, #4]
 8001956:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001958:	f04f 0912 	mov.w	r9, #18
 800195c:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001960:	f04f 0801 	mov.w	r8, #1
 8001964:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001966:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001968:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800196a:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800196e:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001972:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001974:	f002 fdf8 	bl	8004568 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001978:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800197c:	a903      	add	r1, sp, #12
 800197e:	4811      	ldr	r0, [pc, #68]	; (80019c4 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001980:	9607      	str	r6, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001982:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001986:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800198a:	f002 fded 	bl	8004568 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 800198e:	9502      	str	r5, [sp, #8]
 8001990:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001992:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001996:	6423      	str	r3, [r4, #64]	; 0x40
 8001998:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800199a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800199e:	9302      	str	r3, [sp, #8]
 80019a0:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 80019a2:	6a23      	ldr	r3, [r4, #32]
 80019a4:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80019a8:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 80019aa:	6a23      	ldr	r3, [r4, #32]
 80019ac:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80019b0:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80019b2:	b009      	add	sp, #36	; 0x24
 80019b4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80019b8:	40005c00 	.word	0x40005c00
 80019bc:	40023800 	.word	0x40023800
 80019c0:	40020800 	.word	0x40020800
 80019c4:	40020000 	.word	0x40020000

080019c8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80019c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80019ca:	4604      	mov	r4, r0
 80019cc:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80019ce:	2214      	movs	r2, #20
 80019d0:	2100      	movs	r1, #0
 80019d2:	a807      	add	r0, sp, #28
 80019d4:	f018 f8ed 	bl	8019bb2 <memset>
  if(hltdc->Instance==LTDC)
 80019d8:	6822      	ldr	r2, [r4, #0]
 80019da:	4b57      	ldr	r3, [pc, #348]	; (8001b38 <HAL_LTDC_MspInit+0x170>)
 80019dc:	429a      	cmp	r2, r3
 80019de:	f040 80a8 	bne.w	8001b32 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80019e2:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 80019e6:	2500      	movs	r5, #0
 80019e8:	9500      	str	r5, [sp, #0]
 80019ea:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80019ec:	4853      	ldr	r0, [pc, #332]	; (8001b3c <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80019ee:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80019f2:	645a      	str	r2, [r3, #68]	; 0x44
 80019f4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80019f6:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 80019fa:	9200      	str	r2, [sp, #0]
 80019fc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80019fe:	9501      	str	r5, [sp, #4]
 8001a00:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a02:	f042 0220 	orr.w	r2, r2, #32
 8001a06:	631a      	str	r2, [r3, #48]	; 0x30
 8001a08:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a0a:	f002 0220 	and.w	r2, r2, #32
 8001a0e:	9201      	str	r2, [sp, #4]
 8001a10:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a12:	9502      	str	r5, [sp, #8]
 8001a14:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a16:	f042 0201 	orr.w	r2, r2, #1
 8001a1a:	631a      	str	r2, [r3, #48]	; 0x30
 8001a1c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a1e:	f002 0201 	and.w	r2, r2, #1
 8001a22:	9202      	str	r2, [sp, #8]
 8001a24:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a26:	9503      	str	r5, [sp, #12]
 8001a28:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a2a:	f042 0202 	orr.w	r2, r2, #2
 8001a2e:	631a      	str	r2, [r3, #48]	; 0x30
 8001a30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a32:	f002 0202 	and.w	r2, r2, #2
 8001a36:	9203      	str	r2, [sp, #12]
 8001a38:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001a3a:	9504      	str	r5, [sp, #16]
 8001a3c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a3e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001a42:	631a      	str	r2, [r3, #48]	; 0x30
 8001a44:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a46:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001a4a:	9204      	str	r2, [sp, #16]
 8001a4c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a4e:	9505      	str	r5, [sp, #20]
 8001a50:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a52:	f042 0204 	orr.w	r2, r2, #4
 8001a56:	631a      	str	r2, [r3, #48]	; 0x30
 8001a58:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a5a:	f002 0204 	and.w	r2, r2, #4
 8001a5e:	9205      	str	r2, [sp, #20]
 8001a60:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001a62:	9506      	str	r5, [sp, #24]
 8001a64:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a66:	f042 0208 	orr.w	r2, r2, #8
 8001a6a:	631a      	str	r2, [r3, #48]	; 0x30
 8001a6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a6e:	f003 0308 	and.w	r3, r3, #8
 8001a72:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a74:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001a76:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001a78:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a7a:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a7c:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a80:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a82:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001a86:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a88:	f002 fd6e 	bl	8004568 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11 
 8001a8c:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a90:	a907      	add	r1, sp, #28
 8001a92:	482b      	ldr	r0, [pc, #172]	; (8001b40 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001a94:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a96:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001a9a:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a9c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001aa0:	f002 fd62 	bl	8004568 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001aa4:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001aa6:	a907      	add	r1, sp, #28
 8001aa8:	4826      	ldr	r0, [pc, #152]	; (8001b44 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001aaa:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001aac:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ab0:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ab4:	f002 fd58 	bl	8004568 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001ab8:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001abc:	a907      	add	r1, sp, #28
 8001abe:	4821      	ldr	r0, [pc, #132]	; (8001b44 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ac0:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ac2:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ac6:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001aca:	f002 fd4d 	bl	8004568 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001ace:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ad2:	a907      	add	r1, sp, #28
 8001ad4:	481c      	ldr	r0, [pc, #112]	; (8001b48 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001ad6:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ad8:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001adc:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ae0:	f002 fd42 	bl	8004568 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001ae4:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ae6:	a907      	add	r1, sp, #28
 8001ae8:	4818      	ldr	r0, [pc, #96]	; (8001b4c <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001aea:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001aec:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001af0:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001af4:	f002 fd38 	bl	8004568 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001af8:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001afa:	a907      	add	r1, sp, #28
 8001afc:	4814      	ldr	r0, [pc, #80]	; (8001b50 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001afe:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b00:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b04:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001b08:	f002 fd2e 	bl	8004568 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001b0c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001b10:	a907      	add	r1, sp, #28
 8001b12:	480d      	ldr	r0, [pc, #52]	; (8001b48 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001b14:	970b      	str	r7, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b16:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b1a:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001b1e:	f002 fd23 	bl	8004568 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001b22:	2058      	movs	r0, #88	; 0x58
 8001b24:	462a      	mov	r2, r5
 8001b26:	2105      	movs	r1, #5
 8001b28:	f002 fa92 	bl	8004050 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001b2c:	2058      	movs	r0, #88	; 0x58
 8001b2e:	f002 fac3 	bl	80040b8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001b32:	b00d      	add	sp, #52	; 0x34
 8001b34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001b36:	bf00      	nop
 8001b38:	40016800 	.word	0x40016800
 8001b3c:	40021400 	.word	0x40021400
 8001b40:	40020000 	.word	0x40020000
 8001b44:	40020400 	.word	0x40020400
 8001b48:	40021800 	.word	0x40021800
 8001b4c:	40020800 	.word	0x40020800
 8001b50:	40020c00 	.word	0x40020c00

08001b54 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001b54:	b510      	push	{r4, lr}
 8001b56:	4604      	mov	r4, r0
 8001b58:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b5a:	2214      	movs	r2, #20
 8001b5c:	2100      	movs	r1, #0
 8001b5e:	a803      	add	r0, sp, #12
 8001b60:	f018 f827 	bl	8019bb2 <memset>
  if(hspi->Instance==SPI5)
 8001b64:	6822      	ldr	r2, [r4, #0]
 8001b66:	4b14      	ldr	r3, [pc, #80]	; (8001bb8 <HAL_SPI_MspInit+0x64>)
 8001b68:	429a      	cmp	r2, r3
 8001b6a:	d123      	bne.n	8001bb4 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001b6c:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001b70:	2100      	movs	r1, #0
 8001b72:	9101      	str	r1, [sp, #4]
 8001b74:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b76:	4811      	ldr	r0, [pc, #68]	; (8001bbc <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001b78:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001b7c:	645a      	str	r2, [r3, #68]	; 0x44
 8001b7e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b80:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001b84:	9201      	str	r2, [sp, #4]
 8001b86:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001b88:	9102      	str	r1, [sp, #8]
 8001b8a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b8c:	f042 0220 	orr.w	r2, r2, #32
 8001b90:	631a      	str	r2, [r3, #48]	; 0x30
 8001b92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b94:	f003 0320 	and.w	r3, r3, #32
 8001b98:	9302      	str	r3, [sp, #8]
 8001b9a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b9c:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001ba0:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001ba2:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ba4:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001ba8:	2305      	movs	r3, #5
 8001baa:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001bae:	a903      	add	r1, sp, #12
 8001bb0:	f002 fcda 	bl	8004568 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001bb4:	b008      	add	sp, #32
 8001bb6:	bd10      	pop	{r4, pc}
 8001bb8:	40015000 	.word	0x40015000
 8001bbc:	40021400 	.word	0x40021400

08001bc0 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001bc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001bc4:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001bc6:	2214      	movs	r2, #20
 8001bc8:	2100      	movs	r1, #0
 8001bca:	a801      	add	r0, sp, #4
 8001bcc:	f017 fff1 	bl	8019bb2 <memset>
  if (FMC_Initialized) {
 8001bd0:	4b2b      	ldr	r3, [pc, #172]	; (8001c80 <HAL_SDRAM_MspInit+0xc0>)
 8001bd2:	681c      	ldr	r4, [r3, #0]
 8001bd4:	2c00      	cmp	r4, #0
 8001bd6:	d14f      	bne.n	8001c78 <HAL_SDRAM_MspInit+0xb8>
  FMC_Initialized = 1;
 8001bd8:	f04f 0801 	mov.w	r8, #1
 8001bdc:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001be0:	4b28      	ldr	r3, [pc, #160]	; (8001c84 <HAL_SDRAM_MspInit+0xc4>)
 8001be2:	9400      	str	r4, [sp, #0]
 8001be4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001be6:	4828      	ldr	r0, [pc, #160]	; (8001c88 <HAL_SDRAM_MspInit+0xc8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001be8:	ea42 0208 	orr.w	r2, r2, r8
 8001bec:	639a      	str	r2, [r3, #56]	; 0x38
 8001bee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001bf0:	ea03 0308 	and.w	r3, r3, r8
 8001bf4:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bf6:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001bf8:	2603      	movs	r6, #3
 8001bfa:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001bfc:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001bfe:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c00:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001c04:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c08:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c0c:	f002 fcac 	bl	8004568 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c10:	a901      	add	r1, sp, #4
 8001c12:	481e      	ldr	r0, [pc, #120]	; (8001c8c <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c14:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c16:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c1a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001c1e:	f002 fca3 	bl	8004568 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5 
 8001c22:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c26:	a901      	add	r1, sp, #4
 8001c28:	4819      	ldr	r0, [pc, #100]	; (8001c90 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c2a:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c2c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c30:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c34:	f002 fc98 	bl	8004568 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 8001c38:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c3c:	a901      	add	r1, sp, #4
 8001c3e:	4815      	ldr	r0, [pc, #84]	; (8001c94 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c40:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c42:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c46:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001c4a:	f002 fc8d 	bl	8004568 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14 
 8001c4e:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c52:	a901      	add	r1, sp, #4
 8001c54:	4810      	ldr	r0, [pc, #64]	; (8001c98 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c56:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c58:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c5c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001c60:	f002 fc82 	bl	8004568 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001c64:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c66:	a901      	add	r1, sp, #4
 8001c68:	480c      	ldr	r0, [pc, #48]	; (8001c9c <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001c6a:	9505      	str	r5, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c6c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c70:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c74:	f002 fc78 	bl	8004568 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001c78:	b006      	add	sp, #24
 8001c7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001c7e:	bf00      	nop
 8001c80:	200013bc 	.word	0x200013bc
 8001c84:	40023800 	.word	0x40023800
 8001c88:	40021400 	.word	0x40021400
 8001c8c:	40020800 	.word	0x40020800
 8001c90:	40021800 	.word	0x40021800
 8001c94:	40021000 	.word	0x40021000
 8001c98:	40020c00 	.word	0x40020c00
 8001c9c:	40020400 	.word	0x40020400

08001ca0 <HAL_UART_MspInit>:

/* USER CODE BEGIN 1 */


void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8001ca0:	b510      	push	{r4, lr}
 8001ca2:	4604      	mov	r4, r0
 8001ca4:	b088      	sub	sp, #32

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ca6:	2214      	movs	r2, #20
 8001ca8:	2100      	movs	r1, #0
 8001caa:	a803      	add	r0, sp, #12
 8001cac:	f017 ff81 	bl	8019bb2 <memset>
  if(uartHandle->Instance==USART1)
 8001cb0:	6822      	ldr	r2, [r4, #0]
 8001cb2:	4b18      	ldr	r3, [pc, #96]	; (8001d14 <HAL_UART_MspInit+0x74>)
 8001cb4:	429a      	cmp	r2, r3
 8001cb6:	d12b      	bne.n	8001d10 <HAL_UART_MspInit+0x70>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001cb8:	f503 3394 	add.w	r3, r3, #75776	; 0x12800
 8001cbc:	2400      	movs	r4, #0
 8001cbe:	9401      	str	r4, [sp, #4]
 8001cc0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cc2:	4815      	ldr	r0, [pc, #84]	; (8001d18 <HAL_UART_MspInit+0x78>)
    __HAL_RCC_USART1_CLK_ENABLE();
 8001cc4:	f042 0210 	orr.w	r2, r2, #16
 8001cc8:	645a      	str	r2, [r3, #68]	; 0x44
 8001cca:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ccc:	f002 0210 	and.w	r2, r2, #16
 8001cd0:	9201      	str	r2, [sp, #4]
 8001cd2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001cd4:	9402      	str	r4, [sp, #8]
 8001cd6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cd8:	f042 0201 	orr.w	r2, r2, #1
 8001cdc:	631a      	str	r2, [r3, #48]	; 0x30
 8001cde:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ce0:	f003 0301 	and.w	r3, r3, #1
 8001ce4:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ce6:	f44f 62c0 	mov.w	r2, #1536	; 0x600
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001cea:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cec:	2302      	movs	r3, #2
 8001cee:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001cf2:	2103      	movs	r1, #3
 8001cf4:	2307      	movs	r3, #7
 8001cf6:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cfa:	a903      	add	r1, sp, #12
 8001cfc:	f002 fc34 	bl	8004568 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
 8001d00:	2025      	movs	r0, #37	; 0x25
 8001d02:	4622      	mov	r2, r4
 8001d04:	2105      	movs	r1, #5
 8001d06:	f002 f9a3 	bl	8004050 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8001d0a:	2025      	movs	r0, #37	; 0x25
 8001d0c:	f002 f9d4 	bl	80040b8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 8001d10:	b008      	add	sp, #32
 8001d12:	bd10      	pop	{r4, pc}
 8001d14:	40011000 	.word	0x40011000
 8001d18:	40020000 	.word	0x40020000

08001d1c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001d1c:	b530      	push	{r4, r5, lr}
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0); 
 8001d1e:	4601      	mov	r1, r0
{
 8001d20:	b089      	sub	sp, #36	; 0x24
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0); 
 8001d22:	2200      	movs	r2, #0
 8001d24:	2036      	movs	r0, #54	; 0x36
 8001d26:	f002 f993 	bl	8004050 <HAL_NVIC_SetPriority>
  
  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn); 
 8001d2a:	2036      	movs	r0, #54	; 0x36
 8001d2c:	f002 f9c4 	bl	80040b8 <HAL_NVIC_EnableIRQ>
  
  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001d30:	2500      	movs	r5, #0
 8001d32:	4b15      	ldr	r3, [pc, #84]	; (8001d88 <HAL_InitTick+0x6c>)
 8001d34:	9502      	str	r5, [sp, #8]
 8001d36:	6c1a      	ldr	r2, [r3, #64]	; 0x40
   
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
  
  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001d38:	4c14      	ldr	r4, [pc, #80]	; (8001d8c <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001d3a:	f042 0210 	orr.w	r2, r2, #16
 8001d3e:	641a      	str	r2, [r3, #64]	; 0x40
 8001d40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d42:	f003 0310 	and.w	r3, r3, #16
 8001d46:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001d48:	a901      	add	r1, sp, #4
 8001d4a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001d4c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001d4e:	f003 fd7d 	bl	800584c <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001d52:	f003 fd5b 	bl	800580c <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001d56:	4b0e      	ldr	r3, [pc, #56]	; (8001d90 <HAL_InitTick+0x74>)
 8001d58:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000 / 1000) - 1;
 8001d5a:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001d5e:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001d60:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8001d62:	4b0c      	ldr	r3, [pc, #48]	; (8001d94 <HAL_InitTick+0x78>)
 8001d64:	fbb0 f0f3 	udiv	r0, r0, r3
 8001d68:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001d6a:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001d6c:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001d6e:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001d70:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001d72:	f004 fb17 	bl	80063a4 <HAL_TIM_Base_Init>
 8001d76:	b920      	cbnz	r0, 8001d82 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001d78:	4620      	mov	r0, r4
 8001d7a:	f004 f9f6 	bl	800616a <HAL_TIM_Base_Start_IT>
  }
  
  /* Return function status */
  return HAL_ERROR;
}
 8001d7e:	b009      	add	sp, #36	; 0x24
 8001d80:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001d82:	2001      	movs	r0, #1
 8001d84:	e7fb      	b.n	8001d7e <HAL_InitTick+0x62>
 8001d86:	bf00      	nop
 8001d88:	40023800 	.word	0x40023800
 8001d8c:	200126f8 	.word	0x200126f8
 8001d90:	40001000 	.word	0x40001000
 8001d94:	000f4240 	.word	0x000f4240

08001d98 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001d98:	4770      	bx	lr

08001d9a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001d9a:	e7fe      	b.n	8001d9a <HardFault_Handler>

08001d9c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001d9c:	e7fe      	b.n	8001d9c <MemManage_Handler>

08001d9e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001d9e:	e7fe      	b.n	8001d9e <BusFault_Handler>

08001da0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001da0:	e7fe      	b.n	8001da0 <UsageFault_Handler>

08001da2 <DebugMon_Handler>:
 8001da2:	4770      	bx	lr

08001da4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001da4:	4801      	ldr	r0, [pc, #4]	; (8001dac <TIM6_DAC_IRQHandler+0x8>)
 8001da6:	f004 b9f4 	b.w	8006192 <HAL_TIM_IRQHandler>
 8001daa:	bf00      	nop
 8001dac:	200126f8 	.word	0x200126f8

08001db0 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001db0:	4801      	ldr	r0, [pc, #4]	; (8001db8 <LTDC_IRQHandler+0x8>)
 8001db2:	f003 ba19 	b.w	80051e8 <HAL_LTDC_IRQHandler>
 8001db6:	bf00      	nop
 8001db8:	20012598 	.word	0x20012598

08001dbc <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001dbc:	4801      	ldr	r0, [pc, #4]	; (8001dc4 <DMA2D_IRQHandler+0x8>)
 8001dbe:	f002 baff 	b.w	80043c0 <HAL_DMA2D_IRQHandler>
 8001dc2:	bf00      	nop
 8001dc4:	20012684 	.word	0x20012684

08001dc8 <USART1_IRQHandler>:
void USART1_IRQHandler(void)
{
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8001dc8:	4801      	ldr	r0, [pc, #4]	; (8001dd0 <USART1_IRQHandler+0x8>)
 8001dca:	f004 bcb9 	b.w	8006740 <HAL_UART_IRQHandler>
 8001dce:	bf00      	nop
 8001dd0:	20012640 	.word	0x20012640

08001dd4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001dd4:	2001      	movs	r0, #1
 8001dd6:	4770      	bx	lr

08001dd8 <_kill>:

int _kill(int pid, int sig)
{
 8001dd8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001dda:	f017 fe93 	bl	8019b04 <__errno>
 8001dde:	2316      	movs	r3, #22
 8001de0:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001de2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001de6:	bd08      	pop	{r3, pc}

08001de8 <_exit>:

void _exit (int status)
{
 8001de8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001dea:	f017 fe8b 	bl	8019b04 <__errno>
 8001dee:	2316      	movs	r3, #22
 8001df0:	6003      	str	r3, [r0, #0]
 8001df2:	e7fe      	b.n	8001df2 <_exit+0xa>

08001df4 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001df4:	b570      	push	{r4, r5, r6, lr}
 8001df6:	460e      	mov	r6, r1
 8001df8:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001dfa:	460c      	mov	r4, r1
 8001dfc:	1ba3      	subs	r3, r4, r6
 8001dfe:	429d      	cmp	r5, r3
 8001e00:	dc01      	bgt.n	8001e06 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001e02:	4628      	mov	r0, r5
 8001e04:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001e06:	f3af 8000 	nop.w
 8001e0a:	f804 0b01 	strb.w	r0, [r4], #1
 8001e0e:	e7f5      	b.n	8001dfc <_read+0x8>

08001e10 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001e10:	b570      	push	{r4, r5, r6, lr}
 8001e12:	460e      	mov	r6, r1
 8001e14:	4615      	mov	r5, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e16:	460c      	mov	r4, r1
 8001e18:	1ba3      	subs	r3, r4, r6
 8001e1a:	429d      	cmp	r5, r3
 8001e1c:	dc01      	bgt.n	8001e22 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001e1e:	4628      	mov	r0, r5
 8001e20:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001e22:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001e26:	f3af 8000 	nop.w
 8001e2a:	e7f5      	b.n	8001e18 <_write+0x8>

08001e2c <_close>:

int _close(int file)
{
	return -1;
}
 8001e2c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001e30:	4770      	bx	lr

08001e32 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001e32:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001e36:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001e38:	2000      	movs	r0, #0
 8001e3a:	4770      	bx	lr

08001e3c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001e3c:	2001      	movs	r0, #1
 8001e3e:	4770      	bx	lr

08001e40 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001e40:	2000      	movs	r0, #0
 8001e42:	4770      	bx	lr

08001e44 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001e44:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001e46:	4b0a      	ldr	r3, [pc, #40]	; (8001e70 <_sbrk+0x2c>)
 8001e48:	6819      	ldr	r1, [r3, #0]
{
 8001e4a:	4602      	mov	r2, r0
	if (heap_end == 0)
 8001e4c:	b909      	cbnz	r1, 8001e52 <_sbrk+0xe>
		heap_end = &end;
 8001e4e:	4909      	ldr	r1, [pc, #36]	; (8001e74 <_sbrk+0x30>)
 8001e50:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 8001e52:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8001e54:	4669      	mov	r1, sp
 8001e56:	4402      	add	r2, r0
 8001e58:	428a      	cmp	r2, r1
 8001e5a:	d906      	bls.n	8001e6a <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001e5c:	f017 fe52 	bl	8019b04 <__errno>
 8001e60:	230c      	movs	r3, #12
 8001e62:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001e64:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001e68:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001e6a:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8001e6c:	e7fc      	b.n	8001e68 <_sbrk+0x24>
 8001e6e:	bf00      	nop
 8001e70:	200013c0 	.word	0x200013c0
 8001e74:	20012780 	.word	0x20012780

08001e78 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001e78:	4770      	bx	lr

08001e7a <_ZN23ApplicationFontProviderD0Ev>:
 8001e7a:	b510      	push	{r4, lr}
 8001e7c:	2104      	movs	r1, #4
 8001e7e:	4604      	mov	r4, r0
 8001e80:	f017 fde2 	bl	8019a48 <_ZdlPvj>
 8001e84:	4620      	mov	r0, r4
 8001e86:	bd10      	pop	{r4, pc}

08001e88 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8001e88:	2901      	cmp	r1, #1
{
 8001e8a:	b508      	push	{r3, lr}
    switch (typography)
 8001e8c:	d008      	beq.n	8001ea0 <_ZN23ApplicationFontProvider7getFontEt+0x18>
 8001e8e:	d303      	bcc.n	8001e98 <_ZN23ApplicationFontProvider7getFontEt+0x10>
 8001e90:	2902      	cmp	r1, #2
 8001e92:	d009      	beq.n	8001ea8 <_ZN23ApplicationFontProvider7getFontEt+0x20>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
 8001e94:	2000      	movs	r0, #0
 8001e96:	e002      	b.n	8001e9e <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001e98:	f000 ff2c 	bl	8002cf4 <_ZN17TypedTextDatabase8getFontsEv>
 8001e9c:	6800      	ldr	r0, [r0, #0]
    }
}
 8001e9e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001ea0:	f000 ff28 	bl	8002cf4 <_ZN17TypedTextDatabase8getFontsEv>
 8001ea4:	6840      	ldr	r0, [r0, #4]
 8001ea6:	e7fa      	b.n	8001e9e <_ZN23ApplicationFontProvider7getFontEt+0x16>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001ea8:	f000 ff24 	bl	8002cf4 <_ZN17TypedTextDatabase8getFontsEv>
 8001eac:	6880      	ldr	r0, [r0, #8]
 8001eae:	e7f6      	b.n	8001e9e <_ZN23ApplicationFontProvider7getFontEt+0x16>

08001eb0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001eb0:	4800      	ldr	r0, [pc, #0]	; (8001eb4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001eb2:	4770      	bx	lr
 8001eb4:	0801b0c4 	.word	0x0801b0c4

08001eb8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001eb8:	2002      	movs	r0, #2
 8001eba:	4770      	bx	lr

08001ebc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001ebc:	b513      	push	{r0, r1, r4, lr}
 8001ebe:	2200      	movs	r2, #0
    {
        if (unicode == 0)
 8001ec0:	b149      	cbz	r1, 8001ed6 <_ZNK8touchgfx4Font8getGlyphEt+0x1a>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
 8001ec2:	ab02      	add	r3, sp, #8
        const uint8_t* dummyPixelDataPointer = 0;
 8001ec4:	9201      	str	r2, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8001ec6:	f803 2d05 	strb.w	r2, [r3, #-5]!
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001eca:	6802      	ldr	r2, [r0, #0]
 8001ecc:	6894      	ldr	r4, [r2, #8]
 8001ece:	aa01      	add	r2, sp, #4
 8001ed0:	47a0      	blx	r4
        return glyph;
    }
 8001ed2:	b002      	add	sp, #8
 8001ed4:	bd10      	pop	{r4, pc}
            return 0;
 8001ed6:	4608      	mov	r0, r1
 8001ed8:	e7fb      	b.n	8001ed2 <_ZNK8touchgfx4Font8getGlyphEt+0x16>

08001eda <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8001eda:	8940      	ldrh	r0, [r0, #10]
 8001edc:	4770      	bx	lr

08001ede <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8001ede:	8980      	ldrh	r0, [r0, #12]
 8001ee0:	4770      	bx	lr

08001ee2 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8001ee2:	8880      	ldrh	r0, [r0, #4]
 8001ee4:	4770      	bx	lr

08001ee6 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8001ee6:	7983      	ldrb	r3, [r0, #6]
 8001ee8:	8880      	ldrh	r0, [r0, #4]
 8001eea:	4418      	add	r0, r3
    }
 8001eec:	b280      	uxth	r0, r0
 8001eee:	4770      	bx	lr

08001ef0 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8001ef0:	79c0      	ldrb	r0, [r0, #7]
    }
 8001ef2:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8001ef6:	4770      	bx	lr

08001ef8 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8001ef8:	79c0      	ldrb	r0, [r0, #7]
    }
 8001efa:	09c0      	lsrs	r0, r0, #7
 8001efc:	4770      	bx	lr

08001efe <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8001efe:	4770      	bx	lr

08001f00 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8001f00:	b510      	push	{r4, lr}
    }
 8001f02:	2108      	movs	r1, #8
    virtual ~TypedText()
 8001f04:	4604      	mov	r4, r0
    }
 8001f06:	f017 fd9f 	bl	8019a48 <_ZdlPvj>
 8001f0a:	4620      	mov	r0, r4
 8001f0c:	bd10      	pop	{r4, pc}

08001f0e <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8001f0e:	4770      	bx	lr

08001f10 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8001f10:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8001f14:	6808      	ldr	r0, [r1, #0]
 8001f16:	6849      	ldr	r1, [r1, #4]
 8001f18:	c303      	stmia	r3!, {r0, r1}
    };
 8001f1a:	4770      	bx	lr

08001f1c <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8001f1c:	4770      	bx	lr

08001f1e <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8001f1e:	4770      	bx	lr

08001f20 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8001f20:	6041      	str	r1, [r0, #4]
    }
 8001f22:	4770      	bx	lr

08001f24 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8001f24:	4770      	bx	lr

08001f26 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8001f26:	2301      	movs	r3, #1
 8001f28:	7203      	strb	r3, [r0, #8]
    }
 8001f2a:	4770      	bx	lr

08001f2c <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8001f2c:	4770      	bx	lr

08001f2e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8001f2e:	4770      	bx	lr

08001f30 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8001f30:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8001f32:	68c4      	ldr	r4, [r0, #12]
 8001f34:	6841      	ldr	r1, [r0, #4]
 8001f36:	1062      	asrs	r2, r4, #1
    virtual void execute()
 8001f38:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8001f3a:	07e4      	lsls	r4, r4, #31
 8001f3c:	eb01 0002 	add.w	r0, r1, r2
 8001f40:	689b      	ldr	r3, [r3, #8]
 8001f42:	bf48      	it	mi
 8001f44:	588a      	ldrmi	r2, [r1, r2]
    }
 8001f46:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8001f4a:	bf48      	it	mi
 8001f4c:	58d3      	ldrmi	r3, [r2, r3]
 8001f4e:	4718      	bx	r3

08001f50 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8001f50:	6843      	ldr	r3, [r0, #4]
 8001f52:	b12b      	cbz	r3, 8001f60 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8001f54:	6883      	ldr	r3, [r0, #8]
 8001f56:	b92b      	cbnz	r3, 8001f64 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8001f58:	68c0      	ldr	r0, [r0, #12]
 8001f5a:	f000 0001 	and.w	r0, r0, #1
 8001f5e:	4770      	bx	lr
 8001f60:	4618      	mov	r0, r3
 8001f62:	4770      	bx	lr
 8001f64:	2001      	movs	r0, #1
    }
 8001f66:	4770      	bx	lr

08001f68 <_ZN8touchgfx12NoTransitionD0Ev>:
 8001f68:	b510      	push	{r4, lr}
 8001f6a:	210c      	movs	r1, #12
 8001f6c:	4604      	mov	r4, r0
 8001f6e:	f017 fd6b 	bl	8019a48 <_ZdlPvj>
 8001f72:	4620      	mov	r0, r4
 8001f74:	bd10      	pop	{r4, pc}

08001f76 <_ZN23FrontendApplicationBaseD0Ev>:
 8001f76:	b510      	push	{r4, lr}
 8001f78:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8001f7c:	4604      	mov	r4, r0
 8001f7e:	f017 fd63 	bl	8019a48 <_ZdlPvj>
 8001f82:	4620      	mov	r0, r4
 8001f84:	bd10      	pop	{r4, pc}

08001f86 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8001f86:	b510      	push	{r4, lr}
 8001f88:	2110      	movs	r1, #16
 8001f8a:	4604      	mov	r4, r0
 8001f8c:	f017 fd5c 	bl	8019a48 <_ZdlPvj>
 8001f90:	4620      	mov	r0, r4
 8001f92:	bd10      	pop	{r4, pc}

08001f94 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8001f94:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 8001f96:	f009 fd57 	bl	800ba48 <_ZN8touchgfx11Application11getInstanceEv>
 8001f9a:	6803      	ldr	r3, [r0, #0]
    }
 8001f9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 8001fa0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fa2:	4718      	bx	r3

08001fa4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8001fa4:	b510      	push	{r4, lr}
 8001fa6:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8001fa8:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8001fac:	b158      	cbz	r0, 8001fc6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8001fae:	6803      	ldr	r3, [r0, #0]
 8001fb0:	68db      	ldr	r3, [r3, #12]
 8001fb2:	4798      	blx	r3
 8001fb4:	b138      	cbz	r0, 8001fc6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8001fb6:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8001fba:	6803      	ldr	r3, [r0, #0]
 8001fbc:	689b      	ldr	r3, [r3, #8]
 8001fbe:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8001fc0:	2300      	movs	r3, #0
 8001fc2:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8001fc6:	bd10      	pop	{r4, pc}

08001fc8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8001fc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001fca:	4604      	mov	r4, r0
 8001fcc:	4617      	mov	r7, r2
 8001fce:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8001fd0:	f009 fd5a 	bl	800ba88 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8001fd4:	4b14      	ldr	r3, [pc, #80]	; (8002028 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8001fd6:	f8c4 6154 	str.w	r6, [r4, #340]	; 0x154
 8001fda:	601c      	str	r4, [r3, #0]
        return instance;
 8001fdc:	4e13      	ldr	r6, [pc, #76]	; (800202c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 8001fde:	4b14      	ldr	r3, [pc, #80]	; (8002030 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>)
 8001fe0:	6023      	str	r3, [r4, #0]
          pendingScreenTransitionCallback(0)
 8001fe2:	2500      	movs	r5, #0
 8001fe4:	6830      	ldr	r0, [r6, #0]
        : pobject(0), pmemfun_0(0)
 8001fe6:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8001fea:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8001fee:	4b11      	ldr	r3, [pc, #68]	; (8002034 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x6c>)
 8001ff0:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8001ff4:	6803      	ldr	r3, [r0, #0]
 8001ff6:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 8001ffa:	689b      	ldr	r3, [r3, #8]
 8001ffc:	f8c4 513c 	str.w	r5, [r4, #316]	; 0x13c
 8002000:	2101      	movs	r1, #1
 8002002:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
      model(m)
 8002006:	f8c4 7150 	str.w	r7, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800200a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800200c:	4628      	mov	r0, r5
 800200e:	f000 fe27 	bl	8002c60 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002012:	6833      	ldr	r3, [r6, #0]
 8002014:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002018:	b10a      	cbz	r2, 800201e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x56>
 800201a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800201c:	b900      	cbnz	r0, 8002020 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
            return instance->lcdRef;
 800201e:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002020:	f010 fc8f 	bl	8012942 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002024:	4620      	mov	r0, r4
 8002026:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002028:	200121e8 	.word	0x200121e8
 800202c:	2001217c 	.word	0x2001217c
 8002030:	0801b11c 	.word	0x0801b11c
 8002034:	0801b104 	.word	0x0801b104

08002038 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002038:	4b06      	ldr	r3, [pc, #24]	; (8002054 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 800203a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800203e:	2300      	movs	r3, #0
 8002040:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002044:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002048:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800204c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002050:	4770      	bx	lr
 8002052:	bf00      	nop
 8002054:	08002199 	.word	0x08002199

08002058 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002058:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800205c:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800205e:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002060:	f8dd a020 	ldr.w	sl, [sp, #32]
 8002064:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002066:	6803      	ldr	r3, [r0, #0]
 8002068:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800206a:	4688      	mov	r8, r1
 800206c:	4615      	mov	r5, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800206e:	4798      	blx	r3
 8002070:	f5b0 7f54 	cmp.w	r0, #848	; 0x350
 8002074:	d205      	bcs.n	8002082 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x2a>
 8002076:	4b42      	ldr	r3, [pc, #264]	; (8002180 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002078:	4a42      	ldr	r2, [pc, #264]	; (8002184 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 800207a:	21a7      	movs	r1, #167	; 0xa7
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800207c:	4842      	ldr	r0, [pc, #264]	; (8002188 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 800207e:	f017 fd0f 	bl	8019aa0 <__assert_func>
 8002082:	6868      	ldr	r0, [r5, #4]
 8002084:	6803      	ldr	r3, [r0, #0]
 8002086:	6a1b      	ldr	r3, [r3, #32]
 8002088:	4798      	blx	r3
 800208a:	280f      	cmp	r0, #15
 800208c:	d803      	bhi.n	8002096 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3e>
 800208e:	4b3f      	ldr	r3, [pc, #252]	; (800218c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 8002090:	4a3c      	ldr	r2, [pc, #240]	; (8002184 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 8002092:	21a8      	movs	r1, #168	; 0xa8
 8002094:	e7f2      	b.n	800207c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002096:	68e8      	ldr	r0, [r5, #12]
 8002098:	6803      	ldr	r3, [r0, #0]
 800209a:	6a1b      	ldr	r3, [r3, #32]
 800209c:	4798      	blx	r3
 800209e:	280b      	cmp	r0, #11
 80020a0:	d803      	bhi.n	80020aa <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x52>
 80020a2:	4b3b      	ldr	r3, [pc, #236]	; (8002190 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 80020a4:	4a37      	ldr	r2, [pc, #220]	; (8002184 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 80020a6:	21a9      	movs	r1, #169	; 0xa9
 80020a8:	e7e8      	b.n	800207c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x24>
    Application::getInstance()->clearAllTimerWidgets();
 80020aa:	f009 fccd 	bl	800ba48 <_ZN8touchgfx11Application11getInstanceEv>
 80020ae:	f009 fcd1 	bl	800ba54 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80020b2:	f8d9 0000 	ldr.w	r0, [r9]
 80020b6:	b110      	cbz	r0, 80020be <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x66>
        (*currentTrans)->tearDown();
 80020b8:	6803      	ldr	r3, [r0, #0]
 80020ba:	68db      	ldr	r3, [r3, #12]
 80020bc:	4798      	blx	r3
    if (*currentTrans)
 80020be:	f8d9 0000 	ldr.w	r0, [r9]
 80020c2:	b110      	cbz	r0, 80020ca <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x72>
        (*currentTrans)->~Transition();
 80020c4:	6803      	ldr	r3, [r0, #0]
 80020c6:	681b      	ldr	r3, [r3, #0]
 80020c8:	4798      	blx	r3
    if (*currentScreen)
 80020ca:	6838      	ldr	r0, [r7, #0]
 80020cc:	b110      	cbz	r0, 80020d4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
        (*currentScreen)->tearDownScreen();
 80020ce:	6803      	ldr	r3, [r0, #0]
 80020d0:	695b      	ldr	r3, [r3, #20]
 80020d2:	4798      	blx	r3
    if (*currentPresenter)
 80020d4:	f8d8 0000 	ldr.w	r0, [r8]
 80020d8:	b110      	cbz	r0, 80020e0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x88>
        (*currentPresenter)->deactivate();
 80020da:	6803      	ldr	r3, [r0, #0]
 80020dc:	685b      	ldr	r3, [r3, #4]
 80020de:	4798      	blx	r3
    if (*currentScreen)
 80020e0:	6838      	ldr	r0, [r7, #0]
 80020e2:	b110      	cbz	r0, 80020ea <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x92>
        (*currentScreen)->~Screen();
 80020e4:	6803      	ldr	r3, [r0, #0]
 80020e6:	681b      	ldr	r3, [r3, #0]
 80020e8:	4798      	blx	r3
    if (*currentPresenter)
 80020ea:	f8d8 0000 	ldr.w	r0, [r8]
 80020ee:	b110      	cbz	r0, 80020f6 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9e>
        (*currentPresenter)->~Presenter();
 80020f0:	6803      	ldr	r3, [r0, #0]
 80020f2:	689b      	ldr	r3, [r3, #8]
 80020f4:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80020f6:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80020f8:	6803      	ldr	r3, [r0, #0]
 80020fa:	2100      	movs	r1, #0
 80020fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020fe:	4798      	blx	r3
 8002100:	4604      	mov	r4, r0
 8002102:	b120      	cbz	r0, 800210e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb6>
        : screenContainer(0), done(false)
 8002104:	2300      	movs	r3, #0
 8002106:	6043      	str	r3, [r0, #4]
 8002108:	7203      	strb	r3, [r0, #8]
 800210a:	4b22      	ldr	r3, [pc, #136]	; (8002194 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x13c>)
 800210c:	6003      	str	r3, [r0, #0]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800210e:	68a8      	ldr	r0, [r5, #8]
 8002110:	6803      	ldr	r3, [r0, #0]
 8002112:	2100      	movs	r1, #0
 8002114:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002116:	4798      	blx	r3
 8002118:	4606      	mov	r6, r0
 800211a:	b108      	cbz	r0, 8002120 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc8>
 800211c:	f000 ff22 	bl	8002f64 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002120:	6868      	ldr	r0, [r5, #4]
 8002122:	6803      	ldr	r3, [r0, #0]
 8002124:	2100      	movs	r1, #0
 8002126:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002128:	4798      	blx	r3
 800212a:	4605      	mov	r5, r0
 800212c:	b110      	cbz	r0, 8002134 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xdc>
 800212e:	4631      	mov	r1, r6
 8002130:	f000 feb2 	bl	8002e98 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002134:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002138:	f8c8 5000 	str.w	r5, [r8]
    *currentScreen = newScreen;
 800213c:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 800213e:	b1e5      	cbz	r5, 800217a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x122>
 8002140:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002142:	f8ca 3004 	str.w	r3, [sl, #4]
    newScreen->setupScreen();
 8002146:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002148:	f8c5 a008 	str.w	sl, [r5, #8]
 800214c:	4630      	mov	r0, r6
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 800214e:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002150:	68db      	ldr	r3, [r3, #12]
 8002152:	4798      	blx	r3
    newPresenter->activate();
 8002154:	682b      	ldr	r3, [r5, #0]
 8002156:	4628      	mov	r0, r5
 8002158:	681b      	ldr	r3, [r3, #0]
 800215a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800215c:	4621      	mov	r1, r4
 800215e:	4630      	mov	r0, r6
 8002160:	f00a fdfe 	bl	800cd60 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002164:	6823      	ldr	r3, [r4, #0]
 8002166:	4620      	mov	r0, r4
 8002168:	691b      	ldr	r3, [r3, #16]
 800216a:	4798      	blx	r3
    newTransition->invalidate();
 800216c:	6823      	ldr	r3, [r4, #0]
 800216e:	4620      	mov	r0, r4
 8002170:	695b      	ldr	r3, [r3, #20]
 8002172:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8002174:	4628      	mov	r0, r5
 8002176:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    model->bind(newPresenter);
 800217a:	462b      	mov	r3, r5
 800217c:	e7e1      	b.n	8002142 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xea>
 800217e:	bf00      	nop
 8002180:	0801b17c 	.word	0x0801b17c
 8002184:	0801b397 	.word	0x0801b397
 8002188:	0801b20a 	.word	0x0801b20a
 800218c:	0801b251 	.word	0x0801b251
 8002190:	0801b2f4 	.word	0x0801b2f4
 8002194:	0801b160 	.word	0x0801b160

08002198 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002198:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800219a:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 800219e:	9300      	str	r3, [sp, #0]
 80021a0:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 80021a4:	4b04      	ldr	r3, [pc, #16]	; (80021b8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>)
 80021a6:	f500 719c 	add.w	r1, r0, #312	; 0x138
 80021aa:	4804      	ldr	r0, [pc, #16]	; (80021bc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>)
 80021ac:	f7ff ff54 	bl	8002058 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80021b0:	b003      	add	sp, #12
 80021b2:	f85d fb04 	ldr.w	pc, [sp], #4
 80021b6:	bf00      	nop
 80021b8:	200121dc 	.word	0x200121dc
 80021bc:	200121d8 	.word	0x200121d8

080021c0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80021c0:	6a00      	ldr	r0, [r0, #32]
 80021c2:	4770      	bx	lr

080021c4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80021c4:	4770      	bx	lr

080021c6 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80021c6:	888b      	ldrh	r3, [r1, #4]
 80021c8:	6980      	ldr	r0, [r0, #24]
 80021ca:	680a      	ldr	r2, [r1, #0]
 80021cc:	0adb      	lsrs	r3, r3, #11
 80021ce:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80021d2:	4410      	add	r0, r2
 80021d4:	4770      	bx	lr

080021d6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80021d6:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80021d8:	b1c2      	cbz	r2, 800220c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80021da:	7b13      	ldrb	r3, [r2, #12]
 80021dc:	b1b3      	cbz	r3, 800220c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80021de:	7b54      	ldrb	r4, [r2, #13]
 80021e0:	7ad2      	ldrb	r2, [r2, #11]
 80021e2:	0224      	lsls	r4, r4, #8
 80021e4:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80021e8:	4314      	orrs	r4, r2
 80021ea:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80021ec:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80021ee:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80021f2:	8813      	ldrh	r3, [r2, #0]
 80021f4:	428b      	cmp	r3, r1
 80021f6:	d102      	bne.n	80021fe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80021f8:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80021fc:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80021fe:	d805      	bhi.n	800220c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002200:	3801      	subs	r0, #1
 8002202:	b280      	uxth	r0, r0
 8002204:	3204      	adds	r2, #4
 8002206:	2800      	cmp	r0, #0
 8002208:	d1f3      	bne.n	80021f2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800220a:	e7f7      	b.n	80021fc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 800220c:	2000      	movs	r0, #0
 800220e:	e7f5      	b.n	80021fc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002210 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002210:	b510      	push	{r4, lr}
 8002212:	2124      	movs	r1, #36	; 0x24
 8002214:	4604      	mov	r4, r0
 8002216:	f017 fc17 	bl	8019a48 <_ZdlPvj>
 800221a:	4620      	mov	r0, r4
 800221c:	bd10      	pop	{r4, pc}
	...

08002220 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 8002220:	b530      	push	{r4, r5, lr}
 8002222:	b089      	sub	sp, #36	; 0x24
 8002224:	4604      	mov	r4, r0
    gsubTable(gsubData)
 8002226:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800222a:	9506      	str	r5, [sp, #24]
 800222c:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002230:	9505      	str	r5, [sp, #20]
 8002232:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002236:	9504      	str	r5, [sp, #16]
 8002238:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 800223c:	9503      	str	r5, [sp, #12]
 800223e:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002242:	9502      	str	r5, [sp, #8]
 8002244:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002248:	9501      	str	r5, [sp, #4]
 800224a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 800224e:	9500      	str	r5, [sp, #0]
 8002250:	f00a f984 	bl	800c55c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002254:	4b05      	ldr	r3, [pc, #20]	; (800226c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x4c>)
 8002256:	6023      	str	r3, [r4, #0]
 8002258:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800225a:	61a3      	str	r3, [r4, #24]
 800225c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800225e:	61e3      	str	r3, [r4, #28]
 8002260:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002262:	6223      	str	r3, [r4, #32]
}
 8002264:	4620      	mov	r0, r4
 8002266:	b009      	add	sp, #36	; 0x24
 8002268:	bd30      	pop	{r4, r5, pc}
 800226a:	bf00      	nop
 800226c:	0801b4a4 	.word	0x0801b4a4

08002270 <_ZN8touchgfx8Drawable11setPositionEssss>:
     * @param  width  The width of this Drawable.
     * @param  height The height of this Drawable.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002270:	b570      	push	{r4, r5, r6, lr}
 8002272:	461e      	mov	r6, r3
    {
        setXY(x, y);
 8002274:	6803      	ldr	r3, [r0, #0]
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002276:	f9bd 5010 	ldrsh.w	r5, [sp, #16]
        setXY(x, y);
 800227a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800227c:	4604      	mov	r4, r0
        setXY(x, y);
 800227e:	4798      	blx	r3
        setWidth(width);
 8002280:	6823      	ldr	r3, [r4, #0]
 8002282:	4631      	mov	r1, r6
 8002284:	4620      	mov	r0, r4
 8002286:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002288:	4790      	blx	r2
        setHeight(height);
 800228a:	6823      	ldr	r3, [r4, #0]
 800228c:	4629      	mov	r1, r5
 800228e:	4620      	mov	r0, r4
 8002290:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002292:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002296:	4718      	bx	r3

08002298 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002298:	8081      	strh	r1, [r0, #4]
    }
 800229a:	4770      	bx	lr

0800229c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800229c:	80c1      	strh	r1, [r0, #6]
    }
 800229e:	4770      	bx	lr

080022a0 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setXY(int16_t x, int16_t y)
 80022a0:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80022a2:	6803      	ldr	r3, [r0, #0]
    virtual void setXY(int16_t x, int16_t y)
 80022a4:	4604      	mov	r4, r0
        setX(x);
 80022a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    virtual void setXY(int16_t x, int16_t y)
 80022a8:	4615      	mov	r5, r2
        setX(x);
 80022aa:	4798      	blx	r3
        setY(y);
 80022ac:	6823      	ldr	r3, [r4, #0]
 80022ae:	4629      	mov	r1, r5
 80022b0:	4620      	mov	r0, r4
 80022b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    }
 80022b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80022b8:	4718      	bx	r3

080022ba <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80022ba:	8101      	strh	r1, [r0, #8]
    }
 80022bc:	4770      	bx	lr

080022be <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80022be:	8141      	strh	r1, [r0, #10]
    }
 80022c0:	4770      	bx	lr

080022c2 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80022c2:	4770      	bx	lr

080022c4 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt)
    {
    }
 80022c4:	4770      	bx	lr

080022c6 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt)
    {
    }
 80022c6:	4770      	bx	lr

080022c8 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt)
    {
    }
 80022c8:	4770      	bx	lr

080022ca <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80022ca:	4770      	bx	lr

080022cc <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
 80022cc:	88c3      	ldrh	r3, [r0, #6]
 80022ce:	1ad2      	subs	r2, r2, r3
 80022d0:	8883      	ldrh	r3, [r0, #4]
 80022d2:	1ac9      	subs	r1, r1, r3
 80022d4:	6803      	ldr	r3, [r0, #0]
    virtual void moveTo(int16_t x, int16_t y)
 80022d6:	b410      	push	{r4}
        moveRelative(x - rect.x, y - rect.y);
 80022d8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
    }
 80022da:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80022de:	b212      	sxth	r2, r2
 80022e0:	b209      	sxth	r1, r1
 80022e2:	4718      	bx	r3

080022e4 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80022e4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80022e8:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80022ea:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80022ee:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80022f0:	6813      	ldr	r3, [r2, #0]
 80022f2:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80022f4:	6010      	str	r0, [r2, #0]
    }
 80022f6:	4770      	bx	lr

080022f8 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80022f8:	4770      	bx	lr

080022fa <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80022fa:	4770      	bx	lr

080022fc <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see touchgfx::Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80022fc:	4770      	bx	lr

080022fe <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80022fe:	4770      	bx	lr

08002300 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 8002300:	4770      	bx	lr

08002302 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * @param       y    Not used since this Widget is the only "child".
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002302:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002306:	b11a      	cbz	r2, 8002310 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002308:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 800230c:	b102      	cbz	r2, 8002310 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800230e:	6018      	str	r0, [r3, #0]
        }
    }
 8002310:	4770      	bx	lr

08002312 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002312:	4770      	bx	lr

08002314 <_ZN15Screen1ViewBase17functionLedToggleEv>:
     * Virtual Action Handlers
     */
    virtual void functionLedToggle()
    {
        // Override and implement this function in Screen1
    }
 8002314:	4770      	bx	lr

08002316 <_ZN15Screen1ViewBase14functionBtDownEv>:

    virtual void functionBtDown()
    {
        // Override and implement this function in Screen1
    }
 8002316:	4770      	bx	lr

08002318 <_ZN15Screen1ViewBase12functionBtUpEv>:

    virtual void functionBtUp()
    {
        // Override and implement this function in Screen1
    }
 8002318:	4770      	bx	lr

0800231a <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 800231a:	4770      	bx	lr

0800231c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 800231c:	4770      	bx	lr

0800231e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 800231e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8002322:	b12b      	cbz	r3, 8002330 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x12>
 8002324:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
     *
     * @see getColor, setBorderColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8002326:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002328:	b123      	cbz	r3, 8002334 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x16>
 800232a:	6f43      	ldr	r3, [r0, #116]	; 0x74
     * @param  color The color of the border.
     * @see setColor, getBorderColor, Color::getColorFrom24BitRGB
     */
    void setBorderColor(colortype color)
    {
        borderColor = color;
 800232c:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 800232e:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002330:	6e82      	ldr	r2, [r0, #104]	; 0x68
 8002332:	e7f8      	b.n	8002326 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x8>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002334:	6f03      	ldr	r3, [r0, #112]	; 0x70
 8002336:	e7f9      	b.n	800232c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xe>

08002338 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextArea text;           ///< The text
    colortype colorReleased; ///< The color released
    colortype colorPressed;  ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 8002338:	b508      	push	{r3, lr}
    {
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 800233a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800233e:	b133      	cbz	r3, 800234e <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x16>
 8002340:	f8d0 30b8 	ldr.w	r3, [r0, #184]	; 0xb8
     *
     * @param  color The color to use.
     */
    FORCE_INLINE_FUNCTION void setColor(colortype color)
    {
        this->color = color;
 8002344:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
        T::handlePressedUpdated();
 8002348:	f7ff ffe9 	bl	800231e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 800234c:	bd08      	pop	{r3, pc}
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 800234e:	f8d0 30b4 	ldr.w	r3, [r0, #180]	; 0xb4
 8002352:	e7f7      	b.n	8002344 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

08002354 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002354:	4770      	bx	lr

08002356 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8002356:	4770      	bx	lr

08002358 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class TextButtonStyle : public T
 8002358:	4770      	bx	lr

0800235a <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800235a:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 800235c:	68c5      	ldr	r5, [r0, #12]
 800235e:	6844      	ldr	r4, [r0, #4]
 8002360:	106a      	asrs	r2, r5, #1
    virtual void execute(T1 t1)
 8002362:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 8002364:	07ed      	lsls	r5, r5, #31
 8002366:	eb04 0002 	add.w	r0, r4, r2
 800236a:	689b      	ldr	r3, [r3, #8]
 800236c:	bf48      	it	mi
 800236e:	58a2      	ldrmi	r2, [r4, r2]
    }
 8002370:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002372:	bf48      	it	mi
 8002374:	58d3      	ldrmi	r3, [r2, r3]
 8002376:	4718      	bx	r3

08002378 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 8002378:	6843      	ldr	r3, [r0, #4]
 800237a:	b12b      	cbz	r3, 8002388 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 800237c:	6883      	ldr	r3, [r0, #8]
 800237e:	b92b      	cbnz	r3, 800238c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002380:	68c0      	ldr	r0, [r0, #12]
 8002382:	f000 0001 	and.w	r0, r0, #1
 8002386:	4770      	bx	lr
 8002388:	4618      	mov	r0, r3
 800238a:	4770      	bx	lr
 800238c:	2001      	movs	r0, #1
    }
 800238e:	4770      	bx	lr

08002390 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002390:	b430      	push	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 8002392:	68c5      	ldr	r5, [r0, #12]
 8002394:	6844      	ldr	r4, [r0, #4]
 8002396:	106a      	asrs	r2, r5, #1
    virtual void execute(T1 t1)
 8002398:	4603      	mov	r3, r0
        (pobject->*pmemfun_1)(t1);
 800239a:	07ed      	lsls	r5, r5, #31
 800239c:	eb04 0002 	add.w	r0, r4, r2
 80023a0:	689b      	ldr	r3, [r3, #8]
 80023a2:	bf48      	it	mi
 80023a4:	58a2      	ldrmi	r2, [r4, r2]
    }
 80023a6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun_1)(t1);
 80023a8:	bf48      	it	mi
 80023aa:	58d3      	ldrmi	r3, [r2, r3]
 80023ac:	4718      	bx	r3

080023ae <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun_1 != 0);
 80023ae:	6843      	ldr	r3, [r0, #4]
 80023b0:	b12b      	cbz	r3, 80023be <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80023b2:	6883      	ldr	r3, [r0, #8]
 80023b4:	b92b      	cbnz	r3, 80023c2 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80023b6:	68c0      	ldr	r0, [r0, #12]
 80023b8:	f000 0001 	and.w	r0, r0, #1
 80023bc:	4770      	bx	lr
 80023be:	4618      	mov	r0, r3
 80023c0:	4770      	bx	lr
 80023c2:	2001      	movs	r0, #1
    }
 80023c4:	4770      	bx	lr

080023c6 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        text.setAlpha(T::getAlpha());
 80023c6:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80023ca:	f880 30ae 	strb.w	r3, [r0, #174]	; 0xae
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        this->alpha = newAlpha;
 80023ce:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
        T::handleAlphaUpdated();
    }
 80023d2:	4770      	bx	lr

080023d4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 80023d4:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 80023d8:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 80023dc:	4770      	bx	lr

080023de <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 80023de:	b510      	push	{r4, lr}
 80023e0:	2178      	movs	r1, #120	; 0x78
 80023e2:	4604      	mov	r4, r0
 80023e4:	f017 fb30 	bl	8019a48 <_ZdlPvj>
 80023e8:	4620      	mov	r0, r4
 80023ea:	bd10      	pop	{r4, pc}

080023ec <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class TextButtonStyle : public T
 80023ec:	b510      	push	{r4, lr}
 80023ee:	21bc      	movs	r1, #188	; 0xbc
 80023f0:	4604      	mov	r4, r0
 80023f2:	f017 fb29 	bl	8019a48 <_ZdlPvj>
 80023f6:	4620      	mov	r0, r4
 80023f8:	bd10      	pop	{r4, pc}

080023fa <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80023fa:	b510      	push	{r4, lr}
 80023fc:	2110      	movs	r1, #16
 80023fe:	4604      	mov	r4, r0
 8002400:	f017 fb22 	bl	8019a48 <_ZdlPvj>
 8002404:	4620      	mov	r0, r4
 8002406:	bd10      	pop	{r4, pc}

08002408 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002408:	b510      	push	{r4, lr}
 800240a:	2110      	movs	r1, #16
 800240c:	4604      	mov	r4, r0
 800240e:	f017 fb1b 	bl	8019a48 <_ZdlPvj>
 8002412:	4620      	mov	r0, r4
 8002414:	bd10      	pop	{r4, pc}

08002416 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002416:	b510      	push	{r4, lr}
 8002418:	f44f 7154 	mov.w	r1, #848	; 0x350
 800241c:	4604      	mov	r4, r0
 800241e:	f017 fb13 	bl	8019a48 <_ZdlPvj>
 8002422:	4620      	mov	r0, r4
 8002424:	bd10      	pop	{r4, pc}

08002426 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &ToggleLed)
 8002426:	f100 02a0 	add.w	r2, r0, #160	; 0xa0
 800242a:	428a      	cmp	r2, r1
 800242c:	d102      	bne.n	8002434 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
    {
        //Interaction1
        //When ToggleLed clicked call virtual function
        //Call functionLedToggle
        functionLedToggle();
 800242e:	6803      	ldr	r3, [r0, #0]
 8002430:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002432:	4718      	bx	r3
    }
}
 8002434:	4770      	bx	lr

08002436 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &FlexBtDown)
 8002436:	f500 728c 	add.w	r2, r0, #280	; 0x118
 800243a:	4291      	cmp	r1, r2
 800243c:	d102      	bne.n	8002444 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //Interaction2
        //When FlexBtDown clicked call virtual function
        //Call functionBtDown
        functionBtDown();
 800243e:	6803      	ldr	r3, [r0, #0]
 8002440:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    else if (&src == &FlexBtUp)
    {
        //Interaction3
        //When FlexBtUp clicked call virtual function
        //Call functionBtUp
        functionBtUp();
 8002442:	4718      	bx	r3
    else if (&src == &FlexBtUp)
 8002444:	f500 72ea 	add.w	r2, r0, #468	; 0x1d4
 8002448:	4291      	cmp	r1, r2
 800244a:	d102      	bne.n	8002452 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        functionBtUp();
 800244c:	6803      	ldr	r3, [r0, #0]
 800244e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002450:	e7f7      	b.n	8002442 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002452:	4770      	bx	lr

08002454 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002454:	790b      	ldrb	r3, [r1, #4]
    virtual void handleClickEvent(const ClickEvent& event)
 8002456:	b570      	push	{r4, r5, r6, lr}
 8002458:	4604      	mov	r4, r0
 800245a:	460e      	mov	r6, r1
        bool wasPressed = getPressed();
 800245c:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002460:	b983      	cbnz	r3, 8002484 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x30>
 8002462:	b185      	cbz	r5, 8002486 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x32>
        {
            setPressed(newPressedValue);
            invalidate();
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED) && action)
 8002464:	7933      	ldrb	r3, [r6, #4]
 8002466:	2b01      	cmp	r3, #1
 8002468:	d11d      	bne.n	80024a6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x52>
 800246a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800246c:	b1d8      	cbz	r0, 80024a6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x52>
        {
            if (action->isValid())
 800246e:	6803      	ldr	r3, [r0, #0]
 8002470:	68db      	ldr	r3, [r3, #12]
 8002472:	4798      	blx	r3
 8002474:	b1b8      	cbz	r0, 80024a6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x52>
            {
                action->execute(*this);
 8002476:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002478:	6803      	ldr	r3, [r0, #0]
 800247a:	4621      	mov	r1, r4
 800247c:	689b      	ldr	r3, [r3, #8]
            }
        }
    }
 800247e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                action->execute(*this);
 8002482:	4718      	bx	r3
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002484:	b17d      	cbz	r5, 80024a6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x52>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002486:	fab3 f383 	clz	r3, r3
 800248a:	095b      	lsrs	r3, r3, #5
 800248c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
     * @see getPressed, handlePressedUpdated
     */
    void setPressed(bool isPressed)
    {
        pressed = isPressed;
        handlePressedUpdated();
 8002490:	6823      	ldr	r3, [r4, #0]
 8002492:	4620      	mov	r0, r4
 8002494:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8002498:	4798      	blx	r3
            invalidate();
 800249a:	6823      	ldr	r3, [r4, #0]
 800249c:	4620      	mov	r0, r4
 800249e:	695b      	ldr	r3, [r3, #20]
 80024a0:	4798      	blx	r3
        if (wasPressed && (event.getType() == ClickEvent::RELEASED) && action)
 80024a2:	2d00      	cmp	r5, #0
 80024a4:	d1de      	bne.n	8002464 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
    }
 80024a6:	bd70      	pop	{r4, r5, r6, pc}

080024a8 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 80024a8:	4a09      	ldr	r2, [pc, #36]	; (80024d0 <_ZN8touchgfx8DrawableC1Ev+0x28>)
 80024aa:	6002      	str	r2, [r0, #0]
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
    {
        this->x = x;
 80024ac:	2200      	movs	r2, #0
 80024ae:	8082      	strh	r2, [r0, #4]
        this->y = y;
 80024b0:	80c2      	strh	r2, [r0, #6]
        this->width = width;
 80024b2:	8102      	strh	r2, [r0, #8]
        this->height = height;
 80024b4:	8142      	strh	r2, [r0, #10]
        this->x = 0;
 80024b6:	8182      	strh	r2, [r0, #12]
        this->y = 0;
 80024b8:	81c2      	strh	r2, [r0, #14]
        this->width = 0;
 80024ba:	8202      	strh	r2, [r0, #16]
        this->height = 0;
 80024bc:	8242      	strh	r2, [r0, #18]
 80024be:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80024c2:	61c2      	str	r2, [r0, #28]
 80024c4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80024c8:	2201      	movs	r2, #1
 80024ca:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
    }
 80024ce:	4770      	bx	lr
 80024d0:	0801cb10 	.word	0x0801cb10

080024d4 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 80024d4:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0), reportAsSolid(false)
 80024d6:	2226      	movs	r2, #38	; 0x26
    Box()
 80024d8:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0), reportAsSolid(false)
 80024da:	2100      	movs	r1, #0
 80024dc:	f017 fb69 	bl	8019bb2 <memset>
class Widget : public Drawable
 80024e0:	4620      	mov	r0, r4
 80024e2:	f7ff ffe1 	bl	80024a8 <_ZN8touchgfx8DrawableC1Ev>
 80024e6:	4b05      	ldr	r3, [pc, #20]	; (80024fc <_ZN8touchgfx3BoxC1Ev+0x28>)
 80024e8:	6023      	str	r3, [r4, #0]
 80024ea:	23ff      	movs	r3, #255	; 0xff
 80024ec:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        color = col;
 80024f0:	2300      	movs	r3, #0
 80024f2:	62a3      	str	r3, [r4, #40]	; 0x28
 80024f4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    {
    }
 80024f8:	4620      	mov	r0, r4
 80024fa:	bd10      	pop	{r4, pc}
 80024fc:	0801c7e4 	.word	0x0801c7e4

08002500 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002500:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002502:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002504:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8002506:	2100      	movs	r1, #0
 8002508:	f017 fb53 	bl	8019bb2 <memset>
 800250c:	4620      	mov	r0, r4
 800250e:	f7ff ffcb 	bl	80024a8 <_ZN8touchgfx8DrawableC1Ev>
 8002512:	4b09      	ldr	r3, [pc, #36]	; (8002538 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 8002514:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002516:	4b09      	ldr	r3, [pc, #36]	; (800253c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002518:	62a3      	str	r3, [r4, #40]	; 0x28
 800251a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800251e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002520:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002524:	2300      	movs	r3, #0
 8002526:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 800252a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 800252e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    }
 8002532:	4620      	mov	r0, r4
 8002534:	bd10      	pop	{r4, pc}
 8002536:	bf00      	nop
 8002538:	0801c738 	.word	0x0801c738
 800253c:	0801b0f4 	.word	0x0801b0f4

08002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     *
     * @note This function is not available to call before the LCD has been setup, because the
     *       color depth is required. Consider using the function getColorFromRGB for a
     *       specific class, e.g. LCD16::getColorFromRGB().
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 8002540:	4613      	mov	r3, r2
        return instance;
 8002542:	4a0c      	ldr	r2, [pc, #48]	; (8002574 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x34>)
 8002544:	b570      	push	{r4, r5, r6, lr}
 8002546:	6814      	ldr	r4, [r2, #0]
 8002548:	4605      	mov	r5, r0
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 800254a:	b92c      	cbnz	r4, 8002558 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x18>
 800254c:	4b0a      	ldr	r3, [pc, #40]	; (8002578 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x38>)
 800254e:	4a0b      	ldr	r2, [pc, #44]	; (800257c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x3c>)
 8002550:	480b      	ldr	r0, [pc, #44]	; (8002580 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x40>)
 8002552:	2135      	movs	r1, #53	; 0x35
 8002554:	f017 faa4 	bl	8019aa0 <__assert_func>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002558:	f894 2076 	ldrb.w	r2, [r4, #118]	; 0x76
 800255c:	b10a      	cbz	r2, 8002562 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x22>
 800255e:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8002560:	b900      	cbnz	r0, 8002564 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x24>
            return instance->lcdRef;
 8002562:	68a0      	ldr	r0, [r4, #8]
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8002564:	6802      	ldr	r2, [r0, #0]
 8002566:	6a94      	ldr	r4, [r2, #40]	; 0x28
 8002568:	460a      	mov	r2, r1
 800256a:	46a4      	mov	ip, r4
 800256c:	4629      	mov	r1, r5
    }
 800256e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 8002572:	4760      	bx	ip
 8002574:	2001217c 	.word	0x2001217c
 8002578:	0801b726 	.word	0x0801b726
 800257c:	0801b7ec 	.word	0x0801b7ec
 8002580:	0801b769 	.word	0x0801b769

08002584 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
    TextButtonStyle()
 8002584:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002586:	4604      	mov	r4, r0
        : T(), up(), down()
 8002588:	4626      	mov	r6, r4
class Container : public Drawable
{
public:
    Container()
        : Drawable(),
          firstChild(0)
 800258a:	f7ff ff8d 	bl	80024a8 <_ZN8touchgfx8DrawableC1Ev>
        touchable = touch;
 800258e:	2301      	movs	r3, #1
 8002590:	2500      	movs	r5, #0
 8002592:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
        : pressed(false), alpha(255), action(0)
 8002596:	27ff      	movs	r7, #255	; 0xff
 8002598:	4b1a      	ldr	r3, [pc, #104]	; (8002604 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x80>)
 800259a:	62a5      	str	r5, [r4, #40]	; 0x28
 800259c:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
 80025a0:	f884 702d 	strb.w	r7, [r4, #45]	; 0x2d
 80025a4:	6325      	str	r5, [r4, #48]	; 0x30
 80025a6:	f846 3b34 	str.w	r3, [r6], #52
        : Widget(), alpha(255), color(0), borderColor(0), borderSize(0)
 80025aa:	4629      	mov	r1, r5
 80025ac:	2226      	movs	r2, #38	; 0x26
 80025ae:	4630      	mov	r0, r6
 80025b0:	f017 faff 	bl	8019bb2 <memset>
 80025b4:	4630      	mov	r0, r6
 80025b6:	f7ff ff77 	bl	80024a8 <_ZN8touchgfx8DrawableC1Ev>
 80025ba:	4b13      	ldr	r3, [pc, #76]	; (8002608 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x84>)
 80025bc:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 80025be:	462a      	mov	r2, r5
 80025c0:	4629      	mov	r1, r5
 80025c2:	4630      	mov	r0, r6
 80025c4:	f884 705a 	strb.w	r7, [r4, #90]	; 0x5a
 80025c8:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 80025cc:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
        : color(0)
 80025d0:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 80025d4:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 80025d8:	f7ff fe62 	bl	80022a0 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 80025dc:	4631      	mov	r1, r6
 80025de:	4620      	mov	r0, r4
        : T()
 80025e0:	4626      	mov	r6, r4
 80025e2:	f006 fdc5 	bl	8009170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80025e6:	4b09      	ldr	r3, [pc, #36]	; (800260c <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 80025e8:	f846 3b78 	str.w	r3, [r6], #120
 80025ec:	4630      	mov	r0, r6
 80025ee:	f7ff ff87 	bl	8002500 <_ZN8touchgfx8TextAreaC1Ev>
        T::add(text);
 80025f2:	4620      	mov	r0, r4
 80025f4:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
 80025f8:	4631      	mov	r1, r6
 80025fa:	f006 fdb9 	bl	8009170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 80025fe:	4620      	mov	r0, r4
 8002600:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002602:	bf00      	nop
 8002604:	0801b4f8 	.word	0x0801b4f8
 8002608:	0801c92c 	.word	0x0801c92c
 800260c:	0801b58c 	.word	0x0801b58c

08002610 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002610:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002614:	4604      	mov	r4, r0
 8002616:	b091      	sub	sp, #68	; 0x44
        : presenter(0)
 8002618:	f00a fa26 	bl	800ca68 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 800261c:	4622      	mov	r2, r4
 800261e:	2500      	movs	r5, #0
 8002620:	4b5b      	ldr	r3, [pc, #364]	; (8002790 <_ZN15Screen1ViewBaseC1Ev+0x180>)
 8002622:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002624:	f842 3b40 	str.w	r3, [r2], #64
 8002628:	4610      	mov	r0, r2
 800262a:	9208      	str	r2, [sp, #32]
 800262c:	f7ff ff52 	bl	80024d4 <_ZN8touchgfx3BoxC1Ev>
 8002630:	f104 0370 	add.w	r3, r4, #112	; 0x70
 8002634:	4618      	mov	r0, r3
 8002636:	9309      	str	r3, [sp, #36]	; 0x24
 8002638:	f7ff ff4c 	bl	80024d4 <_ZN8touchgfx3BoxC1Ev>
 800263c:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8002640:	4629      	mov	r1, r5
 8002642:	2226      	movs	r2, #38	; 0x26
 8002644:	4618      	mov	r0, r3
 8002646:	9303      	str	r3, [sp, #12]
 8002648:	f017 fab3 	bl	8019bb2 <memset>
 800264c:	9803      	ldr	r0, [sp, #12]
 800264e:	f7ff ff2b 	bl	80024a8 <_ZN8touchgfx8DrawableC1Ev>
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    explicit Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002652:	f64f 73ff 	movw	r3, #65535	; 0xffff
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 8002656:	4a4f      	ldr	r2, [pc, #316]	; (8002794 <_ZN15Screen1ViewBaseC1Ev+0x184>)
 8002658:	f8a4 30ce 	strh.w	r3, [r4, #206]	; 0xce
 800265c:	f04f 0801 	mov.w	r8, #1
 8002660:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8002664:	f884 30d2 	strb.w	r3, [r4, #210]	; 0xd2
 8002668:	f8a4 30d4 	strh.w	r3, [r4, #212]	; 0xd4
 800266c:	f104 03d8 	add.w	r3, r4, #216	; 0xd8
 8002670:	f8c4 20a0 	str.w	r2, [r4, #160]	; 0xa0
 */
class TextAreaWithOneWildcard : public TextArea
{
public:
    TextAreaWithOneWildcard()
        : TextArea(), wildcard(0)
 8002674:	4618      	mov	r0, r3
 8002676:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
 800267a:	f884 50cc 	strb.w	r5, [r4, #204]	; 0xcc
 800267e:	f884 80c4 	strb.w	r8, [r4, #196]	; 0xc4
 8002682:	9304      	str	r3, [sp, #16]
 8002684:	f7ff ff3c 	bl	8002500 <_ZN8touchgfx8TextAreaC1Ev>
 8002688:	4b43      	ldr	r3, [pc, #268]	; (8002798 <_ZN15Screen1ViewBaseC1Ev+0x188>)
 800268a:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
 800268e:	f504 738c 	add.w	r3, r4, #280	; 0x118
 8002692:	4618      	mov	r0, r3
 8002694:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8002698:	f504 7bea 	add.w	fp, r4, #468	; 0x1d4
 800269c:	9305      	str	r3, [sp, #20]
 800269e:	f7ff ff71 	bl	8002584 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80026a2:	4658      	mov	r0, fp
 80026a4:	f7ff ff6e 	bl	8002584 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80026a8:	f504 7324 	add.w	r3, r4, #656	; 0x290
 80026ac:	4618      	mov	r0, r3
 80026ae:	9306      	str	r3, [sp, #24]
 80026b0:	f7ff ff26 	bl	8002500 <_ZN8touchgfx8TextAreaC1Ev>
 80026b4:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
 80026b8:	4618      	mov	r0, r3
 80026ba:	9307      	str	r3, [sp, #28]
 80026bc:	f7ff ff20 	bl	8002500 <_ZN8touchgfx8TextAreaC1Ev>
    {
 80026c0:	4b36      	ldr	r3, [pc, #216]	; (800279c <_ZN15Screen1ViewBaseC1Ev+0x18c>)
 80026c2:	f8c4 3330 	str.w	r3, [r4, #816]	; 0x330
        this->pmemfun_1 = pmemfun_1;
 80026c6:	4b36      	ldr	r3, [pc, #216]	; (80027a0 <_ZN15Screen1ViewBaseC1Ev+0x190>)
 80026c8:	f8c4 3338 	str.w	r3, [r4, #824]	; 0x338
    {
 80026cc:	4b35      	ldr	r3, [pc, #212]	; (80027a4 <_ZN15Screen1ViewBaseC1Ev+0x194>)
 80026ce:	f8c4 3340 	str.w	r3, [r4, #832]	; 0x340
    __background.setPosition(0, 0, 240, 320);
 80026d2:	f44f 76a0 	mov.w	r6, #320	; 0x140
        this->pmemfun_1 = pmemfun_1;
 80026d6:	4b34      	ldr	r3, [pc, #208]	; (80027a8 <_ZN15Screen1ViewBaseC1Ev+0x198>)
 80026d8:	f8c4 3348 	str.w	r3, [r4, #840]	; 0x348
 80026dc:	9600      	str	r6, [sp, #0]
 80026de:	23f0      	movs	r3, #240	; 0xf0
 80026e0:	462a      	mov	r2, r5
 80026e2:	4629      	mov	r1, r5
 80026e4:	9808      	ldr	r0, [sp, #32]
        this->pobject = pobject;
 80026e6:	f8c4 4334 	str.w	r4, [r4, #820]	; 0x334
        this->pmemfun_1 = pmemfun_1;
 80026ea:	f8c4 533c 	str.w	r5, [r4, #828]	; 0x33c
        this->pobject = pobject;
 80026ee:	f8c4 4344 	str.w	r4, [r4, #836]	; 0x344
        this->pmemfun_1 = pmemfun_1;
 80026f2:	f8c4 534c 	str.w	r5, [r4, #844]	; 0x34c
 80026f6:	f7ff fdbb 	bl	8002270 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 80026fa:	462a      	mov	r2, r5
 80026fc:	4629      	mov	r1, r5
 80026fe:	4628      	mov	r0, r5
 8002700:	f7ff ff1e 	bl	8002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    box1.setPosition(0, 0, 240, 320);
 8002704:	23f0      	movs	r3, #240	; 0xf0
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8002706:	66a0      	str	r0, [r4, #104]	; 0x68
 8002708:	9600      	str	r6, [sp, #0]
 800270a:	462a      	mov	r2, r5
 800270c:	4629      	mov	r1, r5
 800270e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8002710:	f7ff fdae 	bl	8002270 <_ZN8touchgfx8Drawable11setPositionEssss>
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8002714:	22ff      	movs	r2, #255	; 0xff
 8002716:	4611      	mov	r1, r2
 8002718:	4610      	mov	r0, r2
 800271a:	f7ff ff11 	bl	8002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800271e:	ae10      	add	r6, sp, #64	; 0x40
 8002720:	f8c4 0098 	str.w	r0, [r4, #152]	; 0x98
    ToggleLed.setXY(83, 94);
 8002724:	225e      	movs	r2, #94	; 0x5e
 8002726:	2153      	movs	r1, #83	; 0x53
 8002728:	9803      	ldr	r0, [sp, #12]
 800272a:	f7ff fdb9 	bl	80022a0 <_ZN8touchgfx8Drawable5setXYEss>
 800272e:	f826 8d08 	strh.w	r8, [r6, #-8]!
public:

    virtual void setBitmaps(const Bitmap& bmpReleased, const Bitmap& bmpPressed)
    {
        originalPressed = bmpPressed;
        Button::setBitmaps(bmpReleased, bmpPressed);
 8002732:	a90d      	add	r1, sp, #52	; 0x34
 8002734:	4632      	mov	r2, r6
 8002736:	9803      	ldr	r0, [sp, #12]
        originalPressed = bmpPressed;
 8002738:	f8a4 80d4 	strh.w	r8, [r4, #212]	; 0xd4
 800273c:	f8ad 5034 	strh.w	r5, [sp, #52]	; 0x34
        Button::setBitmaps(bmpReleased, bmpPressed);
 8002740:	f007 ff50 	bl	800a5e4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    ToggleLed.setAction(buttonCallback);
 8002744:	f504 734c 	add.w	r3, r4, #816	; 0x330
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002748:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
    textArea1.setXY(30, 160);
 800274c:	22a0      	movs	r2, #160	; 0xa0
 800274e:	211e      	movs	r1, #30
 8002750:	9804      	ldr	r0, [sp, #16]
 8002752:	f7ff fda5 	bl	80022a0 <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 8002756:	462a      	mov	r2, r5
 8002758:	4629      	mov	r1, r5
 800275a:	4628      	mov	r0, r5
 800275c:	f7ff fef0 	bl	8002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002760:	4b12      	ldr	r3, [pc, #72]	; (80027ac <_ZN15Screen1ViewBaseC1Ev+0x19c>)
        this->color = color;
 8002762:	f8c4 0108 	str.w	r0, [r4, #264]	; 0x108
 8002766:	681b      	ldr	r3, [r3, #0]
     *
     * @see getLinespacing
     */
    FORCE_INLINE_FUNCTION void setLinespacing(int16_t space)
    {
        linespace = space;
 8002768:	f8a4 510c 	strh.w	r5, [r4, #268]	; 0x10c
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID9).getText());
 800276c:	f504 7742 	add.w	r7, r4, #776	; 0x308
 8002770:	b92b      	cbnz	r3, 800277e <_ZN15Screen1ViewBaseC1Ev+0x16e>
 8002772:	4b0f      	ldr	r3, [pc, #60]	; (80027b0 <_ZN15Screen1ViewBaseC1Ev+0x1a0>)
 8002774:	4a0f      	ldr	r2, [pc, #60]	; (80027b4 <_ZN15Screen1ViewBaseC1Ev+0x1a4>)
 8002776:	21b1      	movs	r1, #177	; 0xb1
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8002778:	480f      	ldr	r0, [pc, #60]	; (80027b8 <_ZN15Screen1ViewBaseC1Ev+0x1a8>)
 800277a:	f017 f991 	bl	8019aa0 <__assert_func>
 800277e:	4b0f      	ldr	r3, [pc, #60]	; (80027bc <_ZN15Screen1ViewBaseC1Ev+0x1ac>)
 8002780:	881b      	ldrh	r3, [r3, #0]
 8002782:	2b04      	cmp	r3, #4
 8002784:	d81e      	bhi.n	80027c4 <_ZN15Screen1ViewBaseC1Ev+0x1b4>
 8002786:	4b0e      	ldr	r3, [pc, #56]	; (80027c0 <_ZN15Screen1ViewBaseC1Ev+0x1b0>)
 8002788:	4a0a      	ldr	r2, [pc, #40]	; (80027b4 <_ZN15Screen1ViewBaseC1Ev+0x1a4>)
 800278a:	21b2      	movs	r1, #178	; 0xb2
 800278c:	e7f4      	b.n	8002778 <_ZN15Screen1ViewBaseC1Ev+0x168>
 800278e:	bf00      	nop
 8002790:	0801b7b4 	.word	0x0801b7b4
 8002794:	0801c6c8 	.word	0x0801c6c8
 8002798:	0801c880 	.word	0x0801c880
 800279c:	0801b620 	.word	0x0801b620
 80027a0:	08002427 	.word	0x08002427
 80027a4:	0801b638 	.word	0x0801b638
 80027a8:	08002437 	.word	0x08002437
 80027ac:	200121ec 	.word	0x200121ec
 80027b0:	0801b648 	.word	0x0801b648
 80027b4:	0801b848 	.word	0x0801b848
 80027b8:	0801b68a 	.word	0x0801b68a
 80027bc:	200121f0 	.word	0x200121f0
 80027c0:	0801b6d1 	.word	0x0801b6d1
        return texts->getText(typedTextId);
 80027c4:	4b9e      	ldr	r3, [pc, #632]	; (8002a40 <_ZN15Screen1ViewBaseC1Ev+0x430>)
 80027c6:	2104      	movs	r1, #4
 80027c8:	6818      	ldr	r0, [r3, #0]
 80027ca:	f000 fa83 	bl	8002cd4 <_ZNK8touchgfx5Texts7getTextEt>
 80027ce:	4a9d      	ldr	r2, [pc, #628]	; (8002a44 <_ZN15Screen1ViewBaseC1Ev+0x434>)
 80027d0:	4603      	mov	r3, r0
 80027d2:	2114      	movs	r1, #20
 80027d4:	4638      	mov	r0, r7
 80027d6:	f00b fbbd 	bl	800df54 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
    {
        wildcard = value;
 80027da:	f8c4 7114 	str.w	r7, [r4, #276]	; 0x114
    textArea1.resizeToCurrentText();
 80027de:	9804      	ldr	r0, [sp, #16]
 80027e0:	f007 fe94 	bl	800a50c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80027e4:	4b98      	ldr	r3, [pc, #608]	; (8002a48 <_ZN15Screen1ViewBaseC1Ev+0x438>)
 80027e6:	930e      	str	r3, [sp, #56]	; 0x38
        borderBox.setPosition(x, y, width, height);
 80027e8:	271e      	movs	r7, #30
 80027ea:	2303      	movs	r3, #3
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID8));
 80027ec:	4631      	mov	r1, r6
 80027ee:	9804      	ldr	r0, [sp, #16]
 80027f0:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 80027f4:	f007 feb4 	bl	800a560 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
 80027f8:	2332      	movs	r3, #50	; 0x32
 80027fa:	462a      	mov	r2, r5
 80027fc:	4629      	mov	r1, r5
 80027fe:	f504 70a6 	add.w	r0, r4, #332	; 0x14c
 8002802:	9700      	str	r7, [sp, #0]
 8002804:	f7ff fd34 	bl	8002270 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderSize = size;
 8002808:	f04f 0205 	mov.w	r2, #5
 800280c:	f884 217c 	strb.w	r2, [r4, #380]	; 0x17c
    FlexBtDown.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
 8002810:	2166      	movs	r1, #102	; 0x66
 8002812:	2299      	movs	r2, #153	; 0x99
 8002814:	4628      	mov	r0, r5
 8002816:	f7ff fe93 	bl	8002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800281a:	22cc      	movs	r2, #204	; 0xcc
 800281c:	900a      	str	r0, [sp, #40]	; 0x28
 800281e:	2199      	movs	r1, #153	; 0x99
 8002820:	4628      	mov	r0, r5
 8002822:	f7ff fe8d 	bl	8002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8002826:	2266      	movs	r2, #102	; 0x66
 8002828:	4682      	mov	sl, r0
 800282a:	2133      	movs	r1, #51	; 0x33
 800282c:	4628      	mov	r0, r5
 800282e:	f7ff fe87 	bl	8002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8002832:	2299      	movs	r2, #153	; 0x99
 8002834:	4681      	mov	r9, r0
 8002836:	2166      	movs	r1, #102	; 0x66
 8002838:	2033      	movs	r0, #51	; 0x33
 800283a:	f7ff fe81 	bl	8002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        up = colorReleased;
 800283e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002840:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
        handlePressedUpdated();
 8002844:	f8d4 3118 	ldr.w	r3, [r4, #280]	; 0x118
        down = colorPressed;
 8002848:	f8c4 a184 	str.w	sl, [r4, #388]	; 0x184
        borderUp = borderColorReleased;
 800284c:	f8c4 9188 	str.w	r9, [r4, #392]	; 0x188
        borderDown = borderColorPressed;
 8002850:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
        text.setTypedText(t);
 8002854:	f504 79c8 	add.w	r9, r4, #400	; 0x190
        handlePressedUpdated();
 8002858:	9805      	ldr	r0, [sp, #20]
 800285a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800285e:	4798      	blx	r3
class TypedText
 8002860:	4b79      	ldr	r3, [pc, #484]	; (8002a48 <_ZN15Screen1ViewBaseC1Ev+0x438>)
 8002862:	930e      	str	r3, [sp, #56]	; 0x38
 8002864:	4631      	mov	r1, r6
 8002866:	4648      	mov	r0, r9
 8002868:	f8ad 503c 	strh.w	r5, [sp, #60]	; 0x3c
 800286c:	f007 fe78 	bl	800a560 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
        rect.width = width;
 8002870:	f8b4 3120 	ldrh.w	r3, [r4, #288]	; 0x120
 8002874:	f8a4 3198 	strh.w	r3, [r4, #408]	; 0x198
        rect.height = height;
 8002878:	f8b4 3122 	ldrh.w	r3, [r4, #290]	; 0x122
 800287c:	f8a4 319a 	strh.w	r3, [r4, #410]	; 0x19a
        text.setPosition(x, y, width, height);
 8002880:	462a      	mov	r2, r5
 8002882:	2332      	movs	r3, #50	; 0x32
 8002884:	4629      	mov	r1, r5
 8002886:	4648      	mov	r0, r9
 8002888:	9700      	str	r7, [sp, #0]
 800288a:	f7ff fcf1 	bl	8002270 <_ZN8touchgfx8Drawable11setPositionEssss>
    FlexBtDown.setTextColors(touchgfx::Color::getColorFrom24BitRGB(10, 10, 10), touchgfx::Color::getColorFrom24BitRGB(10, 10, 10));
 800288e:	220a      	movs	r2, #10
 8002890:	4611      	mov	r1, r2
 8002892:	4610      	mov	r0, r2
 8002894:	f7ff fe54 	bl	8002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8002898:	220a      	movs	r2, #10
 800289a:	4611      	mov	r1, r2
 800289c:	4681      	mov	r9, r0
 800289e:	4610      	mov	r0, r2
 80028a0:	f7ff fe4e 	bl	8002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        colorReleased = newColorReleased;
 80028a4:	f8c4 91cc 	str.w	r9, [r4, #460]	; 0x1cc
        colorPressed = newColorPressed;
 80028a8:	f8c4 01d0 	str.w	r0, [r4, #464]	; 0x1d0
        handlePressedUpdated();
 80028ac:	9805      	ldr	r0, [sp, #20]
 80028ae:	f7ff fd43 	bl	8002338 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    FlexBtDown.setAction(flexButtonCallback);
 80028b2:	f504 7950 	add.w	r9, r4, #832	; 0x340
    FlexBtDown.setPosition(48, 206, 50, 30);
 80028b6:	9805      	ldr	r0, [sp, #20]
 80028b8:	9700      	str	r7, [sp, #0]
 80028ba:	2332      	movs	r3, #50	; 0x32
 80028bc:	22ce      	movs	r2, #206	; 0xce
 80028be:	2130      	movs	r1, #48	; 0x30
 80028c0:	f7ff fcd6 	bl	8002270 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderBox.setPosition(x, y, width, height);
 80028c4:	2332      	movs	r3, #50	; 0x32
 80028c6:	462a      	mov	r2, r5
 80028c8:	4629      	mov	r1, r5
 80028ca:	f504 7002 	add.w	r0, r4, #520	; 0x208
     *
     * @param  callback The callback.
     */
    void setAction(GenericCallback<const AbstractButtonContainer&>& callback)
    {
        action = &callback;
 80028ce:	f8c4 9148 	str.w	r9, [r4, #328]	; 0x148
 80028d2:	9700      	str	r7, [sp, #0]
 80028d4:	f7ff fccc 	bl	8002270 <_ZN8touchgfx8Drawable11setPositionEssss>
 80028d8:	f04f 0205 	mov.w	r2, #5
 80028dc:	f884 2238 	strb.w	r2, [r4, #568]	; 0x238
    FlexBtUp.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(250, 2, 2), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
 80028e0:	2202      	movs	r2, #2
 80028e2:	4611      	mov	r1, r2
 80028e4:	20fa      	movs	r0, #250	; 0xfa
 80028e6:	f7ff fe2b 	bl	8002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80028ea:	22cc      	movs	r2, #204	; 0xcc
 80028ec:	900b      	str	r0, [sp, #44]	; 0x2c
 80028ee:	2199      	movs	r1, #153	; 0x99
 80028f0:	4628      	mov	r0, r5
 80028f2:	f7ff fe25 	bl	8002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80028f6:	2266      	movs	r2, #102	; 0x66
 80028f8:	900a      	str	r0, [sp, #40]	; 0x28
 80028fa:	2133      	movs	r1, #51	; 0x33
 80028fc:	4628      	mov	r0, r5
 80028fe:	f7ff fe1f 	bl	8002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8002902:	2166      	movs	r1, #102	; 0x66
 8002904:	4682      	mov	sl, r0
 8002906:	2299      	movs	r2, #153	; 0x99
 8002908:	2033      	movs	r0, #51	; 0x33
 800290a:	f7ff fe19 	bl	8002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        up = colorReleased;
 800290e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002910:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
        handlePressedUpdated();
 8002914:	f8d4 31d4 	ldr.w	r3, [r4, #468]	; 0x1d4
        down = colorPressed;
 8002918:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800291a:	f8c4 2240 	str.w	r2, [r4, #576]	; 0x240
        borderUp = borderColorReleased;
 800291e:	f8c4 a244 	str.w	sl, [r4, #580]	; 0x244
        borderDown = borderColorPressed;
 8002922:	f8c4 0248 	str.w	r0, [r4, #584]	; 0x248
        text.setTypedText(t);
 8002926:	f504 7a13 	add.w	sl, r4, #588	; 0x24c
        handlePressedUpdated();
 800292a:	4658      	mov	r0, fp
 800292c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8002930:	4798      	blx	r3
 8002932:	4b45      	ldr	r3, [pc, #276]	; (8002a48 <_ZN15Screen1ViewBaseC1Ev+0x438>)
 8002934:	930e      	str	r3, [sp, #56]	; 0x38
 8002936:	4631      	mov	r1, r6
 8002938:	4650      	mov	r0, sl
 800293a:	f8ad 803c 	strh.w	r8, [sp, #60]	; 0x3c
 800293e:	f007 fe0f 	bl	800a560 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
        rect.width = width;
 8002942:	f8b4 31dc 	ldrh.w	r3, [r4, #476]	; 0x1dc
 8002946:	f8a4 3254 	strh.w	r3, [r4, #596]	; 0x254
        rect.height = height;
 800294a:	f8b4 31de 	ldrh.w	r3, [r4, #478]	; 0x1de
 800294e:	f8a4 3256 	strh.w	r3, [r4, #598]	; 0x256
        text.setPosition(x, y, width, height);
 8002952:	462a      	mov	r2, r5
 8002954:	2332      	movs	r3, #50	; 0x32
 8002956:	4629      	mov	r1, r5
 8002958:	4650      	mov	r0, sl
 800295a:	9700      	str	r7, [sp, #0]
 800295c:	f7ff fc88 	bl	8002270 <_ZN8touchgfx8Drawable11setPositionEssss>
    FlexBtUp.setTextColors(touchgfx::Color::getColorFrom24BitRGB(10, 10, 10), touchgfx::Color::getColorFrom24BitRGB(10, 10, 10));
 8002960:	220a      	movs	r2, #10
 8002962:	4611      	mov	r1, r2
 8002964:	4610      	mov	r0, r2
 8002966:	f7ff fdeb 	bl	8002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800296a:	220a      	movs	r2, #10
 800296c:	4611      	mov	r1, r2
 800296e:	4680      	mov	r8, r0
 8002970:	4610      	mov	r0, r2
 8002972:	f7ff fde5 	bl	8002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        colorReleased = newColorReleased;
 8002976:	f8c4 8288 	str.w	r8, [r4, #648]	; 0x288
        colorPressed = newColorPressed;
 800297a:	f8c4 028c 	str.w	r0, [r4, #652]	; 0x28c
        handlePressedUpdated();
 800297e:	4658      	mov	r0, fp
 8002980:	f7ff fcda 	bl	8002338 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    FlexBtUp.setPosition(133, 206, 50, 30);
 8002984:	2332      	movs	r3, #50	; 0x32
 8002986:	4658      	mov	r0, fp
 8002988:	9700      	str	r7, [sp, #0]
 800298a:	22ce      	movs	r2, #206	; 0xce
 800298c:	2185      	movs	r1, #133	; 0x85
 800298e:	f7ff fc6f 	bl	8002270 <_ZN8touchgfx8Drawable11setPositionEssss>
    textArea1_1.setXY(30, 101);
 8002992:	4639      	mov	r1, r7
 8002994:	9806      	ldr	r0, [sp, #24]
 8002996:	f8c4 9204 	str.w	r9, [r4, #516]	; 0x204
 800299a:	2265      	movs	r2, #101	; 0x65
 800299c:	f7ff fc80 	bl	80022a0 <_ZN8touchgfx8Drawable5setXYEss>
    textArea1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 80029a0:	462a      	mov	r2, r5
 80029a2:	4629      	mov	r1, r5
 80029a4:	4628      	mov	r0, r5
 80029a6:	f7ff fdcb 	bl	8002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
        : typedTextId(id)
 80029aa:	4b27      	ldr	r3, [pc, #156]	; (8002a48 <_ZN15Screen1ViewBaseC1Ev+0x438>)
        this->color = color;
 80029ac:	f8c4 02c0 	str.w	r0, [r4, #704]	; 0x2c0
        linespace = space;
 80029b0:	f8a4 52c4 	strh.w	r5, [r4, #708]	; 0x2c4
 80029b4:	930e      	str	r3, [sp, #56]	; 0x38
    textArea1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4));
 80029b6:	4631      	mov	r1, r6
 80029b8:	2302      	movs	r3, #2
 80029ba:	9806      	ldr	r0, [sp, #24]
 80029bc:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 80029c0:	f007 fdce 	bl	800a560 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    textArea1_1_1.setXY(48, 30);
 80029c4:	463a      	mov	r2, r7
 80029c6:	9807      	ldr	r0, [sp, #28]
 80029c8:	2130      	movs	r1, #48	; 0x30
 80029ca:	f7ff fc69 	bl	80022a0 <_ZN8touchgfx8Drawable5setXYEss>
    textArea1_1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 80029ce:	462a      	mov	r2, r5
 80029d0:	4629      	mov	r1, r5
 80029d2:	4628      	mov	r0, r5
 80029d4:	f7ff fdb4 	bl	8002540 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 80029d8:	4b1b      	ldr	r3, [pc, #108]	; (8002a48 <_ZN15Screen1ViewBaseC1Ev+0x438>)
        this->color = color;
 80029da:	f8c4 02fc 	str.w	r0, [r4, #764]	; 0x2fc
        linespace = space;
 80029de:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
 80029e2:	930e      	str	r3, [sp, #56]	; 0x38
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80029e4:	1d25      	adds	r5, r4, #4
 80029e6:	f04f 0305 	mov.w	r3, #5
    textArea1_1_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID10));
 80029ea:	4631      	mov	r1, r6
 80029ec:	9807      	ldr	r0, [sp, #28]
 80029ee:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 80029f2:	f007 fdb5 	bl	800a560 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
 80029f6:	9908      	ldr	r1, [sp, #32]
 80029f8:	4628      	mov	r0, r5
 80029fa:	f006 fbb9 	bl	8009170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80029fe:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002a00:	4628      	mov	r0, r5
 8002a02:	f006 fbb5 	bl	8009170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002a06:	9903      	ldr	r1, [sp, #12]
 8002a08:	4628      	mov	r0, r5
 8002a0a:	f006 fbb1 	bl	8009170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002a0e:	9904      	ldr	r1, [sp, #16]
 8002a10:	4628      	mov	r0, r5
 8002a12:	f006 fbad 	bl	8009170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002a16:	9905      	ldr	r1, [sp, #20]
 8002a18:	4628      	mov	r0, r5
 8002a1a:	f006 fba9 	bl	8009170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002a1e:	4659      	mov	r1, fp
 8002a20:	4628      	mov	r0, r5
 8002a22:	f006 fba5 	bl	8009170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002a26:	9906      	ldr	r1, [sp, #24]
 8002a28:	4628      	mov	r0, r5
 8002a2a:	f006 fba1 	bl	8009170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002a2e:	4628      	mov	r0, r5
 8002a30:	9907      	ldr	r1, [sp, #28]
 8002a32:	f006 fb9d 	bl	8009170 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002a36:	4620      	mov	r0, r4
 8002a38:	b011      	add	sp, #68	; 0x44
 8002a3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002a3e:	bf00      	nop
 8002a40:	200121f8 	.word	0x200121f8
 8002a44:	0801b723 	.word	0x0801b723
 8002a48:	0801b0f4 	.word	0x0801b0f4

08002a4c <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8002a4c:	4770      	bx	lr
	...

08002a50 <_Z23getFont_verdana_10_4bppv>:
{
 8002a50:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8002a52:	4d11      	ldr	r5, [pc, #68]	; (8002a98 <_Z23getFont_verdana_10_4bppv+0x48>)
 8002a54:	682b      	ldr	r3, [r5, #0]
 8002a56:	f013 0301 	ands.w	r3, r3, #1
{
 8002a5a:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8002a5c:	d118      	bne.n	8002a90 <_Z23getFont_verdana_10_4bppv+0x40>
 8002a5e:	223f      	movs	r2, #63	; 0x3f
 8002a60:	9207      	str	r2, [sp, #28]
 8002a62:	4a0e      	ldr	r2, [pc, #56]	; (8002a9c <_Z23getFont_verdana_10_4bppv+0x4c>)
 8002a64:	9206      	str	r2, [sp, #24]
 8002a66:	4a0e      	ldr	r2, [pc, #56]	; (8002aa0 <_Z23getFont_verdana_10_4bppv+0x50>)
 8002a68:	9303      	str	r3, [sp, #12]
 8002a6a:	e9cd 3204 	strd	r3, r2, [sp, #16]
 8002a6e:	2401      	movs	r4, #1
 8002a70:	2204      	movs	r2, #4
 8002a72:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8002a76:	e9cd 2401 	strd	r2, r4, [sp, #4]
 8002a7a:	9300      	str	r3, [sp, #0]
 8002a7c:	4622      	mov	r2, r4
 8002a7e:	230a      	movs	r3, #10
 8002a80:	4908      	ldr	r1, [pc, #32]	; (8002aa4 <_Z23getFont_verdana_10_4bppv+0x54>)
 8002a82:	4809      	ldr	r0, [pc, #36]	; (8002aa8 <_Z23getFont_verdana_10_4bppv+0x58>)
 8002a84:	f7ff fbcc 	bl	8002220 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002a88:	4808      	ldr	r0, [pc, #32]	; (8002aac <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002a8a:	602c      	str	r4, [r5, #0]
 8002a8c:	f017 f826 	bl	8019adc <atexit>
    return verdana_10_4bpp;
}
 8002a90:	4805      	ldr	r0, [pc, #20]	; (8002aa8 <_Z23getFont_verdana_10_4bppv+0x58>)
 8002a92:	b00b      	add	sp, #44	; 0x2c
 8002a94:	bd30      	pop	{r4, r5, pc}
 8002a96:	bf00      	nop
 8002a98:	200013c4 	.word	0x200013c4
 8002a9c:	0801e9f4 	.word	0x0801e9f4
 8002aa0:	0801b878 	.word	0x0801b878
 8002aa4:	0801e830 	.word	0x0801e830
 8002aa8:	200013c8 	.word	0x200013c8
 8002aac:	08002a4d 	.word	0x08002a4d

08002ab0 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 30, 20, 4, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8002ab0:	4770      	bx	lr
	...

08002ab4 <_Z23getFont_verdana_20_4bppv>:
{
 8002ab4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 30, 20, 4, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8002ab6:	4c11      	ldr	r4, [pc, #68]	; (8002afc <_Z23getFont_verdana_20_4bppv+0x48>)
 8002ab8:	6823      	ldr	r3, [r4, #0]
 8002aba:	f013 0301 	ands.w	r3, r3, #1
{
 8002abe:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 30, 20, 4, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 8002ac0:	d118      	bne.n	8002af4 <_Z23getFont_verdana_20_4bppv+0x40>
 8002ac2:	223f      	movs	r2, #63	; 0x3f
 8002ac4:	9207      	str	r2, [sp, #28]
 8002ac6:	4a0e      	ldr	r2, [pc, #56]	; (8002b00 <_Z23getFont_verdana_20_4bppv+0x4c>)
 8002ac8:	9206      	str	r2, [sp, #24]
 8002aca:	4a0e      	ldr	r2, [pc, #56]	; (8002b04 <_Z23getFont_verdana_20_4bppv+0x50>)
 8002acc:	9303      	str	r3, [sp, #12]
 8002ace:	e9cd 3204 	strd	r3, r2, [sp, #16]
 8002ad2:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8002ad6:	2501      	movs	r5, #1
 8002ad8:	2304      	movs	r3, #4
 8002ada:	e9cd 3501 	strd	r3, r5, [sp, #4]
 8002ade:	9300      	str	r3, [sp, #0]
 8002ae0:	221e      	movs	r2, #30
 8002ae2:	2314      	movs	r3, #20
 8002ae4:	4908      	ldr	r1, [pc, #32]	; (8002b08 <_Z23getFont_verdana_20_4bppv+0x54>)
 8002ae6:	4809      	ldr	r0, [pc, #36]	; (8002b0c <_Z23getFont_verdana_20_4bppv+0x58>)
 8002ae8:	f7ff fb9a 	bl	8002220 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002aec:	4808      	ldr	r0, [pc, #32]	; (8002b10 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8002aee:	6025      	str	r5, [r4, #0]
 8002af0:	f016 fff4 	bl	8019adc <atexit>
    return verdana_20_4bpp;
}
 8002af4:	4805      	ldr	r0, [pc, #20]	; (8002b0c <_Z23getFont_verdana_20_4bppv+0x58>)
 8002af6:	b00b      	add	sp, #44	; 0x2c
 8002af8:	bd30      	pop	{r4, r5, pc}
 8002afa:	bf00      	nop
 8002afc:	200013ec 	.word	0x200013ec
 8002b00:	0801e9f8 	.word	0x0801e9f8
 8002b04:	0801b87c 	.word	0x0801b87c
 8002b08:	0801e840 	.word	0x0801e840
 8002b0c:	200013f0 	.word	0x200013f0
 8002b10:	08002ab1 	.word	0x08002ab1

08002b14 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002b14:	4770      	bx	lr
	...

08002b18 <_Z23getFont_verdana_40_4bppv>:
{
 8002b18:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002b1a:	4d11      	ldr	r5, [pc, #68]	; (8002b60 <_Z23getFont_verdana_40_4bppv+0x48>)
 8002b1c:	682b      	ldr	r3, [r5, #0]
 8002b1e:	f013 0301 	ands.w	r3, r3, #1
{
 8002b22:	b08b      	sub	sp, #44	; 0x2c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8002b24:	d118      	bne.n	8002b58 <_Z23getFont_verdana_40_4bppv+0x40>
 8002b26:	223f      	movs	r2, #63	; 0x3f
 8002b28:	9207      	str	r2, [sp, #28]
 8002b2a:	4a0e      	ldr	r2, [pc, #56]	; (8002b64 <_Z23getFont_verdana_40_4bppv+0x4c>)
 8002b2c:	9206      	str	r2, [sp, #24]
 8002b2e:	4a0e      	ldr	r2, [pc, #56]	; (8002b68 <_Z23getFont_verdana_40_4bppv+0x50>)
 8002b30:	9303      	str	r3, [sp, #12]
 8002b32:	e9cd 3204 	strd	r3, r2, [sp, #16]
 8002b36:	2401      	movs	r4, #1
 8002b38:	2204      	movs	r2, #4
 8002b3a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8002b3e:	e9cd 2401 	strd	r2, r4, [sp, #4]
 8002b42:	9300      	str	r3, [sp, #0]
 8002b44:	4622      	mov	r2, r4
 8002b46:	2328      	movs	r3, #40	; 0x28
 8002b48:	4908      	ldr	r1, [pc, #32]	; (8002b6c <_Z23getFont_verdana_40_4bppv+0x54>)
 8002b4a:	4809      	ldr	r0, [pc, #36]	; (8002b70 <_Z23getFont_verdana_40_4bppv+0x58>)
 8002b4c:	f7ff fb68 	bl	8002220 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8002b50:	4808      	ldr	r0, [pc, #32]	; (8002b74 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002b52:	602c      	str	r4, [r5, #0]
 8002b54:	f016 ffc2 	bl	8019adc <atexit>
    return verdana_40_4bpp;
}
 8002b58:	4805      	ldr	r0, [pc, #20]	; (8002b70 <_Z23getFont_verdana_40_4bppv+0x58>)
 8002b5a:	b00b      	add	sp, #44	; 0x2c
 8002b5c:	bd30      	pop	{r4, r5, pc}
 8002b5e:	bf00      	nop
 8002b60:	20001414 	.word	0x20001414
 8002b64:	0801e9fc 	.word	0x0801e9fc
 8002b68:	0801b880 	.word	0x0801b880
 8002b6c:	0801e9e4 	.word	0x0801e9e4
 8002b70:	20001418 	.word	0x20001418
 8002b74:	08002b15 	.word	0x08002b15

08002b78 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8002b78:	2000      	movs	r0, #0
 8002b7a:	4770      	bx	lr

08002b7c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002b7c:	b40e      	push	{r1, r2, r3}
 8002b7e:	b503      	push	{r0, r1, lr}
 8002b80:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002b82:	2100      	movs	r1, #0
{
 8002b84:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002b88:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002b8a:	f009 fb23 	bl	800c1d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002b8e:	b002      	add	sp, #8
 8002b90:	f85d eb04 	ldr.w	lr, [sp], #4
 8002b94:	b003      	add	sp, #12
 8002b96:	4770      	bx	lr

08002b98 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002b98:	b40c      	push	{r2, r3}
 8002b9a:	b507      	push	{r0, r1, r2, lr}
 8002b9c:	ab04      	add	r3, sp, #16
 8002b9e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002ba2:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002ba4:	f009 fb16 	bl	800c1d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002ba8:	b003      	add	sp, #12
 8002baa:	f85d eb04 	ldr.w	lr, [sp], #4
 8002bae:	b002      	add	sp, #8
 8002bb0:	4770      	bx	lr
	...

08002bb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002bb4:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 8002bb6:	b510      	push	{r4, lr}
 8002bb8:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002bba:	b373      	cbz	r3, 8002c1a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002bbc:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8002bbe:	b92b      	cbnz	r3, 8002bcc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002bc0:	4b18      	ldr	r3, [pc, #96]	; (8002c24 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002bc2:	4a19      	ldr	r2, [pc, #100]	; (8002c28 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002bc4:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002bc6:	4819      	ldr	r0, [pc, #100]	; (8002c2c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002bc8:	f016 ff6a 	bl	8019aa0 <__assert_func>
            return buffer[pos];
 8002bcc:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8002bce:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002bd2:	8b5b      	ldrh	r3, [r3, #26]
 8002bd4:	b30b      	cbz	r3, 8002c1a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002bd6:	f00a fe1b 	bl	800d810 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002bda:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8002bdc:	2b01      	cmp	r3, #1
 8002bde:	d803      	bhi.n	8002be8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002be0:	4b13      	ldr	r3, [pc, #76]	; (8002c30 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002be2:	4a14      	ldr	r2, [pc, #80]	; (8002c34 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002be4:	21c5      	movs	r1, #197	; 0xc5
 8002be6:	e7ee      	b.n	8002bc6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002be8:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 8002bea:	1c53      	adds	r3, r2, #1
 8002bec:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002bee:	2b09      	cmp	r3, #9
 8002bf0:	4619      	mov	r1, r3
 8002bf2:	bf88      	it	hi
 8002bf4:	f1a3 010a 	subhi.w	r1, r3, #10
 8002bf8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 8002bfc:	f640 103f 	movw	r0, #2367	; 0x93f
 8002c00:	8b49      	ldrh	r1, [r1, #26]
 8002c02:	4281      	cmp	r1, r0
 8002c04:	d109      	bne.n	8002c1a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002c06:	2b0a      	cmp	r3, #10
 8002c08:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002c0c:	bf28      	it	cs
 8002c0e:	2300      	movcs	r3, #0
 8002c10:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002c14:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 8002c16:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 8002c18:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002c1a:	4620      	mov	r0, r4
}
 8002c1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002c20:	f00a bcda 	b.w	800d5d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002c24:	0801b884 	.word	0x0801b884
 8002c28:	0801b9b7 	.word	0x0801b9b7
 8002c2c:	0801b88d 	.word	0x0801b88d
 8002c30:	0801b8d7 	.word	0x0801b8d7
 8002c34:	0801b8e5 	.word	0x0801b8e5

08002c38 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002c38:	f00a bc88 	b.w	800d54c <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002c3c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8002c3c:	b510      	push	{r4, lr}
 8002c3e:	b086      	sub	sp, #24
 8002c40:	ac02      	add	r4, sp, #8
 8002c42:	e884 0006 	stmia.w	r4, {r1, r2}
 8002c46:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8002c48:	ab0a      	add	r3, sp, #40	; 0x28
 8002c4a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8002c4c:	9301      	str	r3, [sp, #4]
 8002c4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002c50:	9300      	str	r3, [sp, #0]
 8002c52:	4621      	mov	r1, r4
 8002c54:	9b08      	ldr	r3, [sp, #32]
 8002c56:	f008 fb06 	bl	800b266 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8002c5a:	b006      	add	sp, #24
 8002c5c:	bd10      	pop	{r4, pc}
	...

08002c60 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002c60:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002c62:	b9d8      	cbnz	r0, 8002c9c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        if (languagesArray[id] != 0)
 8002c64:	4b11      	ldr	r3, [pc, #68]	; (8002cac <_ZN8touchgfx5Texts11setLanguageEt+0x4c>)
 8002c66:	4812      	ldr	r0, [pc, #72]	; (8002cb0 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002c68:	681b      	ldr	r3, [r3, #0]
 8002c6a:	4912      	ldr	r1, [pc, #72]	; (8002cb4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002c6c:	b1bb      	cbz	r3, 8002c9e <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002c6e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002c70:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002c72:	441a      	add	r2, r3
 8002c74:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8002c76:	685a      	ldr	r2, [r3, #4]
 8002c78:	441a      	add	r2, r3
 8002c7a:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002c7c:	441c      	add	r4, r3
            currentLanguageIndices = staticLanguageIndices[id];
            currentLanguageTypedText = typedTextDatabaseArray[id];
        }
    }

    if (currentLanguageTypedText)
 8002c7e:	b16c      	cbz	r4, 8002c9c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
    {
        currentLanguage = id;
 8002c80:	4b0d      	ldr	r3, [pc, #52]	; (8002cb8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002c82:	2200      	movs	r2, #0
 8002c84:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002c86:	f000 f835 	bl	8002cf4 <_ZN17TypedTextDatabase8getFontsEv>
 8002c8a:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002c8c:	f000 f830 	bl	8002cf0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002c90:	4b0a      	ldr	r3, [pc, #40]	; (8002cbc <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002c92:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002c94:	4b0a      	ldr	r3, [pc, #40]	; (8002cc0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002c96:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002c98:	4b0a      	ldr	r3, [pc, #40]	; (8002cc4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002c9a:	8018      	strh	r0, [r3, #0]
    }
}
 8002c9c:	bd38      	pop	{r3, r4, r5, pc}
            currentLanguagePtr = texts_all_languages;
 8002c9e:	4b0a      	ldr	r3, [pc, #40]	; (8002cc8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002ca0:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002ca2:	4b0a      	ldr	r3, [pc, #40]	; (8002ccc <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002ca4:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002ca6:	4b0a      	ldr	r3, [pc, #40]	; (8002cd0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002ca8:	681c      	ldr	r4, [r3, #0]
 8002caa:	e7e8      	b.n	8002c7e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
 8002cac:	2000143c 	.word	0x2000143c
 8002cb0:	20001440 	.word	0x20001440
 8002cb4:	20001444 	.word	0x20001444
 8002cb8:	20001448 	.word	0x20001448
 8002cbc:	200121ec 	.word	0x200121ec
 8002cc0:	200121f4 	.word	0x200121f4
 8002cc4:	200121f0 	.word	0x200121f0
 8002cc8:	0801ea18 	.word	0x0801ea18
 8002ccc:	0801ea00 	.word	0x0801ea00
 8002cd0:	0801ea78 	.word	0x0801ea78

08002cd4 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8002cd4:	4b04      	ldr	r3, [pc, #16]	; (8002ce8 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8002cd6:	681b      	ldr	r3, [r3, #0]
 8002cd8:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8002cdc:	4b03      	ldr	r3, [pc, #12]	; (8002cec <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8002cde:	681b      	ldr	r3, [r3, #0]
}
 8002ce0:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002ce4:	4770      	bx	lr
 8002ce6:	bf00      	nop
 8002ce8:	20001444 	.word	0x20001444
 8002cec:	20001440 	.word	0x20001440

08002cf0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8002cf0:	2006      	movs	r0, #6
 8002cf2:	4770      	bx	lr

08002cf4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002cf4:	4800      	ldr	r0, [pc, #0]	; (8002cf8 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8002cf6:	4770      	bx	lr
 8002cf8:	2000144c 	.word	0x2000144c

08002cfc <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 8002cfc:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8002cfe:	f7ff fed9 	bl	8002ab4 <_Z23getFont_verdana_20_4bppv>
};
 8002d02:	4c04      	ldr	r4, [pc, #16]	; (8002d14 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8002d04:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8002d06:	f7ff ff07 	bl	8002b18 <_Z23getFont_verdana_40_4bppv>
};
 8002d0a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8002d0c:	f7ff fea0 	bl	8002a50 <_Z23getFont_verdana_10_4bppv>
};
 8002d10:	60a0      	str	r0, [r4, #8]
}  // namespace TypedTextDatabase
 8002d12:	bd10      	pop	{r4, pc}
 8002d14:	2000144c 	.word	0x2000144c

08002d18 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002d18:	4770      	bx	lr

08002d1a <_ZN19FrontendApplicationD0Ev>:
 8002d1a:	b510      	push	{r4, lr}
 8002d1c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002d20:	4604      	mov	r4, r0
 8002d22:	f016 fe91 	bl	8019a48 <_ZdlPvj>
 8002d26:	4620      	mov	r0, r4
 8002d28:	bd10      	pop	{r4, pc}

08002d2a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002d2a:	b510      	push	{r4, lr}
 8002d2c:	4604      	mov	r4, r0
    {
        model.tick();
 8002d2e:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8002d32:	f000 f85d 	bl	8002df0 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002d36:	4620      	mov	r0, r4
    }
 8002d38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002d3c:	f008 bd5c 	b.w	800b7f8 <_ZN8touchgfx11Application15handleTickEventEv>

08002d40 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002d40:	b510      	push	{r4, lr}
 8002d42:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8002d44:	f7ff f940 	bl	8001fc8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002d48:	4b01      	ldr	r3, [pc, #4]	; (8002d50 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8002d4a:	6023      	str	r3, [r4, #0]
{

}
 8002d4c:	4620      	mov	r0, r4
 8002d4e:	bd10      	pop	{r4, pc}
 8002d50:	0801ba6c 	.word	0x0801ba6c

08002d54 <_ZN5Model18LedToggleRequestedEb>:
	//xSemaphoreGive((QueueHandle_t)ModbusH.ModBusSphrHandle);

}

void Model::LedToggleRequested(bool value)
{
 8002d54:	b084      	sub	sp, #16
	modbus_t telegram[1];

	ModbusDATATX[0] = value;
 8002d56:	4b08      	ldr	r3, [pc, #32]	; (8002d78 <_ZN5Model18LedToggleRequestedEb+0x24>)
	//xSemaphoreTake((QueueHandle_t)ModbusH.ModBusSphrHandle , portMAX_DELAY);
	telegram[0].u8id = 1; // slave address
	telegram[0].u8fct = MB_FC_WRITE_COIL; // function code (this one is registers write)
	telegram[0].u16RegAdd = 0x0;
	telegram[0].u16CoilsNo = 1; // number of elements (coils or registers) to read
	telegram[0].au16reg = ModbusDATATX; // pointer to a memory array
 8002d58:	9303      	str	r3, [sp, #12]
	telegram[0].u8id = 1; // slave address
 8002d5a:	f240 5201 	movw	r2, #1281	; 0x501
 8002d5e:	9201      	str	r2, [sp, #4]
	telegram[0].u16RegAdd = 0x0;
 8002d60:	2201      	movs	r2, #1
	ModbusDATATX[0] = value;
 8002d62:	8019      	strh	r1, [r3, #0]
	telegram[0].u16RegAdd = 0x0;
 8002d64:	f8ad 2008 	strh.w	r2, [sp, #8]
	//xSemaphoreGive((QueueHandle_t)ModbusH.ModBusSphrHandle);
	ModbusQueryInject(&ModbusH, telegram[0]);
 8002d68:	ab04      	add	r3, sp, #16
 8002d6a:	e913 000e 	ldmdb	r3, {r1, r2, r3}
 8002d6e:	4803      	ldr	r0, [pc, #12]	; (8002d7c <_ZN5Model18LedToggleRequestedEb+0x28>)



}
 8002d70:	b004      	add	sp, #16
	ModbusQueryInject(&ModbusH, telegram[0]);
 8002d72:	f000 bcb0 	b.w	80036d6 <ModbusQueryInject>
 8002d76:	bf00      	nop
 8002d78:	20012588 	.word	0x20012588
 8002d7c:	2001249c 	.word	0x2001249c

08002d80 <_ZN5Model14RegisterUpDownEi>:
{
 8002d80:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
	 if(xSemaphoreTake((QueueHandle_t)ModbusH.ModBusSphrHandle , 300)==pdTRUE)
 8002d82:	4d14      	ldr	r5, [pc, #80]	; (8002dd4 <_ZN5Model14RegisterUpDownEi+0x54>)
{
 8002d84:	4606      	mov	r6, r0
 8002d86:	460c      	mov	r4, r1
	 if(xSemaphoreTake((QueueHandle_t)ModbusH.ModBusSphrHandle , 300)==pdTRUE)
 8002d88:	f8d5 0088 	ldr.w	r0, [r5, #136]	; 0x88
 8002d8c:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8002d90:	f004 fec6 	bl	8007b20 <xQueueSemaphoreTake>
 8002d94:	2801      	cmp	r0, #1
 8002d96:	d11a      	bne.n	8002dce <_ZN5Model14RegisterUpDownEi+0x4e>
		 reg = reg + value;
 8002d98:	6931      	ldr	r1, [r6, #16]
		 ModbusDATATX[0] = reg;
 8002d9a:	4b0f      	ldr	r3, [pc, #60]	; (8002dd8 <_ZN5Model14RegisterUpDownEi+0x58>)
		 telegram[0].u16RegAdd = 0x0;
 8002d9c:	f8ad 0008 	strh.w	r0, [sp, #8]
		 reg = reg + value;
 8002da0:	4421      	add	r1, r4
		 telegram[0].u8id = 1; // slave address
 8002da2:	f240 6201 	movw	r2, #1537	; 0x601
		 telegram[0].au16reg = ModbusDATATX; // pointer to a memory array
 8002da6:	9303      	str	r3, [sp, #12]
		 ModbusDATATX[0] = reg;
 8002da8:	8019      	strh	r1, [r3, #0]
		 telegram[0].u8id = 1; // slave address
 8002daa:	9201      	str	r2, [sp, #4]
		 ModbusQueryInject(&ModbusH, telegram[0]);
 8002dac:	ab04      	add	r3, sp, #16
		 reg = reg + value;
 8002dae:	6131      	str	r1, [r6, #16]
		 ModbusQueryInject(&ModbusH, telegram[0]);
 8002db0:	4628      	mov	r0, r5
 8002db2:	e913 000e 	ldmdb	r3, {r1, r2, r3}
 8002db6:	f000 fc8e 	bl	80036d6 <ModbusQueryInject>
		 xSemaphoreGive((QueueHandle_t)ModbusH.ModBusSphrHandle);
 8002dba:	2300      	movs	r3, #0
 8002dbc:	f8d5 0088 	ldr.w	r0, [r5, #136]	; 0x88
 8002dc0:	461a      	mov	r2, r3
 8002dc2:	4619      	mov	r1, r3
}
 8002dc4:	b004      	add	sp, #16
 8002dc6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		 xSemaphoreGive((QueueHandle_t)ModbusH.ModBusSphrHandle);
 8002dca:	f004 bca1 	b.w	8007710 <xQueueGenericSend>
}
 8002dce:	b004      	add	sp, #16
 8002dd0:	bd70      	pop	{r4, r5, r6, pc}
 8002dd2:	bf00      	nop
 8002dd4:	2001249c 	.word	0x2001249c
 8002dd8:	20012588 	.word	0x20012588

08002ddc <_ZN5ModelC1Ev>:
Model::Model() : modelListener(0)
 8002ddc:	4a03      	ldr	r2, [pc, #12]	; (8002dec <_ZN5ModelC1Ev+0x10>)
 8002dde:	6002      	str	r2, [r0, #0]
 8002de0:	2200      	movs	r2, #0
 8002de2:	6042      	str	r2, [r0, #4]
 reg = 0;
 8002de4:	e9c0 2203 	strd	r2, r2, [r0, #12]
}
 8002de8:	4770      	bx	lr
 8002dea:	bf00      	nop
 8002dec:	0801bab0 	.word	0x0801bab0

08002df0 <_ZN5Model4tickEv>:
{
 8002df0:	b5f0      	push	{r4, r5, r6, r7, lr}
   if(counter>=10) // this is for slow down the frequency for reading variables
 8002df2:	68c3      	ldr	r3, [r0, #12]
 8002df4:	2b09      	cmp	r3, #9
{
 8002df6:	b085      	sub	sp, #20
 8002df8:	4604      	mov	r4, r0
   if(counter>=10) // this is for slow down the frequency for reading variables
 8002dfa:	dd25      	ble.n	8002e48 <_ZN5Model4tickEv+0x58>
	   counter = 0;
 8002dfc:	2700      	movs	r7, #0
	   if(xSemaphoreTake((QueueHandle_t)ModbusH.ModBusSphrHandle , 300)==pdTRUE)
 8002dfe:	4d15      	ldr	r5, [pc, #84]	; (8002e54 <_ZN5Model4tickEv+0x64>)
	   counter = 0;
 8002e00:	60c7      	str	r7, [r0, #12]
	   if(xSemaphoreTake((QueueHandle_t)ModbusH.ModBusSphrHandle , 300)==pdTRUE)
 8002e02:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8002e06:	f8d5 0088 	ldr.w	r0, [r5, #136]	; 0x88
 8002e0a:	f004 fe89 	bl	8007b20 <xQueueSemaphoreTake>
 8002e0e:	2801      	cmp	r0, #1
 8002e10:	d11a      	bne.n	8002e48 <_ZN5Model4tickEv+0x58>
	       telegram[0].au16reg = ModbusDATARX; // pointer to a memory array
 8002e12:	4e11      	ldr	r6, [pc, #68]	; (8002e58 <_ZN5Model4tickEv+0x68>)
	       telegram[0].u16RegAdd = 0x0;
 8002e14:	f8ad 0008 	strh.w	r0, [sp, #8]
	       telegram[0].u8id = 1; // slave address
 8002e18:	f240 3301 	movw	r3, #769	; 0x301
 8002e1c:	9301      	str	r3, [sp, #4]
	       telegram[0].au16reg = ModbusDATARX; // pointer to a memory array
 8002e1e:	9603      	str	r6, [sp, #12]
	       ModbusQuery(&ModbusH, telegram[0]);
 8002e20:	ab04      	add	r3, sp, #16
 8002e22:	e913 000e 	ldmdb	r3, {r1, r2, r3}
 8002e26:	4628      	mov	r0, r5
 8002e28:	f000 fc49 	bl	80036be <ModbusQuery>
		   modelListener->registerUpdate(ModbusDATARX[0]);
 8002e2c:	6860      	ldr	r0, [r4, #4]
 8002e2e:	8831      	ldrh	r1, [r6, #0]
 8002e30:	6803      	ldr	r3, [r0, #0]
 8002e32:	689b      	ldr	r3, [r3, #8]
 8002e34:	4798      	blx	r3
		   reg = ModbusDATARX[0];
 8002e36:	8833      	ldrh	r3, [r6, #0]
 8002e38:	6123      	str	r3, [r4, #16]
	       xSemaphoreGive((QueueHandle_t)ModbusH.ModBusSphrHandle);
 8002e3a:	463a      	mov	r2, r7
 8002e3c:	463b      	mov	r3, r7
 8002e3e:	4639      	mov	r1, r7
 8002e40:	f8d5 0088 	ldr.w	r0, [r5, #136]	; 0x88
 8002e44:	f004 fc64 	bl	8007710 <xQueueGenericSend>
   counter++;
 8002e48:	68e3      	ldr	r3, [r4, #12]
 8002e4a:	3301      	adds	r3, #1
 8002e4c:	60e3      	str	r3, [r4, #12]
}
 8002e4e:	b005      	add	sp, #20
 8002e50:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e52:	bf00      	nop
 8002e54:	2001249c 	.word	0x2001249c
 8002e58:	20012438 	.word	0x20012438

08002e5c <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8002e5c:	4770      	bx	lr

08002e5e <_ZThn4_N16Screen1PresenterD1Ev>:
 8002e5e:	3804      	subs	r0, #4
 8002e60:	4770      	bx	lr

08002e62 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8002e62:	4770      	bx	lr

08002e64 <_ZN16Screen1Presenter18LedToggleRequestedEb>:

}

void Screen1Presenter::LedToggleRequested(bool value)
{
	model->LedToggleRequested(value);
 8002e64:	6880      	ldr	r0, [r0, #8]
 8002e66:	6803      	ldr	r3, [r0, #0]
 8002e68:	681b      	ldr	r3, [r3, #0]
 8002e6a:	4718      	bx	r3

08002e6c <_ZN16Screen1Presenter14RegisterUpDownEi>:
}

void Screen1Presenter::RegisterUpDown(int value)
{
	model->RegisterUpDown(value);
 8002e6c:	6880      	ldr	r0, [r0, #8]
 8002e6e:	6803      	ldr	r3, [r0, #0]
 8002e70:	685b      	ldr	r3, [r3, #4]
 8002e72:	4718      	bx	r3

08002e74 <_ZN16Screen1Presenter14registerUpdateEi>:
}


void Screen1Presenter::registerUpdate(int value)
{
  view.registerUpdate(value);
 8002e74:	68c0      	ldr	r0, [r0, #12]
 8002e76:	6803      	ldr	r3, [r0, #0]
 8002e78:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002e7a:	4718      	bx	r3

08002e7c <_ZThn4_N16Screen1Presenter14registerUpdateEi>:

    virtual void LedToggleRequested(bool value);
    virtual void RegisterUpDown(int value);

    virtual void registerUpdate(int value);
 8002e7c:	f1a0 0004 	sub.w	r0, r0, #4
 8002e80:	f7ff bff8 	b.w	8002e74 <_ZN16Screen1Presenter14registerUpdateEi>

08002e84 <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 8002e84:	b510      	push	{r4, lr}
 8002e86:	2110      	movs	r1, #16
 8002e88:	4604      	mov	r4, r0
 8002e8a:	f016 fddd 	bl	8019a48 <_ZdlPvj>
 8002e8e:	4620      	mov	r0, r4
 8002e90:	bd10      	pop	{r4, pc}

08002e92 <_ZThn4_N16Screen1PresenterD0Ev>:
 8002e92:	f1a0 0004 	sub.w	r0, r0, #4
 8002e96:	e7f5      	b.n	8002e84 <_ZN16Screen1PresenterD0Ev>

08002e98 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8002e98:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8002e9a:	2200      	movs	r2, #0
 8002e9c:	6082      	str	r2, [r0, #8]
    : view(v)
 8002e9e:	4a04      	ldr	r2, [pc, #16]	; (8002eb0 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8002ea0:	60c1      	str	r1, [r0, #12]
 8002ea2:	f102 0408 	add.w	r4, r2, #8
 8002ea6:	322c      	adds	r2, #44	; 0x2c
 8002ea8:	6004      	str	r4, [r0, #0]
 8002eaa:	6042      	str	r2, [r0, #4]
}
 8002eac:	bd10      	pop	{r4, pc}
 8002eae:	bf00      	nop
 8002eb0:	0801bab8 	.word	0x0801bab8

08002eb4 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8002eb4:	4770      	bx	lr

08002eb6 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8002eb6:	4770      	bx	lr

08002eb8 <_ZN11Screen1View14functionBtDownEv>:
}


void Screen1View::functionBtDown()
{
	presenter->RegisterUpDown(-1);
 8002eb8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002eba:	6803      	ldr	r3, [r0, #0]
 8002ebc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002ec0:	695b      	ldr	r3, [r3, #20]
 8002ec2:	4718      	bx	r3

08002ec4 <_ZN11Screen1View12functionBtUpEv>:
}


void Screen1View::functionBtUp()
{
	presenter->RegisterUpDown(1);
 8002ec4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002ec6:	6803      	ldr	r3, [r0, #0]
 8002ec8:	2101      	movs	r1, #1
 8002eca:	695b      	ldr	r3, [r3, #20]
 8002ecc:	4718      	bx	r3

08002ece <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8002ece:	f7ff ba24 	b.w	800231a <_ZN15Screen1ViewBase11setupScreenEv>
	...

08002ed4 <_ZN11Screen1View14registerUpdateEi>:
}

void Screen1View::registerUpdate(int value)
{
 8002ed4:	b570      	push	{r4, r5, r6, lr}
	memset(&textArea1Buffer,0, TEXTAREA1_SIZE);
 8002ed6:	f500 7542 	add.w	r5, r0, #776	; 0x308
{
 8002eda:	4604      	mov	r4, r0
 8002edc:	460e      	mov	r6, r1
	memset(&textArea1Buffer,0, TEXTAREA1_SIZE);
 8002ede:	2214      	movs	r2, #20
 8002ee0:	2100      	movs	r1, #0
 8002ee2:	4628      	mov	r0, r5
 8002ee4:	f016 fe65 	bl	8019bb2 <memset>
	Unicode::snprintf(textArea1Buffer, sizeof(textArea1Buffer), "%d",value);
 8002ee8:	4633      	mov	r3, r6
 8002eea:	4628      	mov	r0, r5
 8002eec:	4a04      	ldr	r2, [pc, #16]	; (8002f00 <_ZN11Screen1View14registerUpdateEi+0x2c>)
 8002eee:	2128      	movs	r1, #40	; 0x28
 8002ef0:	f00b f830 	bl	800df54 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea1.invalidate();
 8002ef4:	f104 00d8 	add.w	r0, r4, #216	; 0xd8

}
 8002ef8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	textArea1.invalidate();
 8002efc:	f009 ba73 	b.w	800c3e6 <_ZNK8touchgfx8Drawable10invalidateEv>
 8002f00:	0801baf0 	.word	0x0801baf0

08002f04 <_ZN11Screen1ViewD0Ev>:
 8002f04:	b510      	push	{r4, lr}
 8002f06:	f44f 7154 	mov.w	r1, #848	; 0x350
 8002f0a:	4604      	mov	r4, r0
 8002f0c:	f016 fd9c 	bl	8019a48 <_ZdlPvj>
 8002f10:	4620      	mov	r0, r4
 8002f12:	bd10      	pop	{r4, pc}

08002f14 <_ZNK8touchgfx6Bitmap5getIdEv>:
    /**
     * Gets the id of this Bitmap.
     *
     * @return The id of this Bitmap.
     */
    BitmapId getId() const
 8002f14:	b508      	push	{r3, lr}
    {
        assert(bitmaps != 0 && "Bitmap database has not been initialized.");
 8002f16:	4b05      	ldr	r3, [pc, #20]	; (8002f2c <_ZNK8touchgfx6Bitmap5getIdEv+0x18>)
 8002f18:	681b      	ldr	r3, [r3, #0]
 8002f1a:	b92b      	cbnz	r3, 8002f28 <_ZNK8touchgfx6Bitmap5getIdEv+0x14>
 8002f1c:	4b04      	ldr	r3, [pc, #16]	; (8002f30 <_ZNK8touchgfx6Bitmap5getIdEv+0x1c>)
 8002f1e:	4a05      	ldr	r2, [pc, #20]	; (8002f34 <_ZNK8touchgfx6Bitmap5getIdEv+0x20>)
 8002f20:	4805      	ldr	r0, [pc, #20]	; (8002f38 <_ZNK8touchgfx6Bitmap5getIdEv+0x24>)
 8002f22:	2189      	movs	r1, #137	; 0x89
 8002f24:	f016 fdbc 	bl	8019aa0 <__assert_func>
        return bitmapId;
    }
 8002f28:	8800      	ldrh	r0, [r0, #0]
 8002f2a:	bd08      	pop	{r3, pc}
 8002f2c:	20012224 	.word	0x20012224
 8002f30:	0801baf3 	.word	0x0801baf3
 8002f34:	0801bbb8 	.word	0x0801bbb8
 8002f38:	0801bb2f 	.word	0x0801bb2f

08002f3c <_ZN11Screen1View17functionLedToggleEv>:
{
 8002f3c:	b570      	push	{r4, r5, r6, lr}
	presenter->LedToggleRequested(ToggleLed.getState()); //tell the presenter to update the model with the state of toggleLed
 8002f3e:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
{
 8002f40:	4604      	mov	r4, r0
     * @return True if the button has been toggled, i.e. the pressed state is shown when the
     *         button is not pressed.
     */
    bool getState() const
    {
        return up.getId() == originalPressed.getId();
 8002f42:	30ce      	adds	r0, #206	; 0xce
 8002f44:	f7ff ffe6 	bl	8002f14 <_ZNK8touchgfx6Bitmap5getIdEv>
 8002f48:	4606      	mov	r6, r0
 8002f4a:	f104 00d4 	add.w	r0, r4, #212	; 0xd4
 8002f4e:	f7ff ffe1 	bl	8002f14 <_ZNK8touchgfx6Bitmap5getIdEv>
	presenter->LedToggleRequested(ToggleLed.getState()); //tell the presenter to update the model with the state of toggleLed
 8002f52:	682b      	ldr	r3, [r5, #0]
 8002f54:	1a32      	subs	r2, r6, r0
 8002f56:	4251      	negs	r1, r2
 8002f58:	4628      	mov	r0, r5
 8002f5a:	691b      	ldr	r3, [r3, #16]
 8002f5c:	4151      	adcs	r1, r2
}
 8002f5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	presenter->LedToggleRequested(ToggleLed.getState()); //tell the presenter to update the model with the state of toggleLed
 8002f62:	4718      	bx	r3

08002f64 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8002f64:	b510      	push	{r4, lr}
 8002f66:	4604      	mov	r4, r0
 8002f68:	f7ff fb52 	bl	8002610 <_ZN15Screen1ViewBaseC1Ev>
 8002f6c:	4b01      	ldr	r3, [pc, #4]	; (8002f74 <_ZN11Screen1ViewC1Ev+0x10>)
 8002f6e:	6023      	str	r3, [r4, #0]
}
 8002f70:	4620      	mov	r0, r4
 8002f72:	bd10      	pop	{r4, pc}
 8002f74:	0801bb7c 	.word	0x0801bb7c

08002f78 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8002f78:	20f0      	movs	r0, #240	; 0xf0
 8002f7a:	4770      	bx	lr

08002f7c <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8002f7c:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8002f80:	4770      	bx	lr

08002f82 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8002f82:	2029      	movs	r0, #41	; 0x29
 8002f84:	f7fe bbfe 	b.w	8001784 <LCD_IO_WriteReg>

08002f88 <ili9341_DisplayOff>:
 8002f88:	2028      	movs	r0, #40	; 0x28
 8002f8a:	f7fe bbfb 	b.w	8001784 <LCD_IO_WriteReg>

08002f8e <ili9341_Init>:
{
 8002f8e:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8002f90:	f7fe fbcc 	bl	800172c <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8002f94:	20ca      	movs	r0, #202	; 0xca
 8002f96:	f7fe fbf5 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002f9a:	20c3      	movs	r0, #195	; 0xc3
 8002f9c:	f7fe fbd6 	bl	800174c <LCD_IO_WriteData>
 8002fa0:	2008      	movs	r0, #8
 8002fa2:	f7fe fbd3 	bl	800174c <LCD_IO_WriteData>
 8002fa6:	2050      	movs	r0, #80	; 0x50
 8002fa8:	f7fe fbd0 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002fac:	20cf      	movs	r0, #207	; 0xcf
 8002fae:	f7fe fbe9 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002fb2:	2000      	movs	r0, #0
 8002fb4:	f7fe fbca 	bl	800174c <LCD_IO_WriteData>
 8002fb8:	20c1      	movs	r0, #193	; 0xc1
 8002fba:	f7fe fbc7 	bl	800174c <LCD_IO_WriteData>
 8002fbe:	2030      	movs	r0, #48	; 0x30
 8002fc0:	f7fe fbc4 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002fc4:	20ed      	movs	r0, #237	; 0xed
 8002fc6:	f7fe fbdd 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002fca:	2064      	movs	r0, #100	; 0x64
 8002fcc:	f7fe fbbe 	bl	800174c <LCD_IO_WriteData>
 8002fd0:	2003      	movs	r0, #3
 8002fd2:	f7fe fbbb 	bl	800174c <LCD_IO_WriteData>
 8002fd6:	2012      	movs	r0, #18
 8002fd8:	f7fe fbb8 	bl	800174c <LCD_IO_WriteData>
 8002fdc:	2081      	movs	r0, #129	; 0x81
 8002fde:	f7fe fbb5 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002fe2:	20e8      	movs	r0, #232	; 0xe8
 8002fe4:	f7fe fbce 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002fe8:	2085      	movs	r0, #133	; 0x85
 8002fea:	f7fe fbaf 	bl	800174c <LCD_IO_WriteData>
 8002fee:	2000      	movs	r0, #0
 8002ff0:	f7fe fbac 	bl	800174c <LCD_IO_WriteData>
 8002ff4:	2078      	movs	r0, #120	; 0x78
 8002ff6:	f7fe fba9 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002ffa:	20cb      	movs	r0, #203	; 0xcb
 8002ffc:	f7fe fbc2 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003000:	2039      	movs	r0, #57	; 0x39
 8003002:	f7fe fba3 	bl	800174c <LCD_IO_WriteData>
 8003006:	202c      	movs	r0, #44	; 0x2c
 8003008:	f7fe fba0 	bl	800174c <LCD_IO_WriteData>
 800300c:	2000      	movs	r0, #0
 800300e:	f7fe fb9d 	bl	800174c <LCD_IO_WriteData>
 8003012:	2034      	movs	r0, #52	; 0x34
 8003014:	f7fe fb9a 	bl	800174c <LCD_IO_WriteData>
 8003018:	2002      	movs	r0, #2
 800301a:	f7fe fb97 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800301e:	20f7      	movs	r0, #247	; 0xf7
 8003020:	f7fe fbb0 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003024:	2020      	movs	r0, #32
 8003026:	f7fe fb91 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800302a:	20ea      	movs	r0, #234	; 0xea
 800302c:	f7fe fbaa 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003030:	2000      	movs	r0, #0
 8003032:	f7fe fb8b 	bl	800174c <LCD_IO_WriteData>
 8003036:	2000      	movs	r0, #0
 8003038:	f7fe fb88 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800303c:	20b1      	movs	r0, #177	; 0xb1
 800303e:	f7fe fba1 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003042:	2000      	movs	r0, #0
 8003044:	f7fe fb82 	bl	800174c <LCD_IO_WriteData>
 8003048:	201b      	movs	r0, #27
 800304a:	f7fe fb7f 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800304e:	20b6      	movs	r0, #182	; 0xb6
 8003050:	f7fe fb98 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003054:	200a      	movs	r0, #10
 8003056:	f7fe fb79 	bl	800174c <LCD_IO_WriteData>
 800305a:	20a2      	movs	r0, #162	; 0xa2
 800305c:	f7fe fb76 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003060:	20c0      	movs	r0, #192	; 0xc0
 8003062:	f7fe fb8f 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003066:	2010      	movs	r0, #16
 8003068:	f7fe fb70 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800306c:	20c1      	movs	r0, #193	; 0xc1
 800306e:	f7fe fb89 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003072:	2010      	movs	r0, #16
 8003074:	f7fe fb6a 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003078:	20c5      	movs	r0, #197	; 0xc5
 800307a:	f7fe fb83 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800307e:	2045      	movs	r0, #69	; 0x45
 8003080:	f7fe fb64 	bl	800174c <LCD_IO_WriteData>
 8003084:	2015      	movs	r0, #21
 8003086:	f7fe fb61 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800308a:	20c7      	movs	r0, #199	; 0xc7
 800308c:	f7fe fb7a 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003090:	2090      	movs	r0, #144	; 0x90
 8003092:	f7fe fb5b 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003096:	2036      	movs	r0, #54	; 0x36
 8003098:	f7fe fb74 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800309c:	20c8      	movs	r0, #200	; 0xc8
 800309e:	f7fe fb55 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80030a2:	20f2      	movs	r0, #242	; 0xf2
 80030a4:	f7fe fb6e 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80030a8:	2000      	movs	r0, #0
 80030aa:	f7fe fb4f 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80030ae:	20b0      	movs	r0, #176	; 0xb0
 80030b0:	f7fe fb68 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80030b4:	20c2      	movs	r0, #194	; 0xc2
 80030b6:	f7fe fb49 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80030ba:	20b6      	movs	r0, #182	; 0xb6
 80030bc:	f7fe fb62 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80030c0:	200a      	movs	r0, #10
 80030c2:	f7fe fb43 	bl	800174c <LCD_IO_WriteData>
 80030c6:	20a7      	movs	r0, #167	; 0xa7
 80030c8:	f7fe fb40 	bl	800174c <LCD_IO_WriteData>
 80030cc:	2027      	movs	r0, #39	; 0x27
 80030ce:	f7fe fb3d 	bl	800174c <LCD_IO_WriteData>
 80030d2:	2004      	movs	r0, #4
 80030d4:	f7fe fb3a 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80030d8:	202a      	movs	r0, #42	; 0x2a
 80030da:	f7fe fb53 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80030de:	2000      	movs	r0, #0
 80030e0:	f7fe fb34 	bl	800174c <LCD_IO_WriteData>
 80030e4:	2000      	movs	r0, #0
 80030e6:	f7fe fb31 	bl	800174c <LCD_IO_WriteData>
 80030ea:	2000      	movs	r0, #0
 80030ec:	f7fe fb2e 	bl	800174c <LCD_IO_WriteData>
 80030f0:	20ef      	movs	r0, #239	; 0xef
 80030f2:	f7fe fb2b 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80030f6:	202b      	movs	r0, #43	; 0x2b
 80030f8:	f7fe fb44 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80030fc:	2000      	movs	r0, #0
 80030fe:	f7fe fb25 	bl	800174c <LCD_IO_WriteData>
 8003102:	2000      	movs	r0, #0
 8003104:	f7fe fb22 	bl	800174c <LCD_IO_WriteData>
 8003108:	2001      	movs	r0, #1
 800310a:	f7fe fb1f 	bl	800174c <LCD_IO_WriteData>
 800310e:	203f      	movs	r0, #63	; 0x3f
 8003110:	f7fe fb1c 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003114:	20f6      	movs	r0, #246	; 0xf6
 8003116:	f7fe fb35 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800311a:	2001      	movs	r0, #1
 800311c:	f7fe fb16 	bl	800174c <LCD_IO_WriteData>
 8003120:	2000      	movs	r0, #0
 8003122:	f7fe fb13 	bl	800174c <LCD_IO_WriteData>
 8003126:	2006      	movs	r0, #6
 8003128:	f7fe fb10 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800312c:	202c      	movs	r0, #44	; 0x2c
 800312e:	f7fe fb29 	bl	8001784 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8003132:	20c8      	movs	r0, #200	; 0xc8
 8003134:	f7fe fb74 	bl	8001820 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8003138:	2026      	movs	r0, #38	; 0x26
 800313a:	f7fe fb23 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800313e:	2001      	movs	r0, #1
 8003140:	f7fe fb04 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003144:	20e0      	movs	r0, #224	; 0xe0
 8003146:	f7fe fb1d 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800314a:	200f      	movs	r0, #15
 800314c:	f7fe fafe 	bl	800174c <LCD_IO_WriteData>
 8003150:	2029      	movs	r0, #41	; 0x29
 8003152:	f7fe fafb 	bl	800174c <LCD_IO_WriteData>
 8003156:	2024      	movs	r0, #36	; 0x24
 8003158:	f7fe faf8 	bl	800174c <LCD_IO_WriteData>
 800315c:	200c      	movs	r0, #12
 800315e:	f7fe faf5 	bl	800174c <LCD_IO_WriteData>
 8003162:	200e      	movs	r0, #14
 8003164:	f7fe faf2 	bl	800174c <LCD_IO_WriteData>
 8003168:	2009      	movs	r0, #9
 800316a:	f7fe faef 	bl	800174c <LCD_IO_WriteData>
 800316e:	204e      	movs	r0, #78	; 0x4e
 8003170:	f7fe faec 	bl	800174c <LCD_IO_WriteData>
 8003174:	2078      	movs	r0, #120	; 0x78
 8003176:	f7fe fae9 	bl	800174c <LCD_IO_WriteData>
 800317a:	203c      	movs	r0, #60	; 0x3c
 800317c:	f7fe fae6 	bl	800174c <LCD_IO_WriteData>
 8003180:	2009      	movs	r0, #9
 8003182:	f7fe fae3 	bl	800174c <LCD_IO_WriteData>
 8003186:	2013      	movs	r0, #19
 8003188:	f7fe fae0 	bl	800174c <LCD_IO_WriteData>
 800318c:	2005      	movs	r0, #5
 800318e:	f7fe fadd 	bl	800174c <LCD_IO_WriteData>
 8003192:	2017      	movs	r0, #23
 8003194:	f7fe fada 	bl	800174c <LCD_IO_WriteData>
 8003198:	2011      	movs	r0, #17
 800319a:	f7fe fad7 	bl	800174c <LCD_IO_WriteData>
 800319e:	2000      	movs	r0, #0
 80031a0:	f7fe fad4 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80031a4:	20e1      	movs	r0, #225	; 0xe1
 80031a6:	f7fe faed 	bl	8001784 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80031aa:	2000      	movs	r0, #0
 80031ac:	f7fe face 	bl	800174c <LCD_IO_WriteData>
 80031b0:	2016      	movs	r0, #22
 80031b2:	f7fe facb 	bl	800174c <LCD_IO_WriteData>
 80031b6:	201b      	movs	r0, #27
 80031b8:	f7fe fac8 	bl	800174c <LCD_IO_WriteData>
 80031bc:	2004      	movs	r0, #4
 80031be:	f7fe fac5 	bl	800174c <LCD_IO_WriteData>
 80031c2:	2011      	movs	r0, #17
 80031c4:	f7fe fac2 	bl	800174c <LCD_IO_WriteData>
 80031c8:	2007      	movs	r0, #7
 80031ca:	f7fe fabf 	bl	800174c <LCD_IO_WriteData>
 80031ce:	2031      	movs	r0, #49	; 0x31
 80031d0:	f7fe fabc 	bl	800174c <LCD_IO_WriteData>
 80031d4:	2033      	movs	r0, #51	; 0x33
 80031d6:	f7fe fab9 	bl	800174c <LCD_IO_WriteData>
 80031da:	2042      	movs	r0, #66	; 0x42
 80031dc:	f7fe fab6 	bl	800174c <LCD_IO_WriteData>
 80031e0:	2005      	movs	r0, #5
 80031e2:	f7fe fab3 	bl	800174c <LCD_IO_WriteData>
 80031e6:	200c      	movs	r0, #12
 80031e8:	f7fe fab0 	bl	800174c <LCD_IO_WriteData>
 80031ec:	200a      	movs	r0, #10
 80031ee:	f7fe faad 	bl	800174c <LCD_IO_WriteData>
 80031f2:	2028      	movs	r0, #40	; 0x28
 80031f4:	f7fe faaa 	bl	800174c <LCD_IO_WriteData>
 80031f8:	202f      	movs	r0, #47	; 0x2f
 80031fa:	f7fe faa7 	bl	800174c <LCD_IO_WriteData>
 80031fe:	200f      	movs	r0, #15
 8003200:	f7fe faa4 	bl	800174c <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003204:	2011      	movs	r0, #17
 8003206:	f7fe fabd 	bl	8001784 <LCD_IO_WriteReg>
  LCD_Delay(200);
 800320a:	20c8      	movs	r0, #200	; 0xc8
 800320c:	f7fe fb08 	bl	8001820 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8003210:	2029      	movs	r0, #41	; 0x29
 8003212:	f7fe fab7 	bl	8001784 <LCD_IO_WriteReg>
 8003216:	202c      	movs	r0, #44	; 0x2c
}
 8003218:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 800321c:	f7fe bab2 	b.w	8001784 <LCD_IO_WriteReg>

08003220 <ili9341_ReadID>:
{
 8003220:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8003222:	f7fe fa83 	bl	800172c <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8003226:	2103      	movs	r1, #3
 8003228:	20d3      	movs	r0, #211	; 0xd3
 800322a:	f7fe fac7 	bl	80017bc <LCD_IO_ReadData>
}
 800322e:	b280      	uxth	r0, r0
 8003230:	bd08      	pop	{r3, pc}

08003232 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8003232:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8003234:	b2c4      	uxtb	r4, r0
 8003236:	2202      	movs	r2, #2
 8003238:	2103      	movs	r1, #3
 800323a:	4620      	mov	r0, r4
 800323c:	f7fe fa2e 	bl	800169c <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8003240:	200a      	movs	r0, #10
 8003242:	f7fe fa71 	bl	8001728 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8003246:	4620      	mov	r0, r4
 8003248:	2200      	movs	r2, #0
 800324a:	2103      	movs	r1, #3
 800324c:	f7fe fa26 	bl	800169c <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
 8003250:	2002      	movs	r0, #2
}
 8003252:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8003256:	f7fe ba67 	b.w	8001728 <IOE_Delay>

0800325a <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 800325a:	b538      	push	{r3, r4, r5, lr}
 800325c:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800325e:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8003260:	f7fe fa1a 	bl	8001698 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003264:	2100      	movs	r1, #0
 8003266:	4620      	mov	r0, r4
 8003268:	f7fe fa2e 	bl	80016c8 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800326c:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800326e:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003270:	4620      	mov	r0, r4
 8003272:	f7fe fa29 	bl	80016c8 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003276:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 800327a:	b280      	uxth	r0, r0
 800327c:	bd38      	pop	{r3, r4, r5, pc}

0800327e <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 800327e:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8003280:	b2c4      	uxtb	r4, r0
 8003282:	2140      	movs	r1, #64	; 0x40
 8003284:	4620      	mov	r0, r4
 8003286:	f7fe fa1f 	bl	80016c8 <IOE_Read>
  
  if(state > 0)
 800328a:	0603      	lsls	r3, r0, #24
 800328c:	d507      	bpl.n	800329e <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800328e:	214c      	movs	r1, #76	; 0x4c
 8003290:	4620      	mov	r0, r4
 8003292:	f7fe fa19 	bl	80016c8 <IOE_Read>
    {
      ret = 1;
 8003296:	3000      	adds	r0, #0
 8003298:	bf18      	it	ne
 800329a:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 800329c:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 800329e:	2201      	movs	r2, #1
 80032a0:	214b      	movs	r1, #75	; 0x4b
 80032a2:	4620      	mov	r0, r4
 80032a4:	f7fe f9fa 	bl	800169c <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80032a8:	4620      	mov	r0, r4
 80032aa:	2200      	movs	r2, #0
 80032ac:	214b      	movs	r1, #75	; 0x4b
 80032ae:	f7fe f9f5 	bl	800169c <IOE_Write>
  uint8_t ret = 0;
 80032b2:	2000      	movs	r0, #0
 80032b4:	e7f2      	b.n	800329c <stmpe811_TS_DetectTouch+0x1e>

080032b6 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 80032b6:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80032b8:	2304      	movs	r3, #4
 80032ba:	b2c4      	uxtb	r4, r0
{
 80032bc:	460e      	mov	r6, r1
 80032be:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80032c0:	21d7      	movs	r1, #215	; 0xd7
 80032c2:	eb0d 0203 	add.w	r2, sp, r3
 80032c6:	4620      	mov	r0, r4
 80032c8:	f7fe fa18 	bl	80016fc <IOE_ReadMultiple>
 80032cc:	9b01      	ldr	r3, [sp, #4]
 80032ce:	ba1b      	rev	r3, r3
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80032d0:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80032d2:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80032d6:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80032d8:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80032da:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80032dc:	2201      	movs	r2, #1
 80032de:	214b      	movs	r1, #75	; 0x4b
 80032e0:	f7fe f9dc 	bl	800169c <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80032e4:	2200      	movs	r2, #0
 80032e6:	214b      	movs	r1, #75	; 0x4b
 80032e8:	4620      	mov	r0, r4
 80032ea:	f7fe f9d7 	bl	800169c <IOE_Write>
}
 80032ee:	b002      	add	sp, #8
 80032f0:	bd70      	pop	{r4, r5, r6, pc}
	...

080032f4 <stmpe811_Init>:
{
 80032f4:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80032f6:	4a0a      	ldr	r2, [pc, #40]	; (8003320 <stmpe811_Init+0x2c>)
 80032f8:	7813      	ldrb	r3, [r2, #0]
 80032fa:	4298      	cmp	r0, r3
{
 80032fc:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 80032fe:	d00d      	beq.n	800331c <stmpe811_Init+0x28>
 8003300:	7851      	ldrb	r1, [r2, #1]
 8003302:	4288      	cmp	r0, r1
 8003304:	d00a      	beq.n	800331c <stmpe811_Init+0x28>
 8003306:	b10b      	cbz	r3, 800330c <stmpe811_Init+0x18>
 8003308:	b941      	cbnz	r1, 800331c <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 800330a:	2301      	movs	r3, #1
      stmpe811[empty] = DeviceAddr;
 800330c:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 800330e:	f7fe f9c3 	bl	8001698 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8003312:	4620      	mov	r0, r4
}
 8003314:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8003318:	f7ff bf8b 	b.w	8003232 <stmpe811_Reset>
}
 800331c:	bd10      	pop	{r4, pc}
 800331e:	bf00      	nop
 8003320:	20001460 	.word	0x20001460

08003324 <stmpe811_EnableGlobalIT>:
{
 8003324:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003326:	b2c4      	uxtb	r4, r0
 8003328:	2109      	movs	r1, #9
 800332a:	4620      	mov	r0, r4
 800332c:	f7fe f9cc 	bl	80016c8 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8003330:	f040 0201 	orr.w	r2, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003334:	b2d2      	uxtb	r2, r2
 8003336:	4620      	mov	r0, r4
 8003338:	2109      	movs	r1, #9
}
 800333a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800333e:	f7fe b9ad 	b.w	800169c <IOE_Write>

08003342 <stmpe811_DisableGlobalIT>:
{
 8003342:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8003344:	b2c4      	uxtb	r4, r0
 8003346:	2109      	movs	r1, #9
 8003348:	4620      	mov	r0, r4
 800334a:	f7fe f9bd 	bl	80016c8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800334e:	2109      	movs	r1, #9
 8003350:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8003354:	4620      	mov	r0, r4
}
 8003356:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800335a:	f7fe b99f 	b.w	800169c <IOE_Write>

0800335e <stmpe811_EnableITSource>:
{
 800335e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003360:	b2c5      	uxtb	r5, r0
{
 8003362:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003364:	4628      	mov	r0, r5
 8003366:	210a      	movs	r1, #10
 8003368:	f7fe f9ae 	bl	80016c8 <IOE_Read>
  tmp |= Source; 
 800336c:	ea40 0204 	orr.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003370:	b2d2      	uxtb	r2, r2
 8003372:	4628      	mov	r0, r5
 8003374:	210a      	movs	r1, #10
}
 8003376:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800337a:	f7fe b98f 	b.w	800169c <IOE_Write>

0800337e <stmpe811_TS_EnableIT>:
{
 800337e:	b510      	push	{r4, lr}
 8003380:	4604      	mov	r4, r0
  IOE_ITConfig();
 8003382:	f7fe f98a 	bl	800169a <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003386:	4620      	mov	r0, r4
 8003388:	211f      	movs	r1, #31
 800338a:	f7ff ffe8 	bl	800335e <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 800338e:	4620      	mov	r0, r4
}
 8003390:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003394:	f7ff bfc6 	b.w	8003324 <stmpe811_EnableGlobalIT>

08003398 <stmpe811_DisableITSource>:
{
 8003398:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800339a:	b2c5      	uxtb	r5, r0
{
 800339c:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800339e:	4628      	mov	r0, r5
 80033a0:	210a      	movs	r1, #10
 80033a2:	f7fe f991 	bl	80016c8 <IOE_Read>
  tmp &= ~Source; 
 80033a6:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80033aa:	b2d2      	uxtb	r2, r2
 80033ac:	4628      	mov	r0, r5
 80033ae:	210a      	movs	r1, #10
}
 80033b0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80033b4:	f7fe b972 	b.w	800169c <IOE_Write>

080033b8 <stmpe811_TS_DisableIT>:
{
 80033b8:	b510      	push	{r4, lr}
 80033ba:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 80033bc:	f7ff ffc1 	bl	8003342 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80033c0:	4620      	mov	r0, r4
 80033c2:	211f      	movs	r1, #31
}
 80033c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80033c8:	f7ff bfe6 	b.w	8003398 <stmpe811_DisableITSource>

080033cc <stmpe811_ReadGITStatus>:
{
 80033cc:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80033ce:	b2c0      	uxtb	r0, r0
{
 80033d0:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80033d2:	210b      	movs	r1, #11
 80033d4:	f7fe f978 	bl	80016c8 <IOE_Read>
}
 80033d8:	4020      	ands	r0, r4
 80033da:	bd10      	pop	{r4, pc}

080033dc <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 80033dc:	211f      	movs	r1, #31
 80033de:	f7ff bff5 	b.w	80033cc <stmpe811_ReadGITStatus>

080033e2 <stmpe811_ClearGlobalIT>:
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80033e2:	460a      	mov	r2, r1
 80033e4:	b2c0      	uxtb	r0, r0
 80033e6:	210b      	movs	r1, #11
 80033e8:	f7fe b958 	b.w	800169c <IOE_Write>

080033ec <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 80033ec:	211f      	movs	r1, #31
 80033ee:	f7ff bff8 	b.w	80033e2 <stmpe811_ClearGlobalIT>

080033f2 <stmpe811_IO_EnableAF>:
{
 80033f2:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80033f4:	b2c5      	uxtb	r5, r0
{
 80033f6:	460c      	mov	r4, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80033f8:	4628      	mov	r0, r5
 80033fa:	2117      	movs	r1, #23
 80033fc:	f7fe f964 	bl	80016c8 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8003400:	ea20 0204 	bic.w	r2, r0, r4
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8003404:	b2d2      	uxtb	r2, r2
 8003406:	4628      	mov	r0, r5
 8003408:	2117      	movs	r1, #23
}
 800340a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800340e:	f7fe b945 	b.w	800169c <IOE_Write>

08003412 <stmpe811_TS_Start>:
{
 8003412:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003414:	b2c4      	uxtb	r4, r0
{
 8003416:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003418:	2104      	movs	r1, #4
 800341a:	4620      	mov	r0, r4
 800341c:	f7fe f954 	bl	80016c8 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003420:	2104      	movs	r1, #4
 8003422:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8003426:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003428:	4620      	mov	r0, r4
 800342a:	f7fe f937 	bl	800169c <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 800342e:	4630      	mov	r0, r6
 8003430:	21f0      	movs	r1, #240	; 0xf0
 8003432:	f7ff ffde 	bl	80033f2 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003436:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800343a:	4620      	mov	r0, r4
 800343c:	2104      	movs	r1, #4
 800343e:	f7fe f92d 	bl	800169c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8003442:	2249      	movs	r2, #73	; 0x49
 8003444:	2120      	movs	r1, #32
 8003446:	4620      	mov	r0, r4
 8003448:	f7fe f928 	bl	800169c <IOE_Write>
  IOE_Delay(2); 
 800344c:	2002      	movs	r0, #2
 800344e:	f7fe f96b 	bl	8001728 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8003452:	4620      	mov	r0, r4
 8003454:	2201      	movs	r2, #1
 8003456:	2121      	movs	r1, #33	; 0x21
 8003458:	f7fe f920 	bl	800169c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 800345c:	4620      	mov	r0, r4
 800345e:	229a      	movs	r2, #154	; 0x9a
 8003460:	2141      	movs	r1, #65	; 0x41
 8003462:	f7fe f91b 	bl	800169c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8003466:	4620      	mov	r0, r4
 8003468:	2201      	movs	r2, #1
 800346a:	214a      	movs	r1, #74	; 0x4a
 800346c:	f7fe f916 	bl	800169c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003470:	4620      	mov	r0, r4
 8003472:	2201      	movs	r2, #1
 8003474:	214b      	movs	r1, #75	; 0x4b
 8003476:	f7fe f911 	bl	800169c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800347a:	4620      	mov	r0, r4
 800347c:	2200      	movs	r2, #0
 800347e:	214b      	movs	r1, #75	; 0x4b
 8003480:	f7fe f90c 	bl	800169c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8003484:	4620      	mov	r0, r4
 8003486:	2201      	movs	r2, #1
 8003488:	2156      	movs	r1, #86	; 0x56
 800348a:	f7fe f907 	bl	800169c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 800348e:	4620      	mov	r0, r4
 8003490:	2201      	movs	r2, #1
 8003492:	2158      	movs	r1, #88	; 0x58
 8003494:	f7fe f902 	bl	800169c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8003498:	4620      	mov	r0, r4
 800349a:	2201      	movs	r2, #1
 800349c:	2140      	movs	r1, #64	; 0x40
 800349e:	f7fe f8fd 	bl	800169c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 80034a2:	4620      	mov	r0, r4
 80034a4:	22ff      	movs	r2, #255	; 0xff
 80034a6:	210b      	movs	r1, #11
 80034a8:	f7fe f8f8 	bl	800169c <IOE_Write>
  IOE_Delay(2); 
 80034ac:	2002      	movs	r0, #2
}
 80034ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 80034b2:	f7fe b939 	b.w	8001728 <IOE_Delay>
	...

080034b8 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80034b8:	4b05      	ldr	r3, [pc, #20]	; (80034d0 <SystemInit+0x18>)
 80034ba:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 80034be:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80034c2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80034c6:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80034ca:	609a      	str	r2, [r3, #8]
#endif
}
 80034cc:	4770      	bx	lr
 80034ce:	bf00      	nop
 80034d0:	e000ed00 	.word	0xe000ed00

080034d4 <vTimerCallbackT35>:
    modH->u16InCnt = modH->u16OutCnt = modH->u16errCnt = 0;
}


void vTimerCallbackT35(TimerHandle_t *pxTimer)
{
 80034d4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
	//Notify that a steam has just arrived
	int i;
	//TimerHandle_t aux;
	for(i = 0; i < numberHandlers; i++)
 80034d8:	4e13      	ldr	r6, [pc, #76]	; (8003528 <vTimerCallbackT35+0x54>)
	{

		if( (TimerHandle_t *)mHandlers[i]->xTimerT35 ==  pxTimer ){
 80034da:	4d14      	ldr	r5, [pc, #80]	; (800352c <vTimerCallbackT35+0x58>)
{
 80034dc:	4607      	mov	r7, r0
	for(i = 0; i < numberHandlers; i++)
 80034de:	2400      	movs	r4, #0
 80034e0:	7833      	ldrb	r3, [r6, #0]
 80034e2:	42a3      	cmp	r3, r4
 80034e4:	dc02      	bgt.n	80034ec <vTimerCallbackT35+0x18>
			}
			xTaskNotify(mHandlers[i]->myTaskModbusAHandle, 0, eSetValueWithOverwrite);
		}

	}
}
 80034e6:	b002      	add	sp, #8
 80034e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if( (TimerHandle_t *)mHandlers[i]->xTimerT35 ==  pxTimer ){
 80034ec:	f855 0024 	ldr.w	r0, [r5, r4, lsl #2]
 80034f0:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
 80034f4:	42bb      	cmp	r3, r7
 80034f6:	ea4f 0884 	mov.w	r8, r4, lsl #2
 80034fa:	d112      	bne.n	8003522 <vTimerCallbackT35+0x4e>
			if(mHandlers[i]->uiModbusType == MASTER_RTU)
 80034fc:	7803      	ldrb	r3, [r0, #0]
 80034fe:	2b04      	cmp	r3, #4
 8003500:	d107      	bne.n	8003512 <vTimerCallbackT35+0x3e>
				xTimerStop(mHandlers[i]->xTimerTimeout,0);
 8003502:	2300      	movs	r3, #0
 8003504:	9300      	str	r3, [sp, #0]
 8003506:	461a      	mov	r2, r3
 8003508:	2103      	movs	r1, #3
 800350a:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
 800350e:	f005 fb85 	bl	8008c1c <xTimerGenericCommand>
			xTaskNotify(mHandlers[i]->myTaskModbusAHandle, 0, eSetValueWithOverwrite);
 8003512:	f855 0008 	ldr.w	r0, [r5, r8]
 8003516:	2300      	movs	r3, #0
 8003518:	2203      	movs	r2, #3
 800351a:	4619      	mov	r1, r3
 800351c:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 800351e:	f005 f9cf 	bl	80088c0 <xTaskGenericNotify>
	for(i = 0; i < numberHandlers; i++)
 8003522:	3401      	adds	r4, #1
 8003524:	e7dc      	b.n	80034e0 <vTimerCallbackT35+0xc>
 8003526:	bf00      	nop
 8003528:	20001462 	.word	0x20001462
 800352c:	20001458 	.word	0x20001458

08003530 <vTimerCallbackTimeout>:

void vTimerCallbackTimeout(TimerHandle_t *pxTimer)
{
 8003530:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	//Notify that a steam has just arrived
	int i;
	//TimerHandle_t aux;
	for(i = 0; i < numberHandlers; i++)
 8003532:	4d0b      	ldr	r5, [pc, #44]	; (8003560 <vTimerCallbackTimeout+0x30>)
	{

		if( (TimerHandle_t *)mHandlers[i]->xTimerTimeout ==  pxTimer ){
 8003534:	4f0b      	ldr	r7, [pc, #44]	; (8003564 <vTimerCallbackTimeout+0x34>)
{
 8003536:	4606      	mov	r6, r0
	for(i = 0; i < numberHandlers; i++)
 8003538:	2400      	movs	r4, #0
 800353a:	782b      	ldrb	r3, [r5, #0]
 800353c:	42a3      	cmp	r3, r4
 800353e:	dc00      	bgt.n	8003542 <vTimerCallbackTimeout+0x12>
				xTaskNotify(mHandlers[i]->myTaskModbusAHandle, NO_REPLY, eSetValueWithOverwrite);
		}

	}

}
 8003540:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		if( (TimerHandle_t *)mHandlers[i]->xTimerTimeout ==  pxTimer ){
 8003542:	f857 0024 	ldr.w	r0, [r7, r4, lsl #2]
 8003546:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800354a:	42b3      	cmp	r3, r6
 800354c:	d105      	bne.n	800355a <vTimerCallbackTimeout+0x2a>
				xTaskNotify(mHandlers[i]->myTaskModbusAHandle, NO_REPLY, eSetValueWithOverwrite);
 800354e:	2300      	movs	r3, #0
 8003550:	2203      	movs	r2, #3
 8003552:	21ff      	movs	r1, #255	; 0xff
 8003554:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 8003556:	f005 f9b3 	bl	80088c0 <xTaskGenericNotify>
	for(i = 0; i < numberHandlers; i++)
 800355a:	3401      	adds	r4, #1
 800355c:	e7ed      	b.n	800353a <vTimerCallbackTimeout+0xa>
 800355e:	bf00      	nop
 8003560:	20001462 	.word	0x20001462
 8003564:	20001458 	.word	0x20001458

08003568 <getRxBuffer>:
 *
 * @return buffer size if OK, ERR_BUFF_OVERFLOW if u8BufferSize >= MAX_BUFFER
 * @ingroup buffer
 */
int8_t getRxBuffer(modbusHandler_t *modH)
{
 8003568:	b570      	push	{r4, r5, r6, lr}
 800356a:	4604      	mov	r4, r0
    bool bBuffOverflow = false;
    int i;
    if (modH->EN_Port)
 800356c:	68c0      	ldr	r0, [r0, #12]
 800356e:	b118      	cbz	r0, 8003578 <getRxBuffer+0x10>
    {
    	//digitalWrite( u8txenpin, LOW );
    	HAL_GPIO_WritePin(modH->EN_Port, modH->EN_Pin, GPIO_PIN_RESET);
 8003570:	2200      	movs	r2, #0
 8003572:	8a21      	ldrh	r1, [r4, #16]
 8003574:	f001 f8e4 	bl	8004740 <HAL_GPIO_WritePin>
    }


    modH->u8BufferSize = uxQueueMessagesWaiting(modH->QueueModbusHandle);
 8003578:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800357a:	f004 fbe2 	bl	8007d42 <uxQueueMessagesWaiting>

    for(i = 0; i<  modH->u8BufferSize; i++ )
 800357e:	2500      	movs	r5, #0
    modH->u8BufferSize = uxQueueMessagesWaiting(modH->QueueModbusHandle);
 8003580:	f884 0053 	strb.w	r0, [r4, #83]	; 0x53
   	{
   		  xQueueReceive(modH->QueueModbusHandle, &modH->au8Buffer[i], 0);
 8003584:	f104 0613 	add.w	r6, r4, #19
    for(i = 0; i<  modH->u8BufferSize; i++ )
 8003588:	f894 0053 	ldrb.w	r0, [r4, #83]	; 0x53
 800358c:	42a8      	cmp	r0, r5
 800358e:	dc06      	bgt.n	800359e <getRxBuffer+0x36>
   	}

    modH->u16InCnt++;
 8003590:	f8b4 305c 	ldrh.w	r3, [r4, #92]	; 0x5c
 8003594:	3301      	adds	r3, #1
 8003596:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
    {
    	modH->u16errCnt++;
        return ERR_BUFF_OVERFLOW;  //using queues this will not happen
    }
    return modH->u8BufferSize;
}
 800359a:	b240      	sxtb	r0, r0
 800359c:	bd70      	pop	{r4, r5, r6, pc}
   		  xQueueReceive(modH->QueueModbusHandle, &modH->au8Buffer[i], 0);
 800359e:	1971      	adds	r1, r6, r5
 80035a0:	2200      	movs	r2, #0
 80035a2:	6f60      	ldr	r0, [r4, #116]	; 0x74
 80035a4:	f004 fa1c 	bl	80079e0 <xQueueReceive>
    for(i = 0; i<  modH->u8BufferSize; i++ )
 80035a8:	3501      	adds	r5, #1
 80035aa:	e7ed      	b.n	8003588 <getRxBuffer+0x20>

080035ac <ModbusInit>:
{
 80035ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
  if (numberHandlers < MAX_M_HANDLERS)
 80035ae:	4d25      	ldr	r5, [pc, #148]	; (8003644 <ModbusInit+0x98>)
 80035b0:	782b      	ldrb	r3, [r5, #0]
 80035b2:	2b01      	cmp	r3, #1
{
 80035b4:	4604      	mov	r4, r0
  if (numberHandlers < MAX_M_HANDLERS)
 80035b6:	d844      	bhi.n	8003642 <ModbusInit+0x96>
	  modH->QueueModbusHandle = osMessageQueueNew (MAX_BUFFER, sizeof(uint8_t), &QueueModbus_attributes);
 80035b8:	4a23      	ldr	r2, [pc, #140]	; (8003648 <ModbusInit+0x9c>)
 80035ba:	2101      	movs	r1, #1
 80035bc:	2040      	movs	r0, #64	; 0x40
 80035be:	f003 fb67 	bl	8006c90 <osMessageQueueNew>
	  if(modH->uiModbusType == SLAVE_RTU)
 80035c2:	7823      	ldrb	r3, [r4, #0]
	  modH->QueueModbusHandle = osMessageQueueNew (MAX_BUFFER, sizeof(uint8_t), &QueueModbus_attributes);
 80035c4:	6760      	str	r0, [r4, #116]	; 0x74
	  if(modH->uiModbusType == SLAVE_RTU)
 80035c6:	2b03      	cmp	r3, #3
 80035c8:	d11f      	bne.n	800360a <ModbusInit+0x5e>
	  	  modH->myTaskModbusAHandle = osThreadNew(StartTaskModbusSlave, modH, &myTaskModbusA_attributes);
 80035ca:	4a20      	ldr	r2, [pc, #128]	; (800364c <ModbusInit+0xa0>)
 80035cc:	4820      	ldr	r0, [pc, #128]	; (8003650 <ModbusInit+0xa4>)
 80035ce:	4621      	mov	r1, r4
 80035d0:	f003 fa3e 	bl	8006a50 <osThreadNew>
 80035d4:	67e0      	str	r0, [r4, #124]	; 0x7c
	  modH->xTimerT35 = xTimerCreate("TimerT35",         // Just a text name, not used by the kernel.
 80035d6:	4b1f      	ldr	r3, [pc, #124]	; (8003654 <ModbusInit+0xa8>)
 80035d8:	9300      	str	r3, [sp, #0]
 80035da:	2200      	movs	r2, #0
 80035dc:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
 80035e0:	481d      	ldr	r0, [pc, #116]	; (8003658 <ModbusInit+0xac>)
 80035e2:	2105      	movs	r1, #5
 80035e4:	f005 faec 	bl	8008bc0 <xTimerCreate>
	  modH->ModBusSphrHandle = osSemaphoreNew(1, 1, &ModBusSphr_attributes);
 80035e8:	2101      	movs	r1, #1
	  modH->xTimerT35 = xTimerCreate("TimerT35",         // Just a text name, not used by the kernel.
 80035ea:	f8c4 0080 	str.w	r0, [r4, #128]	; 0x80
	  modH->ModBusSphrHandle = osSemaphoreNew(1, 1, &ModBusSphr_attributes);
 80035ee:	4a1b      	ldr	r2, [pc, #108]	; (800365c <ModbusInit+0xb0>)
 80035f0:	4608      	mov	r0, r1
 80035f2:	f003 fa83 	bl	8006afc <osSemaphoreNew>
	  mHandlers[numberHandlers] = modH;
 80035f6:	782b      	ldrb	r3, [r5, #0]
 80035f8:	4a19      	ldr	r2, [pc, #100]	; (8003660 <ModbusInit+0xb4>)
	  modH->ModBusSphrHandle = osSemaphoreNew(1, 1, &ModBusSphr_attributes);
 80035fa:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
	  mHandlers[numberHandlers] = modH;
 80035fe:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
	  numberHandlers++;
 8003602:	3301      	adds	r3, #1
 8003604:	702b      	strb	r3, [r5, #0]
}
 8003606:	b003      	add	sp, #12
 8003608:	bd30      	pop	{r4, r5, pc}
	  else if (modH->uiModbusType == MASTER_RTU)
 800360a:	2b04      	cmp	r3, #4
 800360c:	d118      	bne.n	8003640 <ModbusInit+0x94>
		  modH->myTaskModbusAHandle = osThreadNew(StartTaskModbusMaster, modH, &myTaskModbusB_attributes);
 800360e:	4a15      	ldr	r2, [pc, #84]	; (8003664 <ModbusInit+0xb8>)
 8003610:	4815      	ldr	r0, [pc, #84]	; (8003668 <ModbusInit+0xbc>)
 8003612:	4621      	mov	r1, r4
 8003614:	f003 fa1c 	bl	8006a50 <osThreadNew>
		  modH->xTimerTimeout=xTimerCreate("xTimerTimeout",  // Just a text name, not used by the kernel.
 8003618:	4b14      	ldr	r3, [pc, #80]	; (800366c <ModbusInit+0xc0>)
		  modH->myTaskModbusAHandle = osThreadNew(StartTaskModbusMaster, modH, &myTaskModbusB_attributes);
 800361a:	67e0      	str	r0, [r4, #124]	; 0x7c
		  modH->xTimerTimeout=xTimerCreate("xTimerTimeout",  // Just a text name, not used by the kernel.
 800361c:	f8b4 1062 	ldrh.w	r1, [r4, #98]	; 0x62
 8003620:	9300      	str	r3, [sp, #0]
 8003622:	2200      	movs	r2, #0
 8003624:	f8d4 3084 	ldr.w	r3, [r4, #132]	; 0x84
 8003628:	4811      	ldr	r0, [pc, #68]	; (8003670 <ModbusInit+0xc4>)
 800362a:	f005 fac9 	bl	8008bc0 <xTimerCreate>
		  modH->QueueTelegramHandle = osMessageQueueNew (MAX_TELEGRAMS, sizeof(modbus_t), &QueueTelegram_attributes);
 800362e:	4a11      	ldr	r2, [pc, #68]	; (8003674 <ModbusInit+0xc8>)
		  modH->xTimerTimeout=xTimerCreate("xTimerTimeout",  // Just a text name, not used by the kernel.
 8003630:	f8c4 0084 	str.w	r0, [r4, #132]	; 0x84
		  modH->QueueTelegramHandle = osMessageQueueNew (MAX_TELEGRAMS, sizeof(modbus_t), &QueueTelegram_attributes);
 8003634:	210c      	movs	r1, #12
 8003636:	2002      	movs	r0, #2
 8003638:	f003 fb2a 	bl	8006c90 <osMessageQueueNew>
 800363c:	67a0      	str	r0, [r4, #120]	; 0x78
 800363e:	e7ca      	b.n	80035d6 <ModbusInit+0x2a>
 8003640:	e7fe      	b.n	8003640 <ModbusInit+0x94>
 8003642:	e7fe      	b.n	8003642 <ModbusInit+0x96>
 8003644:	20001462 	.word	0x20001462
 8003648:	0801bc2c 	.word	0x0801bc2c
 800364c:	0801bc64 	.word	0x0801bc64
 8003650:	0800384d 	.word	0x0800384d
 8003654:	080034d5 	.word	0x080034d5
 8003658:	0801bc22 	.word	0x0801bc22
 800365c:	0801bc04 	.word	0x0801bc04
 8003660:	20001458 	.word	0x20001458
 8003664:	0801bc88 	.word	0x0801bc88
 8003668:	08003cbd 	.word	0x08003cbd
 800366c:	08003531 	.word	0x08003531
 8003670:	0801bc14 	.word	0x0801bc14
 8003674:	0801bc44 	.word	0x0801bc44

08003678 <ModbusStart>:
{
 8003678:	b510      	push	{r4, lr}
 800367a:	4604      	mov	r4, r0
    if (modH->EN_Port != NULL )
 800367c:	68c0      	ldr	r0, [r0, #12]
 800367e:	b118      	cbz	r0, 8003688 <ModbusStart+0x10>
    	HAL_GPIO_WritePin(modH->EN_Port, modH->EN_Pin, GPIO_PIN_RESET);
 8003680:	2200      	movs	r2, #0
 8003682:	8a21      	ldrh	r1, [r4, #16]
 8003684:	f001 f85c 	bl	8004740 <HAL_GPIO_WritePin>
    if (modH->uiModbusType == SLAVE_RTU &&  modH->au16regs == NULL )
 8003688:	7823      	ldrb	r3, [r4, #0]
 800368a:	2b03      	cmp	r3, #3
 800368c:	d102      	bne.n	8003694 <ModbusStart+0x1c>
 800368e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8003690:	b903      	cbnz	r3, 8003694 <ModbusStart+0x1c>
 8003692:	e7fe      	b.n	8003692 <ModbusStart+0x1a>
    while (HAL_UART_GetState(modH->port) != HAL_UART_STATE_READY)
 8003694:	6860      	ldr	r0, [r4, #4]
 8003696:	f003 f8fd 	bl	8006894 <HAL_UART_GetState>
 800369a:	2820      	cmp	r0, #32
 800369c:	d1fa      	bne.n	8003694 <ModbusStart+0x1c>
    if(HAL_UART_Receive_IT(modH->port, &modH->dataRX, 1) != HAL_OK)
 800369e:	2201      	movs	r2, #1
 80036a0:	f104 0171 	add.w	r1, r4, #113	; 0x71
 80036a4:	6860      	ldr	r0, [r4, #4]
 80036a6:	f002 ffe8 	bl	800667a <HAL_UART_Receive_IT>
 80036aa:	b100      	cbz	r0, 80036ae <ModbusStart+0x36>
 80036ac:	e7fe      	b.n	80036ac <ModbusStart+0x34>
    modH->u8lastRec = modH->u8BufferSize = 0;
 80036ae:	f884 0053 	strb.w	r0, [r4, #83]	; 0x53
 80036b2:	f884 0054 	strb.w	r0, [r4, #84]	; 0x54
    modH->u16InCnt = modH->u16OutCnt = modH->u16errCnt = 0;
 80036b6:	65e0      	str	r0, [r4, #92]	; 0x5c
 80036b8:	f8a4 0060 	strh.w	r0, [r4, #96]	; 0x60
}
 80036bc:	bd10      	pop	{r4, pc}

080036be <ModbusQuery>:
{
 80036be:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80036c0:	ac01      	add	r4, sp, #4
 80036c2:	e884 000e 	stmia.w	r4, {r1, r2, r3}
	xQueueSendToBack(modH->QueueTelegramHandle, &telegram, 0);
 80036c6:	2300      	movs	r3, #0
 80036c8:	461a      	mov	r2, r3
 80036ca:	4621      	mov	r1, r4
 80036cc:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80036ce:	f004 f81f 	bl	8007710 <xQueueGenericSend>
}
 80036d2:	b004      	add	sp, #16
 80036d4:	bd10      	pop	{r4, pc}

080036d6 <ModbusQueryInject>:
{
 80036d6:	b530      	push	{r4, r5, lr}
 80036d8:	b085      	sub	sp, #20
 80036da:	4605      	mov	r5, r0
 80036dc:	ac01      	add	r4, sp, #4
 80036de:	e884 000e 	stmia.w	r4, {r1, r2, r3}
	xQueueReset(modH->QueueTelegramHandle);
 80036e2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 80036e4:	2100      	movs	r1, #0
 80036e6:	f003 ff1d 	bl	8007524 <xQueueGenericReset>
	xQueueSendToFront(modH->QueueTelegramHandle, &telegram, 0);
 80036ea:	2301      	movs	r3, #1
 80036ec:	2200      	movs	r2, #0
 80036ee:	4621      	mov	r1, r4
 80036f0:	6fa8      	ldr	r0, [r5, #120]	; 0x78
 80036f2:	f004 f80d 	bl	8007710 <xQueueGenericSend>
}
 80036f6:	b005      	add	sp, #20
 80036f8:	bd30      	pop	{r4, r5, pc}
	...

080036fc <HAL_UART_RxCpltCallback>:
 * This is the callback for HAL interrupt of UART RX
 *
 * @ingroup UartHandle UART HAL handler
 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *UartHandle)
{
 80036fc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;

    int i;
    for (i = 0; i < numberHandlers; i++ )
 80036fe:	4b16      	ldr	r3, [pc, #88]	; (8003758 <HAL_UART_RxCpltCallback+0x5c>)
    {
    	if (mHandlers[i]->port == UartHandle  )
 8003700:	4d16      	ldr	r5, [pc, #88]	; (800375c <HAL_UART_RxCpltCallback+0x60>)
    for (i = 0; i < numberHandlers; i++ )
 8003702:	781b      	ldrb	r3, [r3, #0]
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 8003704:	2400      	movs	r4, #0
 8003706:	9403      	str	r4, [sp, #12]
    for (i = 0; i < numberHandlers; i++ )
 8003708:	42a3      	cmp	r3, r4
 800370a:	dd21      	ble.n	8003750 <HAL_UART_RxCpltCallback+0x54>
    	if (mHandlers[i]->port == UartHandle  )
 800370c:	f855 6024 	ldr.w	r6, [r5, r4, lsl #2]
 8003710:	6872      	ldr	r2, [r6, #4]
 8003712:	4282      	cmp	r2, r0
 8003714:	d11e      	bne.n	8003754 <HAL_UART_RxCpltCallback+0x58>
    	{
    		xQueueSendToBackFromISR( mHandlers[i]->QueueModbusHandle, &mHandlers[i]->dataRX, pdFALSE);
 8003716:	2300      	movs	r3, #0
 8003718:	461a      	mov	r2, r3
 800371a:	f106 0171 	add.w	r1, r6, #113	; 0x71
 800371e:	6f70      	ldr	r0, [r6, #116]	; 0x74
 8003720:	f004 f8a8 	bl	8007874 <xQueueGenericSendFromISR>
    		HAL_UART_Receive_IT(mHandlers[i]->port, &mHandlers[i]->dataRX, 1);
 8003724:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8003728:	2201      	movs	r2, #1
 800372a:	f103 0171 	add.w	r1, r3, #113	; 0x71
 800372e:	6858      	ldr	r0, [r3, #4]
 8003730:	f002 ffa3 	bl	800667a <HAL_UART_Receive_IT>
    		xTimerResetFromISR(mHandlers[i]->xTimerT35, &xHigherPriorityTaskWoken);
 8003734:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8003738:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 800373c:	f004 fd94 	bl	8008268 <xTaskGetTickCountFromISR>
 8003740:	2300      	movs	r3, #0
 8003742:	9300      	str	r3, [sp, #0]
 8003744:	4602      	mov	r2, r0
 8003746:	ab03      	add	r3, sp, #12
 8003748:	2107      	movs	r1, #7
 800374a:	4620      	mov	r0, r4
 800374c:	f005 fa66 	bl	8008c1c <xTimerGenericCommand>
    		break;
    	}
    }


}
 8003750:	b004      	add	sp, #16
 8003752:	bd70      	pop	{r4, r5, r6, pc}
    for (i = 0; i < numberHandlers; i++ )
 8003754:	3401      	adds	r4, #1
 8003756:	e7d7      	b.n	8003708 <HAL_UART_RxCpltCallback+0xc>
 8003758:	20001462 	.word	0x20001462
 800375c:	20001458 	.word	0x20001458

08003760 <calcCRC>:
 * @return uint16_t calculated CRC value for the message
 * @ingroup Buffer
 * @ingroup u8length
 */
uint16_t calcCRC(uint8_t *Buffer, uint8_t u8length)
{
 8003760:	b570      	push	{r4, r5, r6, lr}
    unsigned int temp, temp2, flag;
    temp = 0xFFFF;
 8003762:	f64f 73ff 	movw	r3, #65535	; 0xffff
    for (unsigned char i = 0; i < u8length; i++)
 8003766:	4604      	mov	r4, r0
        for (unsigned char j = 1; j <= 8; j++)
        {
            flag = temp & 0x0001;
            temp >>=1;
            if (flag)
                temp ^= 0xA001;
 8003768:	f24a 0501 	movw	r5, #40961	; 0xa001
    for (unsigned char i = 0; i < u8length; i++)
 800376c:	1a22      	subs	r2, r4, r0
 800376e:	b2d2      	uxtb	r2, r2
 8003770:	428a      	cmp	r2, r1
 8003772:	d304      	bcc.n	800377e <calcCRC+0x1e>
        }
    }
    // Reverse byte order.
    temp2 = temp >> 8;
    temp = (temp << 8) | temp2;
 8003774:	0218      	lsls	r0, r3, #8
 8003776:	ea40 2013 	orr.w	r0, r0, r3, lsr #8
    temp &= 0xFFFF;
    // the returned value is already swapped
    // crcLo byte is first & crcHi byte is last
    return temp;

}
 800377a:	b280      	uxth	r0, r0
 800377c:	bd70      	pop	{r4, r5, r6, pc}
        temp = temp ^ Buffer[i];
 800377e:	f814 2b01 	ldrb.w	r2, [r4], #1
 8003782:	4053      	eors	r3, r2
 8003784:	2208      	movs	r2, #8
            flag = temp & 0x0001;
 8003786:	f003 0601 	and.w	r6, r3, #1
            temp >>=1;
 800378a:	085b      	lsrs	r3, r3, #1
            if (flag)
 800378c:	b106      	cbz	r6, 8003790 <calcCRC+0x30>
                temp ^= 0xA001;
 800378e:	406b      	eors	r3, r5
 8003790:	3a01      	subs	r2, #1
        for (unsigned char j = 1; j <= 8; j++)
 8003792:	f012 02ff 	ands.w	r2, r2, #255	; 0xff
 8003796:	d1f6      	bne.n	8003786 <calcCRC+0x26>
 8003798:	e7e8      	b.n	800376c <calcCRC+0xc>
	...

0800379c <sendTxBuffer>:
 *
 * @return nothing
 * @ingroup modH Modbus handler
 */
void sendTxBuffer(modbusHandler_t *modH)
{
 800379c:	b573      	push	{r0, r1, r4, r5, r6, lr}
    // append CRC to message
    uint16_t u16crc = calcCRC(modH->au8Buffer, modH->u8BufferSize);
 800379e:	f890 5053 	ldrb.w	r5, [r0, #83]	; 0x53
 80037a2:	f100 0613 	add.w	r6, r0, #19
{
 80037a6:	4604      	mov	r4, r0
    uint16_t u16crc = calcCRC(modH->au8Buffer, modH->u8BufferSize);
 80037a8:	4629      	mov	r1, r5
 80037aa:	4630      	mov	r0, r6
 80037ac:	f7ff ffd8 	bl	8003760 <calcCRC>
    modH->au8Buffer[ modH->u8BufferSize ] = u16crc >> 8;
 80037b0:	1963      	adds	r3, r4, r5
 80037b2:	0a02      	lsrs	r2, r0, #8
 80037b4:	74da      	strb	r2, [r3, #19]
    modH->u8BufferSize++;
 80037b6:	1c6b      	adds	r3, r5, #1
    modH->au8Buffer[ modH->u8BufferSize ] = u16crc & 0x00ff;
 80037b8:	fa54 f383 	uxtab	r3, r4, r3
    modH->u8BufferSize++;
 80037bc:	3502      	adds	r5, #2
    modH->au8Buffer[ modH->u8BufferSize ] = u16crc & 0x00ff;
 80037be:	74d8      	strb	r0, [r3, #19]

    if (modH->EN_Port != NULL)
 80037c0:	68e0      	ldr	r0, [r4, #12]
    modH->u8BufferSize++;
 80037c2:	f884 5053 	strb.w	r5, [r4, #83]	; 0x53
    if (modH->EN_Port != NULL)
 80037c6:	b118      	cbz	r0, 80037d0 <sendTxBuffer+0x34>
    {
        // set RS485 transceiver to transmit mode
    	HAL_GPIO_WritePin(modH->EN_Port, modH->EN_Pin, GPIO_PIN_SET);
 80037c8:	2201      	movs	r2, #1
 80037ca:	8a21      	ldrh	r1, [r4, #16]
 80037cc:	f000 ffb8 	bl	8004740 <HAL_GPIO_WritePin>
    }

    // transfer buffer to serial line
    //port->write( au8Buffer, u8BufferSize );
    //HAL_UART_Transmit(modH->port, modH->au8Buffer , modH->u8BufferSize, 100);
    HAL_UART_Transmit_IT(modH->port, modH->au8Buffer,  modH->u8BufferSize);
 80037d0:	f894 2053 	ldrb.w	r2, [r4, #83]	; 0x53
 80037d4:	6860      	ldr	r0, [r4, #4]
 80037d6:	4631      	mov	r1, r6
 80037d8:	f002 ff30 	bl	800663c <HAL_UART_Transmit_IT>

    ulTaskNotifyTake(pdTRUE, portMAX_DELAY); //wait notification from TXE interrupt
 80037dc:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80037e0:	2001      	movs	r0, #1
 80037e2:	f005 f83b 	bl	800885c <ulTaskNotifyTake>


     if (modH->EN_Port != NULL)
 80037e6:	68e3      	ldr	r3, [r4, #12]
 80037e8:	b163      	cbz	r3, 8003804 <sendTxBuffer+0x68>
    	 while((modH->port->Instance->ISR & USART_ISR_TC) ==0 )
         #else
    	 while((modH->port->Instance->SR & USART_SR_TC) ==0 )
		 #endif
    	 {
    		taskYIELD();
 80037ea:	4a17      	ldr	r2, [pc, #92]	; (8003848 <sendTxBuffer+0xac>)
 80037ec:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
    	 while((modH->port->Instance->SR & USART_SR_TC) ==0 )
 80037f0:	6863      	ldr	r3, [r4, #4]
 80037f2:	681b      	ldr	r3, [r3, #0]
 80037f4:	681b      	ldr	r3, [r3, #0]
 80037f6:	065b      	lsls	r3, r3, #25
 80037f8:	d520      	bpl.n	800383c <sendTxBuffer+0xa0>
    	 }
    	 HAL_GPIO_WritePin(modH->EN_Port, modH->EN_Pin, GPIO_PIN_RESET);
 80037fa:	2200      	movs	r2, #0
 80037fc:	8a21      	ldrh	r1, [r4, #16]
 80037fe:	68e0      	ldr	r0, [r4, #12]
 8003800:	f000 ff9e 	bl	8004740 <HAL_GPIO_WritePin>
     }

     xQueueGenericReset(modH->QueueModbusHandle, pdFALSE);
 8003804:	2100      	movs	r1, #0
 8003806:	6f60      	ldr	r0, [r4, #116]	; 0x74
 8003808:	f003 fe8c 	bl	8007524 <xQueueGenericReset>

     modH->u8BufferSize = 0;

     // set timeout for master query
     if(modH->uiModbusType == MASTER_RTU )
 800380c:	7823      	ldrb	r3, [r4, #0]
     modH->u8BufferSize = 0;
 800380e:	2500      	movs	r5, #0
     if(modH->uiModbusType == MASTER_RTU )
 8003810:	2b04      	cmp	r3, #4
     modH->u8BufferSize = 0;
 8003812:	f884 5053 	strb.w	r5, [r4, #83]	; 0x53
     if(modH->uiModbusType == MASTER_RTU )
 8003816:	d10a      	bne.n	800382e <sendTxBuffer+0x92>
     {
 		xTimerReset(modH->xTimerTimeout,0);
 8003818:	f8d4 6084 	ldr.w	r6, [r4, #132]	; 0x84
 800381c:	f004 fd1e 	bl	800825c <xTaskGetTickCount>
 8003820:	9500      	str	r5, [sp, #0]
 8003822:	4602      	mov	r2, r0
 8003824:	462b      	mov	r3, r5
 8003826:	2102      	movs	r1, #2
 8003828:	4630      	mov	r0, r6
 800382a:	f005 f9f7 	bl	8008c1c <xTimerGenericCommand>
     }

     // increase message counter
     modH->u16OutCnt++;
 800382e:	f8b4 305e 	ldrh.w	r3, [r4, #94]	; 0x5e
 8003832:	3301      	adds	r3, #1
 8003834:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e

}
 8003838:	b002      	add	sp, #8
 800383a:	bd70      	pop	{r4, r5, r6, pc}
    		taskYIELD();
 800383c:	6011      	str	r1, [r2, #0]
 800383e:	f3bf 8f4f 	dsb	sy
 8003842:	f3bf 8f6f 	isb	sy
 8003846:	e7d3      	b.n	80037f0 <sendTxBuffer+0x54>
 8003848:	e000ed04 	.word	0xe000ed04

0800384c <StartTaskModbusSlave>:
{
 800384c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003850:	4604      	mov	r4, r0
 8003852:	b08f      	sub	sp, #60	; 0x3c
	  ulTaskNotifyTake(pdTRUE, portMAX_DELAY); /* Block indefinitely until a Modbus Frame arrives */
 8003854:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003858:	2001      	movs	r0, #1
 800385a:	f004 ffff 	bl	800885c <ulTaskNotifyTake>
	  modH->i8lastError = 0;
 800385e:	f04f 0300 	mov.w	r3, #0
 8003862:	74a3      	strb	r3, [r4, #18]
	  modH->u8BufferSize = uxQueueMessagesWaiting(modH->QueueModbusHandle);
 8003864:	6f60      	ldr	r0, [r4, #116]	; 0x74
 8003866:	f004 fa6c 	bl	8007d42 <uxQueueMessagesWaiting>
 800386a:	f884 0053 	strb.w	r0, [r4, #83]	; 0x53
	  if (modH->EN_Port != NULL )
 800386e:	68e0      	ldr	r0, [r4, #12]
 8003870:	b118      	cbz	r0, 800387a <StartTaskModbusSlave+0x2e>
	     	HAL_GPIO_WritePin(modH->EN_Port, modH->EN_Pin, GPIO_PIN_RESET); // is this required?
 8003872:	2200      	movs	r2, #0
 8003874:	8a21      	ldrh	r1, [r4, #16]
 8003876:	f000 ff63 	bl	8004740 <HAL_GPIO_WritePin>
	  int8_t i8state = getRxBuffer(modH);
 800387a:	4620      	mov	r0, r4
 800387c:	f7ff fe74 	bl	8003568 <getRxBuffer>
	  if (i8state < 7){
 8003880:	2806      	cmp	r0, #6
 8003882:	dc06      	bgt.n	8003892 <StartTaskModbusSlave+0x46>
		  modH->i8lastError = ERR_BAD_SIZE;;
 8003884:	23fa      	movs	r3, #250	; 0xfa
 8003886:	74a3      	strb	r3, [r4, #18]
		  xQueueGenericReset(modH->QueueModbusHandle, pdFALSE);
 8003888:	2100      	movs	r1, #0
 800388a:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800388c:	f003 fe4a 	bl	8007524 <xQueueGenericReset>
		  continue;
 8003890:	e7e0      	b.n	8003854 <StartTaskModbusSlave+0x8>
	  if ( modH->au8Buffer[ID] !=  modH->u8id) continue;
 8003892:	7ce5      	ldrb	r5, [r4, #19]
 8003894:	7a23      	ldrb	r3, [r4, #8]
 8003896:	42ab      	cmp	r3, r5
 8003898:	d1dc      	bne.n	8003854 <StartTaskModbusSlave+0x8>
	        ((modH->au8Buffer[modH->u8BufferSize - 2] << 8)
 800389a:	f894 7053 	ldrb.w	r7, [r4, #83]	; 0x53
	    if ( calcCRC( modH->au8Buffer,  modH->u8BufferSize-2 ) != u16MsgCRC )
 800389e:	1eb9      	subs	r1, r7, #2
	        ((modH->au8Buffer[modH->u8BufferSize - 2] << 8)
 80038a0:	4427      	add	r7, r4
	    if ( calcCRC( modH->au8Buffer,  modH->u8BufferSize-2 ) != u16MsgCRC )
 80038a2:	b2c9      	uxtb	r1, r1
 80038a4:	f104 0013 	add.w	r0, r4, #19
 80038a8:	f7ff ff5a 	bl	8003760 <calcCRC>
	        ((modH->au8Buffer[modH->u8BufferSize - 2] << 8)
 80038ac:	7c7a      	ldrb	r2, [r7, #17]
	         | modH->au8Buffer[modH->u8BufferSize - 1]); // combine the crc Low & High bytes
 80038ae:	7cbb      	ldrb	r3, [r7, #18]
	    if ( calcCRC( modH->au8Buffer,  modH->u8BufferSize-2 ) != u16MsgCRC )
 80038b0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80038b4:	4283      	cmp	r3, r0
 80038b6:	d007      	beq.n	80038c8 <StartTaskModbusSlave+0x7c>
	    	modH->u16errCnt ++;
 80038b8:	f8b4 3060 	ldrh.w	r3, [r4, #96]	; 0x60
 80038bc:	3301      	adds	r3, #1
 80038be:	f8a4 3060 	strh.w	r3, [r4, #96]	; 0x60
	        return NO_REPLY;
 80038c2:	27ff      	movs	r7, #255	; 0xff
		  modH->i8lastError = u8exception;
 80038c4:	74a7      	strb	r7, [r4, #18]
		  continue;
 80038c6:	e7c5      	b.n	8003854 <StartTaskModbusSlave+0x8>
	        if (fctsupported[i] == modH->au8Buffer[FUNC])
 80038c8:	7d23      	ldrb	r3, [r4, #20]
 80038ca:	2200      	movs	r2, #0
 80038cc:	49b8      	ldr	r1, [pc, #736]	; (8003bb0 <StartTaskModbusSlave+0x364>)
 80038ce:	5c51      	ldrb	r1, [r2, r1]
 80038d0:	4299      	cmp	r1, r3
 80038d2:	f000 81cc 	beq.w	8003c6e <StartTaskModbusSlave+0x422>
 80038d6:	3201      	adds	r2, #1
	    for (uint8_t i = 0; i< sizeof( fctsupported ); i++)
 80038d8:	2a08      	cmp	r2, #8
 80038da:	d1f7      	bne.n	80038cc <StartTaskModbusSlave+0x80>
	    	modH->u16errCnt ++;
 80038dc:	f8b4 2060 	ldrh.w	r2, [r4, #96]	; 0x60
 80038e0:	3201      	adds	r2, #1
 80038e2:	f8a4 2060 	strh.w	r2, [r4, #96]	; 0x60
	        return EXC_FUNC_CODE;
 80038e6:	2701      	movs	r7, #1
    modH->au8Buffer[ FUNC ]    = u8func + 0x80;
 80038e8:	3b80      	subs	r3, #128	; 0x80
 80038ea:	7523      	strb	r3, [r4, #20]
    modH->u8BufferSize         = EXCEPTION_SIZE;
 80038ec:	2303      	movs	r3, #3
    modH->au8Buffer[ ID ]      = modH->u8id;
 80038ee:	74e5      	strb	r5, [r4, #19]
    modH->au8Buffer[ 2 ]       = u8exception;
 80038f0:	7567      	strb	r7, [r4, #21]
    modH->u8BufferSize         = EXCEPTION_SIZE;
 80038f2:	f884 3053 	strb.w	r3, [r4, #83]	; 0x53
			  sendTxBuffer(modH);
 80038f6:	4620      	mov	r0, r4
 80038f8:	f7ff ff50 	bl	800379c <sendTxBuffer>
 80038fc:	e7e2      	b.n	80038c4 <StartTaskModbusSlave+0x78>
	W.u8[0] = L;
 80038fe:	7da1      	ldrb	r1, [r4, #22]
 8003900:	980a      	ldr	r0, [sp, #40]	; 0x28
	        u16regs = word( modH->au8Buffer[ ADD_HI ], modH->au8Buffer[ ADD_LO ]) / 16;
 8003902:	7d62      	ldrb	r2, [r4, #21]
	W.u8[0] = L;
 8003904:	f361 0007 	bfi	r0, r1, #0, #8
 8003908:	4601      	mov	r1, r0
	W.u8[1] = H;
 800390a:	f362 210f 	bfi	r1, r2, #8, #8
 800390e:	910a      	str	r1, [sp, #40]	; 0x28
	W.u8[0] = L;
 8003910:	7e21      	ldrb	r1, [r4, #24]
	        u16regs += word( modH->au8Buffer[ NB_HI ], modH->au8Buffer[ NB_LO ]) /16;
 8003912:	7de2      	ldrb	r2, [r4, #23]
	W.u8[0] = L;
 8003914:	f361 0607 	bfi	r6, r1, #0, #8
	W.u8[1] = H;
 8003918:	f362 260f 	bfi	r6, r2, #8, #8
	        u16regs += word( modH->au8Buffer[ NB_HI ], modH->au8Buffer[ NB_LO ]) /16;
 800391c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800391e:	f3c6 120b 	ubfx	r2, r6, #4, #12
 8003922:	eb02 1211 	add.w	r2, r2, r1, lsr #4
	        if (u8regs > modH->u8regsize) return EXC_ADDR_RANGE;
 8003926:	f894 1070 	ldrb.w	r1, [r4, #112]	; 0x70
 800392a:	f002 02ff 	and.w	r2, r2, #255	; 0xff
 800392e:	428a      	cmp	r2, r1
 8003930:	e00d      	b.n	800394e <StartTaskModbusSlave+0x102>
	W.u8[0] = L;
 8003932:	7da1      	ldrb	r1, [r4, #22]
 8003934:	9809      	ldr	r0, [sp, #36]	; 0x24
	        u16regs = word( modH->au8Buffer[ ADD_HI ], modH->au8Buffer[ ADD_LO ]) / 16;
 8003936:	7d62      	ldrb	r2, [r4, #21]
	W.u8[0] = L;
 8003938:	f361 0007 	bfi	r0, r1, #0, #8
 800393c:	4601      	mov	r1, r0
	W.u8[1] = H;
 800393e:	f362 210f 	bfi	r1, r2, #8, #8
	        if (u8regs > modH->u8regsize) return EXC_ADDR_RANGE;
 8003942:	f894 2070 	ldrb.w	r2, [r4, #112]	; 0x70
	W.u8[1] = H;
 8003946:	9109      	str	r1, [sp, #36]	; 0x24
	        if (u8regs > modH->u8regsize) return EXC_ADDR_RANGE;
 8003948:	f3c1 1107 	ubfx	r1, r1, #4, #8
 800394c:	4291      	cmp	r1, r2
	        if (u8regs > modH->u8regsize) return EXC_ADDR_RANGE;
 800394e:	d82e      	bhi.n	80039ae <StartTaskModbusSlave+0x162>
	  modH->i8lastError = 0;
 8003950:	f04f 0300 	mov.w	r3, #0
 8003954:	74a3      	strb	r3, [r4, #18]
	  xSemaphoreTake(modH->ModBusSphrHandle , portMAX_DELAY); //before processing the message get the semaphore
 8003956:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800395a:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 800395e:	f004 f8df 	bl	8007b20 <xQueueSemaphoreTake>
	    switch(modH->au8Buffer[ FUNC ] )
 8003962:	7d23      	ldrb	r3, [r4, #20]
 8003964:	3b01      	subs	r3, #1
 8003966:	2b0f      	cmp	r3, #15
 8003968:	f200 8104 	bhi.w	8003b74 <StartTaskModbusSlave+0x328>
 800396c:	e8df f013 	tbh	[pc, r3, lsl #1]
 8003970:	00370037 	.word	0x00370037
 8003974:	009b009b 	.word	0x009b009b
 8003978:	010a00db 	.word	0x010a00db
 800397c:	01020102 	.word	0x01020102
 8003980:	01020102 	.word	0x01020102
 8003984:	01020102 	.word	0x01020102
 8003988:	01020102 	.word	0x01020102
 800398c:	01630122 	.word	0x01630122
	W.u8[0] = L;
 8003990:	7da1      	ldrb	r1, [r4, #22]
 8003992:	9808      	ldr	r0, [sp, #32]
	        u16regs = word( modH->au8Buffer[ ADD_HI ], modH->au8Buffer[ ADD_LO ]);
 8003994:	7d62      	ldrb	r2, [r4, #21]
	W.u8[0] = L;
 8003996:	f361 0007 	bfi	r0, r1, #0, #8
 800399a:	4601      	mov	r1, r0
	W.u8[1] = H;
 800399c:	f362 210f 	bfi	r1, r2, #8, #8
 80039a0:	9108      	str	r1, [sp, #32]
	        if (u8regs >modH-> u8regsize) return EXC_ADDR_RANGE;
 80039a2:	f89d 2020 	ldrb.w	r2, [sp, #32]
 80039a6:	f894 1070 	ldrb.w	r1, [r4, #112]	; 0x70
 80039aa:	4291      	cmp	r1, r2
 80039ac:	d2d0      	bcs.n	8003950 <StartTaskModbusSlave+0x104>
	        if (u8regs > modH->u8regsize) return EXC_ADDR_RANGE;
 80039ae:	2702      	movs	r7, #2
 80039b0:	e79a      	b.n	80038e8 <StartTaskModbusSlave+0x9c>
	W.u8[0] = L;
 80039b2:	7da1      	ldrb	r1, [r4, #22]
 80039b4:	9806      	ldr	r0, [sp, #24]
	        u16regs = word( modH->au8Buffer[ ADD_HI ], modH->au8Buffer[ ADD_LO ]);
 80039b6:	7d62      	ldrb	r2, [r4, #21]
	W.u8[0] = L;
 80039b8:	f361 0007 	bfi	r0, r1, #0, #8
 80039bc:	4601      	mov	r1, r0
	W.u8[1] = H;
 80039be:	f362 210f 	bfi	r1, r2, #8, #8
 80039c2:	9106      	str	r1, [sp, #24]
	W.u8[0] = L;
 80039c4:	9807      	ldr	r0, [sp, #28]
 80039c6:	7e21      	ldrb	r1, [r4, #24]
	        u16regs += word( modH->au8Buffer[ NB_HI ], modH->au8Buffer[ NB_LO ]);
 80039c8:	7de2      	ldrb	r2, [r4, #23]
	W.u8[0] = L;
 80039ca:	f361 0007 	bfi	r0, r1, #0, #8
 80039ce:	4601      	mov	r1, r0
	W.u8[1] = H;
 80039d0:	f362 210f 	bfi	r1, r2, #8, #8
 80039d4:	460a      	mov	r2, r1
 80039d6:	9107      	str	r1, [sp, #28]
	        u16regs += word( modH->au8Buffer[ NB_HI ], modH->au8Buffer[ NB_LO ]);
 80039d8:	9906      	ldr	r1, [sp, #24]
 80039da:	440a      	add	r2, r1
 80039dc:	e7a3      	b.n	8003926 <StartTaskModbusSlave+0xda>
	W.u8[0] = L;
 80039de:	7da2      	ldrb	r2, [r4, #22]
 80039e0:	9904      	ldr	r1, [sp, #16]
    uint8_t u8currentRegister, u8currentBit, u8bytesno, u8bitsno;
    uint8_t u8CopyBufferSize;
    uint16_t u16currentCoil, u16coil;

    // get the first and last coil from the message
    uint16_t u16StartCoil = word( modH->au8Buffer[ ADD_HI ], modH->au8Buffer[ ADD_LO ] );
 80039e2:	7d63      	ldrb	r3, [r4, #21]
	W.u8[0] = L;
 80039e4:	f362 0107 	bfi	r1, r2, #0, #8
 80039e8:	460a      	mov	r2, r1
	W.u8[1] = H;
 80039ea:	f363 220f 	bfi	r2, r3, #8, #8
 80039ee:	9204      	str	r2, [sp, #16]
	W.u8[0] = L;
 80039f0:	9905      	ldr	r1, [sp, #20]
 80039f2:	7e22      	ldrb	r2, [r4, #24]
	return W.u16[0];
 80039f4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80039f8:	930b      	str	r3, [sp, #44]	; 0x2c
	W.u8[0] = L;
 80039fa:	f362 0107 	bfi	r1, r2, #0, #8
    uint16_t u16Coilno = word( modH->au8Buffer[ NB_HI ], modH->au8Buffer[ NB_LO ] );
 80039fe:	7de3      	ldrb	r3, [r4, #23]
	W.u8[0] = L;
 8003a00:	460a      	mov	r2, r1
	W.u8[1] = H;
 8003a02:	f363 220f 	bfi	r2, r3, #8, #8
 8003a06:	9205      	str	r2, [sp, #20]
	return W.u16[0];
 8003a08:	f8bd c014 	ldrh.w	ip, [sp, #20]

    // put the number of bytes in the outcoming message
    u8bytesno = (uint8_t) (u16Coilno / 8);
 8003a0c:	f3cc 03c7 	ubfx	r3, ip, #3, #8
    if (u16Coilno % 8 != 0) u8bytesno ++;
 8003a10:	f01c 0207 	ands.w	r2, ip, #7
 8003a14:	bf1c      	itt	ne
 8003a16:	3301      	addne	r3, #1
 8003a18:	b2db      	uxtbne	r3, r3
    modH->au8Buffer[ ADD_HI ]  = u8bytesno;
 8003a1a:	7563      	strb	r3, [r4, #21]
    if (u16Coilno % 8 != 0) u8bytesno ++;
 8003a1c:	920d      	str	r2, [sp, #52]	; 0x34
    modH->u8BufferSize         = ADD_LO;
    modH->au8Buffer[modH->u8BufferSize + u8bytesno - 1 ] = 0;
 8003a1e:	4423      	add	r3, r4
    modH->u8BufferSize         = ADD_LO;
 8003a20:	2203      	movs	r2, #3
 8003a22:	f884 2053 	strb.w	r2, [r4, #83]	; 0x53
    modH->au8Buffer[modH->u8BufferSize + u8bytesno - 1 ] = 0;
 8003a26:	2500      	movs	r5, #0
 8003a28:	f04f 0200 	mov.w	r2, #0
 8003a2c:	755a      	strb	r2, [r3, #21]

    // read each coil from the register map and put its value inside the outcoming message
    u8bitsno = 0;
 8003a2e:	462a      	mov	r2, r5
 8003a30:	b2a8      	uxth	r0, r5

    for (u16currentCoil = 0; u16currentCoil < u16Coilno; u16currentCoil++)
 8003a32:	4560      	cmp	r0, ip
 8003a34:	f894 3053 	ldrb.w	r3, [r4, #83]	; 0x53
 8003a38:	d309      	bcc.n	8003a4e <StartTaskModbusSlave+0x202>
            modH->u8BufferSize++;
        }
    }

    // send outcoming message
    if (u16Coilno % 8 != 0) modH->u8BufferSize ++;
 8003a3a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003a3c:	b112      	cbz	r2, 8003a44 <StartTaskModbusSlave+0x1f8>
 8003a3e:	3301      	adds	r3, #1
 8003a40:	f884 3053 	strb.w	r3, [r4, #83]	; 0x53
        		modH->au8Buffer[ (BYTE_CNT + 1) + i * 2 ],
				modH->au8Buffer[ (BYTE_CNT + 2) + i * 2 ]);

        modH->au16regs[ u8StartAdd + i ] = temp;
    }
    u8CopyBufferSize = modH->u8BufferSize +2;
 8003a44:	f894 5053 	ldrb.w	r5, [r4, #83]	; 0x53
 8003a48:	3502      	adds	r5, #2
 8003a4a:	b2ed      	uxtb	r5, r5
 8003a4c:	e04e      	b.n	8003aec <StartTaskModbusSlave+0x2a0>
        u8currentRegister = (uint8_t) (u16coil / 16);
 8003a4e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8003a50:	4438      	add	r0, r7
        bitWrite(
 8003a52:	f3c0 1007 	ubfx	r0, r0, #4, #8
 8003a56:	6da7      	ldr	r7, [r4, #88]	; 0x58
 8003a58:	f837 0010 	ldrh.w	r0, [r7, r0, lsl #1]
        u8currentBit = (uint8_t) (u16coil % 16);
 8003a5c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8003a5e:	2101      	movs	r1, #1
 8003a60:	fa01 fe02 	lsl.w	lr, r1, r2
 8003a64:	442f      	add	r7, r5
 8003a66:	fa5f f18e 	uxtb.w	r1, lr
        bitWrite(
 8003a6a:	f007 070f 	and.w	r7, r7, #15
 8003a6e:	eb04 0e03 	add.w	lr, r4, r3
 8003a72:	910c      	str	r1, [sp, #48]	; 0x30
 8003a74:	4138      	asrs	r0, r7
 8003a76:	f89e 1013 	ldrb.w	r1, [lr, #19]
 8003a7a:	f010 0f01 	tst.w	r0, #1
 8003a7e:	980c      	ldr	r0, [sp, #48]	; 0x30
        u8bitsno ++;
 8003a80:	f102 0201 	add.w	r2, r2, #1
        bitWrite(
 8003a84:	bf18      	it	ne
 8003a86:	4308      	orrne	r0, r1
        u8bitsno ++;
 8003a88:	b2d2      	uxtb	r2, r2
        bitWrite(
 8003a8a:	bf14      	ite	ne
 8003a8c:	4601      	movne	r1, r0
 8003a8e:	4381      	biceq	r1, r0
        if (u8bitsno > 7)
 8003a90:	2a07      	cmp	r2, #7
            modH->u8BufferSize++;
 8003a92:	bf88      	it	hi
 8003a94:	3301      	addhi	r3, #1
        bitWrite(
 8003a96:	f88e 1013 	strb.w	r1, [lr, #19]
            u8bitsno = 0;
 8003a9a:	bf84      	itt	hi
 8003a9c:	2200      	movhi	r2, #0
            modH->u8BufferSize++;
 8003a9e:	f884 3053 	strbhi.w	r3, [r4, #83]	; 0x53
 8003aa2:	3501      	adds	r5, #1
 8003aa4:	e7c4      	b.n	8003a30 <StartTaskModbusSlave+0x1e4>
	W.u8[0] = L;
 8003aa6:	7da2      	ldrb	r2, [r4, #22]
 8003aa8:	9902      	ldr	r1, [sp, #8]
    uint8_t u8StartAdd = word( modH->au8Buffer[ ADD_HI ], modH->au8Buffer[ ADD_LO ] );
 8003aaa:	7d63      	ldrb	r3, [r4, #21]
	W.u8[0] = L;
 8003aac:	f362 0107 	bfi	r1, r2, #0, #8
 8003ab0:	460a      	mov	r2, r1
	W.u8[1] = H;
 8003ab2:	f363 220f 	bfi	r2, r3, #8, #8
 8003ab6:	9202      	str	r2, [sp, #8]
	W.u8[0] = L;
 8003ab8:	9903      	ldr	r1, [sp, #12]
 8003aba:	7e22      	ldrb	r2, [r4, #24]
    uint8_t u8regsno = word( modH->au8Buffer[ NB_HI ], modH->au8Buffer[ NB_LO ] );
 8003abc:	7de3      	ldrb	r3, [r4, #23]
	W.u8[0] = L;
 8003abe:	f362 0107 	bfi	r1, r2, #0, #8
 8003ac2:	460a      	mov	r2, r1
	W.u8[1] = H;
 8003ac4:	f363 220f 	bfi	r2, r3, #8, #8
 8003ac8:	9203      	str	r2, [sp, #12]
    uint8_t u8regsno = word( modH->au8Buffer[ NB_HI ], modH->au8Buffer[ NB_LO ] );
 8003aca:	f89d 100c 	ldrb.w	r1, [sp, #12]
    for (i = u8StartAdd; i < u8StartAdd + u8regsno; i++)
 8003ace:	f89d 2008 	ldrb.w	r2, [sp, #8]
    modH->au8Buffer[ 2 ]       = u8regsno * 2;
 8003ad2:	004b      	lsls	r3, r1, #1
 8003ad4:	7563      	strb	r3, [r4, #21]
    modH->u8BufferSize         = 3;
 8003ad6:	2303      	movs	r3, #3
 8003ad8:	f884 3053 	strb.w	r3, [r4, #83]	; 0x53
    for (i = u8StartAdd; i < u8StartAdd + u8regsno; i++)
 8003adc:	4411      	add	r1, r2
 8003ade:	f894 3053 	ldrb.w	r3, [r4, #83]	; 0x53
 8003ae2:	428a      	cmp	r2, r1
 8003ae4:	f103 0502 	add.w	r5, r3, #2
 8003ae8:	b2ed      	uxtb	r5, r5
 8003aea:	db05      	blt.n	8003af8 <StartTaskModbusSlave+0x2ac>
    sendTxBuffer(modH);
 8003aec:	4620      	mov	r0, r4
 8003aee:	f7ff fe55 	bl	800379c <sendTxBuffer>
				modH->i8state = process_FC16(modH);
 8003af2:	f884 5072 	strb.w	r5, [r4, #114]	; 0x72
				break;
 8003af6:	e03d      	b.n	8003b74 <StartTaskModbusSlave+0x328>
    	modH->au8Buffer[ modH->u8BufferSize ] = highByte(modH->au16regs[i]);
 8003af8:	6da7      	ldr	r7, [r4, #88]	; 0x58
 8003afa:	fa0f fc82 	sxth.w	ip, r2
 8003afe:	eb04 0e03 	add.w	lr, r4, r3
 8003b02:	f837 001c 	ldrh.w	r0, [r7, ip, lsl #1]
    	modH->u8BufferSize++;
 8003b06:	3301      	adds	r3, #1
    	modH->au8Buffer[ modH->u8BufferSize ] = highByte(modH->au16regs[i]);
 8003b08:	0a00      	lsrs	r0, r0, #8
    	modH->u8BufferSize++;
 8003b0a:	b2db      	uxtb	r3, r3
    	modH->au8Buffer[ modH->u8BufferSize ] = highByte(modH->au16regs[i]);
 8003b0c:	f88e 0013 	strb.w	r0, [lr, #19]
    	modH->u8BufferSize++;
 8003b10:	f884 3053 	strb.w	r3, [r4, #83]	; 0x53
    	modH->au8Buffer[ modH->u8BufferSize ] = lowByte(modH->au16regs[i]);
 8003b14:	4423      	add	r3, r4
 8003b16:	f837 001c 	ldrh.w	r0, [r7, ip, lsl #1]
 8003b1a:	74d8      	strb	r0, [r3, #19]
    for (i = u8StartAdd; i < u8StartAdd + u8regsno; i++)
 8003b1c:	3201      	adds	r2, #1
    	modH->u8BufferSize++;
 8003b1e:	f884 5053 	strb.w	r5, [r4, #83]	; 0x53
    for (i = u8StartAdd; i < u8StartAdd + u8regsno; i++)
 8003b22:	b2d2      	uxtb	r2, r2
 8003b24:	e7db      	b.n	8003ade <StartTaskModbusSlave+0x292>
	W.u8[0] = L;
 8003b26:	7da2      	ldrb	r2, [r4, #22]
 8003b28:	9901      	ldr	r1, [sp, #4]
    uint16_t u16coil = word( modH->au8Buffer[ ADD_HI ], modH->au8Buffer[ ADD_LO ] );
 8003b2a:	7d63      	ldrb	r3, [r4, #21]
	W.u8[0] = L;
 8003b2c:	f362 0107 	bfi	r1, r2, #0, #8
 8003b30:	460a      	mov	r2, r1
	W.u8[1] = H;
 8003b32:	f363 220f 	bfi	r2, r3, #8, #8
 8003b36:	9201      	str	r2, [sp, #4]
	return W.u16[0];
 8003b38:	f8bd 2004 	ldrh.w	r2, [sp, #4]
    bitWrite(
 8003b3c:	7de3      	ldrb	r3, [r4, #23]
 8003b3e:	6da1      	ldr	r1, [r4, #88]	; 0x58
    u8currentBit = (uint8_t) (u16coil % 16);
 8003b40:	f002 000f 	and.w	r0, r2, #15
 8003b44:	f3c2 1207 	ubfx	r2, r2, #4, #8
    bitWrite(
 8003b48:	2bff      	cmp	r3, #255	; 0xff
 8003b4a:	f04f 0301 	mov.w	r3, #1
 8003b4e:	fa03 f300 	lsl.w	r3, r3, r0
 8003b52:	f831 0012 	ldrh.w	r0, [r1, r2, lsl #1]
 8003b56:	bf0c      	ite	eq
 8003b58:	4303      	orreq	r3, r0
 8003b5a:	ea20 0303 	bicne.w	r3, r0, r3
 8003b5e:	f821 3012 	strh.w	r3, [r1, r2, lsl #1]
    modH->u8BufferSize = RESPONSE_SIZE;
 8003b62:	2306      	movs	r3, #6
 8003b64:	f884 3053 	strb.w	r3, [r4, #83]	; 0x53
    sendTxBuffer(modH);
 8003b68:	4620      	mov	r0, r4
 8003b6a:	f7ff fe17 	bl	800379c <sendTxBuffer>
				modH->i8state = process_FC6(modH);
 8003b6e:	2308      	movs	r3, #8
 8003b70:	f884 3072 	strb.w	r3, [r4, #114]	; 0x72
	    xSemaphoreGive(modH->ModBusSphrHandle); //Release the semaphore
 8003b74:	2300      	movs	r3, #0
 8003b76:	461a      	mov	r2, r3
 8003b78:	4619      	mov	r1, r3
 8003b7a:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8003b7e:	f003 fdc7 	bl	8007710 <xQueueGenericSend>
	    continue;
 8003b82:	e667      	b.n	8003854 <StartTaskModbusSlave+0x8>
	W.u8[0] = L;
 8003b84:	7da2      	ldrb	r2, [r4, #22]
    uint8_t u8add = word( modH->au8Buffer[ ADD_HI ], modH->au8Buffer[ ADD_LO ] );
 8003b86:	7d63      	ldrb	r3, [r4, #21]
	W.u8[0] = L;
 8003b88:	9900      	ldr	r1, [sp, #0]
 8003b8a:	f362 0807 	bfi	r8, r2, #0, #8
 8003b8e:	7e22      	ldrb	r2, [r4, #24]
	W.u8[1] = H;
 8003b90:	f363 280f 	bfi	r8, r3, #8, #8
	W.u8[0] = L;
 8003b94:	f362 0107 	bfi	r1, r2, #0, #8
    uint16_t u16val = word( modH->au8Buffer[ NB_HI ], modH->au8Buffer[ NB_LO ] );
 8003b98:	7de3      	ldrb	r3, [r4, #23]
	W.u8[0] = L;
 8003b9a:	460a      	mov	r2, r1
	W.u8[1] = H;
 8003b9c:	f363 220f 	bfi	r2, r3, #8, #8
 8003ba0:	9200      	str	r2, [sp, #0]
    modH->au16regs[ u8add ] = u16val;
 8003ba2:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8003ba4:	9900      	ldr	r1, [sp, #0]
 8003ba6:	fa5f f288 	uxtb.w	r2, r8
 8003baa:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8003bae:	e7d8      	b.n	8003b62 <StartTaskModbusSlave+0x316>
 8003bb0:	0801bc5c 	.word	0x0801bc5c
	W.u8[0] = L;
 8003bb4:	7da2      	ldrb	r2, [r4, #22]
    uint16_t u16StartCoil = word( modH->au8Buffer[ ADD_HI ], modH->au8Buffer[ ADD_LO ] );
 8003bb6:	7d63      	ldrb	r3, [r4, #21]
	W.u8[0] = L;
 8003bb8:	f362 0a07 	bfi	sl, r2, #0, #8
	W.u8[1] = H;
 8003bbc:	f363 2a0f 	bfi	sl, r3, #8, #8
	return W.u16[0];
 8003bc0:	fa1f f38a 	uxth.w	r3, sl
	W.u8[0] = L;
 8003bc4:	7e22      	ldrb	r2, [r4, #24]
	return W.u16[0];
 8003bc6:	930b      	str	r3, [sp, #44]	; 0x2c
    uint16_t u16Coilno = word( modH->au8Buffer[ NB_HI ], modH->au8Buffer[ NB_LO ] );
 8003bc8:	7de3      	ldrb	r3, [r4, #23]
	W.u8[0] = L;
 8003bca:	f362 0907 	bfi	r9, r2, #0, #8
	W.u8[1] = H;
 8003bce:	f363 290f 	bfi	r9, r3, #8, #8
	return W.u16[0];
 8003bd2:	fa1f f389 	uxth.w	r3, r9
 8003bd6:	2500      	movs	r5, #0
 8003bd8:	930c      	str	r3, [sp, #48]	; 0x30
    u8bitsno = 0;
 8003bda:	4629      	mov	r1, r5
    u8frameByte = 7;
 8003bdc:	2707      	movs	r7, #7
    for (u16currentCoil = 0; u16currentCoil < u16Coilno; u16currentCoil++)
 8003bde:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8003be0:	b2ab      	uxth	r3, r5
 8003be2:	429a      	cmp	r2, r3
 8003be4:	d9bd      	bls.n	8003b62 <StartTaskModbusSlave+0x316>
        u8currentBit = (uint8_t) (u16coil % 16);
 8003be6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003be8:	f8d4 c058 	ldr.w	ip, [r4, #88]	; 0x58
 8003bec:	442a      	add	r2, r5
 8003bee:	2001      	movs	r0, #1
 8003bf0:	f002 020f 	and.w	r2, r2, #15
 8003bf4:	fa00 f202 	lsl.w	r2, r0, r2
        u8currentRegister = (uint8_t) (u16coil / 16);
 8003bf8:	980b      	ldr	r0, [sp, #44]	; 0x2c
        bTemp = bitRead(
 8003bfa:	eb04 0e07 	add.w	lr, r4, r7
        u8currentRegister = (uint8_t) (u16coil / 16);
 8003bfe:	4403      	add	r3, r0
 8003c00:	f3c3 1307 	ubfx	r3, r3, #4, #8
        bTemp = bitRead(
 8003c04:	f89e e013 	ldrb.w	lr, [lr, #19]
 8003c08:	f83c 0013 	ldrh.w	r0, [ip, r3, lsl #1]
 8003c0c:	fa4e fe01 	asr.w	lr, lr, r1
        u8bitsno ++;
 8003c10:	3101      	adds	r1, #1
 8003c12:	b292      	uxth	r2, r2
        bitWrite(
 8003c14:	f01e 0f01 	tst.w	lr, #1
        u8bitsno ++;
 8003c18:	b2c9      	uxtb	r1, r1
        bitWrite(
 8003c1a:	bf14      	ite	ne
 8003c1c:	4302      	orrne	r2, r0
 8003c1e:	ea20 0202 	biceq.w	r2, r0, r2
        if (u8bitsno > 7)
 8003c22:	2907      	cmp	r1, #7
            u8frameByte++;
 8003c24:	bf88      	it	hi
 8003c26:	3701      	addhi	r7, #1
        bitWrite(
 8003c28:	f82c 2013 	strh.w	r2, [ip, r3, lsl #1]
            u8frameByte++;
 8003c2c:	bf84      	itt	hi
 8003c2e:	b2ff      	uxtbhi	r7, r7
            u8bitsno = 0;
 8003c30:	2100      	movhi	r1, #0
 8003c32:	3501      	adds	r5, #1
 8003c34:	e7d3      	b.n	8003bde <StartTaskModbusSlave+0x392>
    modH->au8Buffer[ NB_HI ]   = 0;
 8003c36:	f04f 0300 	mov.w	r3, #0
    uint8_t u8StartAdd = modH->au8Buffer[ ADD_HI ] << 8 | modH->au8Buffer[ ADD_LO ];
 8003c3a:	7da1      	ldrb	r1, [r4, #22]
    uint8_t u8regsno = modH->au8Buffer[ NB_HI ] << 8 | modH->au8Buffer[ NB_LO ];
 8003c3c:	7e22      	ldrb	r2, [r4, #24]
    modH->au8Buffer[ NB_HI ]   = 0;
 8003c3e:	75e3      	strb	r3, [r4, #23]
    modH->u8BufferSize         = RESPONSE_SIZE;
 8003c40:	2306      	movs	r3, #6
 8003c42:	f884 3053 	strb.w	r3, [r4, #83]	; 0x53
 8003c46:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003c4a:	4623      	mov	r3, r4
 8003c4c:	ebc4 0141 	rsb	r1, r4, r1, lsl #1
    for (i = 0; i < u8regsno; i++)
 8003c50:	4293      	cmp	r3, r2
 8003c52:	f43f aef7 	beq.w	8003a44 <StartTaskModbusSlave+0x1f8>
	W.u8[0] = L;
 8003c56:	7edd      	ldrb	r5, [r3, #27]
        temp = word(
 8003c58:	7e98      	ldrb	r0, [r3, #26]
	W.u8[0] = L;
 8003c5a:	f365 0b07 	bfi	fp, r5, #0, #8
	W.u8[1] = H;
 8003c5e:	f360 2b0f 	bfi	fp, r0, #8, #8
        modH->au16regs[ u8StartAdd + i ] = temp;
 8003c62:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003c64:	4408      	add	r0, r1
 8003c66:	f820 b003 	strh.w	fp, [r0, r3]
 8003c6a:	3302      	adds	r3, #2
 8003c6c:	e7f0      	b.n	8003c50 <StartTaskModbusSlave+0x404>
	    switch ( modH->au8Buffer[ FUNC ] )
 8003c6e:	1e5a      	subs	r2, r3, #1
 8003c70:	2a0f      	cmp	r2, #15
 8003c72:	f63f ae6d 	bhi.w	8003950 <StartTaskModbusSlave+0x104>
 8003c76:	a101      	add	r1, pc, #4	; (adr r1, 8003c7c <StartTaskModbusSlave+0x430>)
 8003c78:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8003c7c:	080038ff 	.word	0x080038ff
 8003c80:	080038ff 	.word	0x080038ff
 8003c84:	080039b3 	.word	0x080039b3
 8003c88:	080039b3 	.word	0x080039b3
 8003c8c:	08003933 	.word	0x08003933
 8003c90:	08003991 	.word	0x08003991
 8003c94:	08003951 	.word	0x08003951
 8003c98:	08003951 	.word	0x08003951
 8003c9c:	08003951 	.word	0x08003951
 8003ca0:	08003951 	.word	0x08003951
 8003ca4:	08003951 	.word	0x08003951
 8003ca8:	08003951 	.word	0x08003951
 8003cac:	08003951 	.word	0x08003951
 8003cb0:	08003951 	.word	0x08003951
 8003cb4:	080038ff 	.word	0x080038ff
 8003cb8:	080039b3 	.word	0x080039b3

08003cbc <StartTaskModbusMaster>:
{
 8003cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003cc0:	4604      	mov	r4, r0
 8003cc2:	b089      	sub	sp, #36	; 0x24
		 xSemaphoreGive(modH->ModBusSphrHandle);
 8003cc4:	2700      	movs	r7, #0
	  xQueueReceive(modH->QueueTelegramHandle, &telegram, portMAX_DELAY);
 8003cc6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003cca:	a905      	add	r1, sp, #20
 8003ccc:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 8003cce:	f003 fe87 	bl	80079e0 <xQueueReceive>
	  SendQuery(modH, telegram);
 8003cd2:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8003cd6:	f8bd 3016 	ldrh.w	r3, [sp, #22]
	xSemaphoreTake(modH->ModBusSphrHandle , portMAX_DELAY); //before processing the message get the semaphore
 8003cda:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
	  SendQuery(modH, telegram);
 8003cde:	9203      	str	r2, [sp, #12]
	xSemaphoreTake(modH->ModBusSphrHandle , portMAX_DELAY); //before processing the message get the semaphore
 8003ce0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
	  SendQuery(modH, telegram);
 8003ce4:	9302      	str	r3, [sp, #8]
 8003ce6:	f89d 8015 	ldrb.w	r8, [sp, #21]
 8003cea:	f8bd 6018 	ldrh.w	r6, [sp, #24]
 8003cee:	9d07      	ldr	r5, [sp, #28]
	xSemaphoreTake(modH->ModBusSphrHandle , portMAX_DELAY); //before processing the message get the semaphore
 8003cf0:	f003 ff16 	bl	8007b20 <xQueueSemaphoreTake>
	if (modH->i8state != COM_IDLE) error = ERR_POLLING ;
 8003cf4:	f994 0072 	ldrsb.w	r0, [r4, #114]	; 0x72
	if (modH->u8id!=0) error = ERR_NOT_MASTER;
 8003cf8:	7a21      	ldrb	r1, [r4, #8]
	if (modH->i8state != COM_IDLE) error = ERR_POLLING ;
 8003cfa:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8003cfe:	bb48      	cbnz	r0, 8003d54 <StartTaskModbusMaster+0x98>
	if (modH->u8id!=0) error = ERR_NOT_MASTER;
 8003d00:	2900      	cmp	r1, #0
 8003d02:	bf14      	ite	ne
 8003d04:	21ff      	movne	r1, #255	; 0xff
 8003d06:	2100      	moveq	r1, #0
	if ((telegram.u8id==0) || (telegram.u8id>247)) error = ERR_BAD_SLAVE_ID;
 8003d08:	1e50      	subs	r0, r2, #1
 8003d0a:	b2c0      	uxtb	r0, r0
 8003d0c:	28f6      	cmp	r0, #246	; 0xf6
 8003d0e:	d823      	bhi.n	8003d58 <StartTaskModbusMaster+0x9c>
	if(error)
 8003d10:	b321      	cbz	r1, 8003d5c <StartTaskModbusMaster+0xa0>
		 xSemaphoreGive(modH->ModBusSphrHandle);
 8003d12:	2300      	movs	r3, #0
		 modH->i8lastError = error;
 8003d14:	74a1      	strb	r1, [r4, #18]
		 xSemaphoreGive(modH->ModBusSphrHandle);
 8003d16:	461a      	mov	r2, r3
 8003d18:	4619      	mov	r1, r3
 8003d1a:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8003d1e:	f003 fcf7 	bl	8007710 <xQueueGenericSend>
	  ulNotificationValue = ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 8003d22:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003d26:	2001      	movs	r0, #1
 8003d28:	f004 fd98 	bl	800885c <ulTaskNotifyTake>
      if(ulNotificationValue == NO_REPLY)
 8003d2c:	28ff      	cmp	r0, #255	; 0xff
	  modH->i8lastError = 0;
 8003d2e:	74a7      	strb	r7, [r4, #18]
      if(ulNotificationValue == NO_REPLY)
 8003d30:	f040 8094 	bne.w	8003e5c <StartTaskModbusMaster+0x1a0>
    	  modH->i8state = COM_IDLE;
 8003d34:	f884 7072 	strb.w	r7, [r4, #114]	; 0x72
    	  modH->i8lastError = NO_REPLY;
 8003d38:	74a0      	strb	r0, [r4, #18]
		  modH->u16errCnt++;
 8003d3a:	f8b4 3060 	ldrh.w	r3, [r4, #96]	; 0x60
 8003d3e:	3301      	adds	r3, #1
 8003d40:	f8a4 3060 	strh.w	r3, [r4, #96]	; 0x60
	  xSemaphoreGive(modH->ModBusSphrHandle); //Release the semaphore
 8003d44:	2300      	movs	r3, #0
 8003d46:	461a      	mov	r2, r3
 8003d48:	4619      	mov	r1, r3
 8003d4a:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8003d4e:	f003 fcdf 	bl	8007710 <xQueueGenericSend>
	  continue;
 8003d52:	e7b8      	b.n	8003cc6 <StartTaskModbusMaster+0xa>
	if (modH->i8state != COM_IDLE) error = ERR_POLLING ;
 8003d54:	21fe      	movs	r1, #254	; 0xfe
 8003d56:	e7d7      	b.n	8003d08 <StartTaskModbusMaster+0x4c>
	if ((telegram.u8id==0) || (telegram.u8id>247)) error = ERR_BAD_SLAVE_ID;
 8003d58:	21f7      	movs	r1, #247	; 0xf7
 8003d5a:	e7da      	b.n	8003d12 <StartTaskModbusMaster+0x56>
	modH->au8Buffer[ ID ]         = telegram.u8id;
 8003d5c:	74e2      	strb	r2, [r4, #19]
	modH->au8Buffer[ FUNC ]       = telegram.u8fct;
 8003d5e:	f884 8014 	strb.w	r8, [r4, #20]
	modH->au8Buffer[ ADD_HI ]     = highByte(telegram.u16RegAdd );
 8003d62:	0a1a      	lsrs	r2, r3, #8
	switch( telegram.u8fct )
 8003d64:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
	modH->au16regs = telegram.au16reg;
 8003d68:	65a5      	str	r5, [r4, #88]	; 0x58
	modH->au8Buffer[ ADD_HI ]     = highByte(telegram.u16RegAdd );
 8003d6a:	7562      	strb	r2, [r4, #21]
	modH->au8Buffer[ ADD_LO ]     = lowByte( telegram.u16RegAdd );
 8003d6c:	75a3      	strb	r3, [r4, #22]
	switch( telegram.u8fct )
 8003d6e:	f1b8 0f0f 	cmp.w	r8, #15
 8003d72:	d80f      	bhi.n	8003d94 <StartTaskModbusMaster+0xd8>
 8003d74:	e8df f008 	tbb	[pc, r8]
 8003d78:	08080808 	.word	0x08080808
 8003d7c:	0e0e261e 	.word	0x0e0e261e
 8003d80:	0e0e0e0e 	.word	0x0e0e0e0e
 8003d84:	522c0e0e 	.word	0x522c0e0e
	    modH->au8Buffer[ NB_HI ]      = highByte(telegram.u16CoilsNo );
 8003d88:	0a33      	lsrs	r3, r6, #8
 8003d8a:	75e3      	strb	r3, [r4, #23]
	    modH->au8Buffer[ NB_LO ]      = lowByte( telegram.u16CoilsNo );
 8003d8c:	7626      	strb	r6, [r4, #24]
	    modH->u8BufferSize = 6;
 8003d8e:	2306      	movs	r3, #6
 8003d90:	f884 3053 	strb.w	r3, [r4, #83]	; 0x53
	xSemaphoreGive(modH->ModBusSphrHandle);
 8003d94:	2300      	movs	r3, #0
 8003d96:	461a      	mov	r2, r3
 8003d98:	4619      	mov	r1, r3
 8003d9a:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8003d9e:	f003 fcb7 	bl	8007710 <xQueueGenericSend>
	sendTxBuffer(modH);
 8003da2:	4620      	mov	r0, r4
 8003da4:	f7ff fcfa 	bl	800379c <sendTxBuffer>
	modH->i8state = COM_WAITING;
 8003da8:	f04f 0301 	mov.w	r3, #1
 8003dac:	f884 3072 	strb.w	r3, [r4, #114]	; 0x72
	modH->i8lastError = 0;
 8003db0:	74a7      	strb	r7, [r4, #18]
 8003db2:	e7b6      	b.n	8003d22 <StartTaskModbusMaster+0x66>
	    modH->au8Buffer[ NB_HI ]      = (( telegram.au16reg[0]> 0) ? 0xff : 0);
 8003db4:	882b      	ldrh	r3, [r5, #0]
	    modH->au8Buffer[ NB_LO ]      = 0;
 8003db6:	7627      	strb	r7, [r4, #24]
	    modH->au8Buffer[ NB_HI ]      = (( telegram.au16reg[0]> 0) ? 0xff : 0);
 8003db8:	3300      	adds	r3, #0
 8003dba:	bf18      	it	ne
 8003dbc:	2301      	movne	r3, #1
 8003dbe:	425b      	negs	r3, r3
 8003dc0:	75e3      	strb	r3, [r4, #23]
 8003dc2:	e7e4      	b.n	8003d8e <StartTaskModbusMaster+0xd2>
	    modH->au8Buffer[ NB_HI ]      = highByte( telegram.au16reg[0]);
 8003dc4:	882b      	ldrh	r3, [r5, #0]
 8003dc6:	0a1b      	lsrs	r3, r3, #8
 8003dc8:	75e3      	strb	r3, [r4, #23]
	    modH->au8Buffer[ NB_LO ]      = lowByte( telegram.au16reg[0]);
 8003dca:	882b      	ldrh	r3, [r5, #0]
 8003dcc:	7623      	strb	r3, [r4, #24]
 8003dce:	e7de      	b.n	8003d8e <StartTaskModbusMaster+0xd2>
	    u8bytesno = u8regsno * 2;
 8003dd0:	08f3      	lsrs	r3, r6, #3
 8003dd2:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
	    if ((telegram.u16CoilsNo % 16) != 0)
 8003dd6:	0730      	lsls	r0, r6, #28
	        u8bytesno++;
 8003dd8:	bf18      	it	ne
 8003dda:	3301      	addne	r3, #1
	    modH->au8Buffer[ NB_HI ]      = highByte(telegram.u16CoilsNo );
 8003ddc:	ea4f 2216 	mov.w	r2, r6, lsr #8
	        u8bytesno++;
 8003de0:	bf18      	it	ne
 8003de2:	b2db      	uxtbne	r3, r3
	    modH->au8Buffer[ NB_HI ]      = highByte(telegram.u16CoilsNo );
 8003de4:	75e2      	strb	r2, [r4, #23]
	    modH->u8BufferSize = 7;
 8003de6:	2207      	movs	r2, #7
	    modH->au8Buffer[ BYTE_CNT ]    = u8bytesno;
 8003de8:	7663      	strb	r3, [r4, #25]
	    modH->au8Buffer[ NB_LO ]      = lowByte( telegram.u16CoilsNo );
 8003dea:	7626      	strb	r6, [r4, #24]
	    modH->u8BufferSize = 7;
 8003dec:	f884 2053 	strb.w	r2, [r4, #83]	; 0x53
 8003df0:	2000      	movs	r0, #0
	    for (uint16_t i = 0; i < u8bytesno; i++)
 8003df2:	b29b      	uxth	r3, r3
 8003df4:	b286      	uxth	r6, r0
 8003df6:	429e      	cmp	r6, r3
 8003df8:	d2cc      	bcs.n	8003d94 <StartTaskModbusMaster+0xd8>
 8003dfa:	0872      	lsrs	r2, r6, #1
	        if(i%2)
 8003dfc:	f016 0f01 	tst.w	r6, #1
 8003e00:	f835 1012 	ldrh.w	r1, [r5, r2, lsl #1]
 8003e04:	f894 2053 	ldrb.w	r2, [r4, #83]	; 0x53
 8003e08:	eb04 0602 	add.w	r6, r4, r2
	        	modH->au8Buffer[  modH->u8BufferSize ] = highByte( telegram.au16reg[ i/2 ] );
 8003e0c:	bf08      	it	eq
 8003e0e:	0a09      	lsreq	r1, r1, #8
	        modH->u8BufferSize++;
 8003e10:	3201      	adds	r2, #1
	        	modH->au8Buffer[  modH->u8BufferSize ] = highByte( telegram.au16reg[ i/2 ] );
 8003e12:	74f1      	strb	r1, [r6, #19]
 8003e14:	3001      	adds	r0, #1
	        modH->u8BufferSize++;
 8003e16:	f884 2053 	strb.w	r2, [r4, #83]	; 0x53
 8003e1a:	e7eb      	b.n	8003df4 <StartTaskModbusMaster+0x138>
	    modH->au8Buffer[ NB_HI ]      = highByte(telegram.u16CoilsNo );
 8003e1c:	0a33      	lsrs	r3, r6, #8
 8003e1e:	75e3      	strb	r3, [r4, #23]
	    modH->au8Buffer[ NB_LO ]      = lowByte( telegram.u16CoilsNo );
 8003e20:	b2f3      	uxtb	r3, r6
 8003e22:	7623      	strb	r3, [r4, #24]
	    modH->au8Buffer[ BYTE_CNT ]    = (uint8_t) ( telegram.u16CoilsNo * 2 );
 8003e24:	005b      	lsls	r3, r3, #1
 8003e26:	7663      	strb	r3, [r4, #25]
 8003e28:	3d02      	subs	r5, #2
	    modH->u8BufferSize = 7;
 8003e2a:	2307      	movs	r3, #7
 8003e2c:	f884 3053 	strb.w	r3, [r4, #83]	; 0x53
 8003e30:	eb05 0646 	add.w	r6, r5, r6, lsl #1
	    for (uint16_t i=0; i< telegram.u16CoilsNo; i++)
 8003e34:	42ae      	cmp	r6, r5
 8003e36:	d0ad      	beq.n	8003d94 <StartTaskModbusMaster+0xd8>
	        modH->au8Buffer[  modH->u8BufferSize ] = highByte(  telegram.au16reg[ i ] );
 8003e38:	f894 2053 	ldrb.w	r2, [r4, #83]	; 0x53
 8003e3c:	f835 3f02 	ldrh.w	r3, [r5, #2]!
 8003e40:	18a1      	adds	r1, r4, r2
 8003e42:	0a1b      	lsrs	r3, r3, #8
 8003e44:	74cb      	strb	r3, [r1, #19]
	        modH->u8BufferSize++;
 8003e46:	1c53      	adds	r3, r2, #1
 8003e48:	b2db      	uxtb	r3, r3
 8003e4a:	f884 3053 	strb.w	r3, [r4, #83]	; 0x53
	        modH->au8Buffer[  modH->u8BufferSize ] = lowByte( telegram.au16reg[ i ] );
 8003e4e:	4423      	add	r3, r4
 8003e50:	8829      	ldrh	r1, [r5, #0]
 8003e52:	74d9      	strb	r1, [r3, #19]
	        modH->u8BufferSize++;
 8003e54:	3202      	adds	r2, #2
 8003e56:	f884 2053 	strb.w	r2, [r4, #83]	; 0x53
 8003e5a:	e7eb      	b.n	8003e34 <StartTaskModbusMaster+0x178>
	  modH->u8BufferSize = uxQueueMessagesWaiting(modH->QueueModbusHandle);
 8003e5c:	6f60      	ldr	r0, [r4, #116]	; 0x74
 8003e5e:	f003 ff70 	bl	8007d42 <uxQueueMessagesWaiting>
 8003e62:	f884 0053 	strb.w	r0, [r4, #83]	; 0x53
	  int8_t i8state = getRxBuffer(modH);
 8003e66:	4620      	mov	r0, r4
 8003e68:	f7ff fb7e 	bl	8003568 <getRxBuffer>
	  if (i8state < 6){
 8003e6c:	2805      	cmp	r0, #5
 8003e6e:	dc08      	bgt.n	8003e82 <StartTaskModbusMaster+0x1c6>
		  xQueueGenericReset(modH->QueueModbusHandle, pdFALSE);
 8003e70:	2100      	movs	r1, #0
 8003e72:	6f60      	ldr	r0, [r4, #116]	; 0x74
 8003e74:	f003 fb56 	bl	8007524 <xQueueGenericReset>
		  modH->i8lastError = ERR_BAD_SIZE;
 8003e78:	23fa      	movs	r3, #250	; 0xfa
		  modH->i8state = COM_IDLE;
 8003e7a:	f884 7072 	strb.w	r7, [r4, #114]	; 0x72
		  modH->i8lastError = ERR_BAD_SIZE;
 8003e7e:	74a3      	strb	r3, [r4, #18]
 8003e80:	e75b      	b.n	8003d3a <StartTaskModbusMaster+0x7e>
	  xTimerStop(modH->xTimerTimeout,0); // cancel timeout timer
 8003e82:	2300      	movs	r3, #0
 8003e84:	461a      	mov	r2, r3
 8003e86:	2103      	movs	r1, #3
 8003e88:	9700      	str	r7, [sp, #0]
 8003e8a:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
 8003e8e:	f004 fec5 	bl	8008c1c <xTimerGenericCommand>
        ((modH->au8Buffer[modH->u8BufferSize - 2] << 8)
 8003e92:	f894 5053 	ldrb.w	r5, [r4, #83]	; 0x53
    if ( calcCRC(modH->au8Buffer,  modH->u8BufferSize-2) != u16MsgCRC )
 8003e96:	1ea9      	subs	r1, r5, #2
        ((modH->au8Buffer[modH->u8BufferSize - 2] << 8)
 8003e98:	4425      	add	r5, r4
    if ( calcCRC(modH->au8Buffer,  modH->u8BufferSize-2) != u16MsgCRC )
 8003e9a:	b2c9      	uxtb	r1, r1
 8003e9c:	f104 0013 	add.w	r0, r4, #19
 8003ea0:	f7ff fc5e 	bl	8003760 <calcCRC>
        ((modH->au8Buffer[modH->u8BufferSize - 2] << 8)
 8003ea4:	7c6a      	ldrb	r2, [r5, #17]
         | modH->au8Buffer[modH->u8BufferSize - 1]); // combine the crc Low & High bytes
 8003ea6:	7cab      	ldrb	r3, [r5, #18]
    if ( calcCRC(modH->au8Buffer,  modH->u8BufferSize-2) != u16MsgCRC )
 8003ea8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8003eac:	4283      	cmp	r3, r0
 8003eae:	d007      	beq.n	8003ec0 <StartTaskModbusMaster+0x204>
    	modH->u16errCnt ++;
 8003eb0:	f8b4 3060 	ldrh.w	r3, [r4, #96]	; 0x60
 8003eb4:	3301      	adds	r3, #1
 8003eb6:	f8a4 3060 	strh.w	r3, [r4, #96]	; 0x60
	  modH->i8state = COM_IDLE;
 8003eba:	f884 7072 	strb.w	r7, [r4, #114]	; 0x72
 8003ebe:	e741      	b.n	8003d44 <StartTaskModbusMaster+0x88>
    if ((modH->au8Buffer[ FUNC ] & 0x80) != 0)
 8003ec0:	7d22      	ldrb	r2, [r4, #20]
 8003ec2:	0611      	lsls	r1, r2, #24
 8003ec4:	d4f4      	bmi.n	8003eb0 <StartTaskModbusMaster+0x1f4>
        if (fctsupported[i] == modH->au8Buffer[FUNC])
 8003ec6:	4929      	ldr	r1, [pc, #164]	; (8003f6c <StartTaskModbusMaster+0x2b0>)
    if ((modH->au8Buffer[ FUNC ] & 0x80) != 0)
 8003ec8:	2300      	movs	r3, #0
        if (fctsupported[i] == modH->au8Buffer[FUNC])
 8003eca:	5c58      	ldrb	r0, [r3, r1]
 8003ecc:	4290      	cmp	r0, r2
 8003ece:	d037      	beq.n	8003f40 <StartTaskModbusMaster+0x284>
 8003ed0:	3301      	adds	r3, #1
    for (uint8_t i = 0; i< sizeof( fctsupported ); i++)
 8003ed2:	2b08      	cmp	r3, #8
 8003ed4:	d1f9      	bne.n	8003eca <StartTaskModbusMaster+0x20e>
 8003ed6:	e7eb      	b.n	8003eb0 <StartTaskModbusMaster+0x1f4>
 8003ed8:	085d      	lsrs	r5, r3, #1
 8003eda:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003edc:	18e6      	adds	r6, r4, r3
 8003ede:	f830 2015 	ldrh.w	r2, [r0, r5, lsl #1]
 8003ee2:	7db6      	ldrb	r6, [r6, #22]
        if(i%2)
 8003ee4:	07db      	lsls	r3, r3, #31
	W.u8[0] = L;
 8003ee6:	bf4d      	iteet	mi
 8003ee8:	f362 0b07 	bfimi	fp, r2, #0, #8
 8003eec:	f366 0a07 	bfipl	sl, r6, #0, #8
        	modH->au16regs[i/2]= word(highByte(modH->au16regs[i/2]), modH->au8Buffer[i+u8byte]);
 8003ef0:	0a12      	lsrpl	r2, r2, #8
	W.u8[1] = H;
 8003ef2:	f366 2b0f 	bfimi	fp, r6, #8, #8
 8003ef6:	bf56      	itet	pl
 8003ef8:	f362 2a0f 	bfipl	sl, r2, #8, #8
        	modH->au16regs[i/2]= word(modH->au8Buffer[i+u8byte], lowByte(modH->au16regs[i/2]));
 8003efc:	f820 b015 	strhmi.w	fp, [r0, r5, lsl #1]
        	modH->au16regs[i/2]= word(highByte(modH->au16regs[i/2]), modH->au8Buffer[i+u8byte]);
 8003f00:	f820 a015 	strhpl.w	sl, [r0, r5, lsl #1]
 8003f04:	3101      	adds	r1, #1
     for (i=0; i< modH->au8Buffer[2]; i++) {
 8003f06:	7d62      	ldrb	r2, [r4, #21]
 8003f08:	b2cb      	uxtb	r3, r1
 8003f0a:	429a      	cmp	r2, r3
 8003f0c:	d8e4      	bhi.n	8003ed8 <StartTaskModbusMaster+0x21c>
 8003f0e:	e7d4      	b.n	8003eba <StartTaskModbusMaster+0x1fe>
	  switch( modH->au8Buffer[ FUNC ] )
 8003f10:	2100      	movs	r1, #0
 8003f12:	e7f8      	b.n	8003f06 <StartTaskModbusMaster+0x24a>
    	modH->au16regs[ i ] = word(modH->au8Buffer[ u8byte ], modH->au8Buffer[ u8byte +1 ]);
 8003f14:	4423      	add	r3, r4
 8003f16:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8003f18:	7cd8      	ldrb	r0, [r3, #19]
	W.u8[0] = L;
 8003f1a:	7d1b      	ldrb	r3, [r3, #20]
 8003f1c:	f363 0907 	bfi	r9, r3, #0, #8
	W.u8[1] = H;
 8003f20:	f360 290f 	bfi	r9, r0, #8, #8
    	modH->au16regs[ i ] = word(modH->au8Buffer[ u8byte ], modH->au8Buffer[ u8byte +1 ]);
 8003f24:	f821 9012 	strh.w	r9, [r1, r2, lsl #1]
 8003f28:	3201      	adds	r2, #1
 8003f2a:	b2d1      	uxtb	r1, r2
    for (i=0; i< modH->au8Buffer[ 2 ] /2; i++)
 8003f2c:	7d60      	ldrb	r0, [r4, #21]
 8003f2e:	004b      	lsls	r3, r1, #1
 8003f30:	3303      	adds	r3, #3
 8003f32:	ebb1 0f50 	cmp.w	r1, r0, lsr #1
 8003f36:	b2db      	uxtb	r3, r3
 8003f38:	d3ec      	bcc.n	8003f14 <StartTaskModbusMaster+0x258>
 8003f3a:	e7be      	b.n	8003eba <StartTaskModbusMaster+0x1fe>
	  switch( modH->au8Buffer[ FUNC ] )
 8003f3c:	2200      	movs	r2, #0
 8003f3e:	e7f4      	b.n	8003f2a <StartTaskModbusMaster+0x26e>
	  modH->i8lastError = u8exception;
 8003f40:	74a7      	strb	r7, [r4, #18]
	  xSemaphoreTake(modH->ModBusSphrHandle , portMAX_DELAY); //before processing the message get the semaphore
 8003f42:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003f46:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8003f4a:	f003 fde9 	bl	8007b20 <xQueueSemaphoreTake>
	  switch( modH->au8Buffer[ FUNC ] )
 8003f4e:	7d23      	ldrb	r3, [r4, #20]
 8003f50:	3b01      	subs	r3, #1
 8003f52:	2b03      	cmp	r3, #3
 8003f54:	d8b1      	bhi.n	8003eba <StartTaskModbusMaster+0x1fe>
 8003f56:	a201      	add	r2, pc, #4	; (adr r2, 8003f5c <StartTaskModbusMaster+0x2a0>)
 8003f58:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f5c:	08003f11 	.word	0x08003f11
 8003f60:	08003f11 	.word	0x08003f11
 8003f64:	08003f3d 	.word	0x08003f3d
 8003f68:	08003f3d 	.word	0x08003f3d
 8003f6c:	0801bc5c 	.word	0x0801bc5c

08003f70 <HAL_UART_TxCpltCallback>:
 * Modbus functionality.
 * @ingroup UartHandle UART HAL handler
 */

void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 8003f70:	b530      	push	{r4, r5, lr}
	/* Modbus RTU callback BEGIN */
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
	int i;
	for (i = 0; i < numberHandlers; i++ )
 8003f72:	4a0c      	ldr	r2, [pc, #48]	; (8003fa4 <HAL_UART_TxCpltCallback+0x34>)
	{
	   	if (mHandlers[i]->port == huart )
 8003f74:	490c      	ldr	r1, [pc, #48]	; (8003fa8 <HAL_UART_TxCpltCallback+0x38>)
	for (i = 0; i < numberHandlers; i++ )
 8003f76:	7812      	ldrb	r2, [r2, #0]
{
 8003f78:	b085      	sub	sp, #20
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 8003f7a:	2300      	movs	r3, #0
 8003f7c:	9303      	str	r3, [sp, #12]
	for (i = 0; i < numberHandlers; i++ )
 8003f7e:	429a      	cmp	r2, r3
 8003f80:	dd0c      	ble.n	8003f9c <HAL_UART_TxCpltCallback+0x2c>
	   	if (mHandlers[i]->port == huart )
 8003f82:	f851 4023 	ldr.w	r4, [r1, r3, lsl #2]
 8003f86:	6865      	ldr	r5, [r4, #4]
 8003f88:	4285      	cmp	r5, r0
 8003f8a:	d109      	bne.n	8003fa0 <HAL_UART_TxCpltCallback+0x30>
	   	{
	   		xTaskNotifyFromISR(mHandlers[i]->myTaskModbusAHandle, 0, eNoAction, &xHigherPriorityTaskWoken);
 8003f8c:	ab03      	add	r3, sp, #12
 8003f8e:	9300      	str	r3, [sp, #0]
 8003f90:	2300      	movs	r3, #0
 8003f92:	461a      	mov	r2, r3
 8003f94:	4619      	mov	r1, r3
 8003f96:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
 8003f98:	f004 fd04 	bl	80089a4 <xTaskGenericNotifyFromISR>
	/*
	 * Here you should implement the callback code for other UARTs not used by Modbus
	 *
	 * */

}
 8003f9c:	b005      	add	sp, #20
 8003f9e:	bd30      	pop	{r4, r5, pc}
	for (i = 0; i < numberHandlers; i++ )
 8003fa0:	3301      	adds	r3, #1
 8003fa2:	e7ec      	b.n	8003f7e <HAL_UART_TxCpltCallback+0xe>
 8003fa4:	20001462 	.word	0x20001462
 8003fa8:	20001458 	.word	0x20001458

08003fac <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003fac:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003fae:	4b0b      	ldr	r3, [pc, #44]	; (8003fdc <HAL_Init+0x30>)
 8003fb0:	681a      	ldr	r2, [r3, #0]
 8003fb2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003fb6:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003fb8:	681a      	ldr	r2, [r3, #0]
 8003fba:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003fbe:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003fc0:	681a      	ldr	r2, [r3, #0]
 8003fc2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003fc6:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003fc8:	2003      	movs	r0, #3
 8003fca:	f000 f82f 	bl	800402c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003fce:	2000      	movs	r0, #0
 8003fd0:	f7fd fea4 	bl	8001d1c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8003fd4:	f7fd fc30 	bl	8001838 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003fd8:	2000      	movs	r0, #0
 8003fda:	bd08      	pop	{r3, pc}
 8003fdc:	40023c00 	.word	0x40023c00

08003fe0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8003fe0:	4a03      	ldr	r2, [pc, #12]	; (8003ff0 <HAL_IncTick+0x10>)
 8003fe2:	4b04      	ldr	r3, [pc, #16]	; (8003ff4 <HAL_IncTick+0x14>)
 8003fe4:	6811      	ldr	r1, [r2, #0]
 8003fe6:	781b      	ldrb	r3, [r3, #0]
 8003fe8:	440b      	add	r3, r1
 8003fea:	6013      	str	r3, [r2, #0]
}
 8003fec:	4770      	bx	lr
 8003fee:	bf00      	nop
 8003ff0:	20012738 	.word	0x20012738
 8003ff4:	20000078 	.word	0x20000078

08003ff8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003ff8:	4b01      	ldr	r3, [pc, #4]	; (8004000 <HAL_GetTick+0x8>)
 8003ffa:	6818      	ldr	r0, [r3, #0]
}
 8003ffc:	4770      	bx	lr
 8003ffe:	bf00      	nop
 8004000:	20012738 	.word	0x20012738

08004004 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004004:	b538      	push	{r3, r4, r5, lr}
 8004006:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8004008:	f7ff fff6 	bl	8003ff8 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800400c:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800400e:	bf1c      	itt	ne
 8004010:	4b05      	ldrne	r3, [pc, #20]	; (8004028 <HAL_Delay+0x24>)
 8004012:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8004014:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8004016:	bf18      	it	ne
 8004018:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800401a:	f7ff ffed 	bl	8003ff8 <HAL_GetTick>
 800401e:	1b40      	subs	r0, r0, r5
 8004020:	42a0      	cmp	r0, r4
 8004022:	d3fa      	bcc.n	800401a <HAL_Delay+0x16>
  {
  }
}
 8004024:	bd38      	pop	{r3, r4, r5, pc}
 8004026:	bf00      	nop
 8004028:	20000078 	.word	0x20000078

0800402c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800402c:	4a07      	ldr	r2, [pc, #28]	; (800404c <HAL_NVIC_SetPriorityGrouping+0x20>)
 800402e:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004030:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8004034:	041b      	lsls	r3, r3, #16
 8004036:	0c1b      	lsrs	r3, r3, #16
 8004038:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800403c:	0200      	lsls	r0, r0, #8
 800403e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004042:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value  =  (reg_value                                   |
 8004046:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
 8004048:	60d3      	str	r3, [r2, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800404a:	4770      	bx	lr
 800404c:	e000ed00 	.word	0xe000ed00

08004050 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004050:	4b17      	ldr	r3, [pc, #92]	; (80040b0 <HAL_NVIC_SetPriority+0x60>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004052:	b570      	push	{r4, r5, r6, lr}
 8004054:	68dc      	ldr	r4, [r3, #12]
 8004056:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800405a:	f1c4 0507 	rsb	r5, r4, #7
 800405e:	2d04      	cmp	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004060:	f104 0304 	add.w	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004064:	bf28      	it	cs
 8004066:	2504      	movcs	r5, #4

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004068:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800406c:	2b06      	cmp	r3, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800406e:	fa06 f305 	lsl.w	r3, r6, r5
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004072:	bf8c      	ite	hi
 8004074:	3c03      	subhi	r4, #3
 8004076:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004078:	ea21 0303 	bic.w	r3, r1, r3
 800407c:	40a3      	lsls	r3, r4
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800407e:	fa06 f404 	lsl.w	r4, r6, r4
 8004082:	ea22 0404 	bic.w	r4, r2, r4
  if ((int32_t)(IRQn) >= 0)
 8004086:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004088:	ea43 0304 	orr.w	r3, r3, r4
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800408c:	bfa8      	it	ge
 800408e:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
 8004092:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004096:	bfbc      	itt	lt
 8004098:	f000 000f 	andlt.w	r0, r0, #15
 800409c:	4a05      	ldrlt	r2, [pc, #20]	; (80040b4 <HAL_NVIC_SetPriority+0x64>)
 800409e:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80040a0:	bfaa      	itet	ge
 80040a2:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80040a6:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80040a8:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80040ac:	bd70      	pop	{r4, r5, r6, pc}
 80040ae:	bf00      	nop
 80040b0:	e000ed00 	.word	0xe000ed00
 80040b4:	e000ed14 	.word	0xe000ed14

080040b8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80040b8:	2800      	cmp	r0, #0
 80040ba:	db08      	blt.n	80040ce <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80040bc:	0942      	lsrs	r2, r0, #5
 80040be:	2301      	movs	r3, #1
 80040c0:	f000 001f 	and.w	r0, r0, #31
 80040c4:	fa03 f000 	lsl.w	r0, r3, r0
 80040c8:	4b01      	ldr	r3, [pc, #4]	; (80040d0 <HAL_NVIC_EnableIRQ+0x18>)
 80040ca:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80040ce:	4770      	bx	lr
 80040d0:	e000e100 	.word	0xe000e100

080040d4 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80040d4:	2800      	cmp	r0, #0
 80040d6:	db0d      	blt.n	80040f4 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80040d8:	0943      	lsrs	r3, r0, #5
 80040da:	2201      	movs	r2, #1
 80040dc:	f000 001f 	and.w	r0, r0, #31
 80040e0:	fa02 f000 	lsl.w	r0, r2, r0
 80040e4:	3320      	adds	r3, #32
 80040e6:	4a04      	ldr	r2, [pc, #16]	; (80040f8 <HAL_NVIC_DisableIRQ+0x24>)
 80040e8:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 80040ec:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80040f0:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 80040f4:	4770      	bx	lr
 80040f6:	bf00      	nop
 80040f8:	e000e100 	.word	0xe000e100

080040fc <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80040fc:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80040fe:	4604      	mov	r4, r0
 8004100:	b150      	cbz	r0, 8004118 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004102:	7943      	ldrb	r3, [r0, #5]
 8004104:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004108:	b913      	cbnz	r3, 8004110 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800410a:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800410c:	f7fd fbb4 	bl	8001878 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004110:	2301      	movs	r3, #1
 8004112:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8004114:	2000      	movs	r0, #0
}
 8004116:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004118:	2001      	movs	r0, #1
 800411a:	e7fc      	b.n	8004116 <HAL_CRC_Init+0x1a>

0800411c <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800411c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8004120:	2b02      	cmp	r3, #2
 8004122:	d003      	beq.n	800412c <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8004124:	2380      	movs	r3, #128	; 0x80
 8004126:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8004128:	2001      	movs	r0, #1
 800412a:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800412c:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800412e:	2305      	movs	r3, #5
 8004130:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8004134:	6813      	ldr	r3, [r2, #0]
 8004136:	f023 0301 	bic.w	r3, r3, #1
 800413a:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
 800413c:	2000      	movs	r0, #0
}
 800413e:	4770      	bx	lr

08004140 <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 8004140:	b570      	push	{r4, r5, r6, lr}
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 8004142:	6804      	ldr	r4, [r0, #0]
 8004144:	9d04      	ldr	r5, [sp, #16]
 8004146:	6c66      	ldr	r6, [r4, #68]	; 0x44
 8004148:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 800414c:	f006 4640 	and.w	r6, r6, #3221225472	; 0xc0000000
 8004150:	4333      	orrs	r3, r6
 8004152:	6463      	str	r3, [r4, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8004154:	6843      	ldr	r3, [r0, #4]
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 8004156:	63e2      	str	r2, [r4, #60]	; 0x3c
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8004158:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 800415c:	d130      	bne.n	80041c0 <DMA2D_SetConfig+0x80>
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 800415e:	6886      	ldr	r6, [r0, #8]
 8004160:	b11e      	cbz	r6, 800416a <DMA2D_SetConfig+0x2a>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 8004162:	2e01      	cmp	r6, #1
 8004164:	d103      	bne.n	800416e <DMA2D_SetConfig+0x2e>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 8004166:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
      tmp3 = (tmp3 >> 12U);
      tmp4 = (tmp4 >> 4U );
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 800416a:	63a1      	str	r1, [r4, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 800416c:	bd70      	pop	{r4, r5, r6, pc}
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 800416e:	2e02      	cmp	r6, #2
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 8004170:	f401 037f 	and.w	r3, r1, #16711680	; 0xff0000
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 8004174:	f401 457f 	and.w	r5, r1, #65280	; 0xff00
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 8004178:	b2c8      	uxtb	r0, r1
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 800417a:	d107      	bne.n	800418c <DMA2D_SetConfig+0x4c>
      tmp2 = (tmp2 >> 19U);
 800417c:	0cd9      	lsrs	r1, r3, #19
      tmp3 = (tmp3 >> 10U);
 800417e:	0aad      	lsrs	r5, r5, #10
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 8004180:	02c9      	lsls	r1, r1, #11
 8004182:	ea41 1145 	orr.w	r1, r1, r5, lsl #5
 8004186:	ea41 01d0 	orr.w	r1, r1, r0, lsr #3
 800418a:	e7ee      	b.n	800416a <DMA2D_SetConfig+0x2a>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 800418c:	2e03      	cmp	r6, #3
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 800418e:	f001 427f 	and.w	r2, r1, #4278190080	; 0xff000000
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 8004192:	d10a      	bne.n	80041aa <DMA2D_SetConfig+0x6a>
      tmp2 = (tmp2 >> 19U);
 8004194:	0cdb      	lsrs	r3, r3, #19
      tmp3 = (tmp3 >> 11U);
 8004196:	0aed      	lsrs	r5, r5, #11
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 8004198:	029b      	lsls	r3, r3, #10
 800419a:	ea43 1345 	orr.w	r3, r3, r5, lsl #5
 800419e:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
      tmp1 = (tmp1 >> 31U);
 80041a2:	0fd1      	lsrs	r1, r2, #31
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 80041a4:	ea43 31c1 	orr.w	r1, r3, r1, lsl #15
 80041a8:	e7df      	b.n	800416a <DMA2D_SetConfig+0x2a>
      tmp2 = (tmp2 >> 20U);
 80041aa:	0d19      	lsrs	r1, r3, #20
      tmp3 = (tmp3 >> 12U);
 80041ac:	0b2d      	lsrs	r5, r5, #12
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 80041ae:	0209      	lsls	r1, r1, #8
 80041b0:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
 80041b4:	ea41 1110 	orr.w	r1, r1, r0, lsr #4
      tmp1 = (tmp1 >> 28U);
 80041b8:	0f13      	lsrs	r3, r2, #28
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 80041ba:	ea41 3103 	orr.w	r1, r1, r3, lsl #12
 80041be:	e7d4      	b.n	800416a <DMA2D_SetConfig+0x2a>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 80041c0:	60e1      	str	r1, [r4, #12]
}
 80041c2:	e7d3      	b.n	800416c <DMA2D_SetConfig+0x2c>

080041c4 <HAL_DMA2D_Init>:
{
 80041c4:	b510      	push	{r4, lr}
  if(hdma2d == NULL)
 80041c6:	4604      	mov	r4, r0
 80041c8:	b330      	cbz	r0, 8004218 <HAL_DMA2D_Init+0x54>
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 80041ca:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80041ce:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80041d2:	b91b      	cbnz	r3, 80041dc <HAL_DMA2D_Init+0x18>
    hdma2d->Lock = HAL_UNLOCKED;
 80041d4:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 80041d8:	f7fd fb66 	bl	80018a8 <HAL_DMA2D_MspInit>
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80041dc:	6822      	ldr	r2, [r4, #0]
 80041de:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80041e0:	2302      	movs	r3, #2
 80041e2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80041e6:	6813      	ldr	r3, [r2, #0]
 80041e8:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80041ec:	430b      	orrs	r3, r1
 80041ee:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80041f0:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80041f2:	68a1      	ldr	r1, [r4, #8]
 80041f4:	f023 0307 	bic.w	r3, r3, #7
 80041f8:	430b      	orrs	r3, r1
 80041fa:	6353      	str	r3, [r2, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80041fc:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80041fe:	68e1      	ldr	r1, [r4, #12]
 8004200:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8004204:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8004208:	430b      	orrs	r3, r1
 800420a:	6413      	str	r3, [r2, #64]	; 0x40
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800420c:	2000      	movs	r0, #0
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800420e:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004210:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004212:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
}
 8004216:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8004218:	2001      	movs	r0, #1
 800421a:	e7fc      	b.n	8004216 <HAL_DMA2D_Init+0x52>

0800421c <HAL_DMA2D_Start_IT>:
{
 800421c:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
 800421e:	f890 4038 	ldrb.w	r4, [r0, #56]	; 0x38
 8004222:	2c01      	cmp	r4, #1
{
 8004224:	4605      	mov	r5, r0
 8004226:	f04f 0402 	mov.w	r4, #2
  __HAL_LOCK(hdma2d);
 800422a:	d013      	beq.n	8004254 <HAL_DMA2D_Start_IT+0x38>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800422c:	f880 4039 	strb.w	r4, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8004230:	2601      	movs	r6, #1
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8004232:	9c06      	ldr	r4, [sp, #24]
  __HAL_LOCK(hdma2d);
 8004234:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8004238:	9400      	str	r4, [sp, #0]
 800423a:	f7ff ff81 	bl	8004140 <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 800423e:	682b      	ldr	r3, [r5, #0]
 8004240:	681a      	ldr	r2, [r3, #0]
 8004242:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8004246:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 8004248:	681a      	ldr	r2, [r3, #0]
 800424a:	4332      	orrs	r2, r6
 800424c:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 800424e:	2000      	movs	r0, #0
}
 8004250:	b002      	add	sp, #8
 8004252:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 8004254:	4620      	mov	r0, r4
 8004256:	e7fb      	b.n	8004250 <HAL_DMA2D_Start_IT+0x34>

08004258 <HAL_DMA2D_BlendingStart_IT>:
{
 8004258:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800425a:	4615      	mov	r5, r2
 800425c:	461a      	mov	r2, r3
  __HAL_LOCK(hdma2d);
 800425e:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8004262:	2b01      	cmp	r3, #1
{
 8004264:	4604      	mov	r4, r0
 8004266:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hdma2d);
 800426a:	d016      	beq.n	800429a <HAL_DMA2D_BlendingStart_IT+0x42>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800426c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8004270:	6803      	ldr	r3, [r0, #0]
  __HAL_LOCK(hdma2d);
 8004272:	2601      	movs	r6, #1
 8004274:	f880 6038 	strb.w	r6, [r0, #56]	; 0x38
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8004278:	615d      	str	r5, [r3, #20]
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 800427a:	9b07      	ldr	r3, [sp, #28]
 800427c:	9300      	str	r3, [sp, #0]
 800427e:	9b06      	ldr	r3, [sp, #24]
 8004280:	f7ff ff5e 	bl	8004140 <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8004284:	6823      	ldr	r3, [r4, #0]
 8004286:	681a      	ldr	r2, [r3, #0]
 8004288:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 800428c:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
 800428e:	681a      	ldr	r2, [r3, #0]
 8004290:	4332      	orrs	r2, r6
 8004292:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 8004294:	2000      	movs	r0, #0
}
 8004296:	b002      	add	sp, #8
 8004298:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hdma2d);
 800429a:	4618      	mov	r0, r3
 800429c:	e7fb      	b.n	8004296 <HAL_DMA2D_BlendingStart_IT+0x3e>

0800429e <HAL_DMA2D_Abort>:
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 800429e:	6802      	ldr	r2, [r0, #0]
{
 80042a0:	b538      	push	{r3, r4, r5, lr}
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 80042a2:	6813      	ldr	r3, [r2, #0]
 80042a4:	f023 0305 	bic.w	r3, r3, #5
 80042a8:	f043 0304 	orr.w	r3, r3, #4
 80042ac:	6013      	str	r3, [r2, #0]
{
 80042ae:	4604      	mov	r4, r0
  tickstart = HAL_GetTick();
 80042b0:	f7ff fea2 	bl	8003ff8 <HAL_GetTick>
 80042b4:	4605      	mov	r5, r0
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 80042b6:	6823      	ldr	r3, [r4, #0]
 80042b8:	6818      	ldr	r0, [r3, #0]
 80042ba:	f010 0001 	ands.w	r0, r0, #1
 80042be:	d109      	bne.n	80042d4 <HAL_DMA2D_Abort+0x36>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 80042c0:	681a      	ldr	r2, [r3, #0]
 80042c2:	f422 520c 	bic.w	r2, r2, #8960	; 0x2300
 80042c6:	601a      	str	r2, [r3, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80042c8:	2301      	movs	r3, #1
 80042ca:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 80042ce:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
  return HAL_OK;
 80042d2:	e00f      	b.n	80042f4 <HAL_DMA2D_Abort+0x56>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 80042d4:	f7ff fe90 	bl	8003ff8 <HAL_GetTick>
 80042d8:	1b40      	subs	r0, r0, r5
 80042da:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80042de:	d9ea      	bls.n	80042b6 <HAL_DMA2D_Abort+0x18>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 80042e0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80042e2:	f043 0320 	orr.w	r3, r3, #32
 80042e6:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 80042e8:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdma2d);
 80042ea:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 80042ec:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80042f0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
}
 80042f4:	bd38      	pop	{r3, r4, r5, pc}

080042f6 <HAL_DMA2D_CLUTLoading_Abort>:
{
 80042f6:	b570      	push	{r4, r5, r6, lr}
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 80042f8:	6805      	ldr	r5, [r0, #0]
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 80042fa:	682a      	ldr	r2, [r5, #0]
 80042fc:	f042 0204 	orr.w	r2, r2, #4
 8004300:	602a      	str	r2, [r5, #0]
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 8004302:	2901      	cmp	r1, #1
{
 8004304:	4604      	mov	r4, r0
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 8004306:	bf14      	ite	ne
 8004308:	3524      	addne	r5, #36	; 0x24
    reg  = &(hdma2d->Instance->FGPFCCR);
 800430a:	351c      	addeq	r5, #28
  tickstart = HAL_GetTick();
 800430c:	f7ff fe74 	bl	8003ff8 <HAL_GetTick>
 8004310:	4606      	mov	r6, r0
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 8004312:	6828      	ldr	r0, [r5, #0]
 8004314:	f010 0020 	ands.w	r0, r0, #32
 8004318:	d10a      	bne.n	8004330 <HAL_DMA2D_CLUTLoading_Abort+0x3a>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 800431a:	6822      	ldr	r2, [r4, #0]
 800431c:	6813      	ldr	r3, [r2, #0]
 800431e:	f423 5364 	bic.w	r3, r3, #14592	; 0x3900
 8004322:	6013      	str	r3, [r2, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004324:	2301      	movs	r3, #1
 8004326:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 800432a:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
  return HAL_OK;
 800432e:	e00f      	b.n	8004350 <HAL_DMA2D_CLUTLoading_Abort+0x5a>
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8004330:	f7ff fe62 	bl	8003ff8 <HAL_GetTick>
 8004334:	1b80      	subs	r0, r0, r6
 8004336:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800433a:	d9ea      	bls.n	8004312 <HAL_DMA2D_CLUTLoading_Abort+0x1c>
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 800433c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800433e:	f043 0320 	orr.w	r3, r3, #32
 8004342:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8004344:	2003      	movs	r0, #3
      __HAL_UNLOCK(hdma2d);
 8004346:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8004348:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 800434c:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
}
 8004350:	bd70      	pop	{r4, r5, r6, pc}
	...

08004354 <HAL_DMA2D_DeInit>:
{
 8004354:	b538      	push	{r3, r4, r5, lr}
  if(hdma2d == NULL)
 8004356:	4605      	mov	r5, r0
 8004358:	b908      	cbnz	r0, 800435e <HAL_DMA2D_DeInit+0xa>
     return HAL_ERROR;
 800435a:	2001      	movs	r0, #1
}
 800435c:	bd38      	pop	{r3, r4, r5, pc}
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 800435e:	4b16      	ldr	r3, [pc, #88]	; (80043b8 <HAL_DMA2D_DeInit+0x64>)
 8004360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004362:	0219      	lsls	r1, r3, #8
 8004364:	d413      	bmi.n	800438e <HAL_DMA2D_DeInit+0x3a>
  hdma2d->Instance->CR       =    0U;
 8004366:	682b      	ldr	r3, [r5, #0]
 8004368:	2400      	movs	r4, #0
  hdma2d->Instance->IFCR     = 0x3FU;
 800436a:	223f      	movs	r2, #63	; 0x3f
  hdma2d->Instance->CR       =    0U;
 800436c:	601c      	str	r4, [r3, #0]
  HAL_DMA2D_MspDeInit(hdma2d);
 800436e:	4628      	mov	r0, r5
  hdma2d->Instance->IFCR     = 0x3FU;
 8004370:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 8004372:	611c      	str	r4, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 8004374:	619c      	str	r4, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 8004376:	61dc      	str	r4, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 8004378:	625c      	str	r4, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 800437a:	635c      	str	r4, [r3, #52]	; 0x34
  HAL_DMA2D_MspDeInit(hdma2d);
 800437c:	f7fd fab6 	bl	80018ec <HAL_DMA2D_MspDeInit>
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004380:	63ec      	str	r4, [r5, #60]	; 0x3c
  __HAL_UNLOCK(hdma2d);
 8004382:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 8004386:	f885 4039 	strb.w	r4, [r5, #57]	; 0x39
  return HAL_OK;
 800438a:	4620      	mov	r0, r4
 800438c:	e7e6      	b.n	800435c <HAL_DMA2D_DeInit+0x8>
 800438e:	6803      	ldr	r3, [r0, #0]
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 8004390:	6819      	ldr	r1, [r3, #0]
 8004392:	f011 0101 	ands.w	r1, r1, #1
 8004396:	d004      	beq.n	80043a2 <HAL_DMA2D_DeInit+0x4e>
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 8004398:	f7ff ff81 	bl	800429e <HAL_DMA2D_Abort>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 800439c:	2800      	cmp	r0, #0
 800439e:	d0e2      	beq.n	8004366 <HAL_DMA2D_DeInit+0x12>
 80043a0:	e7db      	b.n	800435a <HAL_DMA2D_DeInit+0x6>
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 80043a2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80043a4:	0692      	lsls	r2, r2, #26
 80043a6:	d502      	bpl.n	80043ae <HAL_DMA2D_DeInit+0x5a>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 80043a8:	f7ff ffa5 	bl	80042f6 <HAL_DMA2D_CLUTLoading_Abort>
 80043ac:	e7f6      	b.n	800439c <HAL_DMA2D_DeInit+0x48>
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 80043ae:	69db      	ldr	r3, [r3, #28]
 80043b0:	069b      	lsls	r3, r3, #26
 80043b2:	d5d8      	bpl.n	8004366 <HAL_DMA2D_DeInit+0x12>
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 80043b4:	2101      	movs	r1, #1
 80043b6:	e7f7      	b.n	80043a8 <HAL_DMA2D_DeInit+0x54>
 80043b8:	40023800 	.word	0x40023800

080043bc <HAL_DMA2D_LineEventCallback>:
 80043bc:	4770      	bx	lr

080043be <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80043be:	4770      	bx	lr

080043c0 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80043c0:	6803      	ldr	r3, [r0, #0]
{
 80043c2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80043c4:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80043c6:	681d      	ldr	r5, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80043c8:	07f2      	lsls	r2, r6, #31
{
 80043ca:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80043cc:	d514      	bpl.n	80043f8 <HAL_DMA2D_IRQHandler+0x38>
    if ((crflags & DMA2D_IT_TE) != 0U)
 80043ce:	05e9      	lsls	r1, r5, #23
 80043d0:	d512      	bpl.n	80043f8 <HAL_DMA2D_IRQHandler+0x38>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80043d2:	681a      	ldr	r2, [r3, #0]
 80043d4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80043d8:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80043da:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80043dc:	f042 0201 	orr.w	r2, r2, #1
 80043e0:	63c2      	str	r2, [r0, #60]	; 0x3c
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80043e2:	2201      	movs	r2, #1
 80043e4:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80043e6:	2304      	movs	r3, #4
 80043e8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80043ec:	2300      	movs	r3, #0
 80043ee:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 80043f2:	6943      	ldr	r3, [r0, #20]
 80043f4:	b103      	cbz	r3, 80043f8 <HAL_DMA2D_IRQHandler+0x38>
        hdma2d->XferErrorCallback(hdma2d);
 80043f6:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80043f8:	06b2      	lsls	r2, r6, #26
 80043fa:	d516      	bpl.n	800442a <HAL_DMA2D_IRQHandler+0x6a>
    if ((crflags & DMA2D_IT_CE) != 0U)
 80043fc:	04ab      	lsls	r3, r5, #18
 80043fe:	d514      	bpl.n	800442a <HAL_DMA2D_IRQHandler+0x6a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004400:	6823      	ldr	r3, [r4, #0]
 8004402:	681a      	ldr	r2, [r3, #0]
 8004404:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004408:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800440a:	2220      	movs	r2, #32
 800440c:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800440e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004410:	f043 0302 	orr.w	r3, r3, #2
 8004414:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004416:	2304      	movs	r3, #4
 8004418:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 800441c:	2300      	movs	r3, #0
 800441e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8004422:	6963      	ldr	r3, [r4, #20]
 8004424:	b10b      	cbz	r3, 800442a <HAL_DMA2D_IRQHandler+0x6a>
        hdma2d->XferErrorCallback(hdma2d);
 8004426:	4620      	mov	r0, r4
 8004428:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800442a:	0730      	lsls	r0, r6, #28
 800442c:	d516      	bpl.n	800445c <HAL_DMA2D_IRQHandler+0x9c>
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800442e:	0529      	lsls	r1, r5, #20
 8004430:	d514      	bpl.n	800445c <HAL_DMA2D_IRQHandler+0x9c>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004432:	6823      	ldr	r3, [r4, #0]
 8004434:	681a      	ldr	r2, [r3, #0]
 8004436:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800443a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800443c:	2208      	movs	r2, #8
 800443e:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004440:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004442:	f043 0304 	orr.w	r3, r3, #4
 8004446:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004448:	2304      	movs	r3, #4
 800444a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 800444e:	2300      	movs	r3, #0
 8004450:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferErrorCallback != NULL)
 8004454:	6963      	ldr	r3, [r4, #20]
 8004456:	b10b      	cbz	r3, 800445c <HAL_DMA2D_IRQHandler+0x9c>
        hdma2d->XferErrorCallback(hdma2d);
 8004458:	4620      	mov	r0, r4
 800445a:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800445c:	0772      	lsls	r2, r6, #29
 800445e:	d50b      	bpl.n	8004478 <HAL_DMA2D_IRQHandler+0xb8>
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004460:	056b      	lsls	r3, r5, #21
 8004462:	d509      	bpl.n	8004478 <HAL_DMA2D_IRQHandler+0xb8>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004464:	6823      	ldr	r3, [r4, #0]
 8004466:	681a      	ldr	r2, [r3, #0]
 8004468:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800446c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800446e:	2204      	movs	r2, #4
 8004470:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004472:	4620      	mov	r0, r4
 8004474:	f7ff ffa2 	bl	80043bc <HAL_DMA2D_LineEventCallback>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004478:	07b0      	lsls	r0, r6, #30
 800447a:	d514      	bpl.n	80044a6 <HAL_DMA2D_IRQHandler+0xe6>
    if ((crflags & DMA2D_IT_TC) != 0U)
 800447c:	05a9      	lsls	r1, r5, #22
 800447e:	d512      	bpl.n	80044a6 <HAL_DMA2D_IRQHandler+0xe6>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004480:	6823      	ldr	r3, [r4, #0]
 8004482:	681a      	ldr	r2, [r3, #0]
 8004484:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004488:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800448a:	2202      	movs	r2, #2
 800448c:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800448e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8004490:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004492:	2301      	movs	r3, #1
 8004494:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 8004498:	2300      	movs	r3, #0
 800449a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      if(hdma2d->XferCpltCallback != NULL)
 800449e:	6923      	ldr	r3, [r4, #16]
 80044a0:	b10b      	cbz	r3, 80044a6 <HAL_DMA2D_IRQHandler+0xe6>
        hdma2d->XferCpltCallback(hdma2d);
 80044a2:	4620      	mov	r0, r4
 80044a4:	4798      	blx	r3
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80044a6:	06f2      	lsls	r2, r6, #27
 80044a8:	d513      	bpl.n	80044d2 <HAL_DMA2D_IRQHandler+0x112>
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80044aa:	04eb      	lsls	r3, r5, #19
 80044ac:	d511      	bpl.n	80044d2 <HAL_DMA2D_IRQHandler+0x112>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80044ae:	6823      	ldr	r3, [r4, #0]
 80044b0:	681a      	ldr	r2, [r3, #0]
 80044b2:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80044b6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80044b8:	2210      	movs	r2, #16
 80044ba:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80044bc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80044be:	63e3      	str	r3, [r4, #60]	; 0x3c
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80044c0:	2301      	movs	r3, #1
 80044c2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
      __HAL_UNLOCK(hdma2d);
 80044c6:	2300      	movs	r3, #0
 80044c8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80044cc:	4620      	mov	r0, r4
 80044ce:	f7ff ff76 	bl	80043be <HAL_DMA2D_CLUTLoadingCpltCallback>
}
 80044d2:	bd70      	pop	{r4, r5, r6, pc}

080044d4 <HAL_DMA2D_ConfigLayer>:
  __HAL_LOCK(hdma2d);
 80044d4:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80044d8:	2b01      	cmp	r3, #1
{
 80044da:	b5f0      	push	{r4, r5, r6, r7, lr}
 80044dc:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(hdma2d);
 80044e0:	d036      	beq.n	8004550 <HAL_DMA2D_ConfigLayer+0x7c>
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80044e2:	010e      	lsls	r6, r1, #4
  __HAL_LOCK(hdma2d);
 80044e4:	2201      	movs	r2, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80044e6:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80044ea:	1983      	adds	r3, r0, r6
  __HAL_LOCK(hdma2d);
 80044ec:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80044f0:	e9d3 5207 	ldrd	r5, r2, [r3, #28]
 80044f4:	ea45 4202 	orr.w	r2, r5, r2, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80044f8:	3d09      	subs	r5, #9
 80044fa:	2d01      	cmp	r5, #1
 80044fc:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 80044fe:	4f19      	ldr	r7, [pc, #100]	; (8004564 <HAL_DMA2D_ConfigLayer+0x90>)
 8004500:	6803      	ldr	r3, [r0, #0]
 8004502:	d80f      	bhi.n	8004524 <HAL_DMA2D_ConfigLayer+0x50>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004504:	f004 4c7f 	and.w	ip, r4, #4278190080	; 0xff000000
 8004508:	ea4c 0202 	orr.w	r2, ip, r2
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 800450c:	b969      	cbnz	r1, 800452a <HAL_DMA2D_ConfigLayer+0x56>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800450e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004510:	4039      	ands	r1, r7
 8004512:	430a      	orrs	r2, r1
 8004514:	625a      	str	r2, [r3, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004516:	6982      	ldr	r2, [r0, #24]
 8004518:	619a      	str	r2, [r3, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 800451a:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800451c:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8004520:	629a      	str	r2, [r3, #40]	; 0x28
 8004522:	e00f      	b.n	8004544 <HAL_DMA2D_ConfigLayer+0x70>
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004524:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004528:	b1a1      	cbz	r1, 8004554 <HAL_DMA2D_ConfigLayer+0x80>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800452a:	69d9      	ldr	r1, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800452c:	4406      	add	r6, r0
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800452e:	4039      	ands	r1, r7
 8004530:	430a      	orrs	r2, r1
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004532:	2d01      	cmp	r5, #1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004534:	61da      	str	r2, [r3, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8004536:	bf98      	it	ls
 8004538:	f024 447f 	bicls.w	r4, r4, #4278190080	; 0xff000000
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800453c:	69b2      	ldr	r2, [r6, #24]
 800453e:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8004540:	bf98      	it	ls
 8004542:	621c      	strls	r4, [r3, #32]
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004544:	2301      	movs	r3, #1
 8004546:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 800454a:	2300      	movs	r3, #0
 800454c:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8004550:	4618      	mov	r0, r3
}
 8004552:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004554:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004556:	4039      	ands	r1, r7
 8004558:	430a      	orrs	r2, r1
 800455a:	625a      	str	r2, [r3, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800455c:	6982      	ldr	r2, [r0, #24]
 800455e:	619a      	str	r2, [r3, #24]
 8004560:	e7f0      	b.n	8004544 <HAL_DMA2D_ConfigLayer+0x70>
 8004562:	bf00      	nop
 8004564:	00fcfff0 	.word	0x00fcfff0

08004568 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800456c:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800456e:	680b      	ldr	r3, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004570:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8004738 <HAL_GPIO_Init+0x1d0>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004574:	4a6e      	ldr	r2, [pc, #440]	; (8004730 <HAL_GPIO_Init+0x1c8>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004576:	f8df 91c4 	ldr.w	r9, [pc, #452]	; 800473c <HAL_GPIO_Init+0x1d4>
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800457a:	9301      	str	r3, [sp, #4]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800457c:	2300      	movs	r3, #0
    ioposition = 0x01U << position;
 800457e:	2401      	movs	r4, #1
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004580:	9d01      	ldr	r5, [sp, #4]
    ioposition = 0x01U << position;
 8004582:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004584:	4025      	ands	r5, r4
    if(iocurrent == ioposition)
 8004586:	42ac      	cmp	r4, r5
 8004588:	f040 80b8 	bne.w	80046fc <HAL_GPIO_Init+0x194>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800458c:	684c      	ldr	r4, [r1, #4]
 800458e:	f024 0c10 	bic.w	ip, r4, #16
 8004592:	ea4f 0e43 	mov.w	lr, r3, lsl #1
 8004596:	2603      	movs	r6, #3
 8004598:	f10c 37ff 	add.w	r7, ip, #4294967295	; 0xffffffff
 800459c:	fa06 f60e 	lsl.w	r6, r6, lr
 80045a0:	2f01      	cmp	r7, #1
 80045a2:	ea6f 0606 	mvn.w	r6, r6
 80045a6:	d811      	bhi.n	80045cc <HAL_GPIO_Init+0x64>
        temp = GPIOx->OSPEEDR; 
 80045a8:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80045aa:	ea07 0a06 	and.w	sl, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 80045ae:	68cf      	ldr	r7, [r1, #12]
 80045b0:	fa07 f70e 	lsl.w	r7, r7, lr
 80045b4:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 80045b8:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80045ba:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80045bc:	ea27 0a05 	bic.w	sl, r7, r5
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 80045c0:	f3c4 1700 	ubfx	r7, r4, #4, #1
 80045c4:	409f      	lsls	r7, r3
 80045c6:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 80045ca:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 80045cc:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80045ce:	ea07 0a06 	and.w	sl, r7, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 80045d2:	688f      	ldr	r7, [r1, #8]
 80045d4:	fa07 f70e 	lsl.w	r7, r7, lr
 80045d8:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80045dc:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 80045e0:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80045e2:	d116      	bne.n	8004612 <HAL_GPIO_Init+0xaa>
        temp = GPIOx->AFR[position >> 3U];
 80045e4:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80045e8:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80045ec:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80045f0:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80045f4:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80045f8:	f04f 0c0f 	mov.w	ip, #15
 80045fc:	fa0c fc0b 	lsl.w	ip, ip, fp
 8004600:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004604:	690f      	ldr	r7, [r1, #16]
 8004606:	fa07 f70b 	lsl.w	r7, r7, fp
 800460a:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 800460e:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 8004612:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004614:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004616:	f004 0703 	and.w	r7, r4, #3
 800461a:	fa07 fe0e 	lsl.w	lr, r7, lr
 800461e:	ea4e 0606 	orr.w	r6, lr, r6
      GPIOx->MODER = temp;
 8004622:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8004624:	00e6      	lsls	r6, r4, #3
 8004626:	d569      	bpl.n	80046fc <HAL_GPIO_Init+0x194>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004628:	f04f 0b00 	mov.w	fp, #0
 800462c:	f8cd b00c 	str.w	fp, [sp, #12]
 8004630:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004634:	4e3f      	ldr	r6, [pc, #252]	; (8004734 <HAL_GPIO_Init+0x1cc>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004636:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 800463a:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 800463e:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8004642:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8004646:	9703      	str	r7, [sp, #12]
 8004648:	9f03      	ldr	r7, [sp, #12]
 800464a:	f023 0703 	bic.w	r7, r3, #3
 800464e:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8004652:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004656:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800465a:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800465e:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8004662:	f04f 0c0f 	mov.w	ip, #15
 8004666:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800466a:	42b0      	cmp	r0, r6
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800466c:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004670:	d04b      	beq.n	800470a <HAL_GPIO_Init+0x1a2>
 8004672:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8004676:	42b0      	cmp	r0, r6
 8004678:	d049      	beq.n	800470e <HAL_GPIO_Init+0x1a6>
 800467a:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800467e:	42b0      	cmp	r0, r6
 8004680:	d047      	beq.n	8004712 <HAL_GPIO_Init+0x1aa>
 8004682:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 8004686:	42b0      	cmp	r0, r6
 8004688:	d045      	beq.n	8004716 <HAL_GPIO_Init+0x1ae>
 800468a:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800468e:	42b0      	cmp	r0, r6
 8004690:	d043      	beq.n	800471a <HAL_GPIO_Init+0x1b2>
 8004692:	4548      	cmp	r0, r9
 8004694:	d043      	beq.n	800471e <HAL_GPIO_Init+0x1b6>
 8004696:	f506 6600 	add.w	r6, r6, #2048	; 0x800
 800469a:	42b0      	cmp	r0, r6
 800469c:	d041      	beq.n	8004722 <HAL_GPIO_Init+0x1ba>
 800469e:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80046a2:	42b0      	cmp	r0, r6
 80046a4:	d03f      	beq.n	8004726 <HAL_GPIO_Init+0x1be>
 80046a6:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80046aa:	42b0      	cmp	r0, r6
 80046ac:	d03d      	beq.n	800472a <HAL_GPIO_Init+0x1c2>
 80046ae:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80046b2:	42b0      	cmp	r0, r6
 80046b4:	bf14      	ite	ne
 80046b6:	260a      	movne	r6, #10
 80046b8:	2609      	moveq	r6, #9
 80046ba:	fa06 f60e 	lsl.w	r6, r6, lr
 80046be:	ea46 060c 	orr.w	r6, r6, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 80046c2:	60be      	str	r6, [r7, #8]
        temp = EXTI->IMR;
 80046c4:	6816      	ldr	r6, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80046c6:	43ef      	mvns	r7, r5
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80046c8:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 80046cc:	bf0c      	ite	eq
 80046ce:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 80046d0:	432e      	orrne	r6, r5
        }
        EXTI->IMR = temp;
 80046d2:	6016      	str	r6, [r2, #0]

        temp = EXTI->EMR;
 80046d4:	6856      	ldr	r6, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80046d6:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80046da:	bf0c      	ite	eq
 80046dc:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 80046de:	432e      	orrne	r6, r5
        }
        EXTI->EMR = temp;
 80046e0:	6056      	str	r6, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80046e2:	6896      	ldr	r6, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80046e4:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80046e8:	bf0c      	ite	eq
 80046ea:	403e      	andeq	r6, r7
        {
          temp |= iocurrent;
 80046ec:	432e      	orrne	r6, r5
        }
        EXTI->RTSR = temp;
 80046ee:	6096      	str	r6, [r2, #8]

        temp = EXTI->FTSR;
 80046f0:	68d6      	ldr	r6, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80046f2:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 80046f4:	bf54      	ite	pl
 80046f6:	403e      	andpl	r6, r7
        {
          temp |= iocurrent;
 80046f8:	432e      	orrmi	r6, r5
        }
        EXTI->FTSR = temp;
 80046fa:	60d6      	str	r6, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80046fc:	3301      	adds	r3, #1
 80046fe:	2b10      	cmp	r3, #16
 8004700:	f47f af3d 	bne.w	800457e <HAL_GPIO_Init+0x16>
      }
    }
  }
}
 8004704:	b005      	add	sp, #20
 8004706:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800470a:	465e      	mov	r6, fp
 800470c:	e7d5      	b.n	80046ba <HAL_GPIO_Init+0x152>
 800470e:	2601      	movs	r6, #1
 8004710:	e7d3      	b.n	80046ba <HAL_GPIO_Init+0x152>
 8004712:	2602      	movs	r6, #2
 8004714:	e7d1      	b.n	80046ba <HAL_GPIO_Init+0x152>
 8004716:	2603      	movs	r6, #3
 8004718:	e7cf      	b.n	80046ba <HAL_GPIO_Init+0x152>
 800471a:	2604      	movs	r6, #4
 800471c:	e7cd      	b.n	80046ba <HAL_GPIO_Init+0x152>
 800471e:	2605      	movs	r6, #5
 8004720:	e7cb      	b.n	80046ba <HAL_GPIO_Init+0x152>
 8004722:	2606      	movs	r6, #6
 8004724:	e7c9      	b.n	80046ba <HAL_GPIO_Init+0x152>
 8004726:	2607      	movs	r6, #7
 8004728:	e7c7      	b.n	80046ba <HAL_GPIO_Init+0x152>
 800472a:	2608      	movs	r6, #8
 800472c:	e7c5      	b.n	80046ba <HAL_GPIO_Init+0x152>
 800472e:	bf00      	nop
 8004730:	40013c00 	.word	0x40013c00
 8004734:	40020000 	.word	0x40020000
 8004738:	40023800 	.word	0x40023800
 800473c:	40021400 	.word	0x40021400

08004740 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004740:	b10a      	cbz	r2, 8004746 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004742:	6181      	str	r1, [r0, #24]
  }
}
 8004744:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004746:	0409      	lsls	r1, r1, #16
 8004748:	e7fb      	b.n	8004742 <HAL_GPIO_WritePin+0x2>

0800474a <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800474a:	6801      	ldr	r1, [r0, #0]
 800474c:	694b      	ldr	r3, [r1, #20]
 800474e:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8004752:	f04f 0200 	mov.w	r2, #0
 8004756:	d010      	beq.n	800477a <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004758:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800475c:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800475e:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8004760:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8004762:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004766:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800476a:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800476c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004770:	f043 0304 	orr.w	r3, r3, #4
 8004774:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8004776:	2001      	movs	r0, #1
 8004778:	4770      	bx	lr
  }
  return HAL_OK;
 800477a:	4618      	mov	r0, r3
}
 800477c:	4770      	bx	lr

0800477e <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800477e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004782:	4604      	mov	r4, r0
 8004784:	4616      	mov	r6, r2
 8004786:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004788:	b28f      	uxth	r7, r1
 800478a:	6825      	ldr	r5, [r4, #0]
 800478c:	6968      	ldr	r0, [r5, #20]
 800478e:	ea37 0000 	bics.w	r0, r7, r0
 8004792:	d017      	beq.n	80047c4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004794:	696b      	ldr	r3, [r5, #20]
 8004796:	055a      	lsls	r2, r3, #21
 8004798:	d516      	bpl.n	80047c8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4a>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800479a:	682b      	ldr	r3, [r5, #0]
 800479c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80047a0:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80047a2:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80047a6:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80047a8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80047aa:	2300      	movs	r3, #0
 80047ac:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80047ae:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80047b2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80047b6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80047b8:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80047bc:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80047be:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 80047c2:	2001      	movs	r0, #1
}
 80047c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 80047c8:	1c73      	adds	r3, r6, #1
 80047ca:	d0df      	beq.n	800478c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80047cc:	f7ff fc14 	bl	8003ff8 <HAL_GetTick>
 80047d0:	eba0 0008 	sub.w	r0, r0, r8
 80047d4:	42b0      	cmp	r0, r6
 80047d6:	d801      	bhi.n	80047dc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x5e>
 80047d8:	2e00      	cmp	r6, #0
 80047da:	d1d6      	bne.n	800478a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80047dc:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80047de:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80047e0:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80047e2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80047e6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80047ea:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80047ec:	f042 0220 	orr.w	r2, r2, #32
 80047f0:	e7e4      	b.n	80047bc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x3e>

080047f2 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80047f2:	b570      	push	{r4, r5, r6, lr}
 80047f4:	4604      	mov	r4, r0
 80047f6:	460d      	mov	r5, r1
 80047f8:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80047fa:	6823      	ldr	r3, [r4, #0]
 80047fc:	695b      	ldr	r3, [r3, #20]
 80047fe:	075b      	lsls	r3, r3, #29
 8004800:	d501      	bpl.n	8004806 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8004802:	2000      	movs	r0, #0
}
 8004804:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004806:	4620      	mov	r0, r4
 8004808:	f7ff ff9f 	bl	800474a <I2C_IsAcknowledgeFailed>
 800480c:	b9a8      	cbnz	r0, 800483a <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800480e:	1c6a      	adds	r2, r5, #1
 8004810:	d0f3      	beq.n	80047fa <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004812:	f7ff fbf1 	bl	8003ff8 <HAL_GetTick>
 8004816:	1b80      	subs	r0, r0, r6
 8004818:	42a8      	cmp	r0, r5
 800481a:	d801      	bhi.n	8004820 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800481c:	2d00      	cmp	r5, #0
 800481e:	d1ec      	bne.n	80047fa <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004820:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004822:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004824:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004826:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800482a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800482e:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004830:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004834:	f042 0220 	orr.w	r2, r2, #32
 8004838:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800483a:	2001      	movs	r0, #1
 800483c:	e7e2      	b.n	8004804 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800483e <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800483e:	b570      	push	{r4, r5, r6, lr}
 8004840:	4604      	mov	r4, r0
 8004842:	460d      	mov	r5, r1
 8004844:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004846:	6820      	ldr	r0, [r4, #0]
 8004848:	6943      	ldr	r3, [r0, #20]
 800484a:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800484e:	d001      	beq.n	8004854 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8004850:	2000      	movs	r0, #0
 8004852:	e010      	b.n	8004876 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004854:	6942      	ldr	r2, [r0, #20]
 8004856:	06d2      	lsls	r2, r2, #27
 8004858:	d50e      	bpl.n	8004878 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800485a:	f06f 0210 	mvn.w	r2, #16
 800485e:	6142      	str	r2, [r0, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8004860:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8004862:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004864:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004868:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800486c:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800486e:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004870:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8004874:	2001      	movs	r0, #1
}
 8004876:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004878:	f7ff fbbe 	bl	8003ff8 <HAL_GetTick>
 800487c:	1b80      	subs	r0, r0, r6
 800487e:	42a8      	cmp	r0, r5
 8004880:	d801      	bhi.n	8004886 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8004882:	2d00      	cmp	r5, #0
 8004884:	d1df      	bne.n	8004846 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004886:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004888:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800488a:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800488c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004890:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004894:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004896:	f042 0220 	orr.w	r2, r2, #32
 800489a:	e7e8      	b.n	800486e <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0800489c <I2C_WaitOnFlagUntilTimeout>:
{
 800489c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80048a0:	9e08      	ldr	r6, [sp, #32]
 80048a2:	4604      	mov	r4, r0
 80048a4:	4690      	mov	r8, r2
 80048a6:	461f      	mov	r7, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80048a8:	ea4f 4911 	mov.w	r9, r1, lsr #16
 80048ac:	b28d      	uxth	r5, r1
 80048ae:	6821      	ldr	r1, [r4, #0]
 80048b0:	f1b9 0f01 	cmp.w	r9, #1
 80048b4:	bf0c      	ite	eq
 80048b6:	694b      	ldreq	r3, [r1, #20]
 80048b8:	698b      	ldrne	r3, [r1, #24]
 80048ba:	ea35 0303 	bics.w	r3, r5, r3
 80048be:	bf0c      	ite	eq
 80048c0:	2301      	moveq	r3, #1
 80048c2:	2300      	movne	r3, #0
 80048c4:	4598      	cmp	r8, r3
 80048c6:	d001      	beq.n	80048cc <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 80048c8:	2000      	movs	r0, #0
 80048ca:	e016      	b.n	80048fa <I2C_WaitOnFlagUntilTimeout+0x5e>
    if (Timeout != HAL_MAX_DELAY)
 80048cc:	1c7b      	adds	r3, r7, #1
 80048ce:	d0ef      	beq.n	80048b0 <I2C_WaitOnFlagUntilTimeout+0x14>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80048d0:	f7ff fb92 	bl	8003ff8 <HAL_GetTick>
 80048d4:	1b80      	subs	r0, r0, r6
 80048d6:	42b8      	cmp	r0, r7
 80048d8:	d801      	bhi.n	80048de <I2C_WaitOnFlagUntilTimeout+0x42>
 80048da:	2f00      	cmp	r7, #0
 80048dc:	d1e7      	bne.n	80048ae <I2C_WaitOnFlagUntilTimeout+0x12>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80048de:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80048e0:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80048e2:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80048e4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80048e8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80048ec:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80048ee:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80048f2:	f042 0220 	orr.w	r2, r2, #32
 80048f6:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80048f8:	2001      	movs	r0, #1
}
 80048fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

080048fe <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80048fe:	b570      	push	{r4, r5, r6, lr}
 8004900:	4604      	mov	r4, r0
 8004902:	460d      	mov	r5, r1
 8004904:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004906:	6823      	ldr	r3, [r4, #0]
 8004908:	695b      	ldr	r3, [r3, #20]
 800490a:	061b      	lsls	r3, r3, #24
 800490c:	d501      	bpl.n	8004912 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800490e:	2000      	movs	r0, #0
}
 8004910:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004912:	4620      	mov	r0, r4
 8004914:	f7ff ff19 	bl	800474a <I2C_IsAcknowledgeFailed>
 8004918:	b9a8      	cbnz	r0, 8004946 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800491a:	1c6a      	adds	r2, r5, #1
 800491c:	d0f3      	beq.n	8004906 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800491e:	f7ff fb6b 	bl	8003ff8 <HAL_GetTick>
 8004922:	1b80      	subs	r0, r0, r6
 8004924:	42a8      	cmp	r0, r5
 8004926:	d801      	bhi.n	800492c <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8004928:	2d00      	cmp	r5, #0
 800492a:	d1ec      	bne.n	8004906 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800492c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800492e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004930:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8004932:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004936:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800493a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800493c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004940:	f042 0220 	orr.w	r2, r2, #32
 8004944:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004946:	2001      	movs	r0, #1
 8004948:	e7e2      	b.n	8004910 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

0800494c <I2C_RequestMemoryWrite>:
{
 800494c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8004950:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004952:	6802      	ldr	r2, [r0, #0]
{
 8004954:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004956:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004958:	6813      	ldr	r3, [r2, #0]
 800495a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800495e:	6013      	str	r3, [r2, #0]
{
 8004960:	460f      	mov	r7, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004962:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004964:	9600      	str	r6, [sp, #0]
 8004966:	2200      	movs	r2, #0
 8004968:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800496c:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800496e:	f7ff ff95 	bl	800489c <I2C_WaitOnFlagUntilTimeout>
 8004972:	6823      	ldr	r3, [r4, #0]
 8004974:	b138      	cbz	r0, 8004986 <I2C_RequestMemoryWrite+0x3a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8004976:	681b      	ldr	r3, [r3, #0]
 8004978:	05db      	lsls	r3, r3, #23
 800497a:	d502      	bpl.n	8004982 <I2C_RequestMemoryWrite+0x36>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800497c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004980:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8004982:	2003      	movs	r0, #3
 8004984:	e00a      	b.n	800499c <I2C_RequestMemoryWrite+0x50>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004986:	f007 07fe 	and.w	r7, r7, #254	; 0xfe
 800498a:	611f      	str	r7, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800498c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800498e:	4919      	ldr	r1, [pc, #100]	; (80049f4 <I2C_RequestMemoryWrite+0xa8>)
 8004990:	4633      	mov	r3, r6
 8004992:	4620      	mov	r0, r4
 8004994:	f7ff fef3 	bl	800477e <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004998:	b118      	cbz	r0, 80049a2 <I2C_RequestMemoryWrite+0x56>
      return HAL_ERROR;
 800499a:	2001      	movs	r0, #1
}
 800499c:	b004      	add	sp, #16
 800499e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80049a2:	6823      	ldr	r3, [r4, #0]
 80049a4:	9003      	str	r0, [sp, #12]
 80049a6:	695a      	ldr	r2, [r3, #20]
 80049a8:	9203      	str	r2, [sp, #12]
 80049aa:	699b      	ldr	r3, [r3, #24]
 80049ac:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80049ae:	4632      	mov	r2, r6
 80049b0:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80049b2:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80049b4:	4620      	mov	r0, r4
 80049b6:	f7ff ffa2 	bl	80048fe <I2C_WaitOnTXEFlagUntilTimeout>
 80049ba:	b140      	cbz	r0, 80049ce <I2C_RequestMemoryWrite+0x82>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80049bc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80049be:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80049c0:	bf01      	itttt	eq
 80049c2:	6822      	ldreq	r2, [r4, #0]
 80049c4:	6813      	ldreq	r3, [r2, #0]
 80049c6:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80049ca:	6013      	streq	r3, [r2, #0]
 80049cc:	e7e5      	b.n	800499a <I2C_RequestMemoryWrite+0x4e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80049ce:	f1b8 0f01 	cmp.w	r8, #1
 80049d2:	6823      	ldr	r3, [r4, #0]
 80049d4:	d102      	bne.n	80049dc <I2C_RequestMemoryWrite+0x90>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80049d6:	b2ed      	uxtb	r5, r5
 80049d8:	611d      	str	r5, [r3, #16]
 80049da:	e7df      	b.n	800499c <I2C_RequestMemoryWrite+0x50>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80049dc:	0a2a      	lsrs	r2, r5, #8
 80049de:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80049e0:	990a      	ldr	r1, [sp, #40]	; 0x28
 80049e2:	4632      	mov	r2, r6
 80049e4:	4620      	mov	r0, r4
 80049e6:	f7ff ff8a 	bl	80048fe <I2C_WaitOnTXEFlagUntilTimeout>
 80049ea:	2800      	cmp	r0, #0
 80049ec:	d1e6      	bne.n	80049bc <I2C_RequestMemoryWrite+0x70>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80049ee:	6823      	ldr	r3, [r4, #0]
 80049f0:	e7f1      	b.n	80049d6 <I2C_RequestMemoryWrite+0x8a>
 80049f2:	bf00      	nop
 80049f4:	00010002 	.word	0x00010002

080049f8 <I2C_RequestMemoryRead>:
{
 80049f8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80049fc:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80049fe:	6803      	ldr	r3, [r0, #0]
{
 8004a00:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8004a02:	4616      	mov	r6, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004a04:	681a      	ldr	r2, [r3, #0]
 8004a06:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004a0a:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004a0c:	681a      	ldr	r2, [r3, #0]
 8004a0e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004a12:	601a      	str	r2, [r3, #0]
{
 8004a14:	460f      	mov	r7, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004a16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004a18:	9500      	str	r5, [sp, #0]
 8004a1a:	2200      	movs	r2, #0
 8004a1c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8004a20:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004a22:	f7ff ff3b 	bl	800489c <I2C_WaitOnFlagUntilTimeout>
 8004a26:	6823      	ldr	r3, [r4, #0]
 8004a28:	b148      	cbz	r0, 8004a3e <I2C_RequestMemoryRead+0x46>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8004a2a:	681b      	ldr	r3, [r3, #0]
 8004a2c:	05db      	lsls	r3, r3, #23
 8004a2e:	d502      	bpl.n	8004a36 <I2C_RequestMemoryRead+0x3e>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004a30:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004a34:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8004a36:	2003      	movs	r0, #3
}
 8004a38:	b004      	add	sp, #16
 8004a3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004a3e:	b2ff      	uxtb	r7, r7
 8004a40:	f007 02fe 	and.w	r2, r7, #254	; 0xfe
 8004a44:	611a      	str	r2, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004a46:	492a      	ldr	r1, [pc, #168]	; (8004af0 <I2C_RequestMemoryRead+0xf8>)
 8004a48:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004a4a:	462b      	mov	r3, r5
 8004a4c:	4620      	mov	r0, r4
 8004a4e:	f7ff fe96 	bl	800477e <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004a52:	b108      	cbz	r0, 8004a58 <I2C_RequestMemoryRead+0x60>
    return HAL_ERROR;
 8004a54:	2001      	movs	r0, #1
 8004a56:	e7ef      	b.n	8004a38 <I2C_RequestMemoryRead+0x40>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004a58:	6823      	ldr	r3, [r4, #0]
 8004a5a:	9003      	str	r0, [sp, #12]
 8004a5c:	695a      	ldr	r2, [r3, #20]
 8004a5e:	9203      	str	r2, [sp, #12]
 8004a60:	699b      	ldr	r3, [r3, #24]
 8004a62:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004a64:	462a      	mov	r2, r5
 8004a66:	990a      	ldr	r1, [sp, #40]	; 0x28
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004a68:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004a6a:	4620      	mov	r0, r4
 8004a6c:	f7ff ff47 	bl	80048fe <I2C_WaitOnTXEFlagUntilTimeout>
 8004a70:	b140      	cbz	r0, 8004a84 <I2C_RequestMemoryRead+0x8c>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004a72:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004a74:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004a76:	bf01      	itttt	eq
 8004a78:	6822      	ldreq	r2, [r4, #0]
 8004a7a:	6813      	ldreq	r3, [r2, #0]
 8004a7c:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004a80:	6013      	streq	r3, [r2, #0]
 8004a82:	e7e7      	b.n	8004a54 <I2C_RequestMemoryRead+0x5c>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004a84:	f1b8 0f01 	cmp.w	r8, #1
 8004a88:	6823      	ldr	r3, [r4, #0]
 8004a8a:	d125      	bne.n	8004ad8 <I2C_RequestMemoryRead+0xe0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004a8c:	b2f6      	uxtb	r6, r6
 8004a8e:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004a90:	462a      	mov	r2, r5
 8004a92:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004a94:	4620      	mov	r0, r4
 8004a96:	f7ff ff32 	bl	80048fe <I2C_WaitOnTXEFlagUntilTimeout>
 8004a9a:	4602      	mov	r2, r0
 8004a9c:	2800      	cmp	r0, #0
 8004a9e:	d1e8      	bne.n	8004a72 <I2C_RequestMemoryRead+0x7a>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004aa0:	6821      	ldr	r1, [r4, #0]
 8004aa2:	680b      	ldr	r3, [r1, #0]
 8004aa4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004aa8:	600b      	str	r3, [r1, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004aaa:	4620      	mov	r0, r4
 8004aac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004aae:	9500      	str	r5, [sp, #0]
 8004ab0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8004ab4:	f7ff fef2 	bl	800489c <I2C_WaitOnFlagUntilTimeout>
 8004ab8:	6823      	ldr	r3, [r4, #0]
 8004aba:	2800      	cmp	r0, #0
 8004abc:	d1b5      	bne.n	8004a2a <I2C_RequestMemoryRead+0x32>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004abe:	f047 0701 	orr.w	r7, r7, #1
 8004ac2:	611f      	str	r7, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004ac4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004ac6:	490a      	ldr	r1, [pc, #40]	; (8004af0 <I2C_RequestMemoryRead+0xf8>)
 8004ac8:	462b      	mov	r3, r5
 8004aca:	4620      	mov	r0, r4
 8004acc:	f7ff fe57 	bl	800477e <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8004ad0:	3000      	adds	r0, #0
 8004ad2:	bf18      	it	ne
 8004ad4:	2001      	movne	r0, #1
 8004ad6:	e7af      	b.n	8004a38 <I2C_RequestMemoryRead+0x40>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004ad8:	0a32      	lsrs	r2, r6, #8
 8004ada:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004adc:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004ade:	462a      	mov	r2, r5
 8004ae0:	4620      	mov	r0, r4
 8004ae2:	f7ff ff0c 	bl	80048fe <I2C_WaitOnTXEFlagUntilTimeout>
 8004ae6:	2800      	cmp	r0, #0
 8004ae8:	d1c3      	bne.n	8004a72 <I2C_RequestMemoryRead+0x7a>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004aea:	6823      	ldr	r3, [r4, #0]
 8004aec:	e7ce      	b.n	8004a8c <I2C_RequestMemoryRead+0x94>
 8004aee:	bf00      	nop
 8004af0:	00010002 	.word	0x00010002

08004af4 <HAL_I2C_Init>:
{
 8004af4:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8004af6:	4604      	mov	r4, r0
 8004af8:	b908      	cbnz	r0, 8004afe <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8004afa:	2001      	movs	r0, #1
}
 8004afc:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004afe:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8004b02:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004b06:	b91b      	cbnz	r3, 8004b10 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8004b08:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8004b0c:	f7fc ff00 	bl	8001910 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004b10:	2324      	movs	r3, #36	; 0x24
 8004b12:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8004b16:	6823      	ldr	r3, [r4, #0]
 8004b18:	681a      	ldr	r2, [r3, #0]
 8004b1a:	f022 0201 	bic.w	r2, r2, #1
 8004b1e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004b20:	681a      	ldr	r2, [r3, #0]
 8004b22:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004b26:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8004b28:	681a      	ldr	r2, [r3, #0]
 8004b2a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004b2e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004b30:	f000 fe6c 	bl	800580c <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004b34:	6863      	ldr	r3, [r4, #4]
 8004b36:	4a41      	ldr	r2, [pc, #260]	; (8004c3c <HAL_I2C_Init+0x148>)
 8004b38:	4293      	cmp	r3, r2
 8004b3a:	d84d      	bhi.n	8004bd8 <HAL_I2C_Init+0xe4>
 8004b3c:	4a40      	ldr	r2, [pc, #256]	; (8004c40 <HAL_I2C_Init+0x14c>)
 8004b3e:	4290      	cmp	r0, r2
 8004b40:	d9db      	bls.n	8004afa <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004b42:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8004b44:	493f      	ldr	r1, [pc, #252]	; (8004c44 <HAL_I2C_Init+0x150>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004b46:	6855      	ldr	r5, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8004b48:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004b4c:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8004b50:	430d      	orrs	r5, r1
 8004b52:	6055      	str	r5, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004b54:	6a15      	ldr	r5, [r2, #32]
 8004b56:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8004b5a:	3101      	adds	r1, #1
 8004b5c:	4329      	orrs	r1, r5
 8004b5e:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004b60:	69d1      	ldr	r1, [r2, #28]
 8004b62:	4d36      	ldr	r5, [pc, #216]	; (8004c3c <HAL_I2C_Init+0x148>)
 8004b64:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8004b68:	42ab      	cmp	r3, r5
 8004b6a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8004b6e:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
 8004b72:	d848      	bhi.n	8004c06 <HAL_I2C_Init+0x112>
 8004b74:	005b      	lsls	r3, r3, #1
 8004b76:	fbb0 f0f3 	udiv	r0, r0, r3
 8004b7a:	1c43      	adds	r3, r0, #1
 8004b7c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004b80:	2b04      	cmp	r3, #4
 8004b82:	bf38      	it	cc
 8004b84:	2304      	movcc	r3, #4
 8004b86:	430b      	orrs	r3, r1
 8004b88:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004b8a:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8004b8e:	6811      	ldr	r1, [r2, #0]
 8004b90:	4303      	orrs	r3, r0
 8004b92:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8004b96:	430b      	orrs	r3, r1
 8004b98:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004b9a:	6891      	ldr	r1, [r2, #8]
 8004b9c:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8004ba0:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8004ba4:	4303      	orrs	r3, r0
 8004ba6:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8004baa:	430b      	orrs	r3, r1
 8004bac:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004bae:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8004bb2:	68d1      	ldr	r1, [r2, #12]
 8004bb4:	4303      	orrs	r3, r0
 8004bb6:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8004bba:	430b      	orrs	r3, r1
 8004bbc:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8004bbe:	6813      	ldr	r3, [r2, #0]
 8004bc0:	f043 0301 	orr.w	r3, r3, #1
 8004bc4:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004bc6:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8004bc8:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004bca:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004bcc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004bd0:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004bd2:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8004bd6:	e791      	b.n	8004afc <HAL_I2C_Init+0x8>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004bd8:	4a1b      	ldr	r2, [pc, #108]	; (8004c48 <HAL_I2C_Init+0x154>)
 8004bda:	4290      	cmp	r0, r2
 8004bdc:	d98d      	bls.n	8004afa <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004bde:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8004be0:	4e18      	ldr	r6, [pc, #96]	; (8004c44 <HAL_I2C_Init+0x150>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004be2:	6855      	ldr	r5, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8004be4:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004be8:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8004bec:	4335      	orrs	r5, r6
 8004bee:	6055      	str	r5, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004bf0:	6a15      	ldr	r5, [r2, #32]
 8004bf2:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8004bf6:	4371      	muls	r1, r6
 8004bf8:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8004bfc:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8004c00:	fbb1 f1f6 	udiv	r1, r1, r6
 8004c04:	e7a9      	b.n	8004b5a <HAL_I2C_Init+0x66>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004c06:	68a5      	ldr	r5, [r4, #8]
 8004c08:	b955      	cbnz	r5, 8004c20 <HAL_I2C_Init+0x12c>
 8004c0a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8004c0e:	fbb0 f0f3 	udiv	r0, r0, r3
 8004c12:	1c43      	adds	r3, r0, #1
 8004c14:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004c18:	b16b      	cbz	r3, 8004c36 <HAL_I2C_Init+0x142>
 8004c1a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004c1e:	e7b2      	b.n	8004b86 <HAL_I2C_Init+0x92>
 8004c20:	2519      	movs	r5, #25
 8004c22:	436b      	muls	r3, r5
 8004c24:	fbb0 f0f3 	udiv	r0, r0, r3
 8004c28:	1c43      	adds	r3, r0, #1
 8004c2a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004c2e:	b113      	cbz	r3, 8004c36 <HAL_I2C_Init+0x142>
 8004c30:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004c34:	e7a7      	b.n	8004b86 <HAL_I2C_Init+0x92>
 8004c36:	2301      	movs	r3, #1
 8004c38:	e7a5      	b.n	8004b86 <HAL_I2C_Init+0x92>
 8004c3a:	bf00      	nop
 8004c3c:	000186a0 	.word	0x000186a0
 8004c40:	001e847f 	.word	0x001e847f
 8004c44:	000f4240 	.word	0x000f4240
 8004c48:	003d08ff 	.word	0x003d08ff

08004c4c <HAL_I2C_Mem_Write>:
{
 8004c4c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004c50:	4604      	mov	r4, r0
 8004c52:	4699      	mov	r9, r3
 8004c54:	460f      	mov	r7, r1
 8004c56:	4690      	mov	r8, r2
 8004c58:	9e0c      	ldr	r6, [sp, #48]	; 0x30
  uint32_t tickstart = HAL_GetTick();
 8004c5a:	f7ff f9cd 	bl	8003ff8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004c5e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004c62:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004c64:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004c66:	d003      	beq.n	8004c70 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8004c68:	2002      	movs	r0, #2
}
 8004c6a:	b003      	add	sp, #12
 8004c6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004c70:	9000      	str	r0, [sp, #0]
 8004c72:	2319      	movs	r3, #25
 8004c74:	2201      	movs	r2, #1
 8004c76:	493b      	ldr	r1, [pc, #236]	; (8004d64 <HAL_I2C_Mem_Write+0x118>)
 8004c78:	4620      	mov	r0, r4
 8004c7a:	f7ff fe0f 	bl	800489c <I2C_WaitOnFlagUntilTimeout>
 8004c7e:	2800      	cmp	r0, #0
 8004c80:	d1f2      	bne.n	8004c68 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8004c82:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8004c86:	2b01      	cmp	r3, #1
 8004c88:	d0ee      	beq.n	8004c68 <HAL_I2C_Mem_Write+0x1c>
 8004c8a:	2301      	movs	r3, #1
 8004c8c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004c90:	6823      	ldr	r3, [r4, #0]
 8004c92:	681a      	ldr	r2, [r3, #0]
 8004c94:	07d1      	lsls	r1, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 8004c96:	bf5e      	ittt	pl
 8004c98:	681a      	ldrpl	r2, [r3, #0]
 8004c9a:	f042 0201 	orrpl.w	r2, r2, #1
 8004c9e:	601a      	strpl	r2, [r3, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004ca0:	681a      	ldr	r2, [r3, #0]
 8004ca2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004ca6:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004ca8:	2321      	movs	r3, #33	; 0x21
 8004caa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004cae:	2340      	movs	r3, #64	; 0x40
 8004cb0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004cb4:	2300      	movs	r3, #0
 8004cb6:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8004cb8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004cba:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004cbc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8004cc0:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004cc2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004cc4:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004cc6:	4b28      	ldr	r3, [pc, #160]	; (8004d68 <HAL_I2C_Mem_Write+0x11c>)
 8004cc8:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004cca:	e9cd 6500 	strd	r6, r5, [sp]
 8004cce:	464b      	mov	r3, r9
 8004cd0:	4642      	mov	r2, r8
 8004cd2:	4639      	mov	r1, r7
 8004cd4:	4620      	mov	r0, r4
 8004cd6:	f7ff fe39 	bl	800494c <I2C_RequestMemoryWrite>
 8004cda:	2800      	cmp	r0, #0
 8004cdc:	d02a      	beq.n	8004d34 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8004cde:	2001      	movs	r0, #1
 8004ce0:	e7c3      	b.n	8004c6a <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004ce2:	f7ff fe0c 	bl	80048fe <I2C_WaitOnTXEFlagUntilTimeout>
 8004ce6:	b140      	cbz	r0, 8004cfa <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004ce8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004cea:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004cec:	bf01      	itttt	eq
 8004cee:	6822      	ldreq	r2, [r4, #0]
 8004cf0:	6813      	ldreq	r3, [r2, #0]
 8004cf2:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004cf6:	6013      	streq	r3, [r2, #0]
 8004cf8:	e7f1      	b.n	8004cde <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004cfa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004cfc:	6827      	ldr	r7, [r4, #0]
 8004cfe:	461a      	mov	r2, r3
 8004d00:	f812 1b01 	ldrb.w	r1, [r2], #1
 8004d04:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8004d06:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8004d08:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8004d0a:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8004d0c:	3a01      	subs	r2, #1
 8004d0e:	b292      	uxth	r2, r2
 8004d10:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004d12:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8004d14:	1e48      	subs	r0, r1, #1
 8004d16:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004d18:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8004d1a:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004d1c:	d50a      	bpl.n	8004d34 <HAL_I2C_Mem_Write+0xe8>
 8004d1e:	b148      	cbz	r0, 8004d34 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004d20:	785a      	ldrb	r2, [r3, #1]
 8004d22:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8004d24:	3302      	adds	r3, #2
 8004d26:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8004d28:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004d2a:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8004d2c:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8004d2e:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8004d30:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8004d32:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8004d34:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004d36:	462a      	mov	r2, r5
 8004d38:	4631      	mov	r1, r6
 8004d3a:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8004d3c:	2b00      	cmp	r3, #0
 8004d3e:	d1d0      	bne.n	8004ce2 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004d40:	f7ff fd57 	bl	80047f2 <I2C_WaitOnBTFFlagUntilTimeout>
 8004d44:	2800      	cmp	r0, #0
 8004d46:	d1cf      	bne.n	8004ce8 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004d48:	6822      	ldr	r2, [r4, #0]
 8004d4a:	6813      	ldr	r3, [r2, #0]
 8004d4c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004d50:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004d52:	2320      	movs	r3, #32
 8004d54:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8004d58:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004d5c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8004d60:	e783      	b.n	8004c6a <HAL_I2C_Mem_Write+0x1e>
 8004d62:	bf00      	nop
 8004d64:	00100002 	.word	0x00100002
 8004d68:	ffff0000 	.word	0xffff0000

08004d6c <HAL_I2C_Mem_Read>:
{
 8004d6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004d70:	4604      	mov	r4, r0
 8004d72:	b087      	sub	sp, #28
 8004d74:	4699      	mov	r9, r3
 8004d76:	460d      	mov	r5, r1
 8004d78:	4690      	mov	r8, r2
 8004d7a:	9f10      	ldr	r7, [sp, #64]	; 0x40
  uint32_t tickstart = HAL_GetTick();
 8004d7c:	f7ff f93c 	bl	8003ff8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004d80:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004d84:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004d86:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004d88:	d004      	beq.n	8004d94 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8004d8a:	2502      	movs	r5, #2
}
 8004d8c:	4628      	mov	r0, r5
 8004d8e:	b007      	add	sp, #28
 8004d90:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004d94:	9000      	str	r0, [sp, #0]
 8004d96:	2319      	movs	r3, #25
 8004d98:	2201      	movs	r2, #1
 8004d9a:	4977      	ldr	r1, [pc, #476]	; (8004f78 <HAL_I2C_Mem_Read+0x20c>)
 8004d9c:	4620      	mov	r0, r4
 8004d9e:	f7ff fd7d 	bl	800489c <I2C_WaitOnFlagUntilTimeout>
 8004da2:	2800      	cmp	r0, #0
 8004da4:	d1f1      	bne.n	8004d8a <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8004da6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8004daa:	2b01      	cmp	r3, #1
 8004dac:	d0ed      	beq.n	8004d8a <HAL_I2C_Mem_Read+0x1e>
 8004dae:	2301      	movs	r3, #1
 8004db0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004db4:	6823      	ldr	r3, [r4, #0]
 8004db6:	681a      	ldr	r2, [r3, #0]
 8004db8:	07d0      	lsls	r0, r2, #31
      __HAL_I2C_ENABLE(hi2c);
 8004dba:	bf5e      	ittt	pl
 8004dbc:	681a      	ldrpl	r2, [r3, #0]
 8004dbe:	f042 0201 	orrpl.w	r2, r2, #1
 8004dc2:	601a      	strpl	r2, [r3, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004dc4:	681a      	ldr	r2, [r3, #0]
 8004dc6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004dca:	601a      	str	r2, [r3, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004dcc:	2322      	movs	r3, #34	; 0x22
 8004dce:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004dd2:	2340      	movs	r3, #64	; 0x40
 8004dd4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004dd8:	2300      	movs	r3, #0
 8004dda:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8004ddc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004dde:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004de0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8004de4:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004de6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004de8:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004dea:	4b64      	ldr	r3, [pc, #400]	; (8004f7c <HAL_I2C_Mem_Read+0x210>)
 8004dec:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004dee:	4629      	mov	r1, r5
 8004df0:	e9cd 7600 	strd	r7, r6, [sp]
 8004df4:	464b      	mov	r3, r9
 8004df6:	4642      	mov	r2, r8
 8004df8:	4620      	mov	r0, r4
 8004dfa:	f7ff fdfd 	bl	80049f8 <I2C_RequestMemoryRead>
 8004dfe:	4605      	mov	r5, r0
 8004e00:	b108      	cbz	r0, 8004e06 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8004e02:	2501      	movs	r5, #1
 8004e04:	e7c2      	b.n	8004d8c <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8004e06:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8004e08:	6823      	ldr	r3, [r4, #0]
 8004e0a:	b992      	cbnz	r2, 8004e32 <HAL_I2C_Mem_Read+0xc6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004e0c:	9002      	str	r0, [sp, #8]
 8004e0e:	695a      	ldr	r2, [r3, #20]
 8004e10:	9202      	str	r2, [sp, #8]
 8004e12:	699a      	ldr	r2, [r3, #24]
 8004e14:	9202      	str	r2, [sp, #8]
 8004e16:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004e18:	681a      	ldr	r2, [r3, #0]
 8004e1a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004e1e:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004e20:	2320      	movs	r3, #32
 8004e22:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004e26:	2300      	movs	r3, #0
 8004e28:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    __HAL_UNLOCK(hi2c);
 8004e2c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    return HAL_OK;
 8004e30:	e7ac      	b.n	8004d8c <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8004e32:	2a01      	cmp	r2, #1
 8004e34:	d12c      	bne.n	8004e90 <HAL_I2C_Mem_Read+0x124>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004e36:	681a      	ldr	r2, [r3, #0]
 8004e38:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004e3c:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004e3e:	9003      	str	r0, [sp, #12]
 8004e40:	695a      	ldr	r2, [r3, #20]
 8004e42:	9203      	str	r2, [sp, #12]
 8004e44:	699a      	ldr	r2, [r3, #24]
 8004e46:	9203      	str	r2, [sp, #12]
 8004e48:	9a03      	ldr	r2, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004e4a:	681a      	ldr	r2, [r3, #0]
 8004e4c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004e50:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004e52:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8004f80 <HAL_I2C_Mem_Read+0x214>
    while (hi2c->XferSize > 0U)
 8004e56:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004e58:	2b00      	cmp	r3, #0
 8004e5a:	d0e1      	beq.n	8004e20 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8004e5c:	2b03      	cmp	r3, #3
 8004e5e:	d86e      	bhi.n	8004f3e <HAL_I2C_Mem_Read+0x1d2>
        if (hi2c->XferSize == 1U)
 8004e60:	2b01      	cmp	r3, #1
 8004e62:	d12d      	bne.n	8004ec0 <HAL_I2C_Mem_Read+0x154>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004e64:	4632      	mov	r2, r6
 8004e66:	4639      	mov	r1, r7
 8004e68:	4620      	mov	r0, r4
 8004e6a:	f7ff fce8 	bl	800483e <I2C_WaitOnRXNEFlagUntilTimeout>
 8004e6e:	2800      	cmp	r0, #0
 8004e70:	d1c7      	bne.n	8004e02 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004e72:	6823      	ldr	r3, [r4, #0]
 8004e74:	691a      	ldr	r2, [r3, #16]
 8004e76:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004e78:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004e7a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004e7c:	3301      	adds	r3, #1
 8004e7e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8004e80:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004e82:	3b01      	subs	r3, #1
 8004e84:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004e86:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004e88:	3b01      	subs	r3, #1
 8004e8a:	b29b      	uxth	r3, r3
 8004e8c:	8563      	strh	r3, [r4, #42]	; 0x2a
 8004e8e:	e7e2      	b.n	8004e56 <HAL_I2C_Mem_Read+0xea>
    else if (hi2c->XferSize == 2U)
 8004e90:	2a02      	cmp	r2, #2
 8004e92:	d10e      	bne.n	8004eb2 <HAL_I2C_Mem_Read+0x146>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004e94:	681a      	ldr	r2, [r3, #0]
 8004e96:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004e9a:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004e9c:	681a      	ldr	r2, [r3, #0]
 8004e9e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004ea2:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004ea4:	9004      	str	r0, [sp, #16]
 8004ea6:	695a      	ldr	r2, [r3, #20]
 8004ea8:	9204      	str	r2, [sp, #16]
 8004eaa:	699b      	ldr	r3, [r3, #24]
 8004eac:	9304      	str	r3, [sp, #16]
 8004eae:	9b04      	ldr	r3, [sp, #16]
 8004eb0:	e7cf      	b.n	8004e52 <HAL_I2C_Mem_Read+0xe6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004eb2:	9005      	str	r0, [sp, #20]
 8004eb4:	695a      	ldr	r2, [r3, #20]
 8004eb6:	9205      	str	r2, [sp, #20]
 8004eb8:	699b      	ldr	r3, [r3, #24]
 8004eba:	9305      	str	r3, [sp, #20]
 8004ebc:	9b05      	ldr	r3, [sp, #20]
 8004ebe:	e7c8      	b.n	8004e52 <HAL_I2C_Mem_Read+0xe6>
        else if (hi2c->XferSize == 2U)
 8004ec0:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004ec2:	9600      	str	r6, [sp, #0]
 8004ec4:	463b      	mov	r3, r7
 8004ec6:	f04f 0200 	mov.w	r2, #0
 8004eca:	4641      	mov	r1, r8
 8004ecc:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8004ece:	d119      	bne.n	8004f04 <HAL_I2C_Mem_Read+0x198>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004ed0:	f7ff fce4 	bl	800489c <I2C_WaitOnFlagUntilTimeout>
 8004ed4:	2800      	cmp	r0, #0
 8004ed6:	d194      	bne.n	8004e02 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004ed8:	6823      	ldr	r3, [r4, #0]
 8004eda:	681a      	ldr	r2, [r3, #0]
 8004edc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004ee0:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004ee2:	691a      	ldr	r2, [r3, #16]
 8004ee4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004ee6:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004ee8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004eea:	1c53      	adds	r3, r2, #1
 8004eec:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8004eee:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004ef0:	3b01      	subs	r3, #1
 8004ef2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004ef4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004ef6:	3b01      	subs	r3, #1
 8004ef8:	b29b      	uxth	r3, r3
 8004efa:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004efc:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004efe:	691b      	ldr	r3, [r3, #16]
 8004f00:	7053      	strb	r3, [r2, #1]
 8004f02:	e7ba      	b.n	8004e7a <HAL_I2C_Mem_Read+0x10e>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004f04:	f7ff fcca 	bl	800489c <I2C_WaitOnFlagUntilTimeout>
 8004f08:	4602      	mov	r2, r0
 8004f0a:	2800      	cmp	r0, #0
 8004f0c:	f47f af79 	bne.w	8004e02 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004f10:	6823      	ldr	r3, [r4, #0]
 8004f12:	6819      	ldr	r1, [r3, #0]
 8004f14:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8004f18:	6019      	str	r1, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004f1a:	6919      	ldr	r1, [r3, #16]
 8004f1c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004f1e:	7019      	strb	r1, [r3, #0]
          hi2c->pBuffPtr++;
 8004f20:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004f22:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8004f24:	3301      	adds	r3, #1
 8004f26:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8004f28:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004f2a:	3b01      	subs	r3, #1
 8004f2c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004f2e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004f30:	3b01      	subs	r3, #1
 8004f32:	b29b      	uxth	r3, r3
 8004f34:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004f36:	4641      	mov	r1, r8
 8004f38:	463b      	mov	r3, r7
 8004f3a:	4620      	mov	r0, r4
 8004f3c:	e7c8      	b.n	8004ed0 <HAL_I2C_Mem_Read+0x164>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004f3e:	4632      	mov	r2, r6
 8004f40:	4639      	mov	r1, r7
 8004f42:	4620      	mov	r0, r4
 8004f44:	f7ff fc7b 	bl	800483e <I2C_WaitOnRXNEFlagUntilTimeout>
 8004f48:	2800      	cmp	r0, #0
 8004f4a:	f47f af5a 	bne.w	8004e02 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004f4e:	6823      	ldr	r3, [r4, #0]
 8004f50:	691a      	ldr	r2, [r3, #16]
 8004f52:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004f54:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8004f56:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004f58:	1c53      	adds	r3, r2, #1
 8004f5a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8004f5c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004f5e:	3b01      	subs	r3, #1
 8004f60:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8004f62:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004f64:	3b01      	subs	r3, #1
 8004f66:	b29b      	uxth	r3, r3
 8004f68:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004f6a:	6823      	ldr	r3, [r4, #0]
 8004f6c:	6959      	ldr	r1, [r3, #20]
 8004f6e:	0749      	lsls	r1, r1, #29
 8004f70:	f57f af71 	bpl.w	8004e56 <HAL_I2C_Mem_Read+0xea>
 8004f74:	e7c3      	b.n	8004efe <HAL_I2C_Mem_Read+0x192>
 8004f76:	bf00      	nop
 8004f78:	00100002 	.word	0x00100002
 8004f7c:	ffff0000 	.word	0xffff0000
 8004f80:	00010004 	.word	0x00010004

08004f84 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004f84:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 8004f88:	b2d2      	uxtb	r2, r2
 8004f8a:	2a20      	cmp	r2, #32
{
 8004f8c:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004f8e:	d116      	bne.n	8004fbe <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004f90:	2324      	movs	r3, #36	; 0x24
 8004f92:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004f96:	6803      	ldr	r3, [r0, #0]
 8004f98:	681c      	ldr	r4, [r3, #0]
 8004f9a:	f024 0401 	bic.w	r4, r4, #1
 8004f9e:	601c      	str	r4, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8004fa0:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8004fa2:	f024 0410 	bic.w	r4, r4, #16
 8004fa6:	625c      	str	r4, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8004fa8:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8004faa:	4321      	orrs	r1, r4
 8004fac:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004fae:	6819      	ldr	r1, [r3, #0]
 8004fb0:	f041 0101 	orr.w	r1, r1, #1
 8004fb4:	6019      	str	r1, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004fb6:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d

    return HAL_OK;
 8004fba:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004fbc:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8004fbe:	2002      	movs	r0, #2
 8004fc0:	e7fc      	b.n	8004fbc <HAL_I2CEx_ConfigAnalogFilter+0x38>

08004fc2 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8004fc2:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004fc4:	f890 403d 	ldrb.w	r4, [r0, #61]	; 0x3d
 8004fc8:	b2e4      	uxtb	r4, r4
 8004fca:	2c20      	cmp	r4, #32
 8004fcc:	d116      	bne.n	8004ffc <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004fce:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8004fd0:	2324      	movs	r3, #36	; 0x24
 8004fd2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8004fd6:	6815      	ldr	r5, [r2, #0]
 8004fd8:	f025 0501 	bic.w	r5, r5, #1
 8004fdc:	6015      	str	r5, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8004fde:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8004fe0:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8004fe4:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8004fe6:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8004fe8:	b29b      	uxth	r3, r3
 8004fea:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004fec:	6813      	ldr	r3, [r2, #0]
 8004fee:	f043 0301 	orr.w	r3, r3, #1
 8004ff2:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004ff4:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8004ff8:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004ffa:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8004ffc:	2002      	movs	r0, #2
 8004ffe:	e7fc      	b.n	8004ffa <HAL_I2CEx_ConfigDigitalFilter+0x38>

08005000 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8005000:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005004:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005006:	6804      	ldr	r4, [r0, #0]
 8005008:	684f      	ldr	r7, [r1, #4]
 800500a:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800500c:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005010:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005014:	3284      	adds	r2, #132	; 0x84
 8005016:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005018:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800501c:	6858      	ldr	r0, [r3, #4]
 800501e:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8005022:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005024:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005026:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800502a:	f3c0 400b 	ubfx	r0, r0, #16, #12
 800502e:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005030:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005032:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8005036:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005038:	68e0      	ldr	r0, [r4, #12]
 800503a:	68cd      	ldr	r5, [r1, #12]
 800503c:	f3c0 000a 	ubfx	r0, r0, #0, #11
 8005040:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005042:	6898      	ldr	r0, [r3, #8]
 8005044:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8005048:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800504a:	68e6      	ldr	r6, [r4, #12]
 800504c:	6888      	ldr	r0, [r1, #8]
 800504e:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8005052:	3001      	adds	r0, #1
 8005054:	4430      	add	r0, r6
 8005056:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800505a:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800505c:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800505e:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005060:	f020 0007 	bic.w	r0, r0, #7
 8005064:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005066:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800506a:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800506c:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800506e:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005072:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005076:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800507a:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800507e:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005082:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005086:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 800508a:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800508c:	6958      	ldr	r0, [r3, #20]
 800508e:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 8005092:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005094:	6948      	ldr	r0, [r1, #20]
 8005096:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005098:	69d8      	ldr	r0, [r3, #28]
 800509a:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 800509e:	f020 0007 	bic.w	r0, r0, #7
 80050a2:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80050a4:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 80050a8:	4305      	orrs	r5, r0
 80050aa:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80050ac:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80050ae:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80050b0:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80050b4:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80050b6:	b31e      	cbz	r6, 8005100 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80050b8:	2e01      	cmp	r6, #1
 80050ba:	d023      	beq.n	8005104 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80050bc:	1eb0      	subs	r0, r6, #2
 80050be:	2802      	cmp	r0, #2
 80050c0:	d922      	bls.n	8005108 <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 80050c2:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 80050c4:	bf0c      	ite	eq
 80050c6:	2002      	moveq	r0, #2
 80050c8:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80050ca:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80050cc:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 80050d0:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80050d2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80050d4:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80050d6:	eba7 070c 	sub.w	r7, r7, ip
 80050da:	4345      	muls	r5, r0
 80050dc:	4378      	muls	r0, r7
 80050de:	3003      	adds	r0, #3
 80050e0:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80050e4:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80050e6:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80050e8:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 80050ec:	f020 0007 	bic.w	r0, r0, #7
 80050f0:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80050f2:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80050f4:	58a3      	ldr	r3, [r4, r2]
 80050f6:	f043 0301 	orr.w	r3, r3, #1
 80050fa:	50a3      	str	r3, [r4, r2]
}
 80050fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005100:	2004      	movs	r0, #4
 8005102:	e7e2      	b.n	80050ca <LTDC_SetConfig+0xca>
    tmp = 3U;
 8005104:	2003      	movs	r0, #3
 8005106:	e7e0      	b.n	80050ca <LTDC_SetConfig+0xca>
    tmp = 2U;
 8005108:	2002      	movs	r0, #2
 800510a:	e7de      	b.n	80050ca <LTDC_SetConfig+0xca>

0800510c <HAL_LTDC_Init>:
{
 800510c:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800510e:	4604      	mov	r4, r0
 8005110:	2800      	cmp	r0, #0
 8005112:	d063      	beq.n	80051dc <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005114:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8005118:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800511c:	b91b      	cbnz	r3, 8005126 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800511e:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005122:	f7fc fc51 	bl	80019c8 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005126:	2302      	movs	r3, #2
 8005128:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800512c:	6823      	ldr	r3, [r4, #0]
 800512e:	699a      	ldr	r2, [r3, #24]
 8005130:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005134:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005136:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800513a:	4302      	orrs	r2, r0
 800513c:	68e0      	ldr	r0, [r4, #12]
 800513e:	6999      	ldr	r1, [r3, #24]
 8005140:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005142:	6920      	ldr	r0, [r4, #16]
 8005144:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005146:	430a      	orrs	r2, r1
 8005148:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800514a:	689a      	ldr	r2, [r3, #8]
 800514c:	4924      	ldr	r1, [pc, #144]	; (80051e0 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800514e:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005150:	400a      	ands	r2, r1
 8005152:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005154:	689a      	ldr	r2, [r3, #8]
 8005156:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800515a:	69a0      	ldr	r0, [r4, #24]
 800515c:	4302      	orrs	r2, r0
 800515e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005160:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005162:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005164:	400a      	ands	r2, r1
 8005166:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005168:	68da      	ldr	r2, [r3, #12]
 800516a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800516e:	6a20      	ldr	r0, [r4, #32]
 8005170:	4302      	orrs	r2, r0
 8005172:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005174:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005176:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005178:	400a      	ands	r2, r1
 800517a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800517c:	691a      	ldr	r2, [r3, #16]
 800517e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005182:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005184:	4302      	orrs	r2, r0
 8005186:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005188:	695a      	ldr	r2, [r3, #20]
 800518a:	4011      	ands	r1, r2
 800518c:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800518e:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005190:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005192:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005196:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005198:	430a      	orrs	r2, r1
 800519a:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800519c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800519e:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80051a2:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80051a6:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 80051aa:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80051ac:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80051ae:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80051b2:	430a      	orrs	r2, r1
 80051b4:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80051b8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80051bc:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80051be:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80051c0:	f042 0206 	orr.w	r2, r2, #6
 80051c4:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80051c6:	699a      	ldr	r2, [r3, #24]
 80051c8:	f042 0201 	orr.w	r2, r2, #1
 80051cc:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80051ce:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80051d0:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80051d2:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80051d6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80051da:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80051dc:	2001      	movs	r0, #1
 80051de:	e7fc      	b.n	80051da <HAL_LTDC_Init+0xce>
 80051e0:	f000f800 	.word	0xf000f800

080051e4 <HAL_LTDC_ErrorCallback>:
 80051e4:	4770      	bx	lr

080051e6 <HAL_LTDC_ReloadEventCallback>:
 80051e6:	4770      	bx	lr

080051e8 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80051e8:	6803      	ldr	r3, [r0, #0]
{
 80051ea:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80051ec:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80051ee:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80051f0:	0772      	lsls	r2, r6, #29
{
 80051f2:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80051f4:	d514      	bpl.n	8005220 <HAL_LTDC_IRQHandler+0x38>
 80051f6:	0769      	lsls	r1, r5, #29
 80051f8:	d512      	bpl.n	8005220 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80051fa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80051fc:	f022 0204 	bic.w	r2, r2, #4
 8005200:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005202:	2204      	movs	r2, #4
 8005204:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005206:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800520a:	f043 0301 	orr.w	r3, r3, #1
 800520e:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8005212:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005214:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005218:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800521c:	f7ff ffe2 	bl	80051e4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005220:	07b2      	lsls	r2, r6, #30
 8005222:	d516      	bpl.n	8005252 <HAL_LTDC_IRQHandler+0x6a>
 8005224:	07ab      	lsls	r3, r5, #30
 8005226:	d514      	bpl.n	8005252 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005228:	6823      	ldr	r3, [r4, #0]
 800522a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800522c:	f022 0202 	bic.w	r2, r2, #2
 8005230:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005232:	2202      	movs	r2, #2
 8005234:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005236:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800523a:	4313      	orrs	r3, r2
 800523c:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005240:	2304      	movs	r3, #4
 8005242:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005246:	2300      	movs	r3, #0
 8005248:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800524c:	4620      	mov	r0, r4
 800524e:	f7ff ffc9 	bl	80051e4 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005252:	07f0      	lsls	r0, r6, #31
 8005254:	d510      	bpl.n	8005278 <HAL_LTDC_IRQHandler+0x90>
 8005256:	07e9      	lsls	r1, r5, #31
 8005258:	d50e      	bpl.n	8005278 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800525a:	6823      	ldr	r3, [r4, #0]
 800525c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800525e:	f022 0201 	bic.w	r2, r2, #1
 8005262:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005264:	2201      	movs	r2, #1
 8005266:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8005268:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800526a:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800526e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005272:	4620      	mov	r0, r4
 8005274:	f7fb ff98 	bl	80011a8 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005278:	0732      	lsls	r2, r6, #28
 800527a:	d511      	bpl.n	80052a0 <HAL_LTDC_IRQHandler+0xb8>
 800527c:	072b      	lsls	r3, r5, #28
 800527e:	d50f      	bpl.n	80052a0 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005280:	6823      	ldr	r3, [r4, #0]
 8005282:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005284:	f022 0208 	bic.w	r2, r2, #8
 8005288:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800528a:	2208      	movs	r2, #8
 800528c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800528e:	2301      	movs	r3, #1
 8005290:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005294:	2300      	movs	r3, #0
 8005296:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800529a:	4620      	mov	r0, r4
 800529c:	f7ff ffa3 	bl	80051e6 <HAL_LTDC_ReloadEventCallback>
}
 80052a0:	bd70      	pop	{r4, r5, r6, pc}

080052a2 <HAL_LTDC_ConfigLayer>:
{
 80052a2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(hltdc);
 80052a4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80052a8:	2b01      	cmp	r3, #1
{
 80052aa:	4606      	mov	r6, r0
 80052ac:	468c      	mov	ip, r1
 80052ae:	4696      	mov	lr, r2
 80052b0:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80052b4:	d01d      	beq.n	80052f2 <HAL_LTDC_ConfigLayer+0x50>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80052b6:	2434      	movs	r4, #52	; 0x34
 80052b8:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80052ba:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80052be:	fb04 6402 	mla	r4, r4, r2, r6
 80052c2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  __HAL_LOCK(hltdc);
 80052c4:	2701      	movs	r7, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80052c6:	3438      	adds	r4, #56	; 0x38
  __HAL_LOCK(hltdc);
 80052c8:	f886 70a0 	strb.w	r7, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80052cc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80052ce:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80052d0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80052d2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80052d4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80052d6:	682b      	ldr	r3, [r5, #0]
 80052d8:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80052da:	4630      	mov	r0, r6
 80052dc:	4672      	mov	r2, lr
 80052de:	4661      	mov	r1, ip
 80052e0:	f7ff fe8e 	bl	8005000 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80052e4:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80052e6:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80052e8:	625f      	str	r7, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80052ea:	f886 70a1 	strb.w	r7, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80052ee:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80052f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080052f4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80052f4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80052f8:	2b01      	cmp	r3, #1
 80052fa:	f04f 0302 	mov.w	r3, #2
 80052fe:	d012      	beq.n	8005326 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005300:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005304:	6803      	ldr	r3, [r0, #0]
 8005306:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005308:	f022 0201 	bic.w	r2, r2, #1
 800530c:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800530e:	4a07      	ldr	r2, [pc, #28]	; (800532c <HAL_LTDC_ProgramLineEvent+0x38>)
 8005310:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005312:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005314:	f042 0201 	orr.w	r2, r2, #1
 8005318:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800531a:	2301      	movs	r3, #1
 800531c:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005320:	2300      	movs	r3, #0
 8005322:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8005326:	4618      	mov	r0, r3
}
 8005328:	4770      	bx	lr
 800532a:	bf00      	nop
 800532c:	40016800 	.word	0x40016800

08005330 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005330:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8005334:	4604      	mov	r4, r0
 8005336:	b908      	cbnz	r0, 800533c <HAL_RCC_OscConfig+0xc>
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
      {
        return HAL_ERROR;
 8005338:	2001      	movs	r0, #1
 800533a:	e03f      	b.n	80053bc <HAL_RCC_OscConfig+0x8c>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800533c:	6803      	ldr	r3, [r0, #0]
 800533e:	07dd      	lsls	r5, r3, #31
 8005340:	d410      	bmi.n	8005364 <HAL_RCC_OscConfig+0x34>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005342:	6823      	ldr	r3, [r4, #0]
 8005344:	0798      	lsls	r0, r3, #30
 8005346:	d45a      	bmi.n	80053fe <HAL_RCC_OscConfig+0xce>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005348:	6823      	ldr	r3, [r4, #0]
 800534a:	071a      	lsls	r2, r3, #28
 800534c:	f100 809c 	bmi.w	8005488 <HAL_RCC_OscConfig+0x158>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005350:	6823      	ldr	r3, [r4, #0]
 8005352:	075b      	lsls	r3, r3, #29
 8005354:	f100 80ba 	bmi.w	80054cc <HAL_RCC_OscConfig+0x19c>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005358:	69a0      	ldr	r0, [r4, #24]
 800535a:	2800      	cmp	r0, #0
 800535c:	f040 811b 	bne.w	8005596 <HAL_RCC_OscConfig+0x266>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8005360:	2000      	movs	r0, #0
 8005362:	e02b      	b.n	80053bc <HAL_RCC_OscConfig+0x8c>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8005364:	4ba7      	ldr	r3, [pc, #668]	; (8005604 <HAL_RCC_OscConfig+0x2d4>)
 8005366:	689a      	ldr	r2, [r3, #8]
 8005368:	f002 020c 	and.w	r2, r2, #12
 800536c:	2a04      	cmp	r2, #4
 800536e:	d007      	beq.n	8005380 <HAL_RCC_OscConfig+0x50>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005370:	689a      	ldr	r2, [r3, #8]
 8005372:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8005376:	2a08      	cmp	r2, #8
 8005378:	d10a      	bne.n	8005390 <HAL_RCC_OscConfig+0x60>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800537a:	685b      	ldr	r3, [r3, #4]
 800537c:	0259      	lsls	r1, r3, #9
 800537e:	d507      	bpl.n	8005390 <HAL_RCC_OscConfig+0x60>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005380:	4ba0      	ldr	r3, [pc, #640]	; (8005604 <HAL_RCC_OscConfig+0x2d4>)
 8005382:	681b      	ldr	r3, [r3, #0]
 8005384:	039a      	lsls	r2, r3, #14
 8005386:	d5dc      	bpl.n	8005342 <HAL_RCC_OscConfig+0x12>
 8005388:	6863      	ldr	r3, [r4, #4]
 800538a:	2b00      	cmp	r3, #0
 800538c:	d1d9      	bne.n	8005342 <HAL_RCC_OscConfig+0x12>
 800538e:	e7d3      	b.n	8005338 <HAL_RCC_OscConfig+0x8>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005390:	6863      	ldr	r3, [r4, #4]
 8005392:	4d9c      	ldr	r5, [pc, #624]	; (8005604 <HAL_RCC_OscConfig+0x2d4>)
 8005394:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8005398:	d113      	bne.n	80053c2 <HAL_RCC_OscConfig+0x92>
 800539a:	682b      	ldr	r3, [r5, #0]
 800539c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80053a0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 80053a2:	f7fe fe29 	bl	8003ff8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80053a6:	4d97      	ldr	r5, [pc, #604]	; (8005604 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 80053a8:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80053aa:	682b      	ldr	r3, [r5, #0]
 80053ac:	039b      	lsls	r3, r3, #14
 80053ae:	d4c8      	bmi.n	8005342 <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80053b0:	f7fe fe22 	bl	8003ff8 <HAL_GetTick>
 80053b4:	1b80      	subs	r0, r0, r6
 80053b6:	2864      	cmp	r0, #100	; 0x64
 80053b8:	d9f7      	bls.n	80053aa <HAL_RCC_OscConfig+0x7a>
            return HAL_TIMEOUT;
 80053ba:	2003      	movs	r0, #3
}
 80053bc:	b002      	add	sp, #8
 80053be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80053c2:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80053c6:	d104      	bne.n	80053d2 <HAL_RCC_OscConfig+0xa2>
 80053c8:	682b      	ldr	r3, [r5, #0]
 80053ca:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80053ce:	602b      	str	r3, [r5, #0]
 80053d0:	e7e3      	b.n	800539a <HAL_RCC_OscConfig+0x6a>
 80053d2:	682a      	ldr	r2, [r5, #0]
 80053d4:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80053d8:	602a      	str	r2, [r5, #0]
 80053da:	682a      	ldr	r2, [r5, #0]
 80053dc:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80053e0:	602a      	str	r2, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80053e2:	2b00      	cmp	r3, #0
 80053e4:	d1dd      	bne.n	80053a2 <HAL_RCC_OscConfig+0x72>
        tickstart = HAL_GetTick();
 80053e6:	f7fe fe07 	bl	8003ff8 <HAL_GetTick>
 80053ea:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80053ec:	682b      	ldr	r3, [r5, #0]
 80053ee:	039f      	lsls	r7, r3, #14
 80053f0:	d5a7      	bpl.n	8005342 <HAL_RCC_OscConfig+0x12>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80053f2:	f7fe fe01 	bl	8003ff8 <HAL_GetTick>
 80053f6:	1b80      	subs	r0, r0, r6
 80053f8:	2864      	cmp	r0, #100	; 0x64
 80053fa:	d9f7      	bls.n	80053ec <HAL_RCC_OscConfig+0xbc>
 80053fc:	e7dd      	b.n	80053ba <HAL_RCC_OscConfig+0x8a>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80053fe:	4b81      	ldr	r3, [pc, #516]	; (8005604 <HAL_RCC_OscConfig+0x2d4>)
 8005400:	689a      	ldr	r2, [r3, #8]
 8005402:	f012 0f0c 	tst.w	r2, #12
 8005406:	d007      	beq.n	8005418 <HAL_RCC_OscConfig+0xe8>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005408:	689a      	ldr	r2, [r3, #8]
 800540a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800540e:	2a08      	cmp	r2, #8
 8005410:	d111      	bne.n	8005436 <HAL_RCC_OscConfig+0x106>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005412:	685b      	ldr	r3, [r3, #4]
 8005414:	025e      	lsls	r6, r3, #9
 8005416:	d40e      	bmi.n	8005436 <HAL_RCC_OscConfig+0x106>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005418:	4b7a      	ldr	r3, [pc, #488]	; (8005604 <HAL_RCC_OscConfig+0x2d4>)
 800541a:	681a      	ldr	r2, [r3, #0]
 800541c:	0795      	lsls	r5, r2, #30
 800541e:	d502      	bpl.n	8005426 <HAL_RCC_OscConfig+0xf6>
 8005420:	68e2      	ldr	r2, [r4, #12]
 8005422:	2a01      	cmp	r2, #1
 8005424:	d188      	bne.n	8005338 <HAL_RCC_OscConfig+0x8>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005426:	681a      	ldr	r2, [r3, #0]
 8005428:	6921      	ldr	r1, [r4, #16]
 800542a:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800542e:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 8005432:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005434:	e788      	b.n	8005348 <HAL_RCC_OscConfig+0x18>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8005436:	68e2      	ldr	r2, [r4, #12]
 8005438:	4b73      	ldr	r3, [pc, #460]	; (8005608 <HAL_RCC_OscConfig+0x2d8>)
 800543a:	b1b2      	cbz	r2, 800546a <HAL_RCC_OscConfig+0x13a>
        __HAL_RCC_HSI_ENABLE();
 800543c:	2201      	movs	r2, #1
 800543e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005440:	f7fe fdda 	bl	8003ff8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005444:	4d6f      	ldr	r5, [pc, #444]	; (8005604 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 8005446:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005448:	682b      	ldr	r3, [r5, #0]
 800544a:	0798      	lsls	r0, r3, #30
 800544c:	d507      	bpl.n	800545e <HAL_RCC_OscConfig+0x12e>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800544e:	682b      	ldr	r3, [r5, #0]
 8005450:	6922      	ldr	r2, [r4, #16]
 8005452:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8005456:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800545a:	602b      	str	r3, [r5, #0]
 800545c:	e774      	b.n	8005348 <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800545e:	f7fe fdcb 	bl	8003ff8 <HAL_GetTick>
 8005462:	1b80      	subs	r0, r0, r6
 8005464:	2802      	cmp	r0, #2
 8005466:	d9ef      	bls.n	8005448 <HAL_RCC_OscConfig+0x118>
 8005468:	e7a7      	b.n	80053ba <HAL_RCC_OscConfig+0x8a>
        __HAL_RCC_HSI_DISABLE();
 800546a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800546c:	f7fe fdc4 	bl	8003ff8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005470:	4d64      	ldr	r5, [pc, #400]	; (8005604 <HAL_RCC_OscConfig+0x2d4>)
        tickstart = HAL_GetTick();
 8005472:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005474:	682b      	ldr	r3, [r5, #0]
 8005476:	0799      	lsls	r1, r3, #30
 8005478:	f57f af66 	bpl.w	8005348 <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800547c:	f7fe fdbc 	bl	8003ff8 <HAL_GetTick>
 8005480:	1b80      	subs	r0, r0, r6
 8005482:	2802      	cmp	r0, #2
 8005484:	d9f6      	bls.n	8005474 <HAL_RCC_OscConfig+0x144>
 8005486:	e798      	b.n	80053ba <HAL_RCC_OscConfig+0x8a>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8005488:	6962      	ldr	r2, [r4, #20]
 800548a:	4b60      	ldr	r3, [pc, #384]	; (800560c <HAL_RCC_OscConfig+0x2dc>)
 800548c:	b17a      	cbz	r2, 80054ae <HAL_RCC_OscConfig+0x17e>
      __HAL_RCC_LSI_ENABLE();
 800548e:	2201      	movs	r2, #1
 8005490:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 8005492:	f7fe fdb1 	bl	8003ff8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005496:	4d5b      	ldr	r5, [pc, #364]	; (8005604 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 8005498:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800549a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800549c:	079f      	lsls	r7, r3, #30
 800549e:	f53f af57 	bmi.w	8005350 <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80054a2:	f7fe fda9 	bl	8003ff8 <HAL_GetTick>
 80054a6:	1b80      	subs	r0, r0, r6
 80054a8:	2802      	cmp	r0, #2
 80054aa:	d9f6      	bls.n	800549a <HAL_RCC_OscConfig+0x16a>
 80054ac:	e785      	b.n	80053ba <HAL_RCC_OscConfig+0x8a>
      __HAL_RCC_LSI_DISABLE();
 80054ae:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 80054b0:	f7fe fda2 	bl	8003ff8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80054b4:	4d53      	ldr	r5, [pc, #332]	; (8005604 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 80054b6:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80054b8:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 80054ba:	0798      	lsls	r0, r3, #30
 80054bc:	f57f af48 	bpl.w	8005350 <HAL_RCC_OscConfig+0x20>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80054c0:	f7fe fd9a 	bl	8003ff8 <HAL_GetTick>
 80054c4:	1b80      	subs	r0, r0, r6
 80054c6:	2802      	cmp	r0, #2
 80054c8:	d9f6      	bls.n	80054b8 <HAL_RCC_OscConfig+0x188>
 80054ca:	e776      	b.n	80053ba <HAL_RCC_OscConfig+0x8a>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80054cc:	4b4d      	ldr	r3, [pc, #308]	; (8005604 <HAL_RCC_OscConfig+0x2d4>)
 80054ce:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80054d0:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80054d4:	d128      	bne.n	8005528 <HAL_RCC_OscConfig+0x1f8>
      __HAL_RCC_PWR_CLK_ENABLE();
 80054d6:	9201      	str	r2, [sp, #4]
 80054d8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80054da:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80054de:	641a      	str	r2, [r3, #64]	; 0x40
 80054e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80054e2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80054e6:	9301      	str	r3, [sp, #4]
 80054e8:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80054ea:	2601      	movs	r6, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80054ec:	4d48      	ldr	r5, [pc, #288]	; (8005610 <HAL_RCC_OscConfig+0x2e0>)
 80054ee:	682b      	ldr	r3, [r5, #0]
 80054f0:	05d9      	lsls	r1, r3, #23
 80054f2:	d51b      	bpl.n	800552c <HAL_RCC_OscConfig+0x1fc>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80054f4:	68a3      	ldr	r3, [r4, #8]
 80054f6:	4d43      	ldr	r5, [pc, #268]	; (8005604 <HAL_RCC_OscConfig+0x2d4>)
 80054f8:	2b01      	cmp	r3, #1
 80054fa:	d127      	bne.n	800554c <HAL_RCC_OscConfig+0x21c>
 80054fc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80054fe:	f043 0301 	orr.w	r3, r3, #1
 8005502:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8005504:	f7fe fd78 	bl	8003ff8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005508:	4d3e      	ldr	r5, [pc, #248]	; (8005604 <HAL_RCC_OscConfig+0x2d4>)
      tickstart = HAL_GetTick();
 800550a:	4607      	mov	r7, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800550c:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005510:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005512:	079b      	lsls	r3, r3, #30
 8005514:	d539      	bpl.n	800558a <HAL_RCC_OscConfig+0x25a>
    if(pwrclkchanged == SET)
 8005516:	2e00      	cmp	r6, #0
 8005518:	f43f af1e 	beq.w	8005358 <HAL_RCC_OscConfig+0x28>
      __HAL_RCC_PWR_CLK_DISABLE();
 800551c:	4a39      	ldr	r2, [pc, #228]	; (8005604 <HAL_RCC_OscConfig+0x2d4>)
 800551e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8005520:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005524:	6413      	str	r3, [r2, #64]	; 0x40
 8005526:	e717      	b.n	8005358 <HAL_RCC_OscConfig+0x28>
    FlagStatus       pwrclkchanged = RESET;
 8005528:	2600      	movs	r6, #0
 800552a:	e7df      	b.n	80054ec <HAL_RCC_OscConfig+0x1bc>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800552c:	682b      	ldr	r3, [r5, #0]
 800552e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005532:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8005534:	f7fe fd60 	bl	8003ff8 <HAL_GetTick>
 8005538:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800553a:	682b      	ldr	r3, [r5, #0]
 800553c:	05da      	lsls	r2, r3, #23
 800553e:	d4d9      	bmi.n	80054f4 <HAL_RCC_OscConfig+0x1c4>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005540:	f7fe fd5a 	bl	8003ff8 <HAL_GetTick>
 8005544:	1bc0      	subs	r0, r0, r7
 8005546:	2802      	cmp	r0, #2
 8005548:	d9f7      	bls.n	800553a <HAL_RCC_OscConfig+0x20a>
 800554a:	e736      	b.n	80053ba <HAL_RCC_OscConfig+0x8a>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800554c:	2b05      	cmp	r3, #5
 800554e:	d104      	bne.n	800555a <HAL_RCC_OscConfig+0x22a>
 8005550:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005552:	f043 0304 	orr.w	r3, r3, #4
 8005556:	672b      	str	r3, [r5, #112]	; 0x70
 8005558:	e7d0      	b.n	80054fc <HAL_RCC_OscConfig+0x1cc>
 800555a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800555c:	f022 0201 	bic.w	r2, r2, #1
 8005560:	672a      	str	r2, [r5, #112]	; 0x70
 8005562:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8005564:	f022 0204 	bic.w	r2, r2, #4
 8005568:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800556a:	2b00      	cmp	r3, #0
 800556c:	d1ca      	bne.n	8005504 <HAL_RCC_OscConfig+0x1d4>
      tickstart = HAL_GetTick();
 800556e:	f7fe fd43 	bl	8003ff8 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005572:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8005576:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005578:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800557a:	0798      	lsls	r0, r3, #30
 800557c:	d5cb      	bpl.n	8005516 <HAL_RCC_OscConfig+0x1e6>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800557e:	f7fe fd3b 	bl	8003ff8 <HAL_GetTick>
 8005582:	1bc0      	subs	r0, r0, r7
 8005584:	4540      	cmp	r0, r8
 8005586:	d9f7      	bls.n	8005578 <HAL_RCC_OscConfig+0x248>
 8005588:	e717      	b.n	80053ba <HAL_RCC_OscConfig+0x8a>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800558a:	f7fe fd35 	bl	8003ff8 <HAL_GetTick>
 800558e:	1bc0      	subs	r0, r0, r7
 8005590:	4540      	cmp	r0, r8
 8005592:	d9bd      	bls.n	8005510 <HAL_RCC_OscConfig+0x1e0>
 8005594:	e711      	b.n	80053ba <HAL_RCC_OscConfig+0x8a>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005596:	4d1b      	ldr	r5, [pc, #108]	; (8005604 <HAL_RCC_OscConfig+0x2d4>)
 8005598:	68ab      	ldr	r3, [r5, #8]
 800559a:	f003 030c 	and.w	r3, r3, #12
 800559e:	2b08      	cmp	r3, #8
 80055a0:	d047      	beq.n	8005632 <HAL_RCC_OscConfig+0x302>
 80055a2:	4e1c      	ldr	r6, [pc, #112]	; (8005614 <HAL_RCC_OscConfig+0x2e4>)
 80055a4:	2300      	movs	r3, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80055a6:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 80055a8:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80055aa:	d135      	bne.n	8005618 <HAL_RCC_OscConfig+0x2e8>
        tickstart = HAL_GetTick();
 80055ac:	f7fe fd24 	bl	8003ff8 <HAL_GetTick>
 80055b0:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80055b2:	682b      	ldr	r3, [r5, #0]
 80055b4:	0199      	lsls	r1, r3, #6
 80055b6:	d41e      	bmi.n	80055f6 <HAL_RCC_OscConfig+0x2c6>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80055b8:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80055bc:	4313      	orrs	r3, r2
 80055be:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80055c0:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80055c4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80055c6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80055ca:	6aa2      	ldr	r2, [r4, #40]	; 0x28
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80055cc:	4c0d      	ldr	r4, [pc, #52]	; (8005604 <HAL_RCC_OscConfig+0x2d4>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80055ce:	0852      	lsrs	r2, r2, #1
 80055d0:	3a01      	subs	r2, #1
 80055d2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80055d6:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80055d8:	2301      	movs	r3, #1
 80055da:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 80055dc:	f7fe fd0c 	bl	8003ff8 <HAL_GetTick>
 80055e0:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80055e2:	6823      	ldr	r3, [r4, #0]
 80055e4:	019a      	lsls	r2, r3, #6
 80055e6:	f53f aebb 	bmi.w	8005360 <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80055ea:	f7fe fd05 	bl	8003ff8 <HAL_GetTick>
 80055ee:	1b40      	subs	r0, r0, r5
 80055f0:	2802      	cmp	r0, #2
 80055f2:	d9f6      	bls.n	80055e2 <HAL_RCC_OscConfig+0x2b2>
 80055f4:	e6e1      	b.n	80053ba <HAL_RCC_OscConfig+0x8a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80055f6:	f7fe fcff 	bl	8003ff8 <HAL_GetTick>
 80055fa:	1bc0      	subs	r0, r0, r7
 80055fc:	2802      	cmp	r0, #2
 80055fe:	d9d8      	bls.n	80055b2 <HAL_RCC_OscConfig+0x282>
 8005600:	e6db      	b.n	80053ba <HAL_RCC_OscConfig+0x8a>
 8005602:	bf00      	nop
 8005604:	40023800 	.word	0x40023800
 8005608:	42470000 	.word	0x42470000
 800560c:	42470e80 	.word	0x42470e80
 8005610:	40007000 	.word	0x40007000
 8005614:	42470060 	.word	0x42470060
        tickstart = HAL_GetTick();
 8005618:	f7fe fcee 	bl	8003ff8 <HAL_GetTick>
 800561c:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800561e:	682b      	ldr	r3, [r5, #0]
 8005620:	019b      	lsls	r3, r3, #6
 8005622:	f57f ae9d 	bpl.w	8005360 <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8005626:	f7fe fce7 	bl	8003ff8 <HAL_GetTick>
 800562a:	1b00      	subs	r0, r0, r4
 800562c:	2802      	cmp	r0, #2
 800562e:	d9f6      	bls.n	800561e <HAL_RCC_OscConfig+0x2ee>
 8005630:	e6c3      	b.n	80053ba <HAL_RCC_OscConfig+0x8a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005632:	2801      	cmp	r0, #1
 8005634:	f43f aec2 	beq.w	80053bc <HAL_RCC_OscConfig+0x8c>
        pll_config = RCC->PLLCFGR;
 8005638:	6868      	ldr	r0, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800563a:	69e3      	ldr	r3, [r4, #28]
 800563c:	f400 0280 	and.w	r2, r0, #4194304	; 0x400000
 8005640:	429a      	cmp	r2, r3
 8005642:	f47f ae79 	bne.w	8005338 <HAL_RCC_OscConfig+0x8>
 8005646:	6a22      	ldr	r2, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8005648:	f000 033f 	and.w	r3, r0, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800564c:	4293      	cmp	r3, r2
 800564e:	f47f ae73 	bne.w	8005338 <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8005652:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005654:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8005658:	4003      	ands	r3, r0
 800565a:	4293      	cmp	r3, r2
 800565c:	f47f ae6c 	bne.w	8005338 <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8005660:	6aa2      	ldr	r2, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8005662:	f400 3340 	and.w	r3, r0, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8005666:	4293      	cmp	r3, r2
 8005668:	f47f ae66 	bne.w	8005338 <HAL_RCC_OscConfig+0x8>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800566c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 800566e:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
    return HAL_ERROR;
 8005672:	1ac0      	subs	r0, r0, r3
 8005674:	bf18      	it	ne
 8005676:	2001      	movne	r0, #1
 8005678:	e6a0      	b.n	80053bc <HAL_RCC_OscConfig+0x8c>
 800567a:	bf00      	nop

0800567c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800567c:	4913      	ldr	r1, [pc, #76]	; (80056cc <HAL_RCC_GetSysClockFreq+0x50>)
{
 800567e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005680:	688b      	ldr	r3, [r1, #8]
 8005682:	f003 030c 	and.w	r3, r3, #12
 8005686:	2b04      	cmp	r3, #4
 8005688:	d003      	beq.n	8005692 <HAL_RCC_GetSysClockFreq+0x16>
 800568a:	2b08      	cmp	r3, #8
 800568c:	d003      	beq.n	8005696 <HAL_RCC_GetSysClockFreq+0x1a>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 800568e:	4810      	ldr	r0, [pc, #64]	; (80056d0 <HAL_RCC_GetSysClockFreq+0x54>)
    {
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
 8005690:	e000      	b.n	8005694 <HAL_RCC_GetSysClockFreq+0x18>
      sysclockfreq = HSE_VALUE;
 8005692:	4810      	ldr	r0, [pc, #64]	; (80056d4 <HAL_RCC_GetSysClockFreq+0x58>)
}
 8005694:	bd08      	pop	{r3, pc}
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005696:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005698:	684b      	ldr	r3, [r1, #4]
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800569a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800569c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80056a0:	bf14      	ite	ne
 80056a2:	480c      	ldrne	r0, [pc, #48]	; (80056d4 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80056a4:	480a      	ldreq	r0, [pc, #40]	; (80056d0 <HAL_RCC_GetSysClockFreq+0x54>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80056a6:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80056aa:	bf18      	it	ne
 80056ac:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80056ae:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80056b2:	fba1 0100 	umull	r0, r1, r1, r0
 80056b6:	f7fa fdeb 	bl	8000290 <__aeabi_uldivmod>
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80056ba:	4b04      	ldr	r3, [pc, #16]	; (80056cc <HAL_RCC_GetSysClockFreq+0x50>)
 80056bc:	685b      	ldr	r3, [r3, #4]
 80056be:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80056c2:	3301      	adds	r3, #1
 80056c4:	005b      	lsls	r3, r3, #1
      sysclockfreq = pllvco/pllp;
 80056c6:	fbb0 f0f3 	udiv	r0, r0, r3
 80056ca:	e7e3      	b.n	8005694 <HAL_RCC_GetSysClockFreq+0x18>
 80056cc:	40023800 	.word	0x40023800
 80056d0:	00f42400 	.word	0x00f42400
 80056d4:	007a1200 	.word	0x007a1200

080056d8 <HAL_RCC_ClockConfig>:
{
 80056d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80056dc:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80056de:	4604      	mov	r4, r0
 80056e0:	b910      	cbnz	r0, 80056e8 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80056e2:	2001      	movs	r0, #1
}
 80056e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80056e8:	4b43      	ldr	r3, [pc, #268]	; (80057f8 <HAL_RCC_ClockConfig+0x120>)
 80056ea:	681a      	ldr	r2, [r3, #0]
 80056ec:	f002 020f 	and.w	r2, r2, #15
 80056f0:	428a      	cmp	r2, r1
 80056f2:	d328      	bcc.n	8005746 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80056f4:	6821      	ldr	r1, [r4, #0]
 80056f6:	078f      	lsls	r7, r1, #30
 80056f8:	d42d      	bmi.n	8005756 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80056fa:	07c8      	lsls	r0, r1, #31
 80056fc:	d440      	bmi.n	8005780 <HAL_RCC_ClockConfig+0xa8>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80056fe:	4b3e      	ldr	r3, [pc, #248]	; (80057f8 <HAL_RCC_ClockConfig+0x120>)
 8005700:	681a      	ldr	r2, [r3, #0]
 8005702:	f002 020f 	and.w	r2, r2, #15
 8005706:	42aa      	cmp	r2, r5
 8005708:	d865      	bhi.n	80057d6 <HAL_RCC_ClockConfig+0xfe>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800570a:	6822      	ldr	r2, [r4, #0]
 800570c:	0751      	lsls	r1, r2, #29
 800570e:	d46b      	bmi.n	80057e8 <HAL_RCC_ClockConfig+0x110>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005710:	0713      	lsls	r3, r2, #28
 8005712:	d507      	bpl.n	8005724 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005714:	4a39      	ldr	r2, [pc, #228]	; (80057fc <HAL_RCC_ClockConfig+0x124>)
 8005716:	6921      	ldr	r1, [r4, #16]
 8005718:	6893      	ldr	r3, [r2, #8]
 800571a:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800571e:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005722:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8005724:	f7ff ffaa 	bl	800567c <HAL_RCC_GetSysClockFreq>
 8005728:	4b34      	ldr	r3, [pc, #208]	; (80057fc <HAL_RCC_ClockConfig+0x124>)
 800572a:	4a35      	ldr	r2, [pc, #212]	; (8005800 <HAL_RCC_ClockConfig+0x128>)
 800572c:	689b      	ldr	r3, [r3, #8]
 800572e:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005732:	5cd3      	ldrb	r3, [r2, r3]
 8005734:	40d8      	lsrs	r0, r3
 8005736:	4b33      	ldr	r3, [pc, #204]	; (8005804 <HAL_RCC_ClockConfig+0x12c>)
 8005738:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800573a:	4b33      	ldr	r3, [pc, #204]	; (8005808 <HAL_RCC_ClockConfig+0x130>)
 800573c:	6818      	ldr	r0, [r3, #0]
 800573e:	f7fc faed 	bl	8001d1c <HAL_InitTick>
  return HAL_OK;
 8005742:	2000      	movs	r0, #0
 8005744:	e7ce      	b.n	80056e4 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005746:	b2ca      	uxtb	r2, r1
 8005748:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800574a:	681b      	ldr	r3, [r3, #0]
 800574c:	f003 030f 	and.w	r3, r3, #15
 8005750:	428b      	cmp	r3, r1
 8005752:	d1c6      	bne.n	80056e2 <HAL_RCC_ClockConfig+0xa>
 8005754:	e7ce      	b.n	80056f4 <HAL_RCC_ClockConfig+0x1c>
 8005756:	4b29      	ldr	r3, [pc, #164]	; (80057fc <HAL_RCC_ClockConfig+0x124>)
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005758:	f011 0f04 	tst.w	r1, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800575c:	bf1e      	ittt	ne
 800575e:	689a      	ldrne	r2, [r3, #8]
 8005760:	f442 52e0 	orrne.w	r2, r2, #7168	; 0x1c00
 8005764:	609a      	strne	r2, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005766:	070e      	lsls	r6, r1, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005768:	bf42      	ittt	mi
 800576a:	689a      	ldrmi	r2, [r3, #8]
 800576c:	f442 4260 	orrmi.w	r2, r2, #57344	; 0xe000
 8005770:	609a      	strmi	r2, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005772:	689a      	ldr	r2, [r3, #8]
 8005774:	68a0      	ldr	r0, [r4, #8]
 8005776:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800577a:	4302      	orrs	r2, r0
 800577c:	609a      	str	r2, [r3, #8]
 800577e:	e7bc      	b.n	80056fa <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005780:	6862      	ldr	r2, [r4, #4]
 8005782:	4b1e      	ldr	r3, [pc, #120]	; (80057fc <HAL_RCC_ClockConfig+0x124>)
 8005784:	2a01      	cmp	r2, #1
 8005786:	d11c      	bne.n	80057c2 <HAL_RCC_ClockConfig+0xea>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005788:	681b      	ldr	r3, [r3, #0]
 800578a:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800578e:	d0a8      	beq.n	80056e2 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005790:	4e1a      	ldr	r6, [pc, #104]	; (80057fc <HAL_RCC_ClockConfig+0x124>)
 8005792:	68b3      	ldr	r3, [r6, #8]
 8005794:	f023 0303 	bic.w	r3, r3, #3
 8005798:	4313      	orrs	r3, r2
 800579a:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800579c:	f7fe fc2c 	bl	8003ff8 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80057a0:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 80057a4:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80057a6:	68b3      	ldr	r3, [r6, #8]
 80057a8:	6862      	ldr	r2, [r4, #4]
 80057aa:	f003 030c 	and.w	r3, r3, #12
 80057ae:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80057b2:	d0a4      	beq.n	80056fe <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80057b4:	f7fe fc20 	bl	8003ff8 <HAL_GetTick>
 80057b8:	1bc0      	subs	r0, r0, r7
 80057ba:	4540      	cmp	r0, r8
 80057bc:	d9f3      	bls.n	80057a6 <HAL_RCC_ClockConfig+0xce>
        return HAL_TIMEOUT;
 80057be:	2003      	movs	r0, #3
 80057c0:	e790      	b.n	80056e4 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80057c2:	1e91      	subs	r1, r2, #2
 80057c4:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80057c6:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80057c8:	d802      	bhi.n	80057d0 <HAL_RCC_ClockConfig+0xf8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80057ca:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80057ce:	e7de      	b.n	800578e <HAL_RCC_ClockConfig+0xb6>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80057d0:	f013 0f02 	tst.w	r3, #2
 80057d4:	e7db      	b.n	800578e <HAL_RCC_ClockConfig+0xb6>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80057d6:	b2ea      	uxtb	r2, r5
 80057d8:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80057da:	681b      	ldr	r3, [r3, #0]
 80057dc:	f003 030f 	and.w	r3, r3, #15
 80057e0:	42ab      	cmp	r3, r5
 80057e2:	f47f af7e 	bne.w	80056e2 <HAL_RCC_ClockConfig+0xa>
 80057e6:	e790      	b.n	800570a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80057e8:	4904      	ldr	r1, [pc, #16]	; (80057fc <HAL_RCC_ClockConfig+0x124>)
 80057ea:	68e0      	ldr	r0, [r4, #12]
 80057ec:	688b      	ldr	r3, [r1, #8]
 80057ee:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80057f2:	4303      	orrs	r3, r0
 80057f4:	608b      	str	r3, [r1, #8]
 80057f6:	e78b      	b.n	8005710 <HAL_RCC_ClockConfig+0x38>
 80057f8:	40023c00 	.word	0x40023c00
 80057fc:	40023800 	.word	0x40023800
 8005800:	0801bbeb 	.word	0x0801bbeb
 8005804:	20000074 	.word	0x20000074
 8005808:	2000007c 	.word	0x2000007c

0800580c <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800580c:	4b04      	ldr	r3, [pc, #16]	; (8005820 <HAL_RCC_GetPCLK1Freq+0x14>)
 800580e:	4a05      	ldr	r2, [pc, #20]	; (8005824 <HAL_RCC_GetPCLK1Freq+0x18>)
 8005810:	689b      	ldr	r3, [r3, #8]
 8005812:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8005816:	5cd3      	ldrb	r3, [r2, r3]
 8005818:	4a03      	ldr	r2, [pc, #12]	; (8005828 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800581a:	6810      	ldr	r0, [r2, #0]
}
 800581c:	40d8      	lsrs	r0, r3
 800581e:	4770      	bx	lr
 8005820:	40023800 	.word	0x40023800
 8005824:	0801bbfb 	.word	0x0801bbfb
 8005828:	20000074 	.word	0x20000074

0800582c <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 800582c:	4b04      	ldr	r3, [pc, #16]	; (8005840 <HAL_RCC_GetPCLK2Freq+0x14>)
 800582e:	4a05      	ldr	r2, [pc, #20]	; (8005844 <HAL_RCC_GetPCLK2Freq+0x18>)
 8005830:	689b      	ldr	r3, [r3, #8]
 8005832:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8005836:	5cd3      	ldrb	r3, [r2, r3]
 8005838:	4a03      	ldr	r2, [pc, #12]	; (8005848 <HAL_RCC_GetPCLK2Freq+0x1c>)
 800583a:	6810      	ldr	r0, [r2, #0]
}
 800583c:	40d8      	lsrs	r0, r3
 800583e:	4770      	bx	lr
 8005840:	40023800 	.word	0x40023800
 8005844:	0801bbfb 	.word	0x0801bbfb
 8005848:	20000074 	.word	0x20000074

0800584c <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800584c:	230f      	movs	r3, #15
 800584e:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8005850:	4b0b      	ldr	r3, [pc, #44]	; (8005880 <HAL_RCC_GetClockConfig+0x34>)
 8005852:	689a      	ldr	r2, [r3, #8]
 8005854:	f002 0203 	and.w	r2, r2, #3
 8005858:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800585a:	689a      	ldr	r2, [r3, #8]
 800585c:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8005860:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8005862:	689a      	ldr	r2, [r3, #8]
 8005864:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8005868:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800586a:	689b      	ldr	r3, [r3, #8]
 800586c:	08db      	lsrs	r3, r3, #3
 800586e:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8005872:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8005874:	4b03      	ldr	r3, [pc, #12]	; (8005884 <HAL_RCC_GetClockConfig+0x38>)
 8005876:	681b      	ldr	r3, [r3, #0]
 8005878:	f003 030f 	and.w	r3, r3, #15
 800587c:	600b      	str	r3, [r1, #0]
}
 800587e:	4770      	bx	lr
 8005880:	40023800 	.word	0x40023800
 8005884:	40023c00 	.word	0x40023c00

08005888 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8005888:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800588a:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800588e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005890:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005892:	f040 808a 	bne.w	80059aa <HAL_RCCEx_PeriphCLKConfig+0x122>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8005896:	6823      	ldr	r3, [r4, #0]
 8005898:	f013 0f0c 	tst.w	r3, #12
 800589c:	d044      	beq.n	8005928 <HAL_RCCEx_PeriphCLKConfig+0xa0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800589e:	4d89      	ldr	r5, [pc, #548]	; (8005ac4 <HAL_RCCEx_PeriphCLKConfig+0x23c>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80058a0:	4e89      	ldr	r6, [pc, #548]	; (8005ac8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLSAI_DISABLE();
 80058a2:	2300      	movs	r3, #0
 80058a4:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80058a6:	f7fe fba7 	bl	8003ff8 <HAL_GetTick>
 80058aa:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80058ac:	6833      	ldr	r3, [r6, #0]
 80058ae:	009b      	lsls	r3, r3, #2
 80058b0:	f100 80cc 	bmi.w	8005a4c <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80058b4:	6821      	ldr	r1, [r4, #0]
 80058b6:	074f      	lsls	r7, r1, #29
 80058b8:	d515      	bpl.n	80058e6 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80058ba:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80058be:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80058c2:	061b      	lsls	r3, r3, #24
 80058c4:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 80058c8:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80058cc:	4313      	orrs	r3, r2
 80058ce:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80058d2:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 80058d6:	6a22      	ldr	r2, [r4, #32]
 80058d8:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 80058dc:	3a01      	subs	r2, #1
 80058de:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80058e2:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80058e6:	070e      	lsls	r6, r1, #28
 80058e8:	d514      	bpl.n	8005914 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80058ea:	4a77      	ldr	r2, [pc, #476]	; (8005ac8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80058ec:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80058ee:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80058f2:	6920      	ldr	r0, [r4, #16]
 80058f4:	071b      	lsls	r3, r3, #28
 80058f6:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 80058fa:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80058fe:	430b      	orrs	r3, r1
 8005900:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8005904:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8005908:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800590a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800590e:	430b      	orrs	r3, r1
 8005910:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8005914:	2301      	movs	r3, #1
 8005916:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8005918:	f7fe fb6e 	bl	8003ff8 <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800591c:	4d6a      	ldr	r5, [pc, #424]	; (8005ac8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 800591e:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005920:	682b      	ldr	r3, [r5, #0]
 8005922:	0098      	lsls	r0, r3, #2
 8005924:	f140 8099 	bpl.w	8005a5a <HAL_RCCEx_PeriphCLKConfig+0x1d2>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8005928:	6823      	ldr	r3, [r4, #0]
 800592a:	069a      	lsls	r2, r3, #26
 800592c:	d533      	bpl.n	8005996 <HAL_RCCEx_PeriphCLKConfig+0x10e>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800592e:	2300      	movs	r3, #0
 8005930:	9301      	str	r3, [sp, #4]
 8005932:	4b65      	ldr	r3, [pc, #404]	; (8005ac8 <HAL_RCCEx_PeriphCLKConfig+0x240>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8005934:	4d65      	ldr	r5, [pc, #404]	; (8005acc <HAL_RCCEx_PeriphCLKConfig+0x244>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8005936:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005938:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800593c:	641a      	str	r2, [r3, #64]	; 0x40
 800593e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005940:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005944:	9301      	str	r3, [sp, #4]
 8005946:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8005948:	682b      	ldr	r3, [r5, #0]
 800594a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800594e:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8005950:	f7fe fb52 	bl	8003ff8 <HAL_GetTick>
 8005954:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8005956:	682b      	ldr	r3, [r5, #0]
 8005958:	05d9      	lsls	r1, r3, #23
 800595a:	f140 8085 	bpl.w	8005a68 <HAL_RCCEx_PeriphCLKConfig+0x1e0>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800595e:	4d5a      	ldr	r5, [pc, #360]	; (8005ac8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005960:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005962:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8005966:	f040 8086 	bne.w	8005a76 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800596a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800596c:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8005970:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8005974:	4a54      	ldr	r2, [pc, #336]	; (8005ac8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005976:	f040 80a0 	bne.w	8005aba <HAL_RCCEx_PeriphCLKConfig+0x232>
 800597a:	6891      	ldr	r1, [r2, #8]
 800597c:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8005980:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8005984:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8005988:	4301      	orrs	r1, r0
 800598a:	6091      	str	r1, [r2, #8]
 800598c:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800598e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005992:	430b      	orrs	r3, r1
 8005994:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8005996:	6820      	ldr	r0, [r4, #0]
 8005998:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800599c:	bf1f      	itttt	ne
 800599e:	4b4c      	ldrne	r3, [pc, #304]	; (8005ad0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80059a0:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 80059a4:	601a      	strne	r2, [r3, #0]
  }
  return HAL_OK;
 80059a6:	2000      	movne	r0, #0
 80059a8:	e04e      	b.n	8005a48 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    __HAL_RCC_PLLI2S_DISABLE();
 80059aa:	4d4a      	ldr	r5, [pc, #296]	; (8005ad4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80059ac:	4e46      	ldr	r6, [pc, #280]	; (8005ac8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    __HAL_RCC_PLLI2S_DISABLE();
 80059ae:	2300      	movs	r3, #0
 80059b0:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80059b2:	f7fe fb21 	bl	8003ff8 <HAL_GetTick>
 80059b6:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80059b8:	6833      	ldr	r3, [r6, #0]
 80059ba:	011b      	lsls	r3, r3, #4
 80059bc:	d43e      	bmi.n	8005a3c <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80059be:	6821      	ldr	r1, [r4, #0]
 80059c0:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 80059c2:	bf41      	itttt	mi
 80059c4:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80059c8:	071b      	lslmi	r3, r3, #28
 80059ca:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80059ce:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80059d2:	078e      	lsls	r6, r1, #30
 80059d4:	d515      	bpl.n	8005a02 <HAL_RCCEx_PeriphCLKConfig+0x17a>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80059d6:	4a3c      	ldr	r2, [pc, #240]	; (8005ac8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80059d8:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80059da:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80059de:	6866      	ldr	r6, [r4, #4]
 80059e0:	061b      	lsls	r3, r3, #24
 80059e2:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80059e6:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 80059ea:	4303      	orrs	r3, r0
 80059ec:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80059f0:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80059f4:	69e3      	ldr	r3, [r4, #28]
 80059f6:	f020 001f 	bic.w	r0, r0, #31
 80059fa:	3b01      	subs	r3, #1
 80059fc:	4303      	orrs	r3, r0
 80059fe:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8005a02:	0648      	lsls	r0, r1, #25
 8005a04:	d50a      	bpl.n	8005a1c <HAL_RCCEx_PeriphCLKConfig+0x194>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8005a06:	68e3      	ldr	r3, [r4, #12]
 8005a08:	6862      	ldr	r2, [r4, #4]
 8005a0a:	061b      	lsls	r3, r3, #24
 8005a0c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005a10:	68a2      	ldr	r2, [r4, #8]
 8005a12:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8005a16:	4a2c      	ldr	r2, [pc, #176]	; (8005ac8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
 8005a18:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8005a1c:	2301      	movs	r3, #1
 8005a1e:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005a20:	f7fe faea 	bl	8003ff8 <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005a24:	4d28      	ldr	r5, [pc, #160]	; (8005ac8 <HAL_RCCEx_PeriphCLKConfig+0x240>)
    tickstart = HAL_GetTick();
 8005a26:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005a28:	682b      	ldr	r3, [r5, #0]
 8005a2a:	0119      	lsls	r1, r3, #4
 8005a2c:	f53f af33 	bmi.w	8005896 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005a30:	f7fe fae2 	bl	8003ff8 <HAL_GetTick>
 8005a34:	1b80      	subs	r0, r0, r6
 8005a36:	2802      	cmp	r0, #2
 8005a38:	d9f6      	bls.n	8005a28 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 8005a3a:	e004      	b.n	8005a46 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005a3c:	f7fe fadc 	bl	8003ff8 <HAL_GetTick>
 8005a40:	1bc0      	subs	r0, r0, r7
 8005a42:	2802      	cmp	r0, #2
 8005a44:	d9b8      	bls.n	80059b8 <HAL_RCCEx_PeriphCLKConfig+0x130>
        return HAL_TIMEOUT;
 8005a46:	2003      	movs	r0, #3
}
 8005a48:	b003      	add	sp, #12
 8005a4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005a4c:	f7fe fad4 	bl	8003ff8 <HAL_GetTick>
 8005a50:	1bc0      	subs	r0, r0, r7
 8005a52:	2802      	cmp	r0, #2
 8005a54:	f67f af2a 	bls.w	80058ac <HAL_RCCEx_PeriphCLKConfig+0x24>
 8005a58:	e7f5      	b.n	8005a46 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005a5a:	f7fe facd 	bl	8003ff8 <HAL_GetTick>
 8005a5e:	1b80      	subs	r0, r0, r6
 8005a60:	2802      	cmp	r0, #2
 8005a62:	f67f af5d 	bls.w	8005920 <HAL_RCCEx_PeriphCLKConfig+0x98>
 8005a66:	e7ee      	b.n	8005a46 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8005a68:	f7fe fac6 	bl	8003ff8 <HAL_GetTick>
 8005a6c:	1b80      	subs	r0, r0, r6
 8005a6e:	2802      	cmp	r0, #2
 8005a70:	f67f af71 	bls.w	8005956 <HAL_RCCEx_PeriphCLKConfig+0xce>
 8005a74:	e7e7      	b.n	8005a46 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005a76:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005a78:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8005a7c:	4293      	cmp	r3, r2
 8005a7e:	f43f af74 	beq.w	800596a <HAL_RCCEx_PeriphCLKConfig+0xe2>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005a82:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8005a84:	4a14      	ldr	r2, [pc, #80]	; (8005ad8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8005a86:	2101      	movs	r1, #1
 8005a88:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005a8a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8005a8e:	2100      	movs	r1, #0
 8005a90:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 8005a92:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8005a94:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005a96:	07da      	lsls	r2, r3, #31
 8005a98:	f57f af67 	bpl.w	800596a <HAL_RCCEx_PeriphCLKConfig+0xe2>
        tickstart = HAL_GetTick();
 8005a9c:	f7fe faac 	bl	8003ff8 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005aa0:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8005aa4:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005aa6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005aa8:	079b      	lsls	r3, r3, #30
 8005aaa:	f53f af5e 	bmi.w	800596a <HAL_RCCEx_PeriphCLKConfig+0xe2>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005aae:	f7fe faa3 	bl	8003ff8 <HAL_GetTick>
 8005ab2:	1b80      	subs	r0, r0, r6
 8005ab4:	42b8      	cmp	r0, r7
 8005ab6:	d9f6      	bls.n	8005aa6 <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8005ab8:	e7c5      	b.n	8005a46 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005aba:	6891      	ldr	r1, [r2, #8]
 8005abc:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8005ac0:	e763      	b.n	800598a <HAL_RCCEx_PeriphCLKConfig+0x102>
 8005ac2:	bf00      	nop
 8005ac4:	42470070 	.word	0x42470070
 8005ac8:	40023800 	.word	0x40023800
 8005acc:	40007000 	.word	0x40007000
 8005ad0:	424711e0 	.word	0x424711e0
 8005ad4:	42470068 	.word	0x42470068
 8005ad8:	42470e40 	.word	0x42470e40

08005adc <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8005adc:	b538      	push	{r3, r4, r5, lr}
 8005ade:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8005ae0:	4604      	mov	r4, r0
 8005ae2:	b1c8      	cbz	r0, 8005b18 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8005ae4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8005ae8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005aec:	b91b      	cbnz	r3, 8005af6 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8005aee:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8005af2:	f7fc f865 	bl	8001bc0 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005af6:	2302      	movs	r3, #2
 8005af8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8005afc:	1d21      	adds	r1, r4, #4
 8005afe:	6820      	ldr	r0, [r4, #0]
 8005b00:	f000 fece 	bl	80068a0 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8005b04:	6862      	ldr	r2, [r4, #4]
 8005b06:	6820      	ldr	r0, [r4, #0]
 8005b08:	4629      	mov	r1, r5
 8005b0a:	f000 feff 	bl	800690c <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8005b0e:	2301      	movs	r3, #1
 8005b10:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8005b14:	2000      	movs	r0, #0
}
 8005b16:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005b18:	2001      	movs	r0, #1
 8005b1a:	e7fc      	b.n	8005b16 <HAL_SDRAM_Init+0x3a>

08005b1c <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8005b1c:	b538      	push	{r3, r4, r5, lr}
 8005b1e:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005b20:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8005b24:	b2c0      	uxtb	r0, r0
 8005b26:	2802      	cmp	r0, #2
{
 8005b28:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005b2a:	d00d      	beq.n	8005b48 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005b2c:	2302      	movs	r3, #2
 8005b2e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8005b32:	6820      	ldr	r0, [r4, #0]
 8005b34:	f000 ff27 	bl	8006986 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8005b38:	682b      	ldr	r3, [r5, #0]
 8005b3a:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8005b3c:	bf0c      	ite	eq
 8005b3e:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8005b40:	2301      	movne	r3, #1
 8005b42:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8005b46:	2000      	movs	r0, #0
}
 8005b48:	bd38      	pop	{r3, r4, r5, pc}

08005b4a <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8005b4a:	b510      	push	{r4, lr}
 8005b4c:	4604      	mov	r4, r0
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8005b4e:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8005b52:	b2c0      	uxtb	r0, r0
 8005b54:	2802      	cmp	r0, #2
 8005b56:	d009      	beq.n	8005b6c <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8005b58:	2302      	movs	r3, #2
 8005b5a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8005b5e:	6820      	ldr	r0, [r4, #0]
 8005b60:	f000 ff36 	bl	80069d0 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8005b64:	2301      	movs	r3, #1
 8005b66:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8005b6a:	2000      	movs	r0, #0
}
 8005b6c:	bd10      	pop	{r4, pc}

08005b6e <SPI_WaitFlagStateUntilTimeout.constprop.7>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8005b6e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005b70:	4604      	mov	r4, r0
 8005b72:	460e      	mov	r6, r1
 8005b74:	4615      	mov	r5, r2
 8005b76:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8005b78:	6821      	ldr	r1, [r4, #0]
 8005b7a:	688a      	ldr	r2, [r1, #8]
 8005b7c:	ea36 0302 	bics.w	r3, r6, r2
 8005b80:	d001      	beq.n	8005b86 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8005b82:	2000      	movs	r0, #0
 8005b84:	e02d      	b.n	8005be2 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8005b86:	1c6b      	adds	r3, r5, #1
 8005b88:	d0f7      	beq.n	8005b7a <SPI_WaitFlagStateUntilTimeout.constprop.7+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8005b8a:	f7fe fa35 	bl	8003ff8 <HAL_GetTick>
 8005b8e:	1bc0      	subs	r0, r0, r7
 8005b90:	4285      	cmp	r5, r0
 8005b92:	d8f1      	bhi.n	8005b78 <SPI_WaitFlagStateUntilTimeout.constprop.7+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8005b94:	6823      	ldr	r3, [r4, #0]
 8005b96:	685a      	ldr	r2, [r3, #4]
 8005b98:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8005b9c:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005b9e:	6862      	ldr	r2, [r4, #4]
 8005ba0:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8005ba4:	d10a      	bne.n	8005bbc <SPI_WaitFlagStateUntilTimeout.constprop.7+0x4e>
 8005ba6:	68a2      	ldr	r2, [r4, #8]
 8005ba8:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8005bac:	d002      	beq.n	8005bb4 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005bae:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8005bb2:	d103      	bne.n	8005bbc <SPI_WaitFlagStateUntilTimeout.constprop.7+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8005bb4:	681a      	ldr	r2, [r3, #0]
 8005bb6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005bba:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8005bbc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005bbe:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8005bc2:	d107      	bne.n	8005bd4 <SPI_WaitFlagStateUntilTimeout.constprop.7+0x66>
          SPI_RESET_CRC(hspi);
 8005bc4:	681a      	ldr	r2, [r3, #0]
 8005bc6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005bca:	601a      	str	r2, [r3, #0]
 8005bcc:	681a      	ldr	r2, [r3, #0]
 8005bce:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8005bd2:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8005bd4:	2301      	movs	r3, #1
 8005bd6:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8005bda:	2300      	movs	r3, #0
 8005bdc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8005be0:	2003      	movs	r0, #3
}
 8005be2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08005be4 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8005be4:	b538      	push	{r3, r4, r5, lr}
 8005be6:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005be8:	6842      	ldr	r2, [r0, #4]
 8005bea:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8005bee:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005bf0:	d11f      	bne.n	8005c32 <SPI_EndRxTransaction+0x4e>
 8005bf2:	6882      	ldr	r2, [r0, #8]
 8005bf4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8005bf8:	d002      	beq.n	8005c00 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005bfa:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8005bfe:	d107      	bne.n	8005c10 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8005c00:	6825      	ldr	r5, [r4, #0]
 8005c02:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005c04:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8005c08:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8005c0c:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8005c0e:	d007      	beq.n	8005c20 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005c10:	460a      	mov	r2, r1
 8005c12:	2180      	movs	r1, #128	; 0x80
 8005c14:	4620      	mov	r0, r4
 8005c16:	f7ff ffaa 	bl	8005b6e <SPI_WaitFlagStateUntilTimeout.constprop.7>
 8005c1a:	b920      	cbnz	r0, 8005c26 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8005c1c:	2000      	movs	r0, #0
}
 8005c1e:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005c20:	460a      	mov	r2, r1
 8005c22:	2101      	movs	r1, #1
 8005c24:	e7f6      	b.n	8005c14 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005c26:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8005c28:	f043 0320 	orr.w	r3, r3, #32
 8005c2c:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8005c2e:	2003      	movs	r0, #3
 8005c30:	e7f5      	b.n	8005c1e <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8005c32:	460a      	mov	r2, r1
 8005c34:	2101      	movs	r1, #1
 8005c36:	e7ee      	b.n	8005c16 <SPI_EndRxTransaction+0x32>

08005c38 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8005c38:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005c3a:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005c3c:	4a12      	ldr	r2, [pc, #72]	; (8005c88 <SPI_EndRxTxTransaction+0x50>)
 8005c3e:	4e13      	ldr	r6, [pc, #76]	; (8005c8c <SPI_EndRxTxTransaction+0x54>)
 8005c40:	6815      	ldr	r5, [r2, #0]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005c42:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005c44:	fbb5 f6f6 	udiv	r6, r5, r6
 8005c48:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
 8005c4c:	4375      	muls	r5, r6
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005c4e:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8005c52:	4604      	mov	r4, r0
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8005c54:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005c56:	d10b      	bne.n	8005c70 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005c58:	460a      	mov	r2, r1
 8005c5a:	2180      	movs	r1, #128	; 0x80
 8005c5c:	f7ff ff87 	bl	8005b6e <SPI_WaitFlagStateUntilTimeout.constprop.7>
 8005c60:	b178      	cbz	r0, 8005c82 <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005c62:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8005c64:	f043 0320 	orr.w	r3, r3, #32
 8005c68:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8005c6a:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8005c6c:	b002      	add	sp, #8
 8005c6e:	bd70      	pop	{r4, r5, r6, pc}
      if (count == 0U)
 8005c70:	9b01      	ldr	r3, [sp, #4]
 8005c72:	b133      	cbz	r3, 8005c82 <SPI_EndRxTxTransaction+0x4a>
      count--;
 8005c74:	9b01      	ldr	r3, [sp, #4]
 8005c76:	3b01      	subs	r3, #1
 8005c78:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8005c7a:	6823      	ldr	r3, [r4, #0]
 8005c7c:	689b      	ldr	r3, [r3, #8]
 8005c7e:	061b      	lsls	r3, r3, #24
 8005c80:	d4f6      	bmi.n	8005c70 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8005c82:	2000      	movs	r0, #0
 8005c84:	e7f2      	b.n	8005c6c <SPI_EndRxTxTransaction+0x34>
 8005c86:	bf00      	nop
 8005c88:	20000074 	.word	0x20000074
 8005c8c:	016e3600 	.word	0x016e3600

08005c90 <HAL_SPI_Init>:
{
 8005c90:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8005c92:	4604      	mov	r4, r0
 8005c94:	2800      	cmp	r0, #0
 8005c96:	d036      	beq.n	8005d06 <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005c98:	2300      	movs	r3, #0
 8005c9a:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8005c9c:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8005ca0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005ca4:	b91b      	cbnz	r3, 8005cae <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8005ca6:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8005caa:	f7fb ff53 	bl	8001b54 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8005cae:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8005cb0:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8005cb2:	2302      	movs	r3, #2
 8005cb4:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8005cb8:	680b      	ldr	r3, [r1, #0]
 8005cba:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005cbe:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8005cc0:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8005cc4:	4303      	orrs	r3, r0
 8005cc6:	68e0      	ldr	r0, [r4, #12]
 8005cc8:	4303      	orrs	r3, r0
 8005cca:	6920      	ldr	r0, [r4, #16]
 8005ccc:	4303      	orrs	r3, r0
 8005cce:	6960      	ldr	r0, [r4, #20]
 8005cd0:	4303      	orrs	r3, r0
 8005cd2:	69e0      	ldr	r0, [r4, #28]
 8005cd4:	4303      	orrs	r3, r0
 8005cd6:	6a20      	ldr	r0, [r4, #32]
 8005cd8:	4303      	orrs	r3, r0
 8005cda:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005cdc:	4303      	orrs	r3, r0
 8005cde:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8005ce2:	4303      	orrs	r3, r0
 8005ce4:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8005ce6:	0c12      	lsrs	r2, r2, #16
 8005ce8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005cea:	f002 0204 	and.w	r2, r2, #4
 8005cee:	431a      	orrs	r2, r3
 8005cf0:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8005cf2:	69cb      	ldr	r3, [r1, #28]
 8005cf4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005cf8:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005cfa:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8005cfc:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005cfe:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8005d00:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8005d04:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005d06:	2001      	movs	r0, #1
 8005d08:	e7fc      	b.n	8005d04 <HAL_SPI_Init+0x74>

08005d0a <HAL_SPI_Transmit>:
{
 8005d0a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005d0e:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8005d10:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8005d14:	2b01      	cmp	r3, #1
{
 8005d16:	4604      	mov	r4, r0
 8005d18:	460d      	mov	r5, r1
 8005d1a:	4690      	mov	r8, r2
  __HAL_LOCK(hspi);
 8005d1c:	f000 809b 	beq.w	8005e56 <HAL_SPI_Transmit+0x14c>
 8005d20:	2301      	movs	r3, #1
 8005d22:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8005d26:	f7fe f967 	bl	8003ff8 <HAL_GetTick>
 8005d2a:	4607      	mov	r7, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8005d2c:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 8005d30:	b2c0      	uxtb	r0, r0
 8005d32:	2801      	cmp	r0, #1
 8005d34:	f040 808d 	bne.w	8005e52 <HAL_SPI_Transmit+0x148>
  if ((pData == NULL) || (Size == 0U))
 8005d38:	2d00      	cmp	r5, #0
 8005d3a:	d05d      	beq.n	8005df8 <HAL_SPI_Transmit+0xee>
 8005d3c:	f1b8 0f00 	cmp.w	r8, #0
 8005d40:	d05a      	beq.n	8005df8 <HAL_SPI_Transmit+0xee>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8005d42:	2303      	movs	r3, #3
 8005d44:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005d48:	2000      	movs	r0, #0
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005d4a:	68a3      	ldr	r3, [r4, #8]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005d4c:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8005d4e:	63a0      	str	r0, [r4, #56]	; 0x38
  hspi->TxXferCount = Size;
 8005d50:	f8a4 8036 	strh.w	r8, [r4, #54]	; 0x36
  hspi->RxXferSize  = 0U;
 8005d54:	87a0      	strh	r0, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8005d56:	87e0      	strh	r0, [r4, #62]	; 0x3e
  hspi->RxISR       = NULL;
 8005d58:	e9c4 0010 	strd	r0, r0, [r4, #64]	; 0x40
 8005d5c:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8005d5e:	6325      	str	r5, [r4, #48]	; 0x30
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005d60:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8005d64:	bf08      	it	eq
 8005d66:	6803      	ldreq	r3, [r0, #0]
  hspi->TxXferSize  = Size;
 8005d68:	f8a4 8034 	strh.w	r8, [r4, #52]	; 0x34
    SPI_1LINE_TX(hspi);
 8005d6c:	bf04      	itt	eq
 8005d6e:	f443 4380 	orreq.w	r3, r3, #16384	; 0x4000
 8005d72:	6003      	streq	r3, [r0, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005d74:	6803      	ldr	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005d76:	68e2      	ldr	r2, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005d78:	065b      	lsls	r3, r3, #25
    __HAL_SPI_ENABLE(hspi);
 8005d7a:	bf5e      	ittt	pl
 8005d7c:	6803      	ldrpl	r3, [r0, #0]
 8005d7e:	f043 0340 	orrpl.w	r3, r3, #64	; 0x40
 8005d82:	6003      	strpl	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005d84:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8005d88:	6863      	ldr	r3, [r4, #4]
 8005d8a:	d13e      	bne.n	8005e0a <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005d8c:	b113      	cbz	r3, 8005d94 <HAL_SPI_Transmit+0x8a>
 8005d8e:	f1b8 0f01 	cmp.w	r8, #1
 8005d92:	d107      	bne.n	8005da4 <HAL_SPI_Transmit+0x9a>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005d94:	f835 3b02 	ldrh.w	r3, [r5], #2
 8005d98:	60c3      	str	r3, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005d9a:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005d9c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005d9e:	3b01      	subs	r3, #1
 8005da0:	b29b      	uxth	r3, r3
 8005da2:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8005da4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005da6:	b29b      	uxth	r3, r3
 8005da8:	b9a3      	cbnz	r3, 8005dd4 <HAL_SPI_Transmit+0xca>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005daa:	463a      	mov	r2, r7
 8005dac:	4631      	mov	r1, r6
 8005dae:	4620      	mov	r0, r4
 8005db0:	f7ff ff42 	bl	8005c38 <SPI_EndRxTxTransaction>
 8005db4:	2800      	cmp	r0, #0
 8005db6:	d149      	bne.n	8005e4c <HAL_SPI_Transmit+0x142>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005db8:	68a3      	ldr	r3, [r4, #8]
 8005dba:	b933      	cbnz	r3, 8005dca <HAL_SPI_Transmit+0xc0>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005dbc:	9301      	str	r3, [sp, #4]
 8005dbe:	6823      	ldr	r3, [r4, #0]
 8005dc0:	68da      	ldr	r2, [r3, #12]
 8005dc2:	9201      	str	r2, [sp, #4]
 8005dc4:	689b      	ldr	r3, [r3, #8]
 8005dc6:	9301      	str	r3, [sp, #4]
 8005dc8:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005dca:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8005dcc:	3000      	adds	r0, #0
 8005dce:	bf18      	it	ne
 8005dd0:	2001      	movne	r0, #1
error:
 8005dd2:	e011      	b.n	8005df8 <HAL_SPI_Transmit+0xee>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005dd4:	6822      	ldr	r2, [r4, #0]
 8005dd6:	6893      	ldr	r3, [r2, #8]
 8005dd8:	0798      	lsls	r0, r3, #30
 8005dda:	d505      	bpl.n	8005de8 <HAL_SPI_Transmit+0xde>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005ddc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005dde:	f833 1b02 	ldrh.w	r1, [r3], #2
 8005de2:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005de4:	6323      	str	r3, [r4, #48]	; 0x30
 8005de6:	e7d9      	b.n	8005d9c <HAL_SPI_Transmit+0x92>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005de8:	f7fe f906 	bl	8003ff8 <HAL_GetTick>
 8005dec:	1bc0      	subs	r0, r0, r7
 8005dee:	42b0      	cmp	r0, r6
 8005df0:	d3d8      	bcc.n	8005da4 <HAL_SPI_Transmit+0x9a>
 8005df2:	1c71      	adds	r1, r6, #1
 8005df4:	d0d6      	beq.n	8005da4 <HAL_SPI_Transmit+0x9a>
          errorcode = HAL_TIMEOUT;
 8005df6:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8005df8:	2301      	movs	r3, #1
 8005dfa:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8005dfe:	2300      	movs	r3, #0
 8005e00:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8005e04:	b002      	add	sp, #8
 8005e06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005e0a:	b113      	cbz	r3, 8005e12 <HAL_SPI_Transmit+0x108>
 8005e0c:	f1b8 0f01 	cmp.w	r8, #1
 8005e10:	d108      	bne.n	8005e24 <HAL_SPI_Transmit+0x11a>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005e12:	782b      	ldrb	r3, [r5, #0]
 8005e14:	7303      	strb	r3, [r0, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8005e16:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005e18:	3301      	adds	r3, #1
 8005e1a:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005e1c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005e1e:	3b01      	subs	r3, #1
 8005e20:	b29b      	uxth	r3, r3
 8005e22:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8005e24:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005e26:	b29b      	uxth	r3, r3
 8005e28:	2b00      	cmp	r3, #0
 8005e2a:	d0be      	beq.n	8005daa <HAL_SPI_Transmit+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005e2c:	6823      	ldr	r3, [r4, #0]
 8005e2e:	689a      	ldr	r2, [r3, #8]
 8005e30:	0792      	lsls	r2, r2, #30
 8005e32:	d503      	bpl.n	8005e3c <HAL_SPI_Transmit+0x132>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005e34:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8005e36:	7812      	ldrb	r2, [r2, #0]
 8005e38:	731a      	strb	r2, [r3, #12]
 8005e3a:	e7ec      	b.n	8005e16 <HAL_SPI_Transmit+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005e3c:	f7fe f8dc 	bl	8003ff8 <HAL_GetTick>
 8005e40:	1bc0      	subs	r0, r0, r7
 8005e42:	42b0      	cmp	r0, r6
 8005e44:	d3ee      	bcc.n	8005e24 <HAL_SPI_Transmit+0x11a>
 8005e46:	1c73      	adds	r3, r6, #1
 8005e48:	d0ec      	beq.n	8005e24 <HAL_SPI_Transmit+0x11a>
 8005e4a:	e7d4      	b.n	8005df6 <HAL_SPI_Transmit+0xec>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005e4c:	2320      	movs	r3, #32
 8005e4e:	6563      	str	r3, [r4, #84]	; 0x54
 8005e50:	e7b2      	b.n	8005db8 <HAL_SPI_Transmit+0xae>
    errorcode = HAL_BUSY;
 8005e52:	2002      	movs	r0, #2
 8005e54:	e7d0      	b.n	8005df8 <HAL_SPI_Transmit+0xee>
  __HAL_LOCK(hspi);
 8005e56:	2002      	movs	r0, #2
 8005e58:	e7d4      	b.n	8005e04 <HAL_SPI_Transmit+0xfa>

08005e5a <HAL_SPI_TransmitReceive>:
{
 8005e5a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005e5e:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8005e60:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8005e64:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8005e66:	2b01      	cmp	r3, #1
{
 8005e68:	4604      	mov	r4, r0
 8005e6a:	460d      	mov	r5, r1
 8005e6c:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8005e6e:	f000 80e2 	beq.w	8006036 <HAL_SPI_TransmitReceive+0x1dc>
 8005e72:	2301      	movs	r3, #1
 8005e74:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8005e78:	f7fe f8be 	bl	8003ff8 <HAL_GetTick>
  tmp_state           = hspi->State;
 8005e7c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8005e80:	6861      	ldr	r1, [r4, #4]
  tmp_state           = hspi->State;
 8005e82:	b2db      	uxtb	r3, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005e84:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8005e86:	4680      	mov	r8, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005e88:	d00a      	beq.n	8005ea0 <HAL_SPI_TransmitReceive+0x46>
 8005e8a:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
 8005e8e:	f040 80d0 	bne.w	8006032 <HAL_SPI_TransmitReceive+0x1d8>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8005e92:	68a0      	ldr	r0, [r4, #8]
 8005e94:	2800      	cmp	r0, #0
 8005e96:	f040 80cc 	bne.w	8006032 <HAL_SPI_TransmitReceive+0x1d8>
 8005e9a:	2b04      	cmp	r3, #4
 8005e9c:	f040 80c9 	bne.w	8006032 <HAL_SPI_TransmitReceive+0x1d8>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8005ea0:	2d00      	cmp	r5, #0
 8005ea2:	f000 80c4 	beq.w	800602e <HAL_SPI_TransmitReceive+0x1d4>
 8005ea6:	f1b9 0f00 	cmp.w	r9, #0
 8005eaa:	f000 80c0 	beq.w	800602e <HAL_SPI_TransmitReceive+0x1d4>
 8005eae:	2e00      	cmp	r6, #0
 8005eb0:	f000 80bd 	beq.w	800602e <HAL_SPI_TransmitReceive+0x1d4>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8005eb4:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8005eb8:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8005ebc:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8005ebe:	bf1c      	itt	ne
 8005ec0:	2305      	movne	r3, #5
 8005ec2:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005ec6:	2300      	movs	r3, #0
 8005ec8:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8005eca:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005ece:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8005ed0:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8005ed2:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005ed4:	681a      	ldr	r2, [r3, #0]
  hspi->RxXferSize  = Size;
 8005ed6:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005ed8:	0650      	lsls	r0, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8005eda:	bf58      	it	pl
 8005edc:	681a      	ldrpl	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8005ede:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8005ee0:	bf58      	it	pl
 8005ee2:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
  hspi->TxXferSize  = Size;
 8005ee6:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8005ee8:	bf58      	it	pl
 8005eea:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005eec:	68e2      	ldr	r2, [r4, #12]
 8005eee:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8005ef2:	d158      	bne.n	8005fa6 <HAL_SPI_TransmitReceive+0x14c>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005ef4:	b109      	cbz	r1, 8005efa <HAL_SPI_TransmitReceive+0xa0>
 8005ef6:	2e01      	cmp	r6, #1
 8005ef8:	d107      	bne.n	8005f0a <HAL_SPI_TransmitReceive+0xb0>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005efa:	f835 2b02 	ldrh.w	r2, [r5], #2
 8005efe:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8005f00:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005f02:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8005f04:	3b01      	subs	r3, #1
 8005f06:	b29b      	uxth	r3, r3
 8005f08:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8005f0a:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005f0c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005f0e:	b29b      	uxth	r3, r3
 8005f10:	b9ab      	cbnz	r3, 8005f3e <HAL_SPI_TransmitReceive+0xe4>
 8005f12:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005f14:	b29b      	uxth	r3, r3
 8005f16:	b993      	cbnz	r3, 8005f3e <HAL_SPI_TransmitReceive+0xe4>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005f18:	4642      	mov	r2, r8
 8005f1a:	4639      	mov	r1, r7
 8005f1c:	4620      	mov	r0, r4
 8005f1e:	f7ff fe8b 	bl	8005c38 <SPI_EndRxTxTransaction>
 8005f22:	2800      	cmp	r0, #0
 8005f24:	f040 8081 	bne.w	800602a <HAL_SPI_TransmitReceive+0x1d0>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005f28:	68a3      	ldr	r3, [r4, #8]
 8005f2a:	2b00      	cmp	r3, #0
 8005f2c:	d132      	bne.n	8005f94 <HAL_SPI_TransmitReceive+0x13a>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8005f2e:	6823      	ldr	r3, [r4, #0]
 8005f30:	9001      	str	r0, [sp, #4]
 8005f32:	68da      	ldr	r2, [r3, #12]
 8005f34:	9201      	str	r2, [sp, #4]
 8005f36:	689b      	ldr	r3, [r3, #8]
 8005f38:	9301      	str	r3, [sp, #4]
 8005f3a:	9b01      	ldr	r3, [sp, #4]
 8005f3c:	e02a      	b.n	8005f94 <HAL_SPI_TransmitReceive+0x13a>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005f3e:	6822      	ldr	r2, [r4, #0]
 8005f40:	6893      	ldr	r3, [r2, #8]
 8005f42:	0799      	lsls	r1, r3, #30
 8005f44:	d50d      	bpl.n	8005f62 <HAL_SPI_TransmitReceive+0x108>
 8005f46:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005f48:	b29b      	uxth	r3, r3
 8005f4a:	b153      	cbz	r3, 8005f62 <HAL_SPI_TransmitReceive+0x108>
 8005f4c:	b14d      	cbz	r5, 8005f62 <HAL_SPI_TransmitReceive+0x108>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8005f4e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005f50:	f833 1b02 	ldrh.w	r1, [r3], #2
 8005f54:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005f56:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005f58:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005f5a:	3b01      	subs	r3, #1
 8005f5c:	b29b      	uxth	r3, r3
 8005f5e:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8005f60:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005f62:	6893      	ldr	r3, [r2, #8]
 8005f64:	07db      	lsls	r3, r3, #31
 8005f66:	d50c      	bpl.n	8005f82 <HAL_SPI_TransmitReceive+0x128>
 8005f68:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005f6a:	b29b      	uxth	r3, r3
 8005f6c:	b14b      	cbz	r3, 8005f82 <HAL_SPI_TransmitReceive+0x128>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8005f6e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005f70:	68d2      	ldr	r2, [r2, #12]
 8005f72:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8005f76:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8005f78:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005f7a:	3b01      	subs	r3, #1
 8005f7c:	b29b      	uxth	r3, r3
 8005f7e:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8005f80:	2501      	movs	r5, #1
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8005f82:	f7fe f839 	bl	8003ff8 <HAL_GetTick>
 8005f86:	eba0 0008 	sub.w	r0, r0, r8
 8005f8a:	4287      	cmp	r7, r0
 8005f8c:	d8be      	bhi.n	8005f0c <HAL_SPI_TransmitReceive+0xb2>
 8005f8e:	1c7e      	adds	r6, r7, #1
 8005f90:	d0bc      	beq.n	8005f0c <HAL_SPI_TransmitReceive+0xb2>
        errorcode = HAL_TIMEOUT;
 8005f92:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8005f94:	2301      	movs	r3, #1
 8005f96:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8005f9a:	2300      	movs	r3, #0
 8005f9c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8005fa0:	b003      	add	sp, #12
 8005fa2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005fa6:	b109      	cbz	r1, 8005fac <HAL_SPI_TransmitReceive+0x152>
 8005fa8:	2e01      	cmp	r6, #1
 8005faa:	d108      	bne.n	8005fbe <HAL_SPI_TransmitReceive+0x164>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005fac:	782a      	ldrb	r2, [r5, #0]
 8005fae:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8005fb0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005fb2:	3301      	adds	r3, #1
 8005fb4:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8005fb6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005fb8:	3b01      	subs	r3, #1
 8005fba:	b29b      	uxth	r3, r3
 8005fbc:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8005fbe:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8005fc0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005fc2:	b29b      	uxth	r3, r3
 8005fc4:	b91b      	cbnz	r3, 8005fce <HAL_SPI_TransmitReceive+0x174>
 8005fc6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005fc8:	b29b      	uxth	r3, r3
 8005fca:	2b00      	cmp	r3, #0
 8005fcc:	d0a4      	beq.n	8005f18 <HAL_SPI_TransmitReceive+0xbe>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8005fce:	6822      	ldr	r2, [r4, #0]
 8005fd0:	6893      	ldr	r3, [r2, #8]
 8005fd2:	0798      	lsls	r0, r3, #30
 8005fd4:	d50e      	bpl.n	8005ff4 <HAL_SPI_TransmitReceive+0x19a>
 8005fd6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005fd8:	b29b      	uxth	r3, r3
 8005fda:	b15b      	cbz	r3, 8005ff4 <HAL_SPI_TransmitReceive+0x19a>
 8005fdc:	b155      	cbz	r5, 8005ff4 <HAL_SPI_TransmitReceive+0x19a>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8005fde:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005fe0:	781b      	ldrb	r3, [r3, #0]
 8005fe2:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8005fe4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005fe6:	3301      	adds	r3, #1
 8005fe8:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005fea:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005fec:	3b01      	subs	r3, #1
 8005fee:	b29b      	uxth	r3, r3
 8005ff0:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8005ff2:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005ff4:	6822      	ldr	r2, [r4, #0]
 8005ff6:	6893      	ldr	r3, [r2, #8]
 8005ff8:	07d9      	lsls	r1, r3, #31
 8005ffa:	d50d      	bpl.n	8006018 <HAL_SPI_TransmitReceive+0x1be>
 8005ffc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005ffe:	b29b      	uxth	r3, r3
 8006000:	b153      	cbz	r3, 8006018 <HAL_SPI_TransmitReceive+0x1be>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8006002:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006004:	68d2      	ldr	r2, [r2, #12]
 8006006:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8006008:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800600a:	3301      	adds	r3, #1
 800600c:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800600e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006010:	3b01      	subs	r3, #1
 8006012:	b29b      	uxth	r3, r3
 8006014:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8006016:	2501      	movs	r5, #1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006018:	f7fd ffee 	bl	8003ff8 <HAL_GetTick>
 800601c:	eba0 0008 	sub.w	r0, r0, r8
 8006020:	4287      	cmp	r7, r0
 8006022:	d8cd      	bhi.n	8005fc0 <HAL_SPI_TransmitReceive+0x166>
 8006024:	1c7b      	adds	r3, r7, #1
 8006026:	d0cb      	beq.n	8005fc0 <HAL_SPI_TransmitReceive+0x166>
 8006028:	e7b3      	b.n	8005f92 <HAL_SPI_TransmitReceive+0x138>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800602a:	2320      	movs	r3, #32
 800602c:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800602e:	2001      	movs	r0, #1
 8006030:	e7b0      	b.n	8005f94 <HAL_SPI_TransmitReceive+0x13a>
    errorcode = HAL_BUSY;
 8006032:	2002      	movs	r0, #2
 8006034:	e7ae      	b.n	8005f94 <HAL_SPI_TransmitReceive+0x13a>
  __HAL_LOCK(hspi);
 8006036:	2002      	movs	r0, #2
 8006038:	e7b2      	b.n	8005fa0 <HAL_SPI_TransmitReceive+0x146>

0800603a <HAL_SPI_Receive>:
{
 800603a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800603e:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006040:	6843      	ldr	r3, [r0, #4]
 8006042:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8006046:	4604      	mov	r4, r0
 8006048:	4688      	mov	r8, r1
 800604a:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800604c:	d10c      	bne.n	8006068 <HAL_SPI_Receive+0x2e>
 800604e:	6883      	ldr	r3, [r0, #8]
 8006050:	b953      	cbnz	r3, 8006068 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006052:	2304      	movs	r3, #4
 8006054:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8006058:	4613      	mov	r3, r2
 800605a:	9500      	str	r5, [sp, #0]
 800605c:	460a      	mov	r2, r1
 800605e:	f7ff fefc 	bl	8005e5a <HAL_SPI_TransmitReceive>
}
 8006062:	b002      	add	sp, #8
 8006064:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_LOCK(hspi);
 8006068:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800606c:	2b01      	cmp	r3, #1
 800606e:	d079      	beq.n	8006164 <HAL_SPI_Receive+0x12a>
 8006070:	2301      	movs	r3, #1
 8006072:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8006076:	f7fd ffbf 	bl	8003ff8 <HAL_GetTick>
 800607a:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800607c:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 8006080:	b2c0      	uxtb	r0, r0
 8006082:	2801      	cmp	r0, #1
 8006084:	d16c      	bne.n	8006160 <HAL_SPI_Receive+0x126>
  if ((pData == NULL) || (Size == 0U))
 8006086:	f1b8 0f00 	cmp.w	r8, #0
 800608a:	d057      	beq.n	800613c <HAL_SPI_Receive+0x102>
 800608c:	2f00      	cmp	r7, #0
 800608e:	d055      	beq.n	800613c <HAL_SPI_Receive+0x102>
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8006090:	2304      	movs	r3, #4
 8006092:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006096:	68a2      	ldr	r2, [r4, #8]
  hspi->RxXferSize  = Size;
 8006098:	87a7      	strh	r7, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800609a:	2300      	movs	r3, #0
 800609c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800609e:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->RxXferCount = Size;
 80060a0:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferSize  = 0U;
 80060a2:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 80060a4:	86e3      	strh	r3, [r4, #54]	; 0x36
  hspi->TxISR       = NULL;
 80060a6:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
 80060aa:	6823      	ldr	r3, [r4, #0]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80060ac:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80060b0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_RX(hspi);
 80060b4:	bf02      	ittt	eq
 80060b6:	681a      	ldreq	r2, [r3, #0]
 80060b8:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
 80060bc:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80060be:	681a      	ldr	r2, [r3, #0]
 80060c0:	0657      	lsls	r7, r2, #25
    __HAL_SPI_ENABLE(hspi);
 80060c2:	bf5e      	ittt	pl
 80060c4:	681a      	ldrpl	r2, [r3, #0]
 80060c6:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 80060ca:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80060cc:	68e3      	ldr	r3, [r4, #12]
 80060ce:	b1f3      	cbz	r3, 800610e <HAL_SPI_Receive+0xd4>
    while (hspi->RxXferCount > 0U)
 80060d0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80060d2:	b29b      	uxth	r3, r3
 80060d4:	b1fb      	cbz	r3, 8006116 <HAL_SPI_Receive+0xdc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80060d6:	6823      	ldr	r3, [r4, #0]
 80060d8:	689a      	ldr	r2, [r3, #8]
 80060da:	07d2      	lsls	r2, r2, #31
 80060dc:	d535      	bpl.n	800614a <HAL_SPI_Receive+0x110>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80060de:	68da      	ldr	r2, [r3, #12]
 80060e0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80060e2:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80060e6:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80060e8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80060ea:	3b01      	subs	r3, #1
 80060ec:	b29b      	uxth	r3, r3
 80060ee:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80060f0:	e7ee      	b.n	80060d0 <HAL_SPI_Receive+0x96>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80060f2:	6823      	ldr	r3, [r4, #0]
 80060f4:	689a      	ldr	r2, [r3, #8]
 80060f6:	07d0      	lsls	r0, r2, #31
 80060f8:	d518      	bpl.n	800612c <HAL_SPI_Receive+0xf2>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80060fa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80060fc:	7b1b      	ldrb	r3, [r3, #12]
 80060fe:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8006100:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8006102:	3301      	adds	r3, #1
 8006104:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8006106:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006108:	3b01      	subs	r3, #1
 800610a:	b29b      	uxth	r3, r3
 800610c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800610e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8006110:	b29b      	uxth	r3, r3
 8006112:	2b00      	cmp	r3, #0
 8006114:	d1ed      	bne.n	80060f2 <HAL_SPI_Receive+0xb8>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006116:	4632      	mov	r2, r6
 8006118:	4629      	mov	r1, r5
 800611a:	4620      	mov	r0, r4
 800611c:	f7ff fd62 	bl	8005be4 <SPI_EndRxTransaction>
 8006120:	b9d8      	cbnz	r0, 800615a <HAL_SPI_Receive+0x120>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006122:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8006124:	3000      	adds	r0, #0
 8006126:	bf18      	it	ne
 8006128:	2001      	movne	r0, #1
error :
 800612a:	e007      	b.n	800613c <HAL_SPI_Receive+0x102>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800612c:	f7fd ff64 	bl	8003ff8 <HAL_GetTick>
 8006130:	1b80      	subs	r0, r0, r6
 8006132:	42a8      	cmp	r0, r5
 8006134:	d3eb      	bcc.n	800610e <HAL_SPI_Receive+0xd4>
 8006136:	1c69      	adds	r1, r5, #1
 8006138:	d0e9      	beq.n	800610e <HAL_SPI_Receive+0xd4>
          errorcode = HAL_TIMEOUT;
 800613a:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800613c:	2301      	movs	r3, #1
 800613e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8006142:	2300      	movs	r3, #0
 8006144:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8006148:	e78b      	b.n	8006062 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800614a:	f7fd ff55 	bl	8003ff8 <HAL_GetTick>
 800614e:	1b80      	subs	r0, r0, r6
 8006150:	42a8      	cmp	r0, r5
 8006152:	d3bd      	bcc.n	80060d0 <HAL_SPI_Receive+0x96>
 8006154:	1c6b      	adds	r3, r5, #1
 8006156:	d0bb      	beq.n	80060d0 <HAL_SPI_Receive+0x96>
 8006158:	e7ef      	b.n	800613a <HAL_SPI_Receive+0x100>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800615a:	2320      	movs	r3, #32
 800615c:	6563      	str	r3, [r4, #84]	; 0x54
 800615e:	e7e0      	b.n	8006122 <HAL_SPI_Receive+0xe8>
    errorcode = HAL_BUSY;
 8006160:	2002      	movs	r0, #2
 8006162:	e7eb      	b.n	800613c <HAL_SPI_Receive+0x102>
  __HAL_LOCK(hspi);
 8006164:	2002      	movs	r0, #2
 8006166:	e77c      	b.n	8006062 <HAL_SPI_Receive+0x28>

08006168 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 8006168:	4770      	bx	lr

0800616a <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800616a:	6803      	ldr	r3, [r0, #0]
 800616c:	68da      	ldr	r2, [r3, #12]
 800616e:	f042 0201 	orr.w	r2, r2, #1
 8006172:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006174:	689a      	ldr	r2, [r3, #8]
 8006176:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800617a:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 800617c:	bf1e      	ittt	ne
 800617e:	681a      	ldrne	r2, [r3, #0]
 8006180:	f042 0201 	orrne.w	r2, r2, #1
 8006184:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 8006186:	2000      	movs	r0, #0
 8006188:	4770      	bx	lr

0800618a <HAL_TIM_OC_DelayElapsedCallback>:
 800618a:	4770      	bx	lr

0800618c <HAL_TIM_IC_CaptureCallback>:
 800618c:	4770      	bx	lr

0800618e <HAL_TIM_PWM_PulseFinishedCallback>:
 800618e:	4770      	bx	lr

08006190 <HAL_TIM_TriggerCallback>:
 8006190:	4770      	bx	lr

08006192 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006192:	6803      	ldr	r3, [r0, #0]
 8006194:	691a      	ldr	r2, [r3, #16]
 8006196:	0791      	lsls	r1, r2, #30
{
 8006198:	b510      	push	{r4, lr}
 800619a:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800619c:	d50e      	bpl.n	80061bc <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800619e:	68da      	ldr	r2, [r3, #12]
 80061a0:	0792      	lsls	r2, r2, #30
 80061a2:	d50b      	bpl.n	80061bc <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80061a4:	f06f 0202 	mvn.w	r2, #2
 80061a8:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80061aa:	699b      	ldr	r3, [r3, #24]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80061ac:	2201      	movs	r2, #1
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80061ae:	079b      	lsls	r3, r3, #30
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80061b0:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80061b2:	d077      	beq.n	80062a4 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80061b4:	f7ff ffea 	bl	800618c <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80061b8:	2300      	movs	r3, #0
 80061ba:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80061bc:	6823      	ldr	r3, [r4, #0]
 80061be:	691a      	ldr	r2, [r3, #16]
 80061c0:	0750      	lsls	r0, r2, #29
 80061c2:	d510      	bpl.n	80061e6 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80061c4:	68da      	ldr	r2, [r3, #12]
 80061c6:	0751      	lsls	r1, r2, #29
 80061c8:	d50d      	bpl.n	80061e6 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80061ca:	f06f 0204 	mvn.w	r2, #4
 80061ce:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80061d0:	699b      	ldr	r3, [r3, #24]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80061d2:	2202      	movs	r2, #2
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80061d4:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80061d8:	7722      	strb	r2, [r4, #28]
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80061da:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80061dc:	d068      	beq.n	80062b0 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80061de:	f7ff ffd5 	bl	800618c <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80061e2:	2300      	movs	r3, #0
 80061e4:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80061e6:	6823      	ldr	r3, [r4, #0]
 80061e8:	691a      	ldr	r2, [r3, #16]
 80061ea:	0712      	lsls	r2, r2, #28
 80061ec:	d50f      	bpl.n	800620e <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80061ee:	68da      	ldr	r2, [r3, #12]
 80061f0:	0710      	lsls	r0, r2, #28
 80061f2:	d50c      	bpl.n	800620e <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80061f4:	f06f 0208 	mvn.w	r2, #8
 80061f8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80061fa:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80061fc:	2204      	movs	r2, #4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80061fe:	0799      	lsls	r1, r3, #30
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006200:	7722      	strb	r2, [r4, #28]
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006202:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006204:	d05a      	beq.n	80062bc <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8006206:	f7ff ffc1 	bl	800618c <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800620a:	2300      	movs	r3, #0
 800620c:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800620e:	6823      	ldr	r3, [r4, #0]
 8006210:	691a      	ldr	r2, [r3, #16]
 8006212:	06d2      	lsls	r2, r2, #27
 8006214:	d510      	bpl.n	8006238 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8006216:	68da      	ldr	r2, [r3, #12]
 8006218:	06d0      	lsls	r0, r2, #27
 800621a:	d50d      	bpl.n	8006238 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800621c:	f06f 0210 	mvn.w	r2, #16
 8006220:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006222:	69db      	ldr	r3, [r3, #28]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006224:	2208      	movs	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006226:	f413 7f40 	tst.w	r3, #768	; 0x300
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800622a:	7722      	strb	r2, [r4, #28]
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800622c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800622e:	d04b      	beq.n	80062c8 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8006230:	f7ff ffac 	bl	800618c <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006234:	2300      	movs	r3, #0
 8006236:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8006238:	6823      	ldr	r3, [r4, #0]
 800623a:	691a      	ldr	r2, [r3, #16]
 800623c:	07d1      	lsls	r1, r2, #31
 800623e:	d508      	bpl.n	8006252 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8006240:	68da      	ldr	r2, [r3, #12]
 8006242:	07d2      	lsls	r2, r2, #31
 8006244:	d505      	bpl.n	8006252 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006246:	f06f 0201 	mvn.w	r2, #1
 800624a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800624c:	4620      	mov	r0, r4
 800624e:	f7fb fae9 	bl	8001824 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006252:	6823      	ldr	r3, [r4, #0]
 8006254:	691a      	ldr	r2, [r3, #16]
 8006256:	0610      	lsls	r0, r2, #24
 8006258:	d508      	bpl.n	800626c <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800625a:	68da      	ldr	r2, [r3, #12]
 800625c:	0611      	lsls	r1, r2, #24
 800625e:	d505      	bpl.n	800626c <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006260:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8006264:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8006266:	4620      	mov	r0, r4
 8006268:	f000 f8b7 	bl	80063da <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800626c:	6823      	ldr	r3, [r4, #0]
 800626e:	691a      	ldr	r2, [r3, #16]
 8006270:	0652      	lsls	r2, r2, #25
 8006272:	d508      	bpl.n	8006286 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8006274:	68da      	ldr	r2, [r3, #12]
 8006276:	0650      	lsls	r0, r2, #25
 8006278:	d505      	bpl.n	8006286 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800627a:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800627e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8006280:	4620      	mov	r0, r4
 8006282:	f7ff ff85 	bl	8006190 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006286:	6823      	ldr	r3, [r4, #0]
 8006288:	691a      	ldr	r2, [r3, #16]
 800628a:	0691      	lsls	r1, r2, #26
 800628c:	d522      	bpl.n	80062d4 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800628e:	68da      	ldr	r2, [r3, #12]
 8006290:	0692      	lsls	r2, r2, #26
 8006292:	d51f      	bpl.n	80062d4 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006294:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8006298:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800629a:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800629c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80062a0:	f000 b89a 	b.w	80063d8 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80062a4:	f7ff ff71 	bl	800618a <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80062a8:	4620      	mov	r0, r4
 80062aa:	f7ff ff70 	bl	800618e <HAL_TIM_PWM_PulseFinishedCallback>
 80062ae:	e783      	b.n	80061b8 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80062b0:	f7ff ff6b 	bl	800618a <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80062b4:	4620      	mov	r0, r4
 80062b6:	f7ff ff6a 	bl	800618e <HAL_TIM_PWM_PulseFinishedCallback>
 80062ba:	e792      	b.n	80061e2 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80062bc:	f7ff ff65 	bl	800618a <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80062c0:	4620      	mov	r0, r4
 80062c2:	f7ff ff64 	bl	800618e <HAL_TIM_PWM_PulseFinishedCallback>
 80062c6:	e7a0      	b.n	800620a <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80062c8:	f7ff ff5f 	bl	800618a <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80062cc:	4620      	mov	r0, r4
 80062ce:	f7ff ff5e 	bl	800618e <HAL_TIM_PWM_PulseFinishedCallback>
 80062d2:	e7af      	b.n	8006234 <HAL_TIM_IRQHandler+0xa2>
}
 80062d4:	bd10      	pop	{r4, pc}
	...

080062d8 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80062d8:	4a30      	ldr	r2, [pc, #192]	; (800639c <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80062da:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80062dc:	4290      	cmp	r0, r2
 80062de:	d012      	beq.n	8006306 <TIM_Base_SetConfig+0x2e>
 80062e0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80062e4:	d00f      	beq.n	8006306 <TIM_Base_SetConfig+0x2e>
 80062e6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80062ea:	4290      	cmp	r0, r2
 80062ec:	d00b      	beq.n	8006306 <TIM_Base_SetConfig+0x2e>
 80062ee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80062f2:	4290      	cmp	r0, r2
 80062f4:	d007      	beq.n	8006306 <TIM_Base_SetConfig+0x2e>
 80062f6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80062fa:	4290      	cmp	r0, r2
 80062fc:	d003      	beq.n	8006306 <TIM_Base_SetConfig+0x2e>
 80062fe:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006302:	4290      	cmp	r0, r2
 8006304:	d119      	bne.n	800633a <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006306:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006308:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800630c:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800630e:	4a23      	ldr	r2, [pc, #140]	; (800639c <TIM_Base_SetConfig+0xc4>)
 8006310:	4290      	cmp	r0, r2
 8006312:	d029      	beq.n	8006368 <TIM_Base_SetConfig+0x90>
 8006314:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006318:	d026      	beq.n	8006368 <TIM_Base_SetConfig+0x90>
 800631a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800631e:	4290      	cmp	r0, r2
 8006320:	d022      	beq.n	8006368 <TIM_Base_SetConfig+0x90>
 8006322:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006326:	4290      	cmp	r0, r2
 8006328:	d01e      	beq.n	8006368 <TIM_Base_SetConfig+0x90>
 800632a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800632e:	4290      	cmp	r0, r2
 8006330:	d01a      	beq.n	8006368 <TIM_Base_SetConfig+0x90>
 8006332:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006336:	4290      	cmp	r0, r2
 8006338:	d016      	beq.n	8006368 <TIM_Base_SetConfig+0x90>
 800633a:	4a19      	ldr	r2, [pc, #100]	; (80063a0 <TIM_Base_SetConfig+0xc8>)
 800633c:	4290      	cmp	r0, r2
 800633e:	d013      	beq.n	8006368 <TIM_Base_SetConfig+0x90>
 8006340:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006344:	4290      	cmp	r0, r2
 8006346:	d00f      	beq.n	8006368 <TIM_Base_SetConfig+0x90>
 8006348:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800634c:	4290      	cmp	r0, r2
 800634e:	d00b      	beq.n	8006368 <TIM_Base_SetConfig+0x90>
 8006350:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8006354:	4290      	cmp	r0, r2
 8006356:	d007      	beq.n	8006368 <TIM_Base_SetConfig+0x90>
 8006358:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800635c:	4290      	cmp	r0, r2
 800635e:	d003      	beq.n	8006368 <TIM_Base_SetConfig+0x90>
 8006360:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006364:	4290      	cmp	r0, r2
 8006366:	d103      	bne.n	8006370 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8006368:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800636a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800636e:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006370:	694a      	ldr	r2, [r1, #20]
 8006372:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006376:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8006378:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800637a:	688b      	ldr	r3, [r1, #8]
 800637c:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800637e:	680b      	ldr	r3, [r1, #0]
 8006380:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006382:	4b06      	ldr	r3, [pc, #24]	; (800639c <TIM_Base_SetConfig+0xc4>)
 8006384:	4298      	cmp	r0, r3
 8006386:	d003      	beq.n	8006390 <TIM_Base_SetConfig+0xb8>
 8006388:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800638c:	4298      	cmp	r0, r3
 800638e:	d101      	bne.n	8006394 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006390:	690b      	ldr	r3, [r1, #16]
 8006392:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006394:	2301      	movs	r3, #1
 8006396:	6143      	str	r3, [r0, #20]
}
 8006398:	4770      	bx	lr
 800639a:	bf00      	nop
 800639c:	40010000 	.word	0x40010000
 80063a0:	40014000 	.word	0x40014000

080063a4 <HAL_TIM_Base_Init>:
{
 80063a4:	b510      	push	{r4, lr}
  if (htim == NULL)
 80063a6:	4604      	mov	r4, r0
 80063a8:	b1a0      	cbz	r0, 80063d4 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 80063aa:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80063ae:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80063b2:	b91b      	cbnz	r3, 80063bc <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80063b4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80063b8:	f7ff fed6 	bl	8006168 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80063bc:	2302      	movs	r3, #2
 80063be:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80063c2:	6820      	ldr	r0, [r4, #0]
 80063c4:	1d21      	adds	r1, r4, #4
 80063c6:	f7ff ff87 	bl	80062d8 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80063ca:	2301      	movs	r3, #1
 80063cc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80063d0:	2000      	movs	r0, #0
}
 80063d2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80063d4:	2001      	movs	r0, #1
 80063d6:	e7fc      	b.n	80063d2 <HAL_TIM_Base_Init+0x2e>

080063d8 <HAL_TIMEx_CommutCallback>:
 80063d8:	4770      	bx	lr

080063da <HAL_TIMEx_BreakCallback>:
 80063da:	4770      	bx	lr

080063dc <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80063dc:	6803      	ldr	r3, [r0, #0]
 80063de:	68da      	ldr	r2, [r3, #12]
 80063e0:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80063e4:	60da      	str	r2, [r3, #12]
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80063e6:	695a      	ldr	r2, [r3, #20]
 80063e8:	f022 0201 	bic.w	r2, r2, #1
 80063ec:	615a      	str	r2, [r3, #20]

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80063ee:	2320      	movs	r3, #32
 80063f0:	f880 303a 	strb.w	r3, [r0, #58]	; 0x3a
}
 80063f4:	4770      	bx	lr
	...

080063f8 <UART_SetConfig>:
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80063f8:	6803      	ldr	r3, [r0, #0]
 80063fa:	68c1      	ldr	r1, [r0, #12]
 80063fc:	691a      	ldr	r2, [r3, #16]
{
 80063fe:	b570      	push	{r4, r5, r6, lr}
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8006400:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
{
 8006404:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8006406:	430a      	orrs	r2, r1
 8006408:	611a      	str	r2, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800640a:	6925      	ldr	r5, [r4, #16]
 800640c:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(huart->Instance->CR1,
 800640e:	68d9      	ldr	r1, [r3, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006410:	69c0      	ldr	r0, [r0, #28]
 8006412:	432a      	orrs	r2, r5
 8006414:	6965      	ldr	r5, [r4, #20]
  MODIFY_REG(huart->Instance->CR1,
 8006416:	f421 4116 	bic.w	r1, r1, #38400	; 0x9600
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800641a:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR1,
 800641c:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8006420:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1,
 8006422:	430a      	orrs	r2, r1
 8006424:	60da      	str	r2, [r3, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8006426:	695a      	ldr	r2, [r3, #20]
 8006428:	69a1      	ldr	r1, [r4, #24]
 800642a:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 800642e:	430a      	orrs	r2, r1

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006430:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8006434:	615a      	str	r2, [r3, #20]
 8006436:	4a26      	ldr	r2, [pc, #152]	; (80064d0 <UART_SetConfig+0xd8>)
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8006438:	d129      	bne.n	800648e <UART_SetConfig+0x96>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800643a:	4293      	cmp	r3, r2
 800643c:	d003      	beq.n	8006446 <UART_SetConfig+0x4e>
 800643e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006442:	4293      	cmp	r3, r2
 8006444:	d120      	bne.n	8006488 <UART_SetConfig+0x90>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8006446:	f7ff f9f1 	bl	800582c <HAL_RCC_GetPCLK2Freq>
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 800644a:	6862      	ldr	r2, [r4, #4]
 800644c:	2600      	movs	r6, #0
 800644e:	1892      	adds	r2, r2, r2
 8006450:	f04f 0119 	mov.w	r1, #25
 8006454:	eb46 0306 	adc.w	r3, r6, r6
 8006458:	fba0 0101 	umull	r0, r1, r0, r1
 800645c:	f7f9 ff18 	bl	8000290 <__aeabi_uldivmod>
 8006460:	2164      	movs	r1, #100	; 0x64
 8006462:	fbb0 f5f1 	udiv	r5, r0, r1
 8006466:	fb01 0315 	mls	r3, r1, r5, r0
 800646a:	00db      	lsls	r3, r3, #3
 800646c:	3332      	adds	r3, #50	; 0x32
 800646e:	fbb3 f3f1 	udiv	r3, r3, r1
 8006472:	f003 0207 	and.w	r2, r3, #7
 8006476:	005b      	lsls	r3, r3, #1
 8006478:	6821      	ldr	r1, [r4, #0]
 800647a:	eb02 1205 	add.w	r2, r2, r5, lsl #4
 800647e:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8006482:	4413      	add	r3, r2
 8006484:	608b      	str	r3, [r1, #8]
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
    }
  }
}
 8006486:	bd70      	pop	{r4, r5, r6, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 8006488:	f7ff f9c0 	bl	800580c <HAL_RCC_GetPCLK1Freq>
 800648c:	e7dd      	b.n	800644a <UART_SetConfig+0x52>
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800648e:	4293      	cmp	r3, r2
 8006490:	d002      	beq.n	8006498 <UART_SetConfig+0xa0>
 8006492:	4a10      	ldr	r2, [pc, #64]	; (80064d4 <UART_SetConfig+0xdc>)
 8006494:	4293      	cmp	r3, r2
 8006496:	d117      	bne.n	80064c8 <UART_SetConfig+0xd0>
      pclk = HAL_RCC_GetPCLK2Freq();
 8006498:	f7ff f9c8 	bl	800582c <HAL_RCC_GetPCLK2Freq>
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800649c:	6863      	ldr	r3, [r4, #4]
 800649e:	2119      	movs	r1, #25
 80064a0:	009a      	lsls	r2, r3, #2
 80064a2:	fba0 0101 	umull	r0, r1, r0, r1
 80064a6:	0f9b      	lsrs	r3, r3, #30
 80064a8:	f7f9 fef2 	bl	8000290 <__aeabi_uldivmod>
 80064ac:	2264      	movs	r2, #100	; 0x64
 80064ae:	fbb0 f1f2 	udiv	r1, r0, r2
 80064b2:	fb02 0311 	mls	r3, r2, r1, r0
 80064b6:	6824      	ldr	r4, [r4, #0]
 80064b8:	011b      	lsls	r3, r3, #4
 80064ba:	3332      	adds	r3, #50	; 0x32
 80064bc:	fbb3 f3f2 	udiv	r3, r3, r2
 80064c0:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 80064c4:	60a3      	str	r3, [r4, #8]
}
 80064c6:	e7de      	b.n	8006486 <UART_SetConfig+0x8e>
      pclk = HAL_RCC_GetPCLK1Freq();
 80064c8:	f7ff f9a0 	bl	800580c <HAL_RCC_GetPCLK1Freq>
 80064cc:	e7e6      	b.n	800649c <UART_SetConfig+0xa4>
 80064ce:	bf00      	nop
 80064d0:	40011000 	.word	0x40011000
 80064d4:	40011400 	.word	0x40011400

080064d8 <UART_WaitOnFlagUntilTimeout.constprop.3>:
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
 80064d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80064da:	4604      	mov	r4, r0
 80064dc:	460e      	mov	r6, r1
 80064de:	4617      	mov	r7, r2
 80064e0:	461d      	mov	r5, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80064e2:	6821      	ldr	r1, [r4, #0]
 80064e4:	680b      	ldr	r3, [r1, #0]
 80064e6:	ea36 0303 	bics.w	r3, r6, r3
 80064ea:	d101      	bne.n	80064f0 <UART_WaitOnFlagUntilTimeout.constprop.3+0x18>
  return HAL_OK;
 80064ec:	2000      	movs	r0, #0
 80064ee:	e014      	b.n	800651a <UART_WaitOnFlagUntilTimeout.constprop.3+0x42>
    if (Timeout != HAL_MAX_DELAY)
 80064f0:	1c6b      	adds	r3, r5, #1
 80064f2:	d0f7      	beq.n	80064e4 <UART_WaitOnFlagUntilTimeout.constprop.3+0xc>
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 80064f4:	b995      	cbnz	r5, 800651c <UART_WaitOnFlagUntilTimeout.constprop.3+0x44>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80064f6:	6823      	ldr	r3, [r4, #0]
 80064f8:	68da      	ldr	r2, [r3, #12]
 80064fa:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80064fe:	60da      	str	r2, [r3, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006500:	695a      	ldr	r2, [r3, #20]
 8006502:	f022 0201 	bic.w	r2, r2, #1
 8006506:	615a      	str	r2, [r3, #20]
        huart->gState  = HAL_UART_STATE_READY;
 8006508:	2320      	movs	r3, #32
 800650a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
        huart->RxState = HAL_UART_STATE_READY;
 800650e:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
        __HAL_UNLOCK(huart);
 8006512:	2300      	movs	r3, #0
 8006514:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8006518:	2003      	movs	r0, #3
}
 800651a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 800651c:	f7fd fd6c 	bl	8003ff8 <HAL_GetTick>
 8006520:	1bc0      	subs	r0, r0, r7
 8006522:	4285      	cmp	r5, r0
 8006524:	d2dd      	bcs.n	80064e2 <UART_WaitOnFlagUntilTimeout.constprop.3+0xa>
 8006526:	e7e6      	b.n	80064f6 <UART_WaitOnFlagUntilTimeout.constprop.3+0x1e>

08006528 <HAL_UART_Init>:
{
 8006528:	b510      	push	{r4, lr}
  if (huart == NULL)
 800652a:	4604      	mov	r4, r0
 800652c:	b340      	cbz	r0, 8006580 <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 800652e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006532:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006536:	b91b      	cbnz	r3, 8006540 <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 8006538:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_UART_MspInit(huart);
 800653c:	f7fb fbb0 	bl	8001ca0 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8006540:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8006542:	2324      	movs	r3, #36	; 0x24
 8006544:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  __HAL_UART_DISABLE(huart);
 8006548:	68d3      	ldr	r3, [r2, #12]
 800654a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800654e:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8006550:	4620      	mov	r0, r4
 8006552:	f7ff ff51 	bl	80063f8 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8006556:	6823      	ldr	r3, [r4, #0]
 8006558:	691a      	ldr	r2, [r3, #16]
 800655a:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800655e:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8006560:	695a      	ldr	r2, [r3, #20]
 8006562:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8006566:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 8006568:	68da      	ldr	r2, [r3, #12]
 800656a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800656e:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006570:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8006572:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006574:	63e0      	str	r0, [r4, #60]	; 0x3c
  huart->gState = HAL_UART_STATE_READY;
 8006576:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  huart->RxState = HAL_UART_STATE_READY;
 800657a:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
}
 800657e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006580:	2001      	movs	r0, #1
 8006582:	e7fc      	b.n	800657e <HAL_UART_Init+0x56>

08006584 <HAL_UART_Transmit>:
{
 8006584:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006588:	461f      	mov	r7, r3
  if (huart->gState == HAL_UART_STATE_READY)
 800658a:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800658e:	2b20      	cmp	r3, #32
{
 8006590:	4604      	mov	r4, r0
 8006592:	460d      	mov	r5, r1
 8006594:	4690      	mov	r8, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8006596:	d14f      	bne.n	8006638 <HAL_UART_Transmit+0xb4>
    if ((pData == NULL) || (Size == 0U))
 8006598:	2900      	cmp	r1, #0
 800659a:	d04b      	beq.n	8006634 <HAL_UART_Transmit+0xb0>
 800659c:	2a00      	cmp	r2, #0
 800659e:	d049      	beq.n	8006634 <HAL_UART_Transmit+0xb0>
    __HAL_LOCK(huart);
 80065a0:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80065a4:	2b01      	cmp	r3, #1
 80065a6:	d047      	beq.n	8006638 <HAL_UART_Transmit+0xb4>
 80065a8:	2301      	movs	r3, #1
 80065aa:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80065ae:	f04f 0900 	mov.w	r9, #0
    huart->gState = HAL_UART_STATE_BUSY_TX;
 80065b2:	2321      	movs	r3, #33	; 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80065b4:	f8c0 903c 	str.w	r9, [r0, #60]	; 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 80065b8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
    tickstart = HAL_GetTick();
 80065bc:	f7fd fd1c 	bl	8003ff8 <HAL_GetTick>
    huart->TxXferSize = Size;
 80065c0:	f8a4 8024 	strh.w	r8, [r4, #36]	; 0x24
    tickstart = HAL_GetTick();
 80065c4:	4606      	mov	r6, r0
    huart->TxXferCount = Size;
 80065c6:	f8a4 8026 	strh.w	r8, [r4, #38]	; 0x26
    __HAL_UNLOCK(huart);
 80065ca:	f884 9038 	strb.w	r9, [r4, #56]	; 0x38
    while (huart->TxXferCount > 0U)
 80065ce:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80065d0:	b29b      	uxth	r3, r3
 80065d2:	b953      	cbnz	r3, 80065ea <HAL_UART_Transmit+0x66>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80065d4:	463b      	mov	r3, r7
 80065d6:	4632      	mov	r2, r6
 80065d8:	2140      	movs	r1, #64	; 0x40
 80065da:	4620      	mov	r0, r4
 80065dc:	f7ff ff7c 	bl	80064d8 <UART_WaitOnFlagUntilTimeout.constprop.3>
 80065e0:	b998      	cbnz	r0, 800660a <HAL_UART_Transmit+0x86>
    huart->gState = HAL_UART_STATE_READY;
 80065e2:	2320      	movs	r3, #32
 80065e4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    return HAL_OK;
 80065e8:	e010      	b.n	800660c <HAL_UART_Transmit+0x88>
      huart->TxXferCount--;
 80065ea:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80065ec:	3b01      	subs	r3, #1
 80065ee:	b29b      	uxth	r3, r3
 80065f0:	84e3      	strh	r3, [r4, #38]	; 0x26
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 80065f2:	68a3      	ldr	r3, [r4, #8]
 80065f4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80065f8:	4632      	mov	r2, r6
 80065fa:	463b      	mov	r3, r7
 80065fc:	f04f 0180 	mov.w	r1, #128	; 0x80
 8006600:	4620      	mov	r0, r4
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 8006602:	d10e      	bne.n	8006622 <HAL_UART_Transmit+0x9e>
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8006604:	f7ff ff68 	bl	80064d8 <UART_WaitOnFlagUntilTimeout.constprop.3>
 8006608:	b110      	cbz	r0, 8006610 <HAL_UART_Transmit+0x8c>
          return HAL_TIMEOUT;
 800660a:	2003      	movs	r0, #3
}
 800660c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 8006610:	882b      	ldrh	r3, [r5, #0]
 8006612:	6822      	ldr	r2, [r4, #0]
 8006614:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006618:	6053      	str	r3, [r2, #4]
        if (huart->Init.Parity == UART_PARITY_NONE)
 800661a:	6923      	ldr	r3, [r4, #16]
 800661c:	b943      	cbnz	r3, 8006630 <HAL_UART_Transmit+0xac>
          pData += 2U;
 800661e:	3502      	adds	r5, #2
 8006620:	e7d5      	b.n	80065ce <HAL_UART_Transmit+0x4a>
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8006622:	f7ff ff59 	bl	80064d8 <UART_WaitOnFlagUntilTimeout.constprop.3>
 8006626:	2800      	cmp	r0, #0
 8006628:	d1ef      	bne.n	800660a <HAL_UART_Transmit+0x86>
        huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 800662a:	6823      	ldr	r3, [r4, #0]
 800662c:	782a      	ldrb	r2, [r5, #0]
 800662e:	605a      	str	r2, [r3, #4]
 8006630:	3501      	adds	r5, #1
 8006632:	e7cc      	b.n	80065ce <HAL_UART_Transmit+0x4a>
      return  HAL_ERROR;
 8006634:	2001      	movs	r0, #1
 8006636:	e7e9      	b.n	800660c <HAL_UART_Transmit+0x88>
    return HAL_BUSY;
 8006638:	2002      	movs	r0, #2
 800663a:	e7e7      	b.n	800660c <HAL_UART_Transmit+0x88>

0800663c <HAL_UART_Transmit_IT>:
  if (huart->gState == HAL_UART_STATE_READY)
 800663c:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006640:	2b20      	cmp	r3, #32
 8006642:	d118      	bne.n	8006676 <HAL_UART_Transmit_IT+0x3a>
    if ((pData == NULL) || (Size == 0U))
 8006644:	b1a9      	cbz	r1, 8006672 <HAL_UART_Transmit_IT+0x36>
 8006646:	b1a2      	cbz	r2, 8006672 <HAL_UART_Transmit_IT+0x36>
    __HAL_LOCK(huart);
 8006648:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800664c:	2b01      	cmp	r3, #1
 800664e:	d012      	beq.n	8006676 <HAL_UART_Transmit_IT+0x3a>
    huart->TxXferCount = Size;
 8006650:	84c2      	strh	r2, [r0, #38]	; 0x26
    huart->pTxBuffPtr = pData;
 8006652:	6201      	str	r1, [r0, #32]
    huart->TxXferSize = Size;
 8006654:	8482      	strh	r2, [r0, #36]	; 0x24
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006656:	2300      	movs	r3, #0
    __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 8006658:	6801      	ldr	r1, [r0, #0]
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800665a:	63c3      	str	r3, [r0, #60]	; 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800665c:	2221      	movs	r2, #33	; 0x21
 800665e:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
    __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 8006662:	68ca      	ldr	r2, [r1, #12]
    __HAL_UNLOCK(huart);
 8006664:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
    __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 8006668:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800666c:	60ca      	str	r2, [r1, #12]
    return HAL_OK;
 800666e:	4618      	mov	r0, r3
 8006670:	4770      	bx	lr
      return HAL_ERROR;
 8006672:	2001      	movs	r0, #1
 8006674:	4770      	bx	lr
    return HAL_BUSY;
 8006676:	2002      	movs	r0, #2
}
 8006678:	4770      	bx	lr

0800667a <HAL_UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_READY)
 800667a:	f890 303a 	ldrb.w	r3, [r0, #58]	; 0x3a
 800667e:	2b20      	cmp	r3, #32
 8006680:	d120      	bne.n	80066c4 <HAL_UART_Receive_IT+0x4a>
    if ((pData == NULL) || (Size == 0U))
 8006682:	b1e9      	cbz	r1, 80066c0 <HAL_UART_Receive_IT+0x46>
 8006684:	b1e2      	cbz	r2, 80066c0 <HAL_UART_Receive_IT+0x46>
    __HAL_LOCK(huart);
 8006686:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800668a:	2b01      	cmp	r3, #1
 800668c:	d01a      	beq.n	80066c4 <HAL_UART_Receive_IT+0x4a>
    huart->RxXferCount = Size;
 800668e:	85c2      	strh	r2, [r0, #46]	; 0x2e
    huart->RxXferSize = Size;
 8006690:	8582      	strh	r2, [r0, #44]	; 0x2c
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006692:	2300      	movs	r3, #0
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 8006694:	2222      	movs	r2, #34	; 0x22
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006696:	63c3      	str	r3, [r0, #60]	; 0x3c
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 8006698:	f880 203a 	strb.w	r2, [r0, #58]	; 0x3a
    __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 800669c:	6802      	ldr	r2, [r0, #0]
    huart->pRxBuffPtr = pData;
 800669e:	6281      	str	r1, [r0, #40]	; 0x28
    __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 80066a0:	68d1      	ldr	r1, [r2, #12]
    __HAL_UNLOCK(huart);
 80066a2:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
    __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 80066a6:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 80066aa:	60d1      	str	r1, [r2, #12]
    __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 80066ac:	6951      	ldr	r1, [r2, #20]
 80066ae:	f041 0101 	orr.w	r1, r1, #1
 80066b2:	6151      	str	r1, [r2, #20]
    __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 80066b4:	68d1      	ldr	r1, [r2, #12]
 80066b6:	f041 0120 	orr.w	r1, r1, #32
 80066ba:	60d1      	str	r1, [r2, #12]
    return HAL_OK;
 80066bc:	4618      	mov	r0, r3
 80066be:	4770      	bx	lr
      return HAL_ERROR;
 80066c0:	2001      	movs	r0, #1
 80066c2:	4770      	bx	lr
    return HAL_BUSY;
 80066c4:	2002      	movs	r0, #2
}
 80066c6:	4770      	bx	lr

080066c8 <UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80066c8:	f890 303a 	ldrb.w	r3, [r0, #58]	; 0x3a
 80066cc:	2b22      	cmp	r3, #34	; 0x22
{
 80066ce:	b510      	push	{r4, lr}
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 80066d0:	d133      	bne.n	800673a <UART_Receive_IT+0x72>
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 80066d2:	6881      	ldr	r1, [r0, #8]
 80066d4:	6904      	ldr	r4, [r0, #16]
 80066d6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80066d8:	6802      	ldr	r2, [r0, #0]
 80066da:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 80066de:	d123      	bne.n	8006728 <UART_Receive_IT+0x60>
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 80066e0:	6852      	ldr	r2, [r2, #4]
      if (huart->Init.Parity == UART_PARITY_NONE)
 80066e2:	b9ec      	cbnz	r4, 8006720 <UART_Receive_IT+0x58>
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 80066e4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80066e8:	f823 2b02 	strh.w	r2, [r3], #2
        huart->pRxBuffPtr += 1U;
 80066ec:	6283      	str	r3, [r0, #40]	; 0x28
    if (--huart->RxXferCount == 0U)
 80066ee:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 80066f0:	3c01      	subs	r4, #1
 80066f2:	b2a4      	uxth	r4, r4
 80066f4:	85c4      	strh	r4, [r0, #46]	; 0x2e
 80066f6:	b98c      	cbnz	r4, 800671c <UART_Receive_IT+0x54>
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 80066f8:	6803      	ldr	r3, [r0, #0]
 80066fa:	68da      	ldr	r2, [r3, #12]
 80066fc:	f022 0220 	bic.w	r2, r2, #32
 8006700:	60da      	str	r2, [r3, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 8006702:	68da      	ldr	r2, [r3, #12]
 8006704:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006708:	60da      	str	r2, [r3, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 800670a:	695a      	ldr	r2, [r3, #20]
 800670c:	f022 0201 	bic.w	r2, r2, #1
 8006710:	615a      	str	r2, [r3, #20]
      huart->RxState = HAL_UART_STATE_READY;
 8006712:	2320      	movs	r3, #32
 8006714:	f880 303a 	strb.w	r3, [r0, #58]	; 0x3a
      HAL_UART_RxCpltCallback(huart);
 8006718:	f7fc fff0 	bl	80036fc <HAL_UART_RxCpltCallback>
    if (--huart->RxXferCount == 0U)
 800671c:	2000      	movs	r0, #0
 800671e:	e00d      	b.n	800673c <UART_Receive_IT+0x74>
        *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 8006720:	b2d2      	uxtb	r2, r2
 8006722:	f823 2b01 	strh.w	r2, [r3], #1
 8006726:	e7e1      	b.n	80066ec <UART_Receive_IT+0x24>
 8006728:	1c59      	adds	r1, r3, #1
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 800672a:	6852      	ldr	r2, [r2, #4]
 800672c:	6281      	str	r1, [r0, #40]	; 0x28
      if (huart->Init.Parity == UART_PARITY_NONE)
 800672e:	b90c      	cbnz	r4, 8006734 <UART_Receive_IT+0x6c>
        *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8006730:	701a      	strb	r2, [r3, #0]
 8006732:	e7dc      	b.n	80066ee <UART_Receive_IT+0x26>
 8006734:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8006738:	e7fa      	b.n	8006730 <UART_Receive_IT+0x68>
    return HAL_BUSY;
 800673a:	2002      	movs	r0, #2
}
 800673c:	bd10      	pop	{r4, pc}

0800673e <HAL_UART_ErrorCallback>:
 800673e:	4770      	bx	lr

08006740 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 8006740:	6803      	ldr	r3, [r0, #0]
 8006742:	681a      	ldr	r2, [r3, #0]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8006744:	68d9      	ldr	r1, [r3, #12]
{
 8006746:	b570      	push	{r4, r5, r6, lr}
  if (errorflags == RESET)
 8006748:	0716      	lsls	r6, r2, #28
{
 800674a:	4604      	mov	r4, r0
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 800674c:	695d      	ldr	r5, [r3, #20]
  if (errorflags == RESET)
 800674e:	d107      	bne.n	8006760 <HAL_UART_IRQHandler+0x20>
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8006750:	0696      	lsls	r6, r2, #26
 8006752:	d55a      	bpl.n	800680a <HAL_UART_IRQHandler+0xca>
 8006754:	068d      	lsls	r5, r1, #26
 8006756:	d558      	bpl.n	800680a <HAL_UART_IRQHandler+0xca>
}
 8006758:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      UART_Receive_IT(huart);
 800675c:	f7ff bfb4 	b.w	80066c8 <UART_Receive_IT>
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 8006760:	f015 0501 	ands.w	r5, r5, #1
 8006764:	d102      	bne.n	800676c <HAL_UART_IRQHandler+0x2c>
 8006766:	f411 7f90 	tst.w	r1, #288	; 0x120
 800676a:	d04e      	beq.n	800680a <HAL_UART_IRQHandler+0xca>
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 800676c:	07d0      	lsls	r0, r2, #31
 800676e:	d505      	bpl.n	800677c <HAL_UART_IRQHandler+0x3c>
 8006770:	05cb      	lsls	r3, r1, #23
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8006772:	bf42      	ittt	mi
 8006774:	6be3      	ldrmi	r3, [r4, #60]	; 0x3c
 8006776:	f043 0301 	orrmi.w	r3, r3, #1
 800677a:	63e3      	strmi	r3, [r4, #60]	; 0x3c
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 800677c:	0756      	lsls	r6, r2, #29
 800677e:	d504      	bpl.n	800678a <HAL_UART_IRQHandler+0x4a>
 8006780:	b11d      	cbz	r5, 800678a <HAL_UART_IRQHandler+0x4a>
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8006782:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006784:	f043 0302 	orr.w	r3, r3, #2
 8006788:	63e3      	str	r3, [r4, #60]	; 0x3c
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 800678a:	0790      	lsls	r0, r2, #30
 800678c:	d504      	bpl.n	8006798 <HAL_UART_IRQHandler+0x58>
 800678e:	b11d      	cbz	r5, 8006798 <HAL_UART_IRQHandler+0x58>
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8006790:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006792:	f043 0304 	orr.w	r3, r3, #4
 8006796:	63e3      	str	r3, [r4, #60]	; 0x3c
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 8006798:	0713      	lsls	r3, r2, #28
 800679a:	d506      	bpl.n	80067aa <HAL_UART_IRQHandler+0x6a>
 800679c:	068e      	lsls	r6, r1, #26
 800679e:	d400      	bmi.n	80067a2 <HAL_UART_IRQHandler+0x62>
 80067a0:	b11d      	cbz	r5, 80067aa <HAL_UART_IRQHandler+0x6a>
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 80067a2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80067a4:	f043 0308 	orr.w	r3, r3, #8
 80067a8:	63e3      	str	r3, [r4, #60]	; 0x3c
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 80067aa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80067ac:	b343      	cbz	r3, 8006800 <HAL_UART_IRQHandler+0xc0>
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 80067ae:	0695      	lsls	r5, r2, #26
 80067b0:	d504      	bpl.n	80067bc <HAL_UART_IRQHandler+0x7c>
 80067b2:	0688      	lsls	r0, r1, #26
 80067b4:	d502      	bpl.n	80067bc <HAL_UART_IRQHandler+0x7c>
        UART_Receive_IT(huart);
 80067b6:	4620      	mov	r0, r4
 80067b8:	f7ff ff86 	bl	80066c8 <UART_Receive_IT>
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 80067bc:	6823      	ldr	r3, [r4, #0]
 80067be:	695d      	ldr	r5, [r3, #20]
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 80067c0:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80067c2:	0711      	lsls	r1, r2, #28
        UART_EndRxTransfer(huart);
 80067c4:	4620      	mov	r0, r4
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 80067c6:	d402      	bmi.n	80067ce <HAL_UART_IRQHandler+0x8e>
 80067c8:	f015 0540 	ands.w	r5, r5, #64	; 0x40
 80067cc:	d019      	beq.n	8006802 <HAL_UART_IRQHandler+0xc2>
        UART_EndRxTransfer(huart);
 80067ce:	f7ff fe05 	bl	80063dc <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 80067d2:	6823      	ldr	r3, [r4, #0]
 80067d4:	695a      	ldr	r2, [r3, #20]
 80067d6:	0652      	lsls	r2, r2, #25
 80067d8:	d50f      	bpl.n	80067fa <HAL_UART_IRQHandler+0xba>
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80067da:	695a      	ldr	r2, [r3, #20]
          if (huart->hdmarx != NULL)
 80067dc:	6b60      	ldr	r0, [r4, #52]	; 0x34
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80067de:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80067e2:	615a      	str	r2, [r3, #20]
          if (huart->hdmarx != NULL)
 80067e4:	b148      	cbz	r0, 80067fa <HAL_UART_IRQHandler+0xba>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 80067e6:	4b26      	ldr	r3, [pc, #152]	; (8006880 <HAL_UART_IRQHandler+0x140>)
 80067e8:	6503      	str	r3, [r0, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 80067ea:	f7fd fc97 	bl	800411c <HAL_DMA_Abort_IT>
 80067ee:	b138      	cbz	r0, 8006800 <HAL_UART_IRQHandler+0xc0>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 80067f0:	6b60      	ldr	r0, [r4, #52]	; 0x34
}
 80067f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 80067f6:	6d03      	ldr	r3, [r0, #80]	; 0x50
 80067f8:	4718      	bx	r3
            HAL_UART_ErrorCallback(huart);
 80067fa:	4620      	mov	r0, r4
 80067fc:	f7ff ff9f 	bl	800673e <HAL_UART_ErrorCallback>
}
 8006800:	bd70      	pop	{r4, r5, r6, pc}
        HAL_UART_ErrorCallback(huart);
 8006802:	f7ff ff9c 	bl	800673e <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8006806:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006808:	e7fa      	b.n	8006800 <HAL_UART_IRQHandler+0xc0>
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 800680a:	0616      	lsls	r6, r2, #24
 800680c:	d528      	bpl.n	8006860 <HAL_UART_IRQHandler+0x120>
 800680e:	060d      	lsls	r5, r1, #24
 8006810:	d526      	bpl.n	8006860 <HAL_UART_IRQHandler+0x120>
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 8006812:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8006816:	2a21      	cmp	r2, #33	; 0x21
 8006818:	d1f2      	bne.n	8006800 <HAL_UART_IRQHandler+0xc0>
    if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800681a:	68a1      	ldr	r1, [r4, #8]
 800681c:	6a22      	ldr	r2, [r4, #32]
 800681e:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 8006822:	d118      	bne.n	8006856 <HAL_UART_IRQHandler+0x116>
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 8006824:	8811      	ldrh	r1, [r2, #0]
 8006826:	f3c1 0108 	ubfx	r1, r1, #0, #9
 800682a:	6059      	str	r1, [r3, #4]
      if (huart->Init.Parity == UART_PARITY_NONE)
 800682c:	6921      	ldr	r1, [r4, #16]
 800682e:	b981      	cbnz	r1, 8006852 <HAL_UART_IRQHandler+0x112>
        huart->pTxBuffPtr += 2U;
 8006830:	3202      	adds	r2, #2
        huart->pTxBuffPtr += 1U;
 8006832:	6222      	str	r2, [r4, #32]
    if (--huart->TxXferCount == 0U)
 8006834:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 8006836:	3a01      	subs	r2, #1
 8006838:	b292      	uxth	r2, r2
 800683a:	84e2      	strh	r2, [r4, #38]	; 0x26
 800683c:	2a00      	cmp	r2, #0
 800683e:	d1df      	bne.n	8006800 <HAL_UART_IRQHandler+0xc0>
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 8006840:	68da      	ldr	r2, [r3, #12]
 8006842:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8006846:	60da      	str	r2, [r3, #12]
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 8006848:	68da      	ldr	r2, [r3, #12]
 800684a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800684e:	60da      	str	r2, [r3, #12]
 8006850:	e7d6      	b.n	8006800 <HAL_UART_IRQHandler+0xc0>
        huart->pTxBuffPtr += 1U;
 8006852:	3201      	adds	r2, #1
 8006854:	e7ed      	b.n	8006832 <HAL_UART_IRQHandler+0xf2>
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 8006856:	1c51      	adds	r1, r2, #1
 8006858:	6221      	str	r1, [r4, #32]
 800685a:	7812      	ldrb	r2, [r2, #0]
 800685c:	605a      	str	r2, [r3, #4]
 800685e:	e7e9      	b.n	8006834 <HAL_UART_IRQHandler+0xf4>
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 8006860:	0650      	lsls	r0, r2, #25
 8006862:	d5cd      	bpl.n	8006800 <HAL_UART_IRQHandler+0xc0>
 8006864:	064a      	lsls	r2, r1, #25
 8006866:	d5cb      	bpl.n	8006800 <HAL_UART_IRQHandler+0xc0>
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 8006868:	68da      	ldr	r2, [r3, #12]
 800686a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800686e:	60da      	str	r2, [r3, #12]
  huart->gState = HAL_UART_STATE_READY;
 8006870:	2320      	movs	r3, #32
 8006872:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  HAL_UART_TxCpltCallback(huart);
 8006876:	4620      	mov	r0, r4
 8006878:	f7fd fb7a 	bl	8003f70 <HAL_UART_TxCpltCallback>
 800687c:	e7c0      	b.n	8006800 <HAL_UART_IRQHandler+0xc0>
 800687e:	bf00      	nop
 8006880:	08006885 	.word	0x08006885

08006884 <UART_DMAAbortOnError>:
{
 8006884:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8006886:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0x00U;
 8006888:	2300      	movs	r3, #0
 800688a:	85c3      	strh	r3, [r0, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 800688c:	84c3      	strh	r3, [r0, #38]	; 0x26
  HAL_UART_ErrorCallback(huart);
 800688e:	f7ff ff56 	bl	800673e <HAL_UART_ErrorCallback>
}
 8006892:	bd08      	pop	{r3, pc}

08006894 <HAL_UART_GetState>:
  temp1 = huart->gState;
 8006894:	f890 2039 	ldrb.w	r2, [r0, #57]	; 0x39
  temp2 = huart->RxState;
 8006898:	f890 003a 	ldrb.w	r0, [r0, #58]	; 0x3a
}
 800689c:	4310      	orrs	r0, r2
 800689e:	4770      	bx	lr

080068a0 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80068a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80068a4:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80068a6:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 80068aa:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 80068ae:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 80068b2:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80068b6:	6809      	ldr	r1, [r1, #0]
 80068b8:	2901      	cmp	r1, #1
 80068ba:	ea43 0304 	orr.w	r3, r3, r4
 80068be:	4912      	ldr	r1, [pc, #72]	; (8006908 <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 80068c0:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80068c2:	d00f      	beq.n	80068e4 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80068c4:	431a      	orrs	r2, r3
 80068c6:	432a      	orrs	r2, r5
 80068c8:	ea42 0308 	orr.w	r3, r2, r8
 80068cc:	ea43 030e 	orr.w	r3, r3, lr
 80068d0:	ea43 030c 	orr.w	r3, r3, ip
 80068d4:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80068d6:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80068d8:	4333      	orrs	r3, r6
 80068da:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80068dc:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 80068de:	2000      	movs	r0, #0
 80068e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80068e4:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 80068e6:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80068e8:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80068ea:	ea45 0208 	orr.w	r2, r5, r8
 80068ee:	ea42 020e 	orr.w	r2, r2, lr
 80068f2:	ea42 020c 	orr.w	r2, r2, ip
 80068f6:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 80068f8:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80068fc:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80068fe:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8006900:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8006902:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8006904:	6042      	str	r2, [r0, #4]
 8006906:	e7ea      	b.n	80068de <FMC_SDRAM_Init+0x3e>
 8006908:	ffff8000 	.word	0xffff8000

0800690c <FMC_SDRAM_Timing_Init>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Bank SDRAM bank number   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800690c:	68cb      	ldr	r3, [r1, #12]
 800690e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006910:	680c      	ldr	r4, [r1, #0]
 8006912:	688e      	ldr	r6, [r1, #8]
 8006914:	690d      	ldr	r5, [r1, #16]
 8006916:	1e5f      	subs	r7, r3, #1
 8006918:	694b      	ldr	r3, [r1, #20]
 800691a:	f104 3cff 	add.w	ip, r4, #4294967295	; 0xffffffff
 800691e:	684c      	ldr	r4, [r1, #4]
 8006920:	6989      	ldr	r1, [r1, #24]
 8006922:	3b01      	subs	r3, #1
 8006924:	051b      	lsls	r3, r3, #20
 8006926:	3c01      	subs	r4, #1
 8006928:	3e01      	subs	r6, #1
 800692a:	3d01      	subs	r5, #1
 800692c:	3901      	subs	r1, #1
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 800692e:	2a01      	cmp	r2, #1
 8006930:	ea4f 1404 	mov.w	r4, r4, lsl #4
 8006934:	ea4f 2606 	mov.w	r6, r6, lsl #8
 8006938:	ea4f 4505 	mov.w	r5, r5, lsl #16
 800693c:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8006940:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 8006944:	d00c      	beq.n	8006960 <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006946:	ea43 030c 	orr.w	r3, r3, ip
 800694a:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800694c:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800694e:	4333      	orrs	r3, r6
 8006950:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8006952:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006956:	430b      	orrs	r3, r1
 8006958:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800695a:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 800695c:	2000      	movs	r0, #0
 800695e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8006960:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8006962:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8006966:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800696a:	ea44 0206 	orr.w	r2, r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 800696e:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006970:	ea42 020c 	orr.w	r2, r2, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8006974:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8006976:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006978:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800697a:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800697e:	430a      	orrs	r2, r1
 8006980:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8006982:	60c2      	str	r2, [r0, #12]
 8006984:	e7ea      	b.n	800695c <FMC_SDRAM_Timing_Init+0x50>

08006986 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8006986:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8006988:	2300      	movs	r3, #0
 800698a:	9301      	str	r3, [sp, #4]
{
 800698c:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800698e:	e9d1 3200 	ldrd	r3, r2, [r1]
 8006992:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8006994:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006996:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 800699a:	688a      	ldr	r2, [r1, #8]
 800699c:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800699e:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80069a2:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 80069a4:	9b01      	ldr	r3, [sp, #4]
 80069a6:	6103      	str	r3, [r0, #16]
{
 80069a8:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 80069aa:	f7fd fb25 	bl	8003ff8 <HAL_GetTick>
 80069ae:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 80069b0:	69a0      	ldr	r0, [r4, #24]
 80069b2:	f010 0020 	ands.w	r0, r0, #32
 80069b6:	d003      	beq.n	80069c0 <FMC_SDRAM_SendCommand+0x3a>
  {
    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
 80069b8:	1c6b      	adds	r3, r5, #1
 80069ba:	d0f9      	beq.n	80069b0 <FMC_SDRAM_SendCommand+0x2a>
    {
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80069bc:	b915      	cbnz	r5, 80069c4 <FMC_SDRAM_SendCommand+0x3e>
      {
        return HAL_TIMEOUT;
 80069be:	2003      	movs	r0, #3
      }
    }
  }

  return HAL_OK;
}
 80069c0:	b002      	add	sp, #8
 80069c2:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80069c4:	f7fd fb18 	bl	8003ff8 <HAL_GetTick>
 80069c8:	1b80      	subs	r0, r0, r6
 80069ca:	42a8      	cmp	r0, r5
 80069cc:	d9f0      	bls.n	80069b0 <FMC_SDRAM_SendCommand+0x2a>
 80069ce:	e7f6      	b.n	80069be <FMC_SDRAM_SendCommand+0x38>

080069d0 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 80069d0:	6943      	ldr	r3, [r0, #20]
 80069d2:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 80069d6:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 80069d8:	2000      	movs	r0, #0
 80069da:	4770      	bx	lr

080069dc <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80069dc:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80069e0:	b113      	cbz	r3, 80069e8 <osKernelInitialize+0xc>
    stat = osErrorISR;
 80069e2:	f06f 0005 	mvn.w	r0, #5
 80069e6:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80069e8:	f3ef 8210 	mrs	r2, PRIMASK
 80069ec:	4b07      	ldr	r3, [pc, #28]	; (8006a0c <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 80069ee:	b912      	cbnz	r2, 80069f6 <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80069f0:	f3ef 8211 	mrs	r2, BASEPRI
 80069f4:	b112      	cbz	r2, 80069fc <osKernelInitialize+0x20>
 80069f6:	681a      	ldr	r2, [r3, #0]
 80069f8:	2a02      	cmp	r2, #2
 80069fa:	d0f2      	beq.n	80069e2 <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 80069fc:	6818      	ldr	r0, [r3, #0]
 80069fe:	b910      	cbnz	r0, 8006a06 <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8006a00:	2201      	movs	r2, #1
 8006a02:	601a      	str	r2, [r3, #0]
 8006a04:	4770      	bx	lr
      stat = osOK;
    } else {
      stat = osError;
 8006a06:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    }
  }

  return (stat);
}
 8006a0a:	4770      	bx	lr
 8006a0c:	200016c4 	.word	0x200016c4

08006a10 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8006a10:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006a12:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006a16:	b113      	cbz	r3, 8006a1e <osKernelStart+0xe>
    stat = osErrorISR;
 8006a18:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8006a1c:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006a1e:	f3ef 8210 	mrs	r2, PRIMASK
 8006a22:	4b0a      	ldr	r3, [pc, #40]	; (8006a4c <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8006a24:	b912      	cbnz	r2, 8006a2c <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006a26:	f3ef 8211 	mrs	r2, BASEPRI
 8006a2a:	b112      	cbz	r2, 8006a32 <osKernelStart+0x22>
 8006a2c:	681a      	ldr	r2, [r3, #0]
 8006a2e:	2a02      	cmp	r2, #2
 8006a30:	d0f2      	beq.n	8006a18 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8006a32:	681a      	ldr	r2, [r3, #0]
 8006a34:	2a01      	cmp	r2, #1
 8006a36:	d105      	bne.n	8006a44 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8006a38:	2202      	movs	r2, #2
 8006a3a:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8006a3c:	f001 fbc2 	bl	80081c4 <vTaskStartScheduler>
      stat = osOK;
 8006a40:	2000      	movs	r0, #0
 8006a42:	e7eb      	b.n	8006a1c <osKernelStart+0xc>
      stat = osError;
 8006a44:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  return (stat);
 8006a48:	e7e8      	b.n	8006a1c <osKernelStart+0xc>
 8006a4a:	bf00      	nop
 8006a4c:	200016c4 	.word	0x200016c4

08006a50 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006a50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006a52:	b087      	sub	sp, #28
 8006a54:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8006a56:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006a58:	460b      	mov	r3, r1
  hTask = NULL;
 8006a5a:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006a5c:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8006a60:	bb32      	cbnz	r2, 8006ab0 <osThreadNew+0x60>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006a62:	f3ef 8210 	mrs	r2, PRIMASK
 8006a66:	b912      	cbnz	r2, 8006a6e <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006a68:	f3ef 8211 	mrs	r2, BASEPRI
 8006a6c:	b11a      	cbz	r2, 8006a76 <osThreadNew+0x26>
 8006a6e:	4a22      	ldr	r2, [pc, #136]	; (8006af8 <osThreadNew+0xa8>)
 8006a70:	6812      	ldr	r2, [r2, #0]
 8006a72:	2a02      	cmp	r2, #2
 8006a74:	d01c      	beq.n	8006ab0 <osThreadNew+0x60>
 8006a76:	b1d8      	cbz	r0, 8006ab0 <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8006a78:	2c00      	cmp	r4, #0
 8006a7a:	d036      	beq.n	8006aea <osThreadNew+0x9a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8006a7c:	69a5      	ldr	r5, [r4, #24]
      if (attr->name != NULL) {
 8006a7e:	6821      	ldr	r1, [r4, #0]
 8006a80:	2d00      	cmp	r5, #0
 8006a82:	bf08      	it	eq
 8006a84:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8006a86:	1e6a      	subs	r2, r5, #1
 8006a88:	2a37      	cmp	r2, #55	; 0x37
 8006a8a:	462f      	mov	r7, r5
 8006a8c:	d831      	bhi.n	8006af2 <osThreadNew+0xa2>
 8006a8e:	6862      	ldr	r2, [r4, #4]
 8006a90:	07d2      	lsls	r2, r2, #31
 8006a92:	d42e      	bmi.n	8006af2 <osThreadNew+0xa2>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8006a94:	6966      	ldr	r6, [r4, #20]
 8006a96:	b176      	cbz	r6, 8006ab6 <osThreadNew+0x66>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8006a98:	08b2      	lsrs	r2, r6, #2
 8006a9a:	e9d4 ce02 	ldrd	ip, lr, [r4, #8]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006a9e:	f1bc 0f00 	cmp.w	ip, #0
 8006aa2:	d00a      	beq.n	8006aba <osThreadNew+0x6a>
 8006aa4:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8006aa8:	d902      	bls.n	8006ab0 <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006aaa:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006aac:	b104      	cbz	r4, 8006ab0 <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006aae:	b9ae      	cbnz	r6, 8006adc <osThreadNew+0x8c>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8006ab0:	9805      	ldr	r0, [sp, #20]
}
 8006ab2:	b007      	add	sp, #28
 8006ab4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8006ab6:	2280      	movs	r2, #128	; 0x80
 8006ab8:	e7ef      	b.n	8006a9a <osThreadNew+0x4a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8006aba:	f1be 0f00 	cmp.w	lr, #0
 8006abe:	d1f7      	bne.n	8006ab0 <osThreadNew+0x60>
      if (mem == 0) {
 8006ac0:	6924      	ldr	r4, [r4, #16]
 8006ac2:	2c00      	cmp	r4, #0
 8006ac4:	d1f4      	bne.n	8006ab0 <osThreadNew+0x60>
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8006ac6:	ac05      	add	r4, sp, #20
 8006ac8:	e9cd 7400 	strd	r7, r4, [sp]
 8006acc:	b292      	uxth	r2, r2
 8006ace:	f001 fb4b 	bl	8008168 <xTaskCreate>
 8006ad2:	2801      	cmp	r0, #1
          hTask = NULL;
 8006ad4:	bf1c      	itt	ne
 8006ad6:	2300      	movne	r3, #0
 8006ad8:	9305      	strne	r3, [sp, #20]
 8006ada:	e7e9      	b.n	8006ab0 <osThreadNew+0x60>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8006adc:	e9cd 4c01 	strd	r4, ip, [sp, #4]
 8006ae0:	9500      	str	r5, [sp, #0]
 8006ae2:	f001 fb09 	bl	80080f8 <xTaskCreateStatic>
 8006ae6:	9005      	str	r0, [sp, #20]
 8006ae8:	e7e2      	b.n	8006ab0 <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;
 8006aea:	2718      	movs	r7, #24
    stack = configMINIMAL_STACK_SIZE;
 8006aec:	2280      	movs	r2, #128	; 0x80
    name = NULL;
 8006aee:	4621      	mov	r1, r4
 8006af0:	e7e9      	b.n	8006ac6 <osThreadNew+0x76>
        return (NULL);
 8006af2:	2000      	movs	r0, #0
 8006af4:	e7dd      	b.n	8006ab2 <osThreadNew+0x62>
 8006af6:	bf00      	nop
 8006af8:	200016c4 	.word	0x200016c4

08006afc <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8006afc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006afe:	460e      	mov	r6, r1
 8006b00:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006b02:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006b06:	b11b      	cbz	r3, 8006b10 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8006b08:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8006b0a:	4620      	mov	r0, r4
 8006b0c:	b002      	add	sp, #8
 8006b0e:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006b10:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006b14:	b913      	cbnz	r3, 8006b1c <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006b16:	f3ef 8311 	mrs	r3, BASEPRI
 8006b1a:	b11b      	cbz	r3, 8006b24 <osSemaphoreNew+0x28>
 8006b1c:	4b21      	ldr	r3, [pc, #132]	; (8006ba4 <osSemaphoreNew+0xa8>)
 8006b1e:	681b      	ldr	r3, [r3, #0]
 8006b20:	2b02      	cmp	r3, #2
 8006b22:	d0f1      	beq.n	8006b08 <osSemaphoreNew+0xc>
 8006b24:	2800      	cmp	r0, #0
 8006b26:	d0ef      	beq.n	8006b08 <osSemaphoreNew+0xc>
 8006b28:	42b0      	cmp	r0, r6
 8006b2a:	d3ed      	bcc.n	8006b08 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8006b2c:	b1ed      	cbz	r5, 8006b6a <osSemaphoreNew+0x6e>
 8006b2e:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8006b32:	b1c3      	cbz	r3, 8006b66 <osSemaphoreNew+0x6a>
 8006b34:	2a4f      	cmp	r2, #79	; 0x4f
 8006b36:	d9e7      	bls.n	8006b08 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8006b38:	2801      	cmp	r0, #1
 8006b3a:	d126      	bne.n	8006b8a <osSemaphoreNew+0x8e>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8006b3c:	2203      	movs	r2, #3
 8006b3e:	9200      	str	r2, [sp, #0]
 8006b40:	2200      	movs	r2, #0
 8006b42:	4611      	mov	r1, r2
 8006b44:	f000 fd2e 	bl	80075a4 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8006b48:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8006b4a:	2800      	cmp	r0, #0
 8006b4c:	d0dc      	beq.n	8006b08 <osSemaphoreNew+0xc>
 8006b4e:	b1ce      	cbz	r6, 8006b84 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006b50:	2300      	movs	r3, #0
 8006b52:	461a      	mov	r2, r3
 8006b54:	4619      	mov	r1, r3
 8006b56:	f000 fddb 	bl	8007710 <xQueueGenericSend>
 8006b5a:	2801      	cmp	r0, #1
 8006b5c:	d012      	beq.n	8006b84 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8006b5e:	4620      	mov	r0, r4
 8006b60:	f001 f928 	bl	8007db4 <vQueueDelete>
 8006b64:	e7d0      	b.n	8006b08 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8006b66:	2a00      	cmp	r2, #0
 8006b68:	d1ce      	bne.n	8006b08 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8006b6a:	2801      	cmp	r0, #1
 8006b6c:	d104      	bne.n	8006b78 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8006b6e:	2203      	movs	r2, #3
 8006b70:	2100      	movs	r1, #0
 8006b72:	f000 fd65 	bl	8007640 <xQueueGenericCreate>
 8006b76:	e7e7      	b.n	8006b48 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8006b78:	4631      	mov	r1, r6
 8006b7a:	f000 fdaa 	bl	80076d2 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8006b7e:	4604      	mov	r4, r0
 8006b80:	2800      	cmp	r0, #0
 8006b82:	d0c1      	beq.n	8006b08 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8006b84:	b945      	cbnz	r5, 8006b98 <osSemaphoreNew+0x9c>
          name = NULL;
 8006b86:	4629      	mov	r1, r5
 8006b88:	e007      	b.n	8006b9a <osSemaphoreNew+0x9e>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8006b8a:	461a      	mov	r2, r3
 8006b8c:	4631      	mov	r1, r6
 8006b8e:	f000 fd7e 	bl	800768e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8006b92:	4604      	mov	r4, r0
 8006b94:	2800      	cmp	r0, #0
 8006b96:	d0b7      	beq.n	8006b08 <osSemaphoreNew+0xc>
          name = attr->name;
 8006b98:	6829      	ldr	r1, [r5, #0]
        vQueueAddToRegistry (hSemaphore, name);
 8006b9a:	4620      	mov	r0, r4
 8006b9c:	f001 f8e4 	bl	8007d68 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8006ba0:	e7b3      	b.n	8006b0a <osSemaphoreNew+0xe>
 8006ba2:	bf00      	nop
 8006ba4:	200016c4 	.word	0x200016c4

08006ba8 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8006ba8:	b513      	push	{r0, r1, r4, lr}
 8006baa:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006bac:	b918      	cbnz	r0, 8006bb6 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8006bae:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8006bb2:	b002      	add	sp, #8
 8006bb4:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006bb6:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8006bba:	b16b      	cbz	r3, 8006bd8 <osSemaphoreAcquire+0x30>
    if (timeout != 0U) {
 8006bbc:	2c00      	cmp	r4, #0
 8006bbe:	d1f6      	bne.n	8006bae <osSemaphoreAcquire+0x6>
      yield = pdFALSE;
 8006bc0:	aa02      	add	r2, sp, #8
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006bc2:	4621      	mov	r1, r4
      yield = pdFALSE;
 8006bc4:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006bc8:	f001 f86c 	bl	8007ca4 <xQueueReceiveFromISR>
 8006bcc:	2801      	cmp	r0, #1
 8006bce:	d113      	bne.n	8006bf8 <osSemaphoreAcquire+0x50>
        portYIELD_FROM_ISR (yield);
 8006bd0:	9b01      	ldr	r3, [sp, #4]
 8006bd2:	b9a3      	cbnz	r3, 8006bfe <osSemaphoreAcquire+0x56>
  stat = osOK;
 8006bd4:	2000      	movs	r0, #0
 8006bd6:	e7ec      	b.n	8006bb2 <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006bd8:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8006bdc:	b913      	cbnz	r3, 8006be4 <osSemaphoreAcquire+0x3c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006bde:	f3ef 8311 	mrs	r3, BASEPRI
 8006be2:	b11b      	cbz	r3, 8006bec <osSemaphoreAcquire+0x44>
 8006be4:	4b0c      	ldr	r3, [pc, #48]	; (8006c18 <osSemaphoreAcquire+0x70>)
 8006be6:	681b      	ldr	r3, [r3, #0]
 8006be8:	2b02      	cmp	r3, #2
 8006bea:	d0e7      	beq.n	8006bbc <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8006bec:	4621      	mov	r1, r4
 8006bee:	f000 ff97 	bl	8007b20 <xQueueSemaphoreTake>
 8006bf2:	2801      	cmp	r0, #1
 8006bf4:	d0ee      	beq.n	8006bd4 <osSemaphoreAcquire+0x2c>
      if (timeout != 0U) {
 8006bf6:	b95c      	cbnz	r4, 8006c10 <osSemaphoreAcquire+0x68>
        stat = osErrorResource;
 8006bf8:	f06f 0002 	mvn.w	r0, #2
 8006bfc:	e7d9      	b.n	8006bb2 <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8006bfe:	4b07      	ldr	r3, [pc, #28]	; (8006c1c <osSemaphoreAcquire+0x74>)
 8006c00:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006c04:	601a      	str	r2, [r3, #0]
 8006c06:	f3bf 8f4f 	dsb	sy
 8006c0a:	f3bf 8f6f 	isb	sy
 8006c0e:	e7e1      	b.n	8006bd4 <osSemaphoreAcquire+0x2c>
        stat = osErrorTimeout;
 8006c10:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006c14:	e7cd      	b.n	8006bb2 <osSemaphoreAcquire+0xa>
 8006c16:	bf00      	nop
 8006c18:	200016c4 	.word	0x200016c4
 8006c1c:	e000ed04 	.word	0xe000ed04

08006c20 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8006c20:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006c22:	b368      	cbz	r0, 8006c80 <osSemaphoreRelease+0x60>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006c24:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006c28:	b153      	cbz	r3, 8006c40 <osSemaphoreRelease+0x20>
    yield = pdFALSE;
 8006c2a:	a902      	add	r1, sp, #8
 8006c2c:	2400      	movs	r4, #0
 8006c2e:	f841 4d04 	str.w	r4, [r1, #-4]!

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006c32:	f000 fe80 	bl	8007936 <xQueueGiveFromISR>
 8006c36:	2801      	cmp	r0, #1
 8006c38:	d014      	beq.n	8006c64 <osSemaphoreRelease+0x44>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8006c3a:	f06f 0002 	mvn.w	r0, #2
 8006c3e:	e014      	b.n	8006c6a <osSemaphoreRelease+0x4a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006c40:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8006c44:	b913      	cbnz	r3, 8006c4c <osSemaphoreRelease+0x2c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006c46:	f3ef 8311 	mrs	r3, BASEPRI
 8006c4a:	b11b      	cbz	r3, 8006c54 <osSemaphoreRelease+0x34>
 8006c4c:	4b0e      	ldr	r3, [pc, #56]	; (8006c88 <osSemaphoreRelease+0x68>)
 8006c4e:	681b      	ldr	r3, [r3, #0]
 8006c50:	2b02      	cmp	r3, #2
 8006c52:	d0ea      	beq.n	8006c2a <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006c54:	2300      	movs	r3, #0
 8006c56:	461a      	mov	r2, r3
 8006c58:	4619      	mov	r1, r3
 8006c5a:	f000 fd59 	bl	8007710 <xQueueGenericSend>
 8006c5e:	2801      	cmp	r0, #1
 8006c60:	d002      	beq.n	8006c68 <osSemaphoreRelease+0x48>
 8006c62:	e7ea      	b.n	8006c3a <osSemaphoreRelease+0x1a>
      portYIELD_FROM_ISR (yield);
 8006c64:	9b01      	ldr	r3, [sp, #4]
 8006c66:	b913      	cbnz	r3, 8006c6e <osSemaphoreRelease+0x4e>
  stat = osOK;
 8006c68:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8006c6a:	b002      	add	sp, #8
 8006c6c:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8006c6e:	4b07      	ldr	r3, [pc, #28]	; (8006c8c <osSemaphoreRelease+0x6c>)
 8006c70:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006c74:	601a      	str	r2, [r3, #0]
 8006c76:	f3bf 8f4f 	dsb	sy
 8006c7a:	f3bf 8f6f 	isb	sy
 8006c7e:	e7f3      	b.n	8006c68 <osSemaphoreRelease+0x48>
    stat = osErrorParameter;
 8006c80:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006c84:	e7f1      	b.n	8006c6a <osSemaphoreRelease+0x4a>
 8006c86:	bf00      	nop
 8006c88:	200016c4 	.word	0x200016c4
 8006c8c:	e000ed04 	.word	0xe000ed04

08006c90 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8006c90:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006c92:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006c94:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006c98:	b11b      	cbz	r3, 8006ca2 <osMessageQueueNew+0x12>
  hQueue = NULL;
 8006c9a:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8006c9c:	4628      	mov	r0, r5
 8006c9e:	b002      	add	sp, #8
 8006ca0:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006ca2:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006ca6:	b913      	cbnz	r3, 8006cae <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006ca8:	f3ef 8311 	mrs	r3, BASEPRI
 8006cac:	b11b      	cbz	r3, 8006cb6 <osMessageQueueNew+0x26>
 8006cae:	4b1a      	ldr	r3, [pc, #104]	; (8006d18 <osMessageQueueNew+0x88>)
 8006cb0:	681b      	ldr	r3, [r3, #0]
 8006cb2:	2b02      	cmp	r3, #2
 8006cb4:	d0f1      	beq.n	8006c9a <osMessageQueueNew+0xa>
 8006cb6:	2800      	cmp	r0, #0
 8006cb8:	d0ef      	beq.n	8006c9a <osMessageQueueNew+0xa>
 8006cba:	2900      	cmp	r1, #0
 8006cbc:	d0ed      	beq.n	8006c9a <osMessageQueueNew+0xa>
    if (attr != NULL) {
 8006cbe:	b304      	cbz	r4, 8006d02 <osMessageQueueNew+0x72>
 8006cc0:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006cc4:	b1ab      	cbz	r3, 8006cf2 <osMessageQueueNew+0x62>
 8006cc6:	2a4f      	cmp	r2, #79	; 0x4f
 8006cc8:	d9e7      	bls.n	8006c9a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006cca:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006ccc:	2a00      	cmp	r2, #0
 8006cce:	d0e4      	beq.n	8006c9a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006cd0:	6966      	ldr	r6, [r4, #20]
 8006cd2:	fb01 f500 	mul.w	r5, r1, r0
 8006cd6:	42ae      	cmp	r6, r5
 8006cd8:	d3df      	bcc.n	8006c9a <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8006cda:	2500      	movs	r5, #0
 8006cdc:	9500      	str	r5, [sp, #0]
 8006cde:	f000 fc61 	bl	80075a4 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8006ce2:	4605      	mov	r5, r0
 8006ce4:	2800      	cmp	r0, #0
 8006ce6:	d0d8      	beq.n	8006c9a <osMessageQueueNew+0xa>
        name = attr->name;
 8006ce8:	6821      	ldr	r1, [r4, #0]
      vQueueAddToRegistry (hQueue, name);
 8006cea:	4628      	mov	r0, r5
 8006cec:	f001 f83c 	bl	8007d68 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8006cf0:	e7d4      	b.n	8006c9c <osMessageQueueNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8006cf2:	2a00      	cmp	r2, #0
 8006cf4:	d1d1      	bne.n	8006c9a <osMessageQueueNew+0xa>
 8006cf6:	6923      	ldr	r3, [r4, #16]
 8006cf8:	2b00      	cmp	r3, #0
 8006cfa:	d1ce      	bne.n	8006c9a <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8006cfc:	6963      	ldr	r3, [r4, #20]
 8006cfe:	2b00      	cmp	r3, #0
 8006d00:	d1cb      	bne.n	8006c9a <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8006d02:	2200      	movs	r2, #0
 8006d04:	f000 fc9c 	bl	8007640 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8006d08:	4605      	mov	r5, r0
 8006d0a:	2800      	cmp	r0, #0
 8006d0c:	d0c5      	beq.n	8006c9a <osMessageQueueNew+0xa>
      if (attr != NULL) {
 8006d0e:	2c00      	cmp	r4, #0
 8006d10:	d1ea      	bne.n	8006ce8 <osMessageQueueNew+0x58>
        name = NULL;
 8006d12:	4621      	mov	r1, r4
 8006d14:	e7e9      	b.n	8006cea <osMessageQueueNew+0x5a>
 8006d16:	bf00      	nop
 8006d18:	200016c4 	.word	0x200016c4

08006d1c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8006d1c:	b513      	push	{r0, r1, r4, lr}
 8006d1e:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006d20:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006d24:	b123      	cbz	r3, 8006d30 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006d26:	b9d8      	cbnz	r0, 8006d60 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 8006d28:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8006d2c:	b002      	add	sp, #8
 8006d2e:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006d30:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8006d34:	b913      	cbnz	r3, 8006d3c <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006d36:	f3ef 8311 	mrs	r3, BASEPRI
 8006d3a:	b11b      	cbz	r3, 8006d44 <osMessageQueuePut+0x28>
 8006d3c:	4b16      	ldr	r3, [pc, #88]	; (8006d98 <osMessageQueuePut+0x7c>)
 8006d3e:	681b      	ldr	r3, [r3, #0]
 8006d40:	2b02      	cmp	r3, #2
 8006d42:	d0f0      	beq.n	8006d26 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006d44:	2800      	cmp	r0, #0
 8006d46:	d0ef      	beq.n	8006d28 <osMessageQueuePut+0xc>
 8006d48:	2900      	cmp	r1, #0
 8006d4a:	d0ed      	beq.n	8006d28 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006d4c:	2300      	movs	r3, #0
 8006d4e:	4622      	mov	r2, r4
 8006d50:	f000 fcde 	bl	8007710 <xQueueGenericSend>
 8006d54:	2801      	cmp	r0, #1
 8006d56:	d011      	beq.n	8006d7c <osMessageQueuePut+0x60>
        if (timeout != 0U) {
 8006d58:	b9dc      	cbnz	r4, 8006d92 <osMessageQueuePut+0x76>
          stat = osErrorResource;
 8006d5a:	f06f 0002 	mvn.w	r0, #2
 8006d5e:	e7e5      	b.n	8006d2c <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006d60:	2900      	cmp	r1, #0
 8006d62:	d0e1      	beq.n	8006d28 <osMessageQueuePut+0xc>
 8006d64:	2c00      	cmp	r4, #0
 8006d66:	d1df      	bne.n	8006d28 <osMessageQueuePut+0xc>
      yield = pdFALSE;
 8006d68:	aa02      	add	r2, sp, #8
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006d6a:	4623      	mov	r3, r4
      yield = pdFALSE;
 8006d6c:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8006d70:	f000 fd80 	bl	8007874 <xQueueGenericSendFromISR>
 8006d74:	2801      	cmp	r0, #1
 8006d76:	d1f0      	bne.n	8006d5a <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8006d78:	9b01      	ldr	r3, [sp, #4]
 8006d7a:	b90b      	cbnz	r3, 8006d80 <osMessageQueuePut+0x64>
  stat = osOK;
 8006d7c:	2000      	movs	r0, #0
 8006d7e:	e7d5      	b.n	8006d2c <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8006d80:	4b06      	ldr	r3, [pc, #24]	; (8006d9c <osMessageQueuePut+0x80>)
 8006d82:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006d86:	601a      	str	r2, [r3, #0]
 8006d88:	f3bf 8f4f 	dsb	sy
 8006d8c:	f3bf 8f6f 	isb	sy
 8006d90:	e7f4      	b.n	8006d7c <osMessageQueuePut+0x60>
          stat = osErrorTimeout;
 8006d92:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006d96:	e7c9      	b.n	8006d2c <osMessageQueuePut+0x10>
 8006d98:	200016c4 	.word	0x200016c4
 8006d9c:	e000ed04 	.word	0xe000ed04

08006da0 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8006da0:	b513      	push	{r0, r1, r4, lr}
 8006da2:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006da4:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006da8:	b123      	cbz	r3, 8006db4 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006daa:	b9d0      	cbnz	r0, 8006de2 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8006dac:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8006db0:	b002      	add	sp, #8
 8006db2:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8006db4:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8006db8:	b913      	cbnz	r3, 8006dc0 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8006dba:	f3ef 8311 	mrs	r3, BASEPRI
 8006dbe:	b11b      	cbz	r3, 8006dc8 <osMessageQueueGet+0x28>
 8006dc0:	4b15      	ldr	r3, [pc, #84]	; (8006e18 <osMessageQueueGet+0x78>)
 8006dc2:	681b      	ldr	r3, [r3, #0]
 8006dc4:	2b02      	cmp	r3, #2
 8006dc6:	d0f0      	beq.n	8006daa <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006dc8:	2800      	cmp	r0, #0
 8006dca:	d0ef      	beq.n	8006dac <osMessageQueueGet+0xc>
 8006dcc:	2900      	cmp	r1, #0
 8006dce:	d0ed      	beq.n	8006dac <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8006dd0:	4622      	mov	r2, r4
 8006dd2:	f000 fe05 	bl	80079e0 <xQueueReceive>
 8006dd6:	2801      	cmp	r0, #1
 8006dd8:	d010      	beq.n	8006dfc <osMessageQueueGet+0x5c>
        if (timeout != 0U) {
 8006dda:	b9d4      	cbnz	r4, 8006e12 <osMessageQueueGet+0x72>
          stat = osErrorResource;
 8006ddc:	f06f 0002 	mvn.w	r0, #2
 8006de0:	e7e6      	b.n	8006db0 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8006de2:	2900      	cmp	r1, #0
 8006de4:	d0e2      	beq.n	8006dac <osMessageQueueGet+0xc>
 8006de6:	2c00      	cmp	r4, #0
 8006de8:	d1e0      	bne.n	8006dac <osMessageQueueGet+0xc>
      yield = pdFALSE;
 8006dea:	aa02      	add	r2, sp, #8
 8006dec:	f842 4d04 	str.w	r4, [r2, #-4]!
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8006df0:	f000 ff58 	bl	8007ca4 <xQueueReceiveFromISR>
 8006df4:	2801      	cmp	r0, #1
 8006df6:	d1f1      	bne.n	8006ddc <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 8006df8:	9b01      	ldr	r3, [sp, #4]
 8006dfa:	b90b      	cbnz	r3, 8006e00 <osMessageQueueGet+0x60>
  stat = osOK;
 8006dfc:	2000      	movs	r0, #0
 8006dfe:	e7d7      	b.n	8006db0 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8006e00:	4b06      	ldr	r3, [pc, #24]	; (8006e1c <osMessageQueueGet+0x7c>)
 8006e02:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006e06:	601a      	str	r2, [r3, #0]
 8006e08:	f3bf 8f4f 	dsb	sy
 8006e0c:	f3bf 8f6f 	isb	sy
 8006e10:	e7f4      	b.n	8006dfc <osMessageQueueGet+0x5c>
          stat = osErrorTimeout;
 8006e12:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006e16:	e7cb      	b.n	8006db0 <osMessageQueueGet+0x10>
 8006e18:	200016c4 	.word	0x200016c4
 8006e1c:	e000ed04 	.word	0xe000ed04

08006e20 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8006e20:	4b03      	ldr	r3, [pc, #12]	; (8006e30 <vApplicationGetIdleTaskMemory+0x10>)
 8006e22:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8006e24:	4b03      	ldr	r3, [pc, #12]	; (8006e34 <vApplicationGetIdleTaskMemory+0x14>)
 8006e26:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8006e28:	2380      	movs	r3, #128	; 0x80
 8006e2a:	6013      	str	r3, [r2, #0]
}
 8006e2c:	4770      	bx	lr
 8006e2e:	bf00      	nop
 8006e30:	20001664 	.word	0x20001664
 8006e34:	20001464 	.word	0x20001464

08006e38 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8006e38:	4b03      	ldr	r3, [pc, #12]	; (8006e48 <vApplicationGetTimerTaskMemory+0x10>)
 8006e3a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8006e3c:	4b03      	ldr	r3, [pc, #12]	; (8006e4c <vApplicationGetTimerTaskMemory+0x14>)
 8006e3e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8006e40:	f44f 7380 	mov.w	r3, #256	; 0x100
 8006e44:	6013      	str	r3, [r2, #0]
}
 8006e46:	4770      	bx	lr
 8006e48:	20001ac8 	.word	0x20001ac8
 8006e4c:	200016c8 	.word	0x200016c8

08006e50 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8006e50:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8006e52:	4b0f      	ldr	r3, [pc, #60]	; (8006e90 <prvInsertBlockIntoFreeList+0x40>)
 8006e54:	681a      	ldr	r2, [r3, #0]
 8006e56:	4282      	cmp	r2, r0
 8006e58:	d318      	bcc.n	8006e8c <prvInsertBlockIntoFreeList+0x3c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8006e5a:	685c      	ldr	r4, [r3, #4]
 8006e5c:	1919      	adds	r1, r3, r4
 8006e5e:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8006e60:	bf01      	itttt	eq
 8006e62:	6841      	ldreq	r1, [r0, #4]
 8006e64:	4618      	moveq	r0, r3
 8006e66:	1909      	addeq	r1, r1, r4
 8006e68:	6059      	streq	r1, [r3, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8006e6a:	6844      	ldr	r4, [r0, #4]
 8006e6c:	1901      	adds	r1, r0, r4
 8006e6e:	428a      	cmp	r2, r1
 8006e70:	d107      	bne.n	8006e82 <prvInsertBlockIntoFreeList+0x32>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8006e72:	4908      	ldr	r1, [pc, #32]	; (8006e94 <prvInsertBlockIntoFreeList+0x44>)
 8006e74:	6809      	ldr	r1, [r1, #0]
 8006e76:	428a      	cmp	r2, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006e78:	bf1f      	itttt	ne
 8006e7a:	6851      	ldrne	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8006e7c:	6812      	ldrne	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006e7e:	1909      	addne	r1, r1, r4
 8006e80:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8006e82:	4298      	cmp	r0, r3
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8006e84:	6002      	str	r2, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8006e86:	bf18      	it	ne
 8006e88:	6018      	strne	r0, [r3, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8006e8a:	bd10      	pop	{r4, pc}
 8006e8c:	4613      	mov	r3, r2
 8006e8e:	e7e1      	b.n	8006e54 <prvInsertBlockIntoFreeList+0x4>
 8006e90:	20011b38 	.word	0x20011b38
 8006e94:	20001b28 	.word	0x20001b28

08006e98 <pvPortMalloc>:
{
 8006e98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006e9c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8006e9e:	f001 f9d5 	bl	800824c <vTaskSuspendAll>
		if( pxEnd == NULL )
 8006ea2:	493d      	ldr	r1, [pc, #244]	; (8006f98 <pvPortMalloc+0x100>)
 8006ea4:	4d3d      	ldr	r5, [pc, #244]	; (8006f9c <pvPortMalloc+0x104>)
 8006ea6:	680b      	ldr	r3, [r1, #0]
 8006ea8:	b9fb      	cbnz	r3, 8006eea <pvPortMalloc+0x52>
	uxAddress = ( size_t ) ucHeap;
 8006eaa:	4a3d      	ldr	r2, [pc, #244]	; (8006fa0 <pvPortMalloc+0x108>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8006eac:	0756      	lsls	r6, r2, #29
 8006eae:	f502 3380 	add.w	r3, r2, #65536	; 0x10000
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8006eb2:	bf1d      	ittte	ne
 8006eb4:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006eb6:	f022 0207 	bicne.w	r2, r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8006eba:	1a9b      	subne	r3, r3, r2
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8006ebc:	f44f 3380 	moveq.w	r3, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8006ec0:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006ec2:	4e38      	ldr	r6, [pc, #224]	; (8006fa4 <pvPortMalloc+0x10c>)
	uxAddress -= xHeapStructSize;
 8006ec4:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006ec6:	f023 0307 	bic.w	r3, r3, #7
	xStart.xBlockSize = ( size_t ) 0;
 8006eca:	2000      	movs	r0, #0
 8006ecc:	6070      	str	r0, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006ece:	6032      	str	r2, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8006ed0:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8006ed4:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 8006ed6:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8006ed8:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006edc:	4b32      	ldr	r3, [pc, #200]	; (8006fa8 <pvPortMalloc+0x110>)
 8006ede:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006ee0:	4b32      	ldr	r3, [pc, #200]	; (8006fac <pvPortMalloc+0x114>)
 8006ee2:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8006ee4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8006ee8:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8006eea:	682f      	ldr	r7, [r5, #0]
 8006eec:	4227      	tst	r7, r4
 8006eee:	d14e      	bne.n	8006f8e <pvPortMalloc+0xf6>
			if( xWantedSize > 0 )
 8006ef0:	2c00      	cmp	r4, #0
 8006ef2:	d03f      	beq.n	8006f74 <pvPortMalloc+0xdc>
				xWantedSize += xHeapStructSize;
 8006ef4:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8006ef8:	0758      	lsls	r0, r3, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8006efa:	bf1c      	itt	ne
 8006efc:	f023 0307 	bicne.w	r3, r3, #7
 8006f00:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8006f02:	2b00      	cmp	r3, #0
 8006f04:	d043      	beq.n	8006f8e <pvPortMalloc+0xf6>
 8006f06:	4a29      	ldr	r2, [pc, #164]	; (8006fac <pvPortMalloc+0x114>)
 8006f08:	6816      	ldr	r6, [r2, #0]
 8006f0a:	429e      	cmp	r6, r3
 8006f0c:	4690      	mov	r8, r2
 8006f0e:	d33e      	bcc.n	8006f8e <pvPortMalloc+0xf6>
				pxBlock = xStart.pxNextFreeBlock;
 8006f10:	4a24      	ldr	r2, [pc, #144]	; (8006fa4 <pvPortMalloc+0x10c>)
 8006f12:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8006f14:	6868      	ldr	r0, [r5, #4]
 8006f16:	4298      	cmp	r0, r3
 8006f18:	d201      	bcs.n	8006f1e <pvPortMalloc+0x86>
 8006f1a:	682c      	ldr	r4, [r5, #0]
 8006f1c:	b9a4      	cbnz	r4, 8006f48 <pvPortMalloc+0xb0>
				if( pxBlock != pxEnd )
 8006f1e:	6809      	ldr	r1, [r1, #0]
 8006f20:	42a9      	cmp	r1, r5
 8006f22:	d034      	beq.n	8006f8e <pvPortMalloc+0xf6>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8006f24:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8006f26:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8006f28:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8006f2a:	1ac2      	subs	r2, r0, r3
 8006f2c:	2a10      	cmp	r2, #16
 8006f2e:	d912      	bls.n	8006f56 <pvPortMalloc+0xbe>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8006f30:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8006f32:	0741      	lsls	r1, r0, #29
 8006f34:	d00b      	beq.n	8006f4e <pvPortMalloc+0xb6>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8006f36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f3a:	f383 8811 	msr	BASEPRI, r3
 8006f3e:	f3bf 8f6f 	isb	sy
 8006f42:	f3bf 8f4f 	dsb	sy
 8006f46:	e7fe      	b.n	8006f46 <pvPortMalloc+0xae>
 8006f48:	462a      	mov	r2, r5
 8006f4a:	4625      	mov	r5, r4
 8006f4c:	e7e2      	b.n	8006f14 <pvPortMalloc+0x7c>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8006f4e:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8006f50:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8006f52:	f7ff ff7d 	bl	8006e50 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006f56:	4914      	ldr	r1, [pc, #80]	; (8006fa8 <pvPortMalloc+0x110>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006f58:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006f5a:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006f5c:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8006f5e:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006f60:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8006f62:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006f66:	f8c8 6000 	str.w	r6, [r8]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8006f6a:	bf38      	it	cc
 8006f6c:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8006f6e:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8006f70:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8006f72:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8006f74:	f001 fa10 	bl	8008398 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8006f78:	0763      	lsls	r3, r4, #29
 8006f7a:	d00a      	beq.n	8006f92 <pvPortMalloc+0xfa>
 8006f7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f80:	f383 8811 	msr	BASEPRI, r3
 8006f84:	f3bf 8f6f 	isb	sy
 8006f88:	f3bf 8f4f 	dsb	sy
 8006f8c:	e7fe      	b.n	8006f8c <pvPortMalloc+0xf4>
void *pvReturn = NULL;
 8006f8e:	2400      	movs	r4, #0
 8006f90:	e7f0      	b.n	8006f74 <pvPortMalloc+0xdc>
}
 8006f92:	4620      	mov	r0, r4
 8006f94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006f98:	20001b28 	.word	0x20001b28
 8006f9c:	20011b2c 	.word	0x20011b2c
 8006fa0:	20001b2c 	.word	0x20001b2c
 8006fa4:	20011b38 	.word	0x20011b38
 8006fa8:	20011b34 	.word	0x20011b34
 8006fac:	20011b30 	.word	0x20011b30

08006fb0 <vPortFree>:
{
 8006fb0:	b510      	push	{r4, lr}
	if( pv != NULL )
 8006fb2:	4604      	mov	r4, r0
 8006fb4:	b370      	cbz	r0, 8007014 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8006fb6:	4a18      	ldr	r2, [pc, #96]	; (8007018 <vPortFree+0x68>)
 8006fb8:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8006fbc:	6812      	ldr	r2, [r2, #0]
 8006fbe:	4213      	tst	r3, r2
 8006fc0:	d108      	bne.n	8006fd4 <vPortFree+0x24>
 8006fc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006fc6:	f383 8811 	msr	BASEPRI, r3
 8006fca:	f3bf 8f6f 	isb	sy
 8006fce:	f3bf 8f4f 	dsb	sy
 8006fd2:	e7fe      	b.n	8006fd2 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8006fd4:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8006fd8:	b141      	cbz	r1, 8006fec <vPortFree+0x3c>
 8006fda:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006fde:	f383 8811 	msr	BASEPRI, r3
 8006fe2:	f3bf 8f6f 	isb	sy
 8006fe6:	f3bf 8f4f 	dsb	sy
 8006fea:	e7fe      	b.n	8006fea <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8006fec:	ea23 0302 	bic.w	r3, r3, r2
 8006ff0:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8006ff4:	f001 f92a 	bl	800824c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8006ff8:	4a08      	ldr	r2, [pc, #32]	; (800701c <vPortFree+0x6c>)
 8006ffa:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8006ffe:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007000:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8007004:	440b      	add	r3, r1
 8007006:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8007008:	f7ff ff22 	bl	8006e50 <prvInsertBlockIntoFreeList>
}
 800700c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8007010:	f001 b9c2 	b.w	8008398 <xTaskResumeAll>
}
 8007014:	bd10      	pop	{r4, pc}
 8007016:	bf00      	nop
 8007018:	20011b2c 	.word	0x20011b2c
 800701c:	20011b30 	.word	0x20011b30

08007020 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007020:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8007024:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8007028:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800702a:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800702e:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007030:	2300      	movs	r3, #0
 8007032:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8007034:	4770      	bx	lr

08007036 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8007036:	2300      	movs	r3, #0
 8007038:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800703a:	4770      	bx	lr

0800703c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800703c:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800703e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007040:	689a      	ldr	r2, [r3, #8]
 8007042:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007044:	689a      	ldr	r2, [r3, #8]
 8007046:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8007048:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800704a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800704c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800704e:	3301      	adds	r3, #1
 8007050:	6003      	str	r3, [r0, #0]
}
 8007052:	4770      	bx	lr

08007054 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8007054:	680a      	ldr	r2, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8007056:	1c53      	adds	r3, r2, #1
{
 8007058:	b530      	push	{r4, r5, lr}
	if( xValueOfInsertion == portMAX_DELAY )
 800705a:	d10a      	bne.n	8007072 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800705c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800705e:	685a      	ldr	r2, [r3, #4]
 8007060:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007062:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007064:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007066:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007068:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800706a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800706c:	3301      	adds	r3, #1
 800706e:	6003      	str	r3, [r0, #0]
}
 8007070:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007072:	f100 0308 	add.w	r3, r0, #8
 8007076:	685c      	ldr	r4, [r3, #4]
 8007078:	6825      	ldr	r5, [r4, #0]
 800707a:	4295      	cmp	r5, r2
 800707c:	d8ef      	bhi.n	800705e <vListInsert+0xa>
 800707e:	4623      	mov	r3, r4
 8007080:	e7f9      	b.n	8007076 <vListInsert+0x22>

08007082 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007082:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007086:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007088:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800708a:	6882      	ldr	r2, [r0, #8]
 800708c:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800708e:	6859      	ldr	r1, [r3, #4]
 8007090:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007092:	bf08      	it	eq
 8007094:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007096:	2200      	movs	r2, #0
 8007098:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800709a:	681a      	ldr	r2, [r3, #0]
 800709c:	3a01      	subs	r2, #1
 800709e:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 80070a0:	6818      	ldr	r0, [r3, #0]
}
 80070a2:	4770      	bx	lr

080070a4 <prvTaskExitError>:
	return pxTopOfStack;
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
 80070a4:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80070a6:	2300      	movs	r3, #0
 80070a8:	9301      	str	r3, [sp, #4]
	its caller as there is nothing to return to.  If a task wants to exit it
	should instead call vTaskDelete( NULL ).

	Artificially force an assert() to be triggered if configASSERT() is
	defined, then stop here so application writers can catch the error. */
	configASSERT( uxCriticalNesting == ~0UL );
 80070aa:	4b0d      	ldr	r3, [pc, #52]	; (80070e0 <prvTaskExitError+0x3c>)
 80070ac:	681b      	ldr	r3, [r3, #0]
 80070ae:	3301      	adds	r3, #1
 80070b0:	d008      	beq.n	80070c4 <prvTaskExitError+0x20>
 80070b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070b6:	f383 8811 	msr	BASEPRI, r3
 80070ba:	f3bf 8f6f 	isb	sy
 80070be:	f3bf 8f4f 	dsb	sy
 80070c2:	e7fe      	b.n	80070c2 <prvTaskExitError+0x1e>
 80070c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070c8:	f383 8811 	msr	BASEPRI, r3
 80070cc:	f3bf 8f6f 	isb	sy
 80070d0:	f3bf 8f4f 	dsb	sy
	portDISABLE_INTERRUPTS();
	while( ulDummy == 0 )
 80070d4:	9b01      	ldr	r3, [sp, #4]
 80070d6:	2b00      	cmp	r3, #0
 80070d8:	d0fc      	beq.n	80070d4 <prvTaskExitError+0x30>
		about code appearing after this function is called - making ulDummy
		volatile makes the compiler think the function could return and
		therefore not output an 'unreachable code' warning for code that appears
		after it. */
	}
}
 80070da:	b002      	add	sp, #8
 80070dc:	4770      	bx	lr
 80070de:	bf00      	nop
 80070e0:	20000080 	.word	0x20000080

080070e4 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 80070e4:	4808      	ldr	r0, [pc, #32]	; (8007108 <prvPortStartFirstTask+0x24>)
 80070e6:	6800      	ldr	r0, [r0, #0]
 80070e8:	6800      	ldr	r0, [r0, #0]
 80070ea:	f380 8808 	msr	MSP, r0
 80070ee:	f04f 0000 	mov.w	r0, #0
 80070f2:	f380 8814 	msr	CONTROL, r0
 80070f6:	b662      	cpsie	i
 80070f8:	b661      	cpsie	f
 80070fa:	f3bf 8f4f 	dsb	sy
 80070fe:	f3bf 8f6f 	isb	sy
 8007102:	df00      	svc	0
 8007104:	bf00      	nop
 8007106:	0000      	.short	0x0000
 8007108:	e000ed08 	.word	0xe000ed08

0800710c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800710c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800711c <vPortEnableVFP+0x10>
 8007110:	6801      	ldr	r1, [r0, #0]
 8007112:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007116:	6001      	str	r1, [r0, #0]
 8007118:	4770      	bx	lr
 800711a:	0000      	.short	0x0000
 800711c:	e000ed88 	.word	0xe000ed88

08007120 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8007120:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8007124:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8007128:	4b07      	ldr	r3, [pc, #28]	; (8007148 <pxPortInitialiseStack+0x28>)
 800712a:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800712e:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007132:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007136:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800713a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800713e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007142:	3844      	subs	r0, #68	; 0x44
 8007144:	4770      	bx	lr
 8007146:	bf00      	nop
 8007148:	080070a5 	.word	0x080070a5
 800714c:	00000000 	.word	0x00000000

08007150 <SVC_Handler>:
	__asm volatile (
 8007150:	4b07      	ldr	r3, [pc, #28]	; (8007170 <pxCurrentTCBConst2>)
 8007152:	6819      	ldr	r1, [r3, #0]
 8007154:	6808      	ldr	r0, [r1, #0]
 8007156:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800715a:	f380 8809 	msr	PSP, r0
 800715e:	f3bf 8f6f 	isb	sy
 8007162:	f04f 0000 	mov.w	r0, #0
 8007166:	f380 8811 	msr	BASEPRI, r0
 800716a:	4770      	bx	lr
 800716c:	f3af 8000 	nop.w

08007170 <pxCurrentTCBConst2>:
 8007170:	20011b48 	.word	0x20011b48

08007174 <vPortEnterCritical>:
 8007174:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007178:	f383 8811 	msr	BASEPRI, r3
 800717c:	f3bf 8f6f 	isb	sy
 8007180:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007184:	4a0a      	ldr	r2, [pc, #40]	; (80071b0 <vPortEnterCritical+0x3c>)
 8007186:	6813      	ldr	r3, [r2, #0]
 8007188:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800718a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800718c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800718e:	d10d      	bne.n	80071ac <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007190:	4b08      	ldr	r3, [pc, #32]	; (80071b4 <vPortEnterCritical+0x40>)
 8007192:	681b      	ldr	r3, [r3, #0]
 8007194:	f013 0fff 	tst.w	r3, #255	; 0xff
 8007198:	d008      	beq.n	80071ac <vPortEnterCritical+0x38>
 800719a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800719e:	f383 8811 	msr	BASEPRI, r3
 80071a2:	f3bf 8f6f 	isb	sy
 80071a6:	f3bf 8f4f 	dsb	sy
 80071aa:	e7fe      	b.n	80071aa <vPortEnterCritical+0x36>
}
 80071ac:	4770      	bx	lr
 80071ae:	bf00      	nop
 80071b0:	20000080 	.word	0x20000080
 80071b4:	e000ed04 	.word	0xe000ed04

080071b8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 80071b8:	4a08      	ldr	r2, [pc, #32]	; (80071dc <vPortExitCritical+0x24>)
 80071ba:	6813      	ldr	r3, [r2, #0]
 80071bc:	b943      	cbnz	r3, 80071d0 <vPortExitCritical+0x18>
 80071be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071c2:	f383 8811 	msr	BASEPRI, r3
 80071c6:	f3bf 8f6f 	isb	sy
 80071ca:	f3bf 8f4f 	dsb	sy
 80071ce:	e7fe      	b.n	80071ce <vPortExitCritical+0x16>
	uxCriticalNesting--;
 80071d0:	3b01      	subs	r3, #1
 80071d2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 80071d4:	b90b      	cbnz	r3, 80071da <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 80071d6:	f383 8811 	msr	BASEPRI, r3
}
 80071da:	4770      	bx	lr
 80071dc:	20000080 	.word	0x20000080

080071e0 <PendSV_Handler>:
	__asm volatile
 80071e0:	f3ef 8009 	mrs	r0, PSP
 80071e4:	f3bf 8f6f 	isb	sy
 80071e8:	4b15      	ldr	r3, [pc, #84]	; (8007240 <pxCurrentTCBConst>)
 80071ea:	681a      	ldr	r2, [r3, #0]
 80071ec:	f01e 0f10 	tst.w	lr, #16
 80071f0:	bf08      	it	eq
 80071f2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80071f6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80071fa:	6010      	str	r0, [r2, #0]
 80071fc:	e92d 0009 	stmdb	sp!, {r0, r3}
 8007200:	f04f 0050 	mov.w	r0, #80	; 0x50
 8007204:	f380 8811 	msr	BASEPRI, r0
 8007208:	f3bf 8f4f 	dsb	sy
 800720c:	f3bf 8f6f 	isb	sy
 8007210:	f001 f936 	bl	8008480 <vTaskSwitchContext>
 8007214:	f04f 0000 	mov.w	r0, #0
 8007218:	f380 8811 	msr	BASEPRI, r0
 800721c:	bc09      	pop	{r0, r3}
 800721e:	6819      	ldr	r1, [r3, #0]
 8007220:	6808      	ldr	r0, [r1, #0]
 8007222:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007226:	f01e 0f10 	tst.w	lr, #16
 800722a:	bf08      	it	eq
 800722c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007230:	f380 8809 	msr	PSP, r0
 8007234:	f3bf 8f6f 	isb	sy
 8007238:	4770      	bx	lr
 800723a:	bf00      	nop
 800723c:	f3af 8000 	nop.w

08007240 <pxCurrentTCBConst>:
 8007240:	20011b48 	.word	0x20011b48

08007244 <SysTick_Handler>:
{
 8007244:	b508      	push	{r3, lr}
	__asm volatile
 8007246:	f04f 0350 	mov.w	r3, #80	; 0x50
 800724a:	f383 8811 	msr	BASEPRI, r3
 800724e:	f3bf 8f6f 	isb	sy
 8007252:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007256:	f001 f80f 	bl	8008278 <xTaskIncrementTick>
 800725a:	b118      	cbz	r0, 8007264 <SysTick_Handler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800725c:	4b03      	ldr	r3, [pc, #12]	; (800726c <SysTick_Handler+0x28>)
 800725e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007262:	601a      	str	r2, [r3, #0]
	__asm volatile
 8007264:	2300      	movs	r3, #0
 8007266:	f383 8811 	msr	BASEPRI, r3
}
 800726a:	bd08      	pop	{r3, pc}
 800726c:	e000ed04 	.word	0xe000ed04

08007270 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007270:	4a08      	ldr	r2, [pc, #32]	; (8007294 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007272:	4909      	ldr	r1, [pc, #36]	; (8007298 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007274:	2300      	movs	r3, #0
 8007276:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007278:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800727a:	4b08      	ldr	r3, [pc, #32]	; (800729c <vPortSetupTimerInterrupt+0x2c>)
 800727c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007280:	681b      	ldr	r3, [r3, #0]
 8007282:	fbb3 f3f1 	udiv	r3, r3, r1
 8007286:	4906      	ldr	r1, [pc, #24]	; (80072a0 <vPortSetupTimerInterrupt+0x30>)
 8007288:	3b01      	subs	r3, #1
 800728a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800728c:	2307      	movs	r3, #7
 800728e:	6013      	str	r3, [r2, #0]
}
 8007290:	4770      	bx	lr
 8007292:	bf00      	nop
 8007294:	e000e010 	.word	0xe000e010
 8007298:	e000e018 	.word	0xe000e018
 800729c:	20000074 	.word	0x20000074
 80072a0:	e000e014 	.word	0xe000e014

080072a4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80072a4:	4b39      	ldr	r3, [pc, #228]	; (800738c <xPortStartScheduler+0xe8>)
 80072a6:	4a3a      	ldr	r2, [pc, #232]	; (8007390 <xPortStartScheduler+0xec>)
{
 80072a8:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 80072aa:	6819      	ldr	r1, [r3, #0]
 80072ac:	4291      	cmp	r1, r2
 80072ae:	d108      	bne.n	80072c2 <xPortStartScheduler+0x1e>
	__asm volatile
 80072b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072b4:	f383 8811 	msr	BASEPRI, r3
 80072b8:	f3bf 8f6f 	isb	sy
 80072bc:	f3bf 8f4f 	dsb	sy
 80072c0:	e7fe      	b.n	80072c0 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 80072c2:	681a      	ldr	r2, [r3, #0]
 80072c4:	4b33      	ldr	r3, [pc, #204]	; (8007394 <xPortStartScheduler+0xf0>)
 80072c6:	429a      	cmp	r2, r3
 80072c8:	d108      	bne.n	80072dc <xPortStartScheduler+0x38>
 80072ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072ce:	f383 8811 	msr	BASEPRI, r3
 80072d2:	f3bf 8f6f 	isb	sy
 80072d6:	f3bf 8f4f 	dsb	sy
 80072da:	e7fe      	b.n	80072da <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80072dc:	4b2e      	ldr	r3, [pc, #184]	; (8007398 <xPortStartScheduler+0xf4>)
 80072de:	781a      	ldrb	r2, [r3, #0]
 80072e0:	b2d2      	uxtb	r2, r2
 80072e2:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80072e4:	22ff      	movs	r2, #255	; 0xff
 80072e6:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80072e8:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80072ea:	4a2c      	ldr	r2, [pc, #176]	; (800739c <xPortStartScheduler+0xf8>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80072ec:	b2db      	uxtb	r3, r3
 80072ee:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80072f2:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80072f6:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80072fa:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80072fc:	4b28      	ldr	r3, [pc, #160]	; (80073a0 <xPortStartScheduler+0xfc>)
 80072fe:	2207      	movs	r2, #7
 8007300:	601a      	str	r2, [r3, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8007302:	2100      	movs	r1, #0
 8007304:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8007308:	0600      	lsls	r0, r0, #24
 800730a:	f102 34ff 	add.w	r4, r2, #4294967295	; 0xffffffff
 800730e:	d40d      	bmi.n	800732c <xPortStartScheduler+0x88>
 8007310:	b101      	cbz	r1, 8007314 <xPortStartScheduler+0x70>
 8007312:	601a      	str	r2, [r3, #0]
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8007314:	681a      	ldr	r2, [r3, #0]
 8007316:	2a03      	cmp	r2, #3
 8007318:	d011      	beq.n	800733e <xPortStartScheduler+0x9a>
 800731a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800731e:	f383 8811 	msr	BASEPRI, r3
 8007322:	f3bf 8f6f 	isb	sy
 8007326:	f3bf 8f4f 	dsb	sy
 800732a:	e7fe      	b.n	800732a <xPortStartScheduler+0x86>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800732c:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8007330:	0052      	lsls	r2, r2, #1
 8007332:	b2d2      	uxtb	r2, r2
 8007334:	f88d 2003 	strb.w	r2, [sp, #3]
 8007338:	2101      	movs	r1, #1
 800733a:	4622      	mov	r2, r4
 800733c:	e7e2      	b.n	8007304 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 800733e:	0212      	lsls	r2, r2, #8
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007340:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8007344:	601a      	str	r2, [r3, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007346:	9b01      	ldr	r3, [sp, #4]
 8007348:	4a13      	ldr	r2, [pc, #76]	; (8007398 <xPortStartScheduler+0xf4>)
 800734a:	b2db      	uxtb	r3, r3
 800734c:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800734e:	4b15      	ldr	r3, [pc, #84]	; (80073a4 <xPortStartScheduler+0x100>)
 8007350:	681a      	ldr	r2, [r3, #0]
 8007352:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8007356:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007358:	681a      	ldr	r2, [r3, #0]
 800735a:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 800735e:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 8007360:	f7ff ff86 	bl	8007270 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007364:	4b10      	ldr	r3, [pc, #64]	; (80073a8 <xPortStartScheduler+0x104>)
 8007366:	2400      	movs	r4, #0
 8007368:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 800736a:	f7ff fecf 	bl	800710c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800736e:	4a0f      	ldr	r2, [pc, #60]	; (80073ac <xPortStartScheduler+0x108>)
 8007370:	6813      	ldr	r3, [r2, #0]
 8007372:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007376:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 8007378:	f7ff feb4 	bl	80070e4 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800737c:	f001 f880 	bl	8008480 <vTaskSwitchContext>
	prvTaskExitError();
 8007380:	f7ff fe90 	bl	80070a4 <prvTaskExitError>
}
 8007384:	4620      	mov	r0, r4
 8007386:	b002      	add	sp, #8
 8007388:	bd10      	pop	{r4, pc}
 800738a:	bf00      	nop
 800738c:	e000ed00 	.word	0xe000ed00
 8007390:	410fc271 	.word	0x410fc271
 8007394:	410fc270 	.word	0x410fc270
 8007398:	e000e400 	.word	0xe000e400
 800739c:	20011b40 	.word	0x20011b40
 80073a0:	20011b44 	.word	0x20011b44
 80073a4:	e000ed20 	.word	0xe000ed20
 80073a8:	20000080 	.word	0x20000080
 80073ac:	e000ef34 	.word	0xe000ef34

080073b0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 80073b0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 80073b4:	2b0f      	cmp	r3, #15
 80073b6:	d90e      	bls.n	80073d6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 80073b8:	4a10      	ldr	r2, [pc, #64]	; (80073fc <vPortValidateInterruptPriority+0x4c>)
 80073ba:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 80073bc:	4a10      	ldr	r2, [pc, #64]	; (8007400 <vPortValidateInterruptPriority+0x50>)
 80073be:	7812      	ldrb	r2, [r2, #0]
 80073c0:	429a      	cmp	r2, r3
 80073c2:	d908      	bls.n	80073d6 <vPortValidateInterruptPriority+0x26>
 80073c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073c8:	f383 8811 	msr	BASEPRI, r3
 80073cc:	f3bf 8f6f 	isb	sy
 80073d0:	f3bf 8f4f 	dsb	sy
 80073d4:	e7fe      	b.n	80073d4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 80073d6:	4b0b      	ldr	r3, [pc, #44]	; (8007404 <vPortValidateInterruptPriority+0x54>)
 80073d8:	4a0b      	ldr	r2, [pc, #44]	; (8007408 <vPortValidateInterruptPriority+0x58>)
 80073da:	681b      	ldr	r3, [r3, #0]
 80073dc:	6812      	ldr	r2, [r2, #0]
 80073de:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80073e2:	4293      	cmp	r3, r2
 80073e4:	d908      	bls.n	80073f8 <vPortValidateInterruptPriority+0x48>
 80073e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073ea:	f383 8811 	msr	BASEPRI, r3
 80073ee:	f3bf 8f6f 	isb	sy
 80073f2:	f3bf 8f4f 	dsb	sy
 80073f6:	e7fe      	b.n	80073f6 <vPortValidateInterruptPriority+0x46>
	}
 80073f8:	4770      	bx	lr
 80073fa:	bf00      	nop
 80073fc:	e000e3f0 	.word	0xe000e3f0
 8007400:	20011b40 	.word	0x20011b40
 8007404:	e000ed0c 	.word	0xe000ed0c
 8007408:	20011b44 	.word	0x20011b44

0800740c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800740c:	b510      	push	{r4, lr}
 800740e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007410:	f7ff feb0 	bl	8007174 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8007414:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007416:	f7ff fecf 	bl	80071b8 <vPortExitCritical>

	return xReturn;
}
 800741a:	fab4 f084 	clz	r0, r4
 800741e:	0940      	lsrs	r0, r0, #5
 8007420:	bd10      	pop	{r4, pc}

08007422 <prvCopyDataToQueue>:
{
 8007422:	b570      	push	{r4, r5, r6, lr}
 8007424:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8007426:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007428:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800742a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800742c:	b942      	cbnz	r2, 8007440 <prvCopyDataToQueue+0x1e>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800742e:	6805      	ldr	r5, [r0, #0]
 8007430:	b99d      	cbnz	r5, 800745a <prvCopyDataToQueue+0x38>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007432:	6880      	ldr	r0, [r0, #8]
 8007434:	f001 f976 	bl	8008724 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8007438:	60a5      	str	r5, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800743a:	3601      	adds	r6, #1
 800743c:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800743e:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007440:	b96d      	cbnz	r5, 800745e <prvCopyDataToQueue+0x3c>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007442:	6840      	ldr	r0, [r0, #4]
 8007444:	f012 fbaa 	bl	8019b9c <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007448:	6863      	ldr	r3, [r4, #4]
 800744a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800744c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800744e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007450:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007452:	4293      	cmp	r3, r2
 8007454:	d301      	bcc.n	800745a <prvCopyDataToQueue+0x38>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8007456:	6823      	ldr	r3, [r4, #0]
 8007458:	6063      	str	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
 800745a:	2000      	movs	r0, #0
 800745c:	e7ed      	b.n	800743a <prvCopyDataToQueue+0x18>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800745e:	68c0      	ldr	r0, [r0, #12]
 8007460:	f012 fb9c 	bl	8019b9c <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007464:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007466:	68e2      	ldr	r2, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007468:	6821      	ldr	r1, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800746a:	425b      	negs	r3, r3
 800746c:	441a      	add	r2, r3
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800746e:	428a      	cmp	r2, r1
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007470:	60e2      	str	r2, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007472:	bf3e      	ittt	cc
 8007474:	68a2      	ldrcc	r2, [r4, #8]
 8007476:	189b      	addcc	r3, r3, r2
 8007478:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800747a:	2d02      	cmp	r5, #2
 800747c:	d1ed      	bne.n	800745a <prvCopyDataToQueue+0x38>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800747e:	b10e      	cbz	r6, 8007484 <prvCopyDataToQueue+0x62>
				--uxMessagesWaiting;
 8007480:	3e01      	subs	r6, #1
 8007482:	e7ea      	b.n	800745a <prvCopyDataToQueue+0x38>
BaseType_t xReturn = pdFALSE;
 8007484:	4630      	mov	r0, r6
 8007486:	e7d8      	b.n	800743a <prvCopyDataToQueue+0x18>

08007488 <prvCopyDataFromQueue>:
{
 8007488:	4603      	mov	r3, r0
 800748a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800748c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800748e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007490:	b162      	cbz	r2, 80074ac <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007492:	68d9      	ldr	r1, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007494:	689c      	ldr	r4, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007496:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007498:	42a1      	cmp	r1, r4
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800749a:	60d9      	str	r1, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800749c:	bf24      	itt	cs
 800749e:	6819      	ldrcs	r1, [r3, #0]
 80074a0:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80074a2:	68d9      	ldr	r1, [r3, #12]
}
 80074a4:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80074a8:	f012 bb78 	b.w	8019b9c <memcpy>
}
 80074ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 80074b0:	4770      	bx	lr

080074b2 <prvUnlockQueue>:
{
 80074b2:	b570      	push	{r4, r5, r6, lr}
 80074b4:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 80074b6:	f7ff fe5d 	bl	8007174 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80074ba:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80074be:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 80074c2:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80074c4:	2d00      	cmp	r5, #0
 80074c6:	dc14      	bgt.n	80074f2 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 80074c8:	23ff      	movs	r3, #255	; 0xff
 80074ca:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80074ce:	f7ff fe73 	bl	80071b8 <vPortExitCritical>
	taskENTER_CRITICAL();
 80074d2:	f7ff fe4f 	bl	8007174 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80074d6:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80074da:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80074de:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80074e0:	2d00      	cmp	r5, #0
 80074e2:	dc12      	bgt.n	800750a <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80074e4:	23ff      	movs	r3, #255	; 0xff
 80074e6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 80074ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80074ee:	f7ff be63 	b.w	80071b8 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80074f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80074f4:	2b00      	cmp	r3, #0
 80074f6:	d0e7      	beq.n	80074c8 <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80074f8:	4630      	mov	r0, r6
 80074fa:	f001 f835 	bl	8008568 <xTaskRemoveFromEventList>
 80074fe:	b108      	cbz	r0, 8007504 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8007500:	f001 f8ba 	bl	8008678 <vTaskMissedYield>
 8007504:	3d01      	subs	r5, #1
 8007506:	b26d      	sxtb	r5, r5
 8007508:	e7dc      	b.n	80074c4 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800750a:	6923      	ldr	r3, [r4, #16]
 800750c:	2b00      	cmp	r3, #0
 800750e:	d0e9      	beq.n	80074e4 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007510:	4630      	mov	r0, r6
 8007512:	f001 f829 	bl	8008568 <xTaskRemoveFromEventList>
 8007516:	b108      	cbz	r0, 800751c <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8007518:	f001 f8ae 	bl	8008678 <vTaskMissedYield>
 800751c:	3d01      	subs	r5, #1
 800751e:	b26d      	sxtb	r5, r5
 8007520:	e7de      	b.n	80074e0 <prvUnlockQueue+0x2e>
	...

08007524 <xQueueGenericReset>:
{
 8007524:	b538      	push	{r3, r4, r5, lr}
 8007526:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007528:	4604      	mov	r4, r0
 800752a:	b940      	cbnz	r0, 800753e <xQueueGenericReset+0x1a>
 800752c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007530:	f383 8811 	msr	BASEPRI, r3
 8007534:	f3bf 8f6f 	isb	sy
 8007538:	f3bf 8f4f 	dsb	sy
 800753c:	e7fe      	b.n	800753c <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800753e:	f7ff fe19 	bl	8007174 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007542:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
 8007546:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 8007548:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800754a:	4343      	muls	r3, r0
 800754c:	18d1      	adds	r1, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800754e:	1a1b      	subs	r3, r3, r0
 8007550:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007552:	60a1      	str	r1, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007554:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8007556:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
 8007558:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800755a:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800755c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007560:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8007564:	b995      	cbnz	r5, 800758c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007566:	6923      	ldr	r3, [r4, #16]
 8007568:	b163      	cbz	r3, 8007584 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800756a:	f104 0010 	add.w	r0, r4, #16
 800756e:	f000 fffb 	bl	8008568 <xTaskRemoveFromEventList>
 8007572:	b138      	cbz	r0, 8007584 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 8007574:	4b0a      	ldr	r3, [pc, #40]	; (80075a0 <xQueueGenericReset+0x7c>)
 8007576:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800757a:	601a      	str	r2, [r3, #0]
 800757c:	f3bf 8f4f 	dsb	sy
 8007580:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007584:	f7ff fe18 	bl	80071b8 <vPortExitCritical>
}
 8007588:	2001      	movs	r0, #1
 800758a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800758c:	f104 0010 	add.w	r0, r4, #16
 8007590:	f7ff fd46 	bl	8007020 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007594:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007598:	f7ff fd42 	bl	8007020 <vListInitialise>
 800759c:	e7f2      	b.n	8007584 <xQueueGenericReset+0x60>
 800759e:	bf00      	nop
 80075a0:	e000ed04 	.word	0xe000ed04

080075a4 <xQueueGenericCreateStatic>:
	{
 80075a4:	b513      	push	{r0, r1, r4, lr}
 80075a6:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80075a8:	b940      	cbnz	r0, 80075bc <xQueueGenericCreateStatic+0x18>
 80075aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075ae:	f383 8811 	msr	BASEPRI, r3
 80075b2:	f3bf 8f6f 	isb	sy
 80075b6:	f3bf 8f4f 	dsb	sy
 80075ba:	e7fe      	b.n	80075ba <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 80075bc:	b943      	cbnz	r3, 80075d0 <xQueueGenericCreateStatic+0x2c>
 80075be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075c2:	f383 8811 	msr	BASEPRI, r3
 80075c6:	f3bf 8f6f 	isb	sy
 80075ca:	f3bf 8f4f 	dsb	sy
 80075ce:	e7fe      	b.n	80075ce <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80075d0:	b14a      	cbz	r2, 80075e6 <xQueueGenericCreateStatic+0x42>
 80075d2:	b991      	cbnz	r1, 80075fa <xQueueGenericCreateStatic+0x56>
 80075d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075d8:	f383 8811 	msr	BASEPRI, r3
 80075dc:	f3bf 8f6f 	isb	sy
 80075e0:	f3bf 8f4f 	dsb	sy
 80075e4:	e7fe      	b.n	80075e4 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80075e6:	b141      	cbz	r1, 80075fa <xQueueGenericCreateStatic+0x56>
 80075e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075ec:	f383 8811 	msr	BASEPRI, r3
 80075f0:	f3bf 8f6f 	isb	sy
 80075f4:	f3bf 8f4f 	dsb	sy
 80075f8:	e7fe      	b.n	80075f8 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80075fa:	2350      	movs	r3, #80	; 0x50
 80075fc:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80075fe:	9b01      	ldr	r3, [sp, #4]
 8007600:	2b50      	cmp	r3, #80	; 0x50
 8007602:	d008      	beq.n	8007616 <xQueueGenericCreateStatic+0x72>
 8007604:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007608:	f383 8811 	msr	BASEPRI, r3
 800760c:	f3bf 8f6f 	isb	sy
 8007610:	f3bf 8f4f 	dsb	sy
 8007614:	e7fe      	b.n	8007614 <xQueueGenericCreateStatic+0x70>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007616:	2900      	cmp	r1, #0
 8007618:	bf08      	it	eq
 800761a:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800761c:	9b01      	ldr	r3, [sp, #4]
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800761e:	6022      	str	r2, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007620:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8007622:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8007626:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800762a:	4619      	mov	r1, r3
 800762c:	4620      	mov	r0, r4
 800762e:	f7ff ff79 	bl	8007524 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007632:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8007636:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800763a:	4620      	mov	r0, r4
 800763c:	b002      	add	sp, #8
 800763e:	bd10      	pop	{r4, pc}

08007640 <xQueueGenericCreate>:
	{
 8007640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007642:	460d      	mov	r5, r1
 8007644:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007646:	4606      	mov	r6, r0
 8007648:	b940      	cbnz	r0, 800765c <xQueueGenericCreate+0x1c>
 800764a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800764e:	f383 8811 	msr	BASEPRI, r3
 8007652:	f3bf 8f6f 	isb	sy
 8007656:	f3bf 8f4f 	dsb	sy
 800765a:	e7fe      	b.n	800765a <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800765c:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800765e:	3050      	adds	r0, #80	; 0x50
 8007660:	f7ff fc1a 	bl	8006e98 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007664:	4604      	mov	r4, r0
 8007666:	b160      	cbz	r0, 8007682 <xQueueGenericCreate+0x42>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8007668:	2300      	movs	r3, #0
 800766a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800766e:	b955      	cbnz	r5, 8007686 <xQueueGenericCreate+0x46>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8007670:	6020      	str	r0, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 8007672:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8007676:	2101      	movs	r1, #1
 8007678:	4620      	mov	r0, r4
 800767a:	f7ff ff53 	bl	8007524 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800767e:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8007682:	4620      	mov	r0, r4
 8007684:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007686:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800768a:	6003      	str	r3, [r0, #0]
 800768c:	e7f1      	b.n	8007672 <xQueueGenericCreate+0x32>

0800768e <xQueueCreateCountingSemaphoreStatic>:
	{
 800768e:	b513      	push	{r0, r1, r4, lr}
 8007690:	4613      	mov	r3, r2
 8007692:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007694:	b940      	cbnz	r0, 80076a8 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007696:	f04f 0350 	mov.w	r3, #80	; 0x50
 800769a:	f383 8811 	msr	BASEPRI, r3
 800769e:	f3bf 8f6f 	isb	sy
 80076a2:	f3bf 8f4f 	dsb	sy
 80076a6:	e7fe      	b.n	80076a6 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80076a8:	4288      	cmp	r0, r1
 80076aa:	d208      	bcs.n	80076be <xQueueCreateCountingSemaphoreStatic+0x30>
 80076ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076b0:	f383 8811 	msr	BASEPRI, r3
 80076b4:	f3bf 8f6f 	isb	sy
 80076b8:	f3bf 8f4f 	dsb	sy
 80076bc:	e7fe      	b.n	80076bc <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80076be:	2202      	movs	r2, #2
 80076c0:	9200      	str	r2, [sp, #0]
 80076c2:	2200      	movs	r2, #0
 80076c4:	4611      	mov	r1, r2
 80076c6:	f7ff ff6d 	bl	80075a4 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80076ca:	b100      	cbz	r0, 80076ce <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80076cc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80076ce:	b002      	add	sp, #8
 80076d0:	bd10      	pop	{r4, pc}

080076d2 <xQueueCreateCountingSemaphore>:
	{
 80076d2:	b510      	push	{r4, lr}
 80076d4:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80076d6:	b940      	cbnz	r0, 80076ea <xQueueCreateCountingSemaphore+0x18>
 80076d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076dc:	f383 8811 	msr	BASEPRI, r3
 80076e0:	f3bf 8f6f 	isb	sy
 80076e4:	f3bf 8f4f 	dsb	sy
 80076e8:	e7fe      	b.n	80076e8 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80076ea:	4288      	cmp	r0, r1
 80076ec:	d208      	bcs.n	8007700 <xQueueCreateCountingSemaphore+0x2e>
 80076ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076f2:	f383 8811 	msr	BASEPRI, r3
 80076f6:	f3bf 8f6f 	isb	sy
 80076fa:	f3bf 8f4f 	dsb	sy
 80076fe:	e7fe      	b.n	80076fe <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007700:	2202      	movs	r2, #2
 8007702:	2100      	movs	r1, #0
 8007704:	f7ff ff9c 	bl	8007640 <xQueueGenericCreate>
		if( xHandle != NULL )
 8007708:	b100      	cbz	r0, 800770c <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800770a:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800770c:	bd10      	pop	{r4, pc}
	...

08007710 <xQueueGenericSend>:
{
 8007710:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007714:	4688      	mov	r8, r1
 8007716:	9201      	str	r2, [sp, #4]
 8007718:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800771a:	4604      	mov	r4, r0
 800771c:	b940      	cbnz	r0, 8007730 <xQueueGenericSend+0x20>
 800771e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007722:	f383 8811 	msr	BASEPRI, r3
 8007726:	f3bf 8f6f 	isb	sy
 800772a:	f3bf 8f4f 	dsb	sy
 800772e:	e7fe      	b.n	800772e <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007730:	b951      	cbnz	r1, 8007748 <xQueueGenericSend+0x38>
 8007732:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007734:	b143      	cbz	r3, 8007748 <xQueueGenericSend+0x38>
 8007736:	f04f 0350 	mov.w	r3, #80	; 0x50
 800773a:	f383 8811 	msr	BASEPRI, r3
 800773e:	f3bf 8f6f 	isb	sy
 8007742:	f3bf 8f4f 	dsb	sy
 8007746:	e7fe      	b.n	8007746 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007748:	2f02      	cmp	r7, #2
 800774a:	d10b      	bne.n	8007764 <xQueueGenericSend+0x54>
 800774c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800774e:	2b01      	cmp	r3, #1
 8007750:	d008      	beq.n	8007764 <xQueueGenericSend+0x54>
 8007752:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007756:	f383 8811 	msr	BASEPRI, r3
 800775a:	f3bf 8f6f 	isb	sy
 800775e:	f3bf 8f4f 	dsb	sy
 8007762:	e7fe      	b.n	8007762 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007764:	f000 ff8e 	bl	8008684 <xTaskGetSchedulerState>
 8007768:	b950      	cbnz	r0, 8007780 <xQueueGenericSend+0x70>
 800776a:	9e01      	ldr	r6, [sp, #4]
 800776c:	b14e      	cbz	r6, 8007782 <xQueueGenericSend+0x72>
 800776e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007772:	f383 8811 	msr	BASEPRI, r3
 8007776:	f3bf 8f6f 	isb	sy
 800777a:	f3bf 8f4f 	dsb	sy
 800777e:	e7fe      	b.n	800777e <xQueueGenericSend+0x6e>
 8007780:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007782:	f04f 0900 	mov.w	r9, #0
					portYIELD_WITHIN_API();
 8007786:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8007870 <xQueueGenericSend+0x160>
 800778a:	e037      	b.n	80077fc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800778c:	9d01      	ldr	r5, [sp, #4]
 800778e:	b91d      	cbnz	r5, 8007798 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8007790:	f7ff fd12 	bl	80071b8 <vPortExitCritical>
			return errQUEUE_FULL;
 8007794:	2000      	movs	r0, #0
 8007796:	e050      	b.n	800783a <xQueueGenericSend+0x12a>
				else if( xEntryTimeSet == pdFALSE )
 8007798:	b916      	cbnz	r6, 80077a0 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800779a:	a802      	add	r0, sp, #8
 800779c:	f000 ff24 	bl	80085e8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80077a0:	f7ff fd0a 	bl	80071b8 <vPortExitCritical>
		vTaskSuspendAll();
 80077a4:	f000 fd52 	bl	800824c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80077a8:	f7ff fce4 	bl	8007174 <vPortEnterCritical>
 80077ac:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80077b0:	2bff      	cmp	r3, #255	; 0xff
 80077b2:	bf08      	it	eq
 80077b4:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 80077b8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80077bc:	2bff      	cmp	r3, #255	; 0xff
 80077be:	bf08      	it	eq
 80077c0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 80077c4:	f7ff fcf8 	bl	80071b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80077c8:	a901      	add	r1, sp, #4
 80077ca:	a802      	add	r0, sp, #8
 80077cc:	f000 ff18 	bl	8008600 <xTaskCheckForTimeOut>
 80077d0:	2800      	cmp	r0, #0
 80077d2:	d146      	bne.n	8007862 <xQueueGenericSend+0x152>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80077d4:	f7ff fcce 	bl	8007174 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80077d8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80077da:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80077dc:	429a      	cmp	r2, r3
 80077de:	d12f      	bne.n	8007840 <xQueueGenericSend+0x130>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80077e0:	f7ff fcea 	bl	80071b8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80077e4:	9901      	ldr	r1, [sp, #4]
 80077e6:	f104 0010 	add.w	r0, r4, #16
 80077ea:	f000 fe85 	bl	80084f8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80077ee:	4620      	mov	r0, r4
 80077f0:	f7ff fe5f 	bl	80074b2 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80077f4:	f000 fdd0 	bl	8008398 <xTaskResumeAll>
 80077f8:	b350      	cbz	r0, 8007850 <xQueueGenericSend+0x140>
 80077fa:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80077fc:	f7ff fcba 	bl	8007174 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007800:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007802:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007804:	429a      	cmp	r2, r3
 8007806:	d301      	bcc.n	800780c <xQueueGenericSend+0xfc>
 8007808:	2f02      	cmp	r7, #2
 800780a:	d1bf      	bne.n	800778c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800780c:	463a      	mov	r2, r7
 800780e:	4641      	mov	r1, r8
 8007810:	4620      	mov	r0, r4
 8007812:	f7ff fe06 	bl	8007422 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007816:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007818:	b11b      	cbz	r3, 8007822 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800781a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800781e:	f000 fea3 	bl	8008568 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8007822:	b138      	cbz	r0, 8007834 <xQueueGenericSend+0x124>
						queueYIELD_IF_USING_PREEMPTION();
 8007824:	4b12      	ldr	r3, [pc, #72]	; (8007870 <xQueueGenericSend+0x160>)
 8007826:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800782a:	601a      	str	r2, [r3, #0]
 800782c:	f3bf 8f4f 	dsb	sy
 8007830:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007834:	f7ff fcc0 	bl	80071b8 <vPortExitCritical>
				return pdPASS;
 8007838:	2001      	movs	r0, #1
}
 800783a:	b004      	add	sp, #16
 800783c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 8007840:	f7ff fcba 	bl	80071b8 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8007844:	4620      	mov	r0, r4
 8007846:	f7ff fe34 	bl	80074b2 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800784a:	f000 fda5 	bl	8008398 <xTaskResumeAll>
 800784e:	e7d4      	b.n	80077fa <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8007850:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007854:	f8ca 3000 	str.w	r3, [sl]
 8007858:	f3bf 8f4f 	dsb	sy
 800785c:	f3bf 8f6f 	isb	sy
 8007860:	e7cb      	b.n	80077fa <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8007862:	4620      	mov	r0, r4
 8007864:	f7ff fe25 	bl	80074b2 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007868:	f000 fd96 	bl	8008398 <xTaskResumeAll>
 800786c:	e792      	b.n	8007794 <xQueueGenericSend+0x84>
 800786e:	bf00      	nop
 8007870:	e000ed04 	.word	0xe000ed04

08007874 <xQueueGenericSendFromISR>:
{
 8007874:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007878:	4689      	mov	r9, r1
 800787a:	4690      	mov	r8, r2
 800787c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800787e:	4604      	mov	r4, r0
 8007880:	b940      	cbnz	r0, 8007894 <xQueueGenericSendFromISR+0x20>
 8007882:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007886:	f383 8811 	msr	BASEPRI, r3
 800788a:	f3bf 8f6f 	isb	sy
 800788e:	f3bf 8f4f 	dsb	sy
 8007892:	e7fe      	b.n	8007892 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007894:	b951      	cbnz	r1, 80078ac <xQueueGenericSendFromISR+0x38>
 8007896:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007898:	b143      	cbz	r3, 80078ac <xQueueGenericSendFromISR+0x38>
 800789a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800789e:	f383 8811 	msr	BASEPRI, r3
 80078a2:	f3bf 8f6f 	isb	sy
 80078a6:	f3bf 8f4f 	dsb	sy
 80078aa:	e7fe      	b.n	80078aa <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80078ac:	2f02      	cmp	r7, #2
 80078ae:	d10b      	bne.n	80078c8 <xQueueGenericSendFromISR+0x54>
 80078b0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80078b2:	2b01      	cmp	r3, #1
 80078b4:	d008      	beq.n	80078c8 <xQueueGenericSendFromISR+0x54>
 80078b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078ba:	f383 8811 	msr	BASEPRI, r3
 80078be:	f3bf 8f6f 	isb	sy
 80078c2:	f3bf 8f4f 	dsb	sy
 80078c6:	e7fe      	b.n	80078c6 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80078c8:	f7ff fd72 	bl	80073b0 <vPortValidateInterruptPriority>
	__asm volatile
 80078cc:	f3ef 8611 	mrs	r6, BASEPRI
 80078d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078d4:	f383 8811 	msr	BASEPRI, r3
 80078d8:	f3bf 8f6f 	isb	sy
 80078dc:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80078e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80078e2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80078e4:	429a      	cmp	r2, r3
 80078e6:	d301      	bcc.n	80078ec <xQueueGenericSendFromISR+0x78>
 80078e8:	2f02      	cmp	r7, #2
 80078ea:	d122      	bne.n	8007932 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 80078ec:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80078f0:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 80078f2:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80078f4:	4649      	mov	r1, r9
 80078f6:	4620      	mov	r0, r4
 80078f8:	f7ff fd93 	bl	8007422 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80078fc:	1c6b      	adds	r3, r5, #1
 80078fe:	d113      	bne.n	8007928 <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007900:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007902:	b90b      	cbnz	r3, 8007908 <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8007904:	2001      	movs	r0, #1
 8007906:	e00b      	b.n	8007920 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007908:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800790c:	f000 fe2c 	bl	8008568 <xTaskRemoveFromEventList>
 8007910:	2800      	cmp	r0, #0
 8007912:	d0f7      	beq.n	8007904 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8007914:	f1b8 0f00 	cmp.w	r8, #0
 8007918:	d0f4      	beq.n	8007904 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800791a:	2001      	movs	r0, #1
 800791c:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007920:	f386 8811 	msr	BASEPRI, r6
}
 8007924:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007928:	3501      	adds	r5, #1
 800792a:	b26d      	sxtb	r5, r5
 800792c:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8007930:	e7e8      	b.n	8007904 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8007932:	2000      	movs	r0, #0
 8007934:	e7f4      	b.n	8007920 <xQueueGenericSendFromISR+0xac>

08007936 <xQueueGiveFromISR>:
{
 8007936:	b570      	push	{r4, r5, r6, lr}
 8007938:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800793a:	4604      	mov	r4, r0
 800793c:	b940      	cbnz	r0, 8007950 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800793e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007942:	f383 8811 	msr	BASEPRI, r3
 8007946:	f3bf 8f6f 	isb	sy
 800794a:	f3bf 8f4f 	dsb	sy
 800794e:	e7fe      	b.n	800794e <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007950:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007952:	b143      	cbz	r3, 8007966 <xQueueGiveFromISR+0x30>
 8007954:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007958:	f383 8811 	msr	BASEPRI, r3
 800795c:	f3bf 8f6f 	isb	sy
 8007960:	f3bf 8f4f 	dsb	sy
 8007964:	e7fe      	b.n	8007964 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8007966:	6803      	ldr	r3, [r0, #0]
 8007968:	b953      	cbnz	r3, 8007980 <xQueueGiveFromISR+0x4a>
 800796a:	6883      	ldr	r3, [r0, #8]
 800796c:	b143      	cbz	r3, 8007980 <xQueueGiveFromISR+0x4a>
 800796e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007972:	f383 8811 	msr	BASEPRI, r3
 8007976:	f3bf 8f6f 	isb	sy
 800797a:	f3bf 8f4f 	dsb	sy
 800797e:	e7fe      	b.n	800797e <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007980:	f7ff fd16 	bl	80073b0 <vPortValidateInterruptPriority>
	__asm volatile
 8007984:	f3ef 8611 	mrs	r6, BASEPRI
 8007988:	f04f 0350 	mov.w	r3, #80	; 0x50
 800798c:	f383 8811 	msr	BASEPRI, r3
 8007990:	f3bf 8f6f 	isb	sy
 8007994:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007998:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800799a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800799c:	4293      	cmp	r3, r2
 800799e:	d91c      	bls.n	80079da <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 80079a0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80079a4:	3201      	adds	r2, #1
			const int8_t cTxLock = pxQueue->cTxLock;
 80079a6:	b25b      	sxtb	r3, r3
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80079a8:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 80079aa:	1c5a      	adds	r2, r3, #1
 80079ac:	d110      	bne.n	80079d0 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80079ae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80079b0:	b90b      	cbnz	r3, 80079b6 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 80079b2:	2001      	movs	r0, #1
 80079b4:	e009      	b.n	80079ca <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80079b6:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80079ba:	f000 fdd5 	bl	8008568 <xTaskRemoveFromEventList>
 80079be:	2800      	cmp	r0, #0
 80079c0:	d0f7      	beq.n	80079b2 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 80079c2:	2d00      	cmp	r5, #0
 80079c4:	d0f5      	beq.n	80079b2 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80079c6:	2001      	movs	r0, #1
 80079c8:	6028      	str	r0, [r5, #0]
	__asm volatile
 80079ca:	f386 8811 	msr	BASEPRI, r6
}
 80079ce:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80079d0:	3301      	adds	r3, #1
 80079d2:	b25b      	sxtb	r3, r3
 80079d4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80079d8:	e7eb      	b.n	80079b2 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 80079da:	2000      	movs	r0, #0
 80079dc:	e7f5      	b.n	80079ca <xQueueGiveFromISR+0x94>
	...

080079e0 <xQueueReceive>:
{
 80079e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80079e4:	b085      	sub	sp, #20
 80079e6:	460f      	mov	r7, r1
 80079e8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80079ea:	4604      	mov	r4, r0
 80079ec:	b940      	cbnz	r0, 8007a00 <xQueueReceive+0x20>
	__asm volatile
 80079ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079f2:	f383 8811 	msr	BASEPRI, r3
 80079f6:	f3bf 8f6f 	isb	sy
 80079fa:	f3bf 8f4f 	dsb	sy
 80079fe:	e7fe      	b.n	80079fe <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007a00:	b951      	cbnz	r1, 8007a18 <xQueueReceive+0x38>
 8007a02:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007a04:	b143      	cbz	r3, 8007a18 <xQueueReceive+0x38>
 8007a06:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a0a:	f383 8811 	msr	BASEPRI, r3
 8007a0e:	f3bf 8f6f 	isb	sy
 8007a12:	f3bf 8f4f 	dsb	sy
 8007a16:	e7fe      	b.n	8007a16 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007a18:	f000 fe34 	bl	8008684 <xTaskGetSchedulerState>
 8007a1c:	b950      	cbnz	r0, 8007a34 <xQueueReceive+0x54>
 8007a1e:	9e01      	ldr	r6, [sp, #4]
 8007a20:	b14e      	cbz	r6, 8007a36 <xQueueReceive+0x56>
 8007a22:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a26:	f383 8811 	msr	BASEPRI, r3
 8007a2a:	f3bf 8f6f 	isb	sy
 8007a2e:	f3bf 8f4f 	dsb	sy
 8007a32:	e7fe      	b.n	8007a32 <xQueueReceive+0x52>
 8007a34:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007a36:	f04f 0800 	mov.w	r8, #0
					portYIELD_WITHIN_API();
 8007a3a:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 8007b1c <xQueueReceive+0x13c>
 8007a3e:	e03b      	b.n	8007ab8 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007a40:	9d01      	ldr	r5, [sp, #4]
 8007a42:	b91d      	cbnz	r5, 8007a4c <xQueueReceive+0x6c>
					taskEXIT_CRITICAL();
 8007a44:	f7ff fbb8 	bl	80071b8 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8007a48:	2000      	movs	r0, #0
 8007a4a:	e052      	b.n	8007af2 <xQueueReceive+0x112>
				else if( xEntryTimeSet == pdFALSE )
 8007a4c:	b916      	cbnz	r6, 8007a54 <xQueueReceive+0x74>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007a4e:	a802      	add	r0, sp, #8
 8007a50:	f000 fdca 	bl	80085e8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007a54:	f7ff fbb0 	bl	80071b8 <vPortExitCritical>
		vTaskSuspendAll();
 8007a58:	f000 fbf8 	bl	800824c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007a5c:	f7ff fb8a 	bl	8007174 <vPortEnterCritical>
 8007a60:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007a64:	2bff      	cmp	r3, #255	; 0xff
 8007a66:	bf08      	it	eq
 8007a68:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8007a6c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007a70:	2bff      	cmp	r3, #255	; 0xff
 8007a72:	bf08      	it	eq
 8007a74:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8007a78:	f7ff fb9e 	bl	80071b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007a7c:	a901      	add	r1, sp, #4
 8007a7e:	a802      	add	r0, sp, #8
 8007a80:	f000 fdbe 	bl	8008600 <xTaskCheckForTimeOut>
 8007a84:	2800      	cmp	r0, #0
 8007a86:	d13d      	bne.n	8007b04 <xQueueReceive+0x124>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007a88:	4620      	mov	r0, r4
 8007a8a:	f7ff fcbf 	bl	800740c <prvIsQueueEmpty>
 8007a8e:	b398      	cbz	r0, 8007af8 <xQueueReceive+0x118>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007a90:	9901      	ldr	r1, [sp, #4]
 8007a92:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007a96:	f000 fd2f 	bl	80084f8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007a9a:	4620      	mov	r0, r4
 8007a9c:	f7ff fd09 	bl	80074b2 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007aa0:	f000 fc7a 	bl	8008398 <xTaskResumeAll>
 8007aa4:	b938      	cbnz	r0, 8007ab6 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8007aa6:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007aaa:	f8c9 3000 	str.w	r3, [r9]
 8007aae:	f3bf 8f4f 	dsb	sy
 8007ab2:	f3bf 8f6f 	isb	sy
 8007ab6:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007ab8:	f7ff fb5c 	bl	8007174 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007abc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007abe:	2d00      	cmp	r5, #0
 8007ac0:	d0be      	beq.n	8007a40 <xQueueReceive+0x60>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007ac2:	4639      	mov	r1, r7
 8007ac4:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007ac6:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007ac8:	f7ff fcde 	bl	8007488 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007acc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007ace:	6923      	ldr	r3, [r4, #16]
 8007ad0:	b163      	cbz	r3, 8007aec <xQueueReceive+0x10c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007ad2:	f104 0010 	add.w	r0, r4, #16
 8007ad6:	f000 fd47 	bl	8008568 <xTaskRemoveFromEventList>
 8007ada:	b138      	cbz	r0, 8007aec <xQueueReceive+0x10c>
						queueYIELD_IF_USING_PREEMPTION();
 8007adc:	4b0f      	ldr	r3, [pc, #60]	; (8007b1c <xQueueReceive+0x13c>)
 8007ade:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007ae2:	601a      	str	r2, [r3, #0]
 8007ae4:	f3bf 8f4f 	dsb	sy
 8007ae8:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007aec:	f7ff fb64 	bl	80071b8 <vPortExitCritical>
				return pdPASS;
 8007af0:	2001      	movs	r0, #1
}
 8007af2:	b005      	add	sp, #20
 8007af4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 8007af8:	4620      	mov	r0, r4
 8007afa:	f7ff fcda 	bl	80074b2 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007afe:	f000 fc4b 	bl	8008398 <xTaskResumeAll>
 8007b02:	e7d8      	b.n	8007ab6 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8007b04:	4620      	mov	r0, r4
 8007b06:	f7ff fcd4 	bl	80074b2 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007b0a:	f000 fc45 	bl	8008398 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007b0e:	4620      	mov	r0, r4
 8007b10:	f7ff fc7c 	bl	800740c <prvIsQueueEmpty>
 8007b14:	2800      	cmp	r0, #0
 8007b16:	d0ce      	beq.n	8007ab6 <xQueueReceive+0xd6>
 8007b18:	e796      	b.n	8007a48 <xQueueReceive+0x68>
 8007b1a:	bf00      	nop
 8007b1c:	e000ed04 	.word	0xe000ed04

08007b20 <xQueueSemaphoreTake>:
{
 8007b20:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 8007b24:	4604      	mov	r4, r0
{
 8007b26:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007b28:	b940      	cbnz	r0, 8007b3c <xQueueSemaphoreTake+0x1c>
 8007b2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b2e:	f383 8811 	msr	BASEPRI, r3
 8007b32:	f3bf 8f6f 	isb	sy
 8007b36:	f3bf 8f4f 	dsb	sy
 8007b3a:	e7fe      	b.n	8007b3a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007b3c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8007b3e:	b145      	cbz	r5, 8007b52 <xQueueSemaphoreTake+0x32>
 8007b40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b44:	f383 8811 	msr	BASEPRI, r3
 8007b48:	f3bf 8f6f 	isb	sy
 8007b4c:	f3bf 8f4f 	dsb	sy
 8007b50:	e7fe      	b.n	8007b50 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007b52:	f000 fd97 	bl	8008684 <xTaskGetSchedulerState>
 8007b56:	b950      	cbnz	r0, 8007b6e <xQueueSemaphoreTake+0x4e>
 8007b58:	9d01      	ldr	r5, [sp, #4]
 8007b5a:	b145      	cbz	r5, 8007b6e <xQueueSemaphoreTake+0x4e>
 8007b5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b60:	f383 8811 	msr	BASEPRI, r3
 8007b64:	f3bf 8f6f 	isb	sy
 8007b68:	f3bf 8f4f 	dsb	sy
 8007b6c:	e7fe      	b.n	8007b6c <xQueueSemaphoreTake+0x4c>
 8007b6e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8007b70:	2700      	movs	r7, #0
					portYIELD_WITHIN_API();
 8007b72:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8007ca0 <xQueueSemaphoreTake+0x180>
 8007b76:	e04f      	b.n	8007c18 <xQueueSemaphoreTake+0xf8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007b78:	9b01      	ldr	r3, [sp, #4]
 8007b7a:	b963      	cbnz	r3, 8007b96 <xQueueSemaphoreTake+0x76>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8007b7c:	b145      	cbz	r5, 8007b90 <xQueueSemaphoreTake+0x70>
 8007b7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b82:	f383 8811 	msr	BASEPRI, r3
 8007b86:	f3bf 8f6f 	isb	sy
 8007b8a:	f3bf 8f4f 	dsb	sy
 8007b8e:	e7fe      	b.n	8007b8e <xQueueSemaphoreTake+0x6e>
					taskEXIT_CRITICAL();
 8007b90:	f7ff fb12 	bl	80071b8 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8007b94:	e05e      	b.n	8007c54 <xQueueSemaphoreTake+0x134>
				else if( xEntryTimeSet == pdFALSE )
 8007b96:	b916      	cbnz	r6, 8007b9e <xQueueSemaphoreTake+0x7e>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007b98:	a802      	add	r0, sp, #8
 8007b9a:	f000 fd25 	bl	80085e8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007b9e:	f7ff fb0b 	bl	80071b8 <vPortExitCritical>
		vTaskSuspendAll();
 8007ba2:	f000 fb53 	bl	800824c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007ba6:	f7ff fae5 	bl	8007174 <vPortEnterCritical>
 8007baa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007bae:	2bff      	cmp	r3, #255	; 0xff
 8007bb0:	bf08      	it	eq
 8007bb2:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8007bb6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007bba:	2bff      	cmp	r3, #255	; 0xff
 8007bbc:	bf08      	it	eq
 8007bbe:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8007bc2:	f7ff faf9 	bl	80071b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007bc6:	a901      	add	r1, sp, #4
 8007bc8:	a802      	add	r0, sp, #8
 8007bca:	f000 fd19 	bl	8008600 <xTaskCheckForTimeOut>
 8007bce:	2800      	cmp	r0, #0
 8007bd0:	d14a      	bne.n	8007c68 <xQueueSemaphoreTake+0x148>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007bd2:	4620      	mov	r0, r4
 8007bd4:	f7ff fc1a 	bl	800740c <prvIsQueueEmpty>
 8007bd8:	2800      	cmp	r0, #0
 8007bda:	d03f      	beq.n	8007c5c <xQueueSemaphoreTake+0x13c>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007bdc:	6823      	ldr	r3, [r4, #0]
 8007bde:	b93b      	cbnz	r3, 8007bf0 <xQueueSemaphoreTake+0xd0>
						taskENTER_CRITICAL();
 8007be0:	f7ff fac8 	bl	8007174 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007be4:	68a0      	ldr	r0, [r4, #8]
 8007be6:	f000 fd5d 	bl	80086a4 <xTaskPriorityInherit>
 8007bea:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8007bec:	f7ff fae4 	bl	80071b8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007bf0:	9901      	ldr	r1, [sp, #4]
 8007bf2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007bf6:	f000 fc7f 	bl	80084f8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007bfa:	4620      	mov	r0, r4
 8007bfc:	f7ff fc59 	bl	80074b2 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007c00:	f000 fbca 	bl	8008398 <xTaskResumeAll>
 8007c04:	b938      	cbnz	r0, 8007c16 <xQueueSemaphoreTake+0xf6>
					portYIELD_WITHIN_API();
 8007c06:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007c0a:	f8c8 3000 	str.w	r3, [r8]
 8007c0e:	f3bf 8f4f 	dsb	sy
 8007c12:	f3bf 8f6f 	isb	sy
 8007c16:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007c18:	f7ff faac 	bl	8007174 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8007c1c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8007c1e:	2b00      	cmp	r3, #0
 8007c20:	d0aa      	beq.n	8007b78 <xQueueSemaphoreTake+0x58>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8007c22:	3b01      	subs	r3, #1
 8007c24:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007c26:	6823      	ldr	r3, [r4, #0]
 8007c28:	b913      	cbnz	r3, 8007c30 <xQueueSemaphoreTake+0x110>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8007c2a:	f000 fe0b 	bl	8008844 <pvTaskIncrementMutexHeldCount>
 8007c2e:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007c30:	6923      	ldr	r3, [r4, #16]
 8007c32:	b163      	cbz	r3, 8007c4e <xQueueSemaphoreTake+0x12e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007c34:	f104 0010 	add.w	r0, r4, #16
 8007c38:	f000 fc96 	bl	8008568 <xTaskRemoveFromEventList>
 8007c3c:	b138      	cbz	r0, 8007c4e <xQueueSemaphoreTake+0x12e>
						queueYIELD_IF_USING_PREEMPTION();
 8007c3e:	4b18      	ldr	r3, [pc, #96]	; (8007ca0 <xQueueSemaphoreTake+0x180>)
 8007c40:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007c44:	601a      	str	r2, [r3, #0]
 8007c46:	f3bf 8f4f 	dsb	sy
 8007c4a:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007c4e:	f7ff fab3 	bl	80071b8 <vPortExitCritical>
				return pdPASS;
 8007c52:	2501      	movs	r5, #1
}
 8007c54:	4628      	mov	r0, r5
 8007c56:	b004      	add	sp, #16
 8007c58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8007c5c:	4620      	mov	r0, r4
 8007c5e:	f7ff fc28 	bl	80074b2 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007c62:	f000 fb99 	bl	8008398 <xTaskResumeAll>
 8007c66:	e7d6      	b.n	8007c16 <xQueueSemaphoreTake+0xf6>
			prvUnlockQueue( pxQueue );
 8007c68:	4620      	mov	r0, r4
 8007c6a:	f7ff fc22 	bl	80074b2 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007c6e:	f000 fb93 	bl	8008398 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007c72:	4620      	mov	r0, r4
 8007c74:	f7ff fbca 	bl	800740c <prvIsQueueEmpty>
 8007c78:	2800      	cmp	r0, #0
 8007c7a:	d0cc      	beq.n	8007c16 <xQueueSemaphoreTake+0xf6>
					if( xInheritanceOccurred != pdFALSE )
 8007c7c:	2d00      	cmp	r5, #0
 8007c7e:	d0e9      	beq.n	8007c54 <xQueueSemaphoreTake+0x134>
						taskENTER_CRITICAL();
 8007c80:	f7ff fa78 	bl	8007174 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8007c84:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007c86:	b119      	cbz	r1, 8007c90 <xQueueSemaphoreTake+0x170>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8007c88:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007c8a:	6819      	ldr	r1, [r3, #0]
 8007c8c:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8007c90:	68a0      	ldr	r0, [r4, #8]
 8007c92:	f000 fd89 	bl	80087a8 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8007c96:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8007c98:	f7ff fa8e 	bl	80071b8 <vPortExitCritical>
 8007c9c:	e7da      	b.n	8007c54 <xQueueSemaphoreTake+0x134>
 8007c9e:	bf00      	nop
 8007ca0:	e000ed04 	.word	0xe000ed04

08007ca4 <xQueueReceiveFromISR>:
{
 8007ca4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007ca8:	4689      	mov	r9, r1
 8007caa:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8007cac:	4605      	mov	r5, r0
 8007cae:	b940      	cbnz	r0, 8007cc2 <xQueueReceiveFromISR+0x1e>
 8007cb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cb4:	f383 8811 	msr	BASEPRI, r3
 8007cb8:	f3bf 8f6f 	isb	sy
 8007cbc:	f3bf 8f4f 	dsb	sy
 8007cc0:	e7fe      	b.n	8007cc0 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007cc2:	b951      	cbnz	r1, 8007cda <xQueueReceiveFromISR+0x36>
 8007cc4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007cc6:	b143      	cbz	r3, 8007cda <xQueueReceiveFromISR+0x36>
 8007cc8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ccc:	f383 8811 	msr	BASEPRI, r3
 8007cd0:	f3bf 8f6f 	isb	sy
 8007cd4:	f3bf 8f4f 	dsb	sy
 8007cd8:	e7fe      	b.n	8007cd8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007cda:	f7ff fb69 	bl	80073b0 <vPortValidateInterruptPriority>
	__asm volatile
 8007cde:	f3ef 8711 	mrs	r7, BASEPRI
 8007ce2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ce6:	f383 8811 	msr	BASEPRI, r3
 8007cea:	f3bf 8f6f 	isb	sy
 8007cee:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007cf2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007cf4:	b31c      	cbz	r4, 8007d3e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8007cf6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007cfa:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8007cfc:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007cfe:	4628      	mov	r0, r5
 8007d00:	f7ff fbc2 	bl	8007488 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007d04:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8007d06:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007d08:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8007d0a:	d113      	bne.n	8007d34 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007d0c:	692b      	ldr	r3, [r5, #16]
 8007d0e:	b90b      	cbnz	r3, 8007d14 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8007d10:	2001      	movs	r0, #1
 8007d12:	e00b      	b.n	8007d2c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007d14:	f105 0010 	add.w	r0, r5, #16
 8007d18:	f000 fc26 	bl	8008568 <xTaskRemoveFromEventList>
 8007d1c:	2800      	cmp	r0, #0
 8007d1e:	d0f7      	beq.n	8007d10 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8007d20:	f1b8 0f00 	cmp.w	r8, #0
 8007d24:	d0f4      	beq.n	8007d10 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8007d26:	2001      	movs	r0, #1
 8007d28:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007d2c:	f387 8811 	msr	BASEPRI, r7
}
 8007d30:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8007d34:	3601      	adds	r6, #1
 8007d36:	b276      	sxtb	r6, r6
 8007d38:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8007d3c:	e7e8      	b.n	8007d10 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8007d3e:	4620      	mov	r0, r4
 8007d40:	e7f4      	b.n	8007d2c <xQueueReceiveFromISR+0x88>

08007d42 <uxQueueMessagesWaiting>:
{
 8007d42:	b510      	push	{r4, lr}
	configASSERT( xQueue );
 8007d44:	4604      	mov	r4, r0
 8007d46:	b940      	cbnz	r0, 8007d5a <uxQueueMessagesWaiting+0x18>
	__asm volatile
 8007d48:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007d4c:	f383 8811 	msr	BASEPRI, r3
 8007d50:	f3bf 8f6f 	isb	sy
 8007d54:	f3bf 8f4f 	dsb	sy
 8007d58:	e7fe      	b.n	8007d58 <uxQueueMessagesWaiting+0x16>
	taskENTER_CRITICAL();
 8007d5a:	f7ff fa0b 	bl	8007174 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 8007d5e:	6ba4      	ldr	r4, [r4, #56]	; 0x38
	taskEXIT_CRITICAL();
 8007d60:	f7ff fa2a 	bl	80071b8 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 8007d64:	4620      	mov	r0, r4
 8007d66:	bd10      	pop	{r4, pc}

08007d68 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8007d68:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007d6a:	4a07      	ldr	r2, [pc, #28]	; (8007d88 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007d6c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8007d6e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8007d72:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8007d76:	b91d      	cbnz	r5, 8007d80 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8007d78:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8007d7c:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 8007d7e:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007d80:	3301      	adds	r3, #1
 8007d82:	2b08      	cmp	r3, #8
 8007d84:	d1f3      	bne.n	8007d6e <vQueueAddToRegistry+0x6>
 8007d86:	e7fa      	b.n	8007d7e <vQueueAddToRegistry+0x16>
 8007d88:	2001273c 	.word	0x2001273c

08007d8c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8007d8c:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007d8e:	4a08      	ldr	r2, [pc, #32]	; (8007db0 <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007d90:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007d92:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8007d96:	684c      	ldr	r4, [r1, #4]
 8007d98:	4284      	cmp	r4, r0
 8007d9a:	d104      	bne.n	8007da6 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8007d9c:	2000      	movs	r0, #0
 8007d9e:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8007da2:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8007da4:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007da6:	3301      	adds	r3, #1
 8007da8:	2b08      	cmp	r3, #8
 8007daa:	d1f2      	bne.n	8007d92 <vQueueUnregisterQueue+0x6>
 8007dac:	e7fa      	b.n	8007da4 <vQueueUnregisterQueue+0x18>
 8007dae:	bf00      	nop
 8007db0:	2001273c 	.word	0x2001273c

08007db4 <vQueueDelete>:
{
 8007db4:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8007db6:	4604      	mov	r4, r0
 8007db8:	b940      	cbnz	r0, 8007dcc <vQueueDelete+0x18>
 8007dba:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007dbe:	f383 8811 	msr	BASEPRI, r3
 8007dc2:	f3bf 8f6f 	isb	sy
 8007dc6:	f3bf 8f4f 	dsb	sy
 8007dca:	e7fe      	b.n	8007dca <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8007dcc:	f7ff ffde 	bl	8007d8c <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8007dd0:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8007dd4:	b923      	cbnz	r3, 8007de0 <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8007dd6:	4620      	mov	r0, r4
}
 8007dd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8007ddc:	f7ff b8e8 	b.w	8006fb0 <vPortFree>
}
 8007de0:	bd10      	pop	{r4, pc}

08007de2 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8007de2:	b570      	push	{r4, r5, r6, lr}
 8007de4:	4604      	mov	r4, r0
 8007de6:	460d      	mov	r5, r1
 8007de8:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8007dea:	f7ff f9c3 	bl	8007174 <vPortEnterCritical>
 8007dee:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007df2:	2bff      	cmp	r3, #255	; 0xff
 8007df4:	bf04      	itt	eq
 8007df6:	2300      	moveq	r3, #0
 8007df8:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8007dfc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007e00:	2bff      	cmp	r3, #255	; 0xff
 8007e02:	bf04      	itt	eq
 8007e04:	2300      	moveq	r3, #0
 8007e06:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8007e0a:	f7ff f9d5 	bl	80071b8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8007e0e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007e10:	b92b      	cbnz	r3, 8007e1e <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8007e12:	4632      	mov	r2, r6
 8007e14:	4629      	mov	r1, r5
 8007e16:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007e1a:	f000 fb87 	bl	800852c <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8007e1e:	4620      	mov	r0, r4
	}
 8007e20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8007e24:	f7ff bb45 	b.w	80074b2 <prvUnlockQueue>

08007e28 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8007e28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007e2c:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8007e2e:	f7ff f9a1 	bl	8007174 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8007e32:	4b2f      	ldr	r3, [pc, #188]	; (8007ef0 <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8007e34:	4d2f      	ldr	r5, [pc, #188]	; (8007ef4 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8007e36:	681a      	ldr	r2, [r3, #0]
 8007e38:	4f2f      	ldr	r7, [pc, #188]	; (8007ef8 <prvAddNewTaskToReadyList+0xd0>)
 8007e3a:	3201      	adds	r2, #1
 8007e3c:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8007e3e:	682e      	ldr	r6, [r5, #0]
 8007e40:	2e00      	cmp	r6, #0
 8007e42:	d149      	bne.n	8007ed8 <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8007e44:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8007e46:	681b      	ldr	r3, [r3, #0]
 8007e48:	2b01      	cmp	r3, #1
 8007e4a:	d11f      	bne.n	8007e8c <prvAddNewTaskToReadyList+0x64>
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007e4c:	f04f 0814 	mov.w	r8, #20
 8007e50:	fb08 7006 	mla	r0, r8, r6, r7
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007e54:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8007e56:	f7ff f8e3 	bl	8007020 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8007e5a:	2e38      	cmp	r6, #56	; 0x38
 8007e5c:	d1f8      	bne.n	8007e50 <prvAddNewTaskToReadyList+0x28>
	}

	vListInitialise( &xDelayedTaskList1 );
 8007e5e:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8007f24 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8007e62:	4e26      	ldr	r6, [pc, #152]	; (8007efc <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8007e64:	4640      	mov	r0, r8
 8007e66:	f7ff f8db 	bl	8007020 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8007e6a:	4630      	mov	r0, r6
 8007e6c:	f7ff f8d8 	bl	8007020 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8007e70:	4823      	ldr	r0, [pc, #140]	; (8007f00 <prvAddNewTaskToReadyList+0xd8>)
 8007e72:	f7ff f8d5 	bl	8007020 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8007e76:	4823      	ldr	r0, [pc, #140]	; (8007f04 <prvAddNewTaskToReadyList+0xdc>)
 8007e78:	f7ff f8d2 	bl	8007020 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8007e7c:	4822      	ldr	r0, [pc, #136]	; (8007f08 <prvAddNewTaskToReadyList+0xe0>)
 8007e7e:	f7ff f8cf 	bl	8007020 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8007e82:	4b22      	ldr	r3, [pc, #136]	; (8007f0c <prvAddNewTaskToReadyList+0xe4>)
 8007e84:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8007e88:	4b21      	ldr	r3, [pc, #132]	; (8007f10 <prvAddNewTaskToReadyList+0xe8>)
 8007e8a:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 8007e8c:	4a21      	ldr	r2, [pc, #132]	; (8007f14 <prvAddNewTaskToReadyList+0xec>)
 8007e8e:	6813      	ldr	r3, [r2, #0]
 8007e90:	3301      	adds	r3, #1
 8007e92:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8007e94:	4a20      	ldr	r2, [pc, #128]	; (8007f18 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8007e96:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8007e98:	6811      	ldr	r1, [r2, #0]
 8007e9a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007e9c:	2014      	movs	r0, #20
 8007e9e:	428b      	cmp	r3, r1
 8007ea0:	fb00 7003 	mla	r0, r0, r3, r7
 8007ea4:	f104 0104 	add.w	r1, r4, #4
 8007ea8:	bf88      	it	hi
 8007eaa:	6013      	strhi	r3, [r2, #0]
 8007eac:	f7ff f8c6 	bl	800703c <vListInsertEnd>
	taskEXIT_CRITICAL();
 8007eb0:	f7ff f982 	bl	80071b8 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8007eb4:	4b19      	ldr	r3, [pc, #100]	; (8007f1c <prvAddNewTaskToReadyList+0xf4>)
 8007eb6:	681b      	ldr	r3, [r3, #0]
 8007eb8:	b163      	cbz	r3, 8007ed4 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8007eba:	682b      	ldr	r3, [r5, #0]
 8007ebc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007ebe:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007ec0:	429a      	cmp	r2, r3
 8007ec2:	d207      	bcs.n	8007ed4 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8007ec4:	4b16      	ldr	r3, [pc, #88]	; (8007f20 <prvAddNewTaskToReadyList+0xf8>)
 8007ec6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007eca:	601a      	str	r2, [r3, #0]
 8007ecc:	f3bf 8f4f 	dsb	sy
 8007ed0:	f3bf 8f6f 	isb	sy
}
 8007ed4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8007ed8:	4b10      	ldr	r3, [pc, #64]	; (8007f1c <prvAddNewTaskToReadyList+0xf4>)
 8007eda:	681b      	ldr	r3, [r3, #0]
 8007edc:	2b00      	cmp	r3, #0
 8007ede:	d1d5      	bne.n	8007e8c <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8007ee0:	682b      	ldr	r3, [r5, #0]
 8007ee2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007ee4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007ee6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8007ee8:	bf98      	it	ls
 8007eea:	602c      	strls	r4, [r5, #0]
 8007eec:	e7ce      	b.n	8007e8c <prvAddNewTaskToReadyList+0x64>
 8007eee:	bf00      	nop
 8007ef0:	20011fb4 	.word	0x20011fb4
 8007ef4:	20011b48 	.word	0x20011b48
 8007ef8:	20011b54 	.word	0x20011b54
 8007efc:	20011fe0 	.word	0x20011fe0
 8007f00:	20011ffc 	.word	0x20011ffc
 8007f04:	20012028 	.word	0x20012028
 8007f08:	20012014 	.word	0x20012014
 8007f0c:	20011b4c 	.word	0x20011b4c
 8007f10:	20011b50 	.word	0x20011b50
 8007f14:	20011fc4 	.word	0x20011fc4
 8007f18:	20011fc8 	.word	0x20011fc8
 8007f1c:	20012010 	.word	0x20012010
 8007f20:	e000ed04 	.word	0xe000ed04
 8007f24:	20011fcc 	.word	0x20011fcc

08007f28 <prvDeleteTCB>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelete == 1 )

	static void prvDeleteTCB( TCB_t *pxTCB )
	{
 8007f28:	b510      	push	{r4, lr}
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8007f2a:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 8007f2e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8007f30:	b93b      	cbnz	r3, 8007f42 <prvDeleteTCB+0x1a>
			{
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
 8007f32:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8007f34:	f7ff f83c 	bl	8006fb0 <vPortFree>
				vPortFree( pxTCB );
 8007f38:	4620      	mov	r0, r4
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
				mtCOVERAGE_TEST_MARKER();
			}
		}
		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
	}
 8007f3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8007f3e:	f7ff b837 	b.w	8006fb0 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8007f42:	2b01      	cmp	r3, #1
 8007f44:	d0f9      	beq.n	8007f3a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8007f46:	2b02      	cmp	r3, #2
 8007f48:	d008      	beq.n	8007f5c <prvDeleteTCB+0x34>
 8007f4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f4e:	f383 8811 	msr	BASEPRI, r3
 8007f52:	f3bf 8f6f 	isb	sy
 8007f56:	f3bf 8f4f 	dsb	sy
 8007f5a:	e7fe      	b.n	8007f5a <prvDeleteTCB+0x32>
	}
 8007f5c:	bd10      	pop	{r4, pc}
	...

08007f60 <prvIdleTask>:
{
 8007f60:	b580      	push	{r7, lr}
				taskYIELD();
 8007f62:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8007fc0 <prvIdleTask+0x60>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007f66:	4f12      	ldr	r7, [pc, #72]	; (8007fb0 <prvIdleTask+0x50>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8007f68:	4c12      	ldr	r4, [pc, #72]	; (8007fb4 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8007f6a:	4d13      	ldr	r5, [pc, #76]	; (8007fb8 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8007f6c:	6823      	ldr	r3, [r4, #0]
 8007f6e:	b963      	cbnz	r3, 8007f8a <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8007f70:	4b12      	ldr	r3, [pc, #72]	; (8007fbc <prvIdleTask+0x5c>)
 8007f72:	681b      	ldr	r3, [r3, #0]
 8007f74:	2b01      	cmp	r3, #1
 8007f76:	d9f8      	bls.n	8007f6a <prvIdleTask+0xa>
				taskYIELD();
 8007f78:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007f7c:	f8c8 3000 	str.w	r3, [r8]
 8007f80:	f3bf 8f4f 	dsb	sy
 8007f84:	f3bf 8f6f 	isb	sy
 8007f88:	e7ee      	b.n	8007f68 <prvIdleTask+0x8>
			taskENTER_CRITICAL();
 8007f8a:	f7ff f8f3 	bl	8007174 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007f8e:	68fb      	ldr	r3, [r7, #12]
 8007f90:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8007f92:	1d30      	adds	r0, r6, #4
 8007f94:	f7ff f875 	bl	8007082 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8007f98:	682b      	ldr	r3, [r5, #0]
 8007f9a:	3b01      	subs	r3, #1
 8007f9c:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8007f9e:	6823      	ldr	r3, [r4, #0]
 8007fa0:	3b01      	subs	r3, #1
 8007fa2:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8007fa4:	f7ff f908 	bl	80071b8 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8007fa8:	4630      	mov	r0, r6
 8007faa:	f7ff ffbd 	bl	8007f28 <prvDeleteTCB>
 8007fae:	e7dd      	b.n	8007f6c <prvIdleTask+0xc>
 8007fb0:	20012028 	.word	0x20012028
 8007fb4:	20011fb8 	.word	0x20011fb8
 8007fb8:	20011fb4 	.word	0x20011fb4
 8007fbc:	20011b54 	.word	0x20011b54
 8007fc0:	e000ed04 	.word	0xe000ed04

08007fc4 <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8007fc4:	4a06      	ldr	r2, [pc, #24]	; (8007fe0 <prvResetNextTaskUnblockTime+0x1c>)
 8007fc6:	6813      	ldr	r3, [r2, #0]
 8007fc8:	6819      	ldr	r1, [r3, #0]
 8007fca:	4b06      	ldr	r3, [pc, #24]	; (8007fe4 <prvResetNextTaskUnblockTime+0x20>)
 8007fcc:	b919      	cbnz	r1, 8007fd6 <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 8007fce:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8007fd2:	601a      	str	r2, [r3, #0]
	}
}
 8007fd4:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007fd6:	6812      	ldr	r2, [r2, #0]
 8007fd8:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8007fda:	68d2      	ldr	r2, [r2, #12]
 8007fdc:	6852      	ldr	r2, [r2, #4]
 8007fde:	e7f8      	b.n	8007fd2 <prvResetNextTaskUnblockTime+0xe>
 8007fe0:	20011b4c 	.word	0x20011b4c
 8007fe4:	20011ff4 	.word	0x20011ff4

08007fe8 <prvInitialiseNewTask.isra.2>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007fe8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007fec:	e9dd 6409 	ldrd	r6, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007ff0:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8007ff4:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007ff6:	4607      	mov	r7, r0
 8007ff8:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007ffa:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8007ffc:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007ffe:	4698      	mov	r8, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008000:	f011 fdd7 	bl	8019bb2 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8008004:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008006:	f1a9 0904 	sub.w	r9, r9, #4
 800800a:	4499      	add	r9, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800800c:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8008010:	b3a5      	cbz	r5, 800807c <prvInitialiseNewTask.isra.2+0x94>
 8008012:	1e6b      	subs	r3, r5, #1
 8008014:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8008018:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800801a:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800801e:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8008022:	7819      	ldrb	r1, [r3, #0]
 8008024:	b109      	cbz	r1, 800802a <prvInitialiseNewTask.isra.2+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8008026:	42ab      	cmp	r3, r5
 8008028:	d1f7      	bne.n	800801a <prvInitialiseNewTask.isra.2+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800802a:	2300      	movs	r3, #0
 800802c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8008030:	9d08      	ldr	r5, [sp, #32]
 8008032:	2d37      	cmp	r5, #55	; 0x37
 8008034:	bf28      	it	cs
 8008036:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8008038:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800803c:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800803e:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008040:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8008042:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008046:	f7fe fff6 	bl	8007036 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800804a:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800804e:	f104 0018 	add.w	r0, r4, #24
 8008052:	f7fe fff0 	bl	8007036 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8008056:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800805a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800805c:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800805e:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8008060:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8008064:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8008068:	4642      	mov	r2, r8
 800806a:	4639      	mov	r1, r7
 800806c:	4648      	mov	r0, r9
 800806e:	f7ff f857 	bl	8007120 <pxPortInitialiseStack>
 8008072:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8008074:	b106      	cbz	r6, 8008078 <prvInitialiseNewTask.isra.2+0x90>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008076:	6034      	str	r4, [r6, #0]
}
 8008078:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800807c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8008080:	e7d6      	b.n	8008030 <prvInitialiseNewTask.isra.2+0x48>
	...

08008084 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8008084:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8008086:	4b16      	ldr	r3, [pc, #88]	; (80080e0 <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008088:	4e16      	ldr	r6, [pc, #88]	; (80080e4 <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 800808a:	681c      	ldr	r4, [r3, #0]
{
 800808c:	4605      	mov	r5, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800808e:	6830      	ldr	r0, [r6, #0]
 8008090:	3004      	adds	r0, #4
{
 8008092:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008094:	f7fe fff5 	bl	8007082 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8008098:	1c6b      	adds	r3, r5, #1
 800809a:	4633      	mov	r3, r6
 800809c:	d107      	bne.n	80080ae <prvAddCurrentTaskToDelayedList+0x2a>
 800809e:	b137      	cbz	r7, 80080ae <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80080a0:	6831      	ldr	r1, [r6, #0]
 80080a2:	4811      	ldr	r0, [pc, #68]	; (80080e8 <prvAddCurrentTaskToDelayedList+0x64>)
 80080a4:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80080a6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80080aa:	f7fe bfc7 	b.w	800703c <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80080ae:	681a      	ldr	r2, [r3, #0]
 80080b0:	1964      	adds	r4, r4, r5
 80080b2:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 80080b4:	d307      	bcc.n	80080c6 <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80080b6:	4a0d      	ldr	r2, [pc, #52]	; (80080ec <prvAddCurrentTaskToDelayedList+0x68>)
 80080b8:	6810      	ldr	r0, [r2, #0]
 80080ba:	6819      	ldr	r1, [r3, #0]
}
 80080bc:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80080c0:	3104      	adds	r1, #4
 80080c2:	f7fe bfc7 	b.w	8007054 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80080c6:	4a0a      	ldr	r2, [pc, #40]	; (80080f0 <prvAddCurrentTaskToDelayedList+0x6c>)
 80080c8:	6810      	ldr	r0, [r2, #0]
 80080ca:	6819      	ldr	r1, [r3, #0]
 80080cc:	3104      	adds	r1, #4
 80080ce:	f7fe ffc1 	bl	8007054 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80080d2:	4b08      	ldr	r3, [pc, #32]	; (80080f4 <prvAddCurrentTaskToDelayedList+0x70>)
 80080d4:	681a      	ldr	r2, [r3, #0]
 80080d6:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80080d8:	bf88      	it	hi
 80080da:	601c      	strhi	r4, [r3, #0]
}
 80080dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80080de:	bf00      	nop
 80080e0:	2001203c 	.word	0x2001203c
 80080e4:	20011b48 	.word	0x20011b48
 80080e8:	20012014 	.word	0x20012014
 80080ec:	20011b50 	.word	0x20011b50
 80080f0:	20011b4c 	.word	0x20011b4c
 80080f4:	20011ff4 	.word	0x20011ff4

080080f8 <xTaskCreateStatic>:
	{
 80080f8:	b570      	push	{r4, r5, r6, lr}
 80080fa:	b086      	sub	sp, #24
 80080fc:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8008100:	b945      	cbnz	r5, 8008114 <xTaskCreateStatic+0x1c>
 8008102:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008106:	f383 8811 	msr	BASEPRI, r3
 800810a:	f3bf 8f6f 	isb	sy
 800810e:	f3bf 8f4f 	dsb	sy
 8008112:	e7fe      	b.n	8008112 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8008114:	b944      	cbnz	r4, 8008128 <xTaskCreateStatic+0x30>
 8008116:	f04f 0350 	mov.w	r3, #80	; 0x50
 800811a:	f383 8811 	msr	BASEPRI, r3
 800811e:	f3bf 8f6f 	isb	sy
 8008122:	f3bf 8f4f 	dsb	sy
 8008126:	e7fe      	b.n	8008126 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8008128:	2660      	movs	r6, #96	; 0x60
 800812a:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800812c:	9e05      	ldr	r6, [sp, #20]
 800812e:	2e60      	cmp	r6, #96	; 0x60
 8008130:	d008      	beq.n	8008144 <xTaskCreateStatic+0x4c>
 8008132:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008136:	f383 8811 	msr	BASEPRI, r3
 800813a:	f3bf 8f6f 	isb	sy
 800813e:	f3bf 8f4f 	dsb	sy
 8008142:	e7fe      	b.n	8008142 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8008144:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8008146:	2502      	movs	r5, #2
 8008148:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800814c:	ad04      	add	r5, sp, #16
 800814e:	9501      	str	r5, [sp, #4]
 8008150:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8008152:	9402      	str	r4, [sp, #8]
 8008154:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8008156:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8008158:	f7ff ff46 	bl	8007fe8 <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 800815c:	4620      	mov	r0, r4
 800815e:	f7ff fe63 	bl	8007e28 <prvAddNewTaskToReadyList>
	}
 8008162:	9804      	ldr	r0, [sp, #16]
 8008164:	b006      	add	sp, #24
 8008166:	bd70      	pop	{r4, r5, r6, pc}

08008168 <xTaskCreate>:
	{
 8008168:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800816c:	4607      	mov	r7, r0
 800816e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008170:	0090      	lsls	r0, r2, #2
	{
 8008172:	4688      	mov	r8, r1
 8008174:	4616      	mov	r6, r2
 8008176:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008178:	f7fe fe8e 	bl	8006e98 <pvPortMalloc>
			if( pxStack != NULL )
 800817c:	4605      	mov	r5, r0
 800817e:	b1e8      	cbz	r0, 80081bc <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8008180:	2060      	movs	r0, #96	; 0x60
 8008182:	f7fe fe89 	bl	8006e98 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8008186:	4604      	mov	r4, r0
 8008188:	b1a8      	cbz	r0, 80081b6 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800818a:	2300      	movs	r3, #0
 800818c:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008190:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8008192:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008194:	9301      	str	r3, [sp, #4]
 8008196:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008198:	9002      	str	r0, [sp, #8]
 800819a:	9300      	str	r3, [sp, #0]
 800819c:	4632      	mov	r2, r6
 800819e:	464b      	mov	r3, r9
 80081a0:	4641      	mov	r1, r8
 80081a2:	4638      	mov	r0, r7
 80081a4:	f7ff ff20 	bl	8007fe8 <prvInitialiseNewTask.isra.2>
			prvAddNewTaskToReadyList( pxNewTCB );
 80081a8:	4620      	mov	r0, r4
 80081aa:	f7ff fe3d 	bl	8007e28 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 80081ae:	2001      	movs	r0, #1
	}
 80081b0:	b005      	add	sp, #20
 80081b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 80081b6:	4628      	mov	r0, r5
 80081b8:	f7fe fefa 	bl	8006fb0 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 80081bc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
		return xReturn;
 80081c0:	e7f6      	b.n	80081b0 <xTaskCreate+0x48>
	...

080081c4 <vTaskStartScheduler>:
{
 80081c4:	b510      	push	{r4, lr}
 80081c6:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 80081c8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80081ca:	aa07      	add	r2, sp, #28
 80081cc:	a906      	add	r1, sp, #24
 80081ce:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 80081d0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 80081d4:	f7fe fe24 	bl	8006e20 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 80081d8:	9b05      	ldr	r3, [sp, #20]
 80081da:	9302      	str	r3, [sp, #8]
 80081dc:	9b06      	ldr	r3, [sp, #24]
 80081de:	9a07      	ldr	r2, [sp, #28]
 80081e0:	4915      	ldr	r1, [pc, #84]	; (8008238 <vTaskStartScheduler+0x74>)
 80081e2:	4816      	ldr	r0, [pc, #88]	; (800823c <vTaskStartScheduler+0x78>)
 80081e4:	e9cd 4300 	strd	r4, r3, [sp]
 80081e8:	4623      	mov	r3, r4
 80081ea:	f7ff ff85 	bl	80080f8 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 80081ee:	b1a8      	cbz	r0, 800821c <vTaskStartScheduler+0x58>
			xReturn = xTimerCreateTimerTask();
 80081f0:	f000 fcb4 	bl	8008b5c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 80081f4:	2801      	cmp	r0, #1
 80081f6:	d113      	bne.n	8008220 <vTaskStartScheduler+0x5c>
 80081f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081fc:	f383 8811 	msr	BASEPRI, r3
 8008200:	f3bf 8f6f 	isb	sy
 8008204:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 8008208:	4b0d      	ldr	r3, [pc, #52]	; (8008240 <vTaskStartScheduler+0x7c>)
 800820a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800820e:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008210:	4b0c      	ldr	r3, [pc, #48]	; (8008244 <vTaskStartScheduler+0x80>)
 8008212:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008214:	4b0c      	ldr	r3, [pc, #48]	; (8008248 <vTaskStartScheduler+0x84>)
 8008216:	601c      	str	r4, [r3, #0]
		if( xPortStartScheduler() != pdFALSE )
 8008218:	f7ff f844 	bl	80072a4 <xPortStartScheduler>
}
 800821c:	b008      	add	sp, #32
 800821e:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8008220:	3001      	adds	r0, #1
 8008222:	d1fb      	bne.n	800821c <vTaskStartScheduler+0x58>
 8008224:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008228:	f383 8811 	msr	BASEPRI, r3
 800822c:	f3bf 8f6f 	isb	sy
 8008230:	f3bf 8f4f 	dsb	sy
 8008234:	e7fe      	b.n	8008234 <vTaskStartScheduler+0x70>
 8008236:	bf00      	nop
 8008238:	0801bced 	.word	0x0801bced
 800823c:	08007f61 	.word	0x08007f61
 8008240:	20011ff4 	.word	0x20011ff4
 8008244:	20012010 	.word	0x20012010
 8008248:	2001203c 	.word	0x2001203c

0800824c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800824c:	4a02      	ldr	r2, [pc, #8]	; (8008258 <vTaskSuspendAll+0xc>)
 800824e:	6813      	ldr	r3, [r2, #0]
 8008250:	3301      	adds	r3, #1
 8008252:	6013      	str	r3, [r2, #0]
}
 8008254:	4770      	bx	lr
 8008256:	bf00      	nop
 8008258:	20011fc0 	.word	0x20011fc0

0800825c <xTaskGetTickCount>:
		xTicks = xTickCount;
 800825c:	4b01      	ldr	r3, [pc, #4]	; (8008264 <xTaskGetTickCount+0x8>)
 800825e:	6818      	ldr	r0, [r3, #0]
}
 8008260:	4770      	bx	lr
 8008262:	bf00      	nop
 8008264:	2001203c 	.word	0x2001203c

08008268 <xTaskGetTickCountFromISR>:
{
 8008268:	b508      	push	{r3, lr}
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800826a:	f7ff f8a1 	bl	80073b0 <vPortValidateInterruptPriority>
		xReturn = xTickCount;
 800826e:	4b01      	ldr	r3, [pc, #4]	; (8008274 <xTaskGetTickCountFromISR+0xc>)
 8008270:	6818      	ldr	r0, [r3, #0]
}
 8008272:	bd08      	pop	{r3, pc}
 8008274:	2001203c 	.word	0x2001203c

08008278 <xTaskIncrementTick>:
{
 8008278:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800827c:	4b3b      	ldr	r3, [pc, #236]	; (800836c <xTaskIncrementTick+0xf4>)
 800827e:	681b      	ldr	r3, [r3, #0]
 8008280:	2b00      	cmp	r3, #0
 8008282:	d16c      	bne.n	800835e <xTaskIncrementTick+0xe6>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8008284:	4b3a      	ldr	r3, [pc, #232]	; (8008370 <xTaskIncrementTick+0xf8>)
 8008286:	681c      	ldr	r4, [r3, #0]
 8008288:	3401      	adds	r4, #1
		xTickCount = xConstTickCount;
 800828a:	601c      	str	r4, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800828c:	b9bc      	cbnz	r4, 80082be <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800828e:	4b39      	ldr	r3, [pc, #228]	; (8008374 <xTaskIncrementTick+0xfc>)
 8008290:	681a      	ldr	r2, [r3, #0]
 8008292:	6812      	ldr	r2, [r2, #0]
 8008294:	b142      	cbz	r2, 80082a8 <xTaskIncrementTick+0x30>
 8008296:	f04f 0350 	mov.w	r3, #80	; 0x50
 800829a:	f383 8811 	msr	BASEPRI, r3
 800829e:	f3bf 8f6f 	isb	sy
 80082a2:	f3bf 8f4f 	dsb	sy
 80082a6:	e7fe      	b.n	80082a6 <xTaskIncrementTick+0x2e>
 80082a8:	4a33      	ldr	r2, [pc, #204]	; (8008378 <xTaskIncrementTick+0x100>)
 80082aa:	6819      	ldr	r1, [r3, #0]
 80082ac:	6810      	ldr	r0, [r2, #0]
 80082ae:	6018      	str	r0, [r3, #0]
 80082b0:	6011      	str	r1, [r2, #0]
 80082b2:	4a32      	ldr	r2, [pc, #200]	; (800837c <xTaskIncrementTick+0x104>)
 80082b4:	6813      	ldr	r3, [r2, #0]
 80082b6:	3301      	adds	r3, #1
 80082b8:	6013      	str	r3, [r2, #0]
 80082ba:	f7ff fe83 	bl	8007fc4 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 80082be:	4d30      	ldr	r5, [pc, #192]	; (8008380 <xTaskIncrementTick+0x108>)
 80082c0:	4f30      	ldr	r7, [pc, #192]	; (8008384 <xTaskIncrementTick+0x10c>)
 80082c2:	682b      	ldr	r3, [r5, #0]
 80082c4:	42a3      	cmp	r3, r4
BaseType_t xSwitchRequired = pdFALSE;
 80082c6:	f04f 0b00 	mov.w	fp, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 80082ca:	d911      	bls.n	80082f0 <xTaskIncrementTick+0x78>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 80082cc:	683a      	ldr	r2, [r7, #0]
 80082ce:	4b2e      	ldr	r3, [pc, #184]	; (8008388 <xTaskIncrementTick+0x110>)
 80082d0:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80082d2:	2214      	movs	r2, #20
 80082d4:	434a      	muls	r2, r1
 80082d6:	589a      	ldr	r2, [r3, r2]
				xSwitchRequired = pdTRUE;
 80082d8:	2a02      	cmp	r2, #2
 80082da:	bf28      	it	cs
 80082dc:	f04f 0b01 	movcs.w	fp, #1
		if( xYieldPending != pdFALSE )
 80082e0:	4a2a      	ldr	r2, [pc, #168]	; (800838c <xTaskIncrementTick+0x114>)
 80082e2:	6812      	ldr	r2, [r2, #0]
			xSwitchRequired = pdTRUE;
 80082e4:	2a00      	cmp	r2, #0
}
 80082e6:	bf0c      	ite	eq
 80082e8:	4658      	moveq	r0, fp
 80082ea:	2001      	movne	r0, #1
 80082ec:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80082f0:	f8df 9080 	ldr.w	r9, [pc, #128]	; 8008374 <xTaskIncrementTick+0xfc>
					prvAddTaskToReadyList( pxTCB );
 80082f4:	f8df a09c 	ldr.w	sl, [pc, #156]	; 8008394 <xTaskIncrementTick+0x11c>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80082f8:	f8d9 2000 	ldr.w	r2, [r9]
 80082fc:	6812      	ldr	r2, [r2, #0]
 80082fe:	b91a      	cbnz	r2, 8008308 <xTaskIncrementTick+0x90>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008300:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8008304:	602a      	str	r2, [r5, #0]
					break;
 8008306:	e7e1      	b.n	80082cc <xTaskIncrementTick+0x54>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008308:	f8d9 2000 	ldr.w	r2, [r9]
 800830c:	68d2      	ldr	r2, [r2, #12]
 800830e:	68d6      	ldr	r6, [r2, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8008310:	6871      	ldr	r1, [r6, #4]
					if( xConstTickCount < xItemValue )
 8008312:	428c      	cmp	r4, r1
 8008314:	d201      	bcs.n	800831a <xTaskIncrementTick+0xa2>
						xNextTaskUnblockTime = xItemValue;
 8008316:	6029      	str	r1, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8008318:	e7d8      	b.n	80082cc <xTaskIncrementTick+0x54>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800831a:	f106 0804 	add.w	r8, r6, #4
 800831e:	4640      	mov	r0, r8
 8008320:	f7fe feaf 	bl	8007082 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8008324:	6ab1      	ldr	r1, [r6, #40]	; 0x28
 8008326:	b119      	cbz	r1, 8008330 <xTaskIncrementTick+0xb8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008328:	f106 0018 	add.w	r0, r6, #24
 800832c:	f7fe fea9 	bl	8007082 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008330:	6af0      	ldr	r0, [r6, #44]	; 0x2c
 8008332:	f8da 1000 	ldr.w	r1, [sl]
 8008336:	4b14      	ldr	r3, [pc, #80]	; (8008388 <xTaskIncrementTick+0x110>)
 8008338:	4288      	cmp	r0, r1
 800833a:	f04f 0214 	mov.w	r2, #20
 800833e:	bf88      	it	hi
 8008340:	f8ca 0000 	strhi.w	r0, [sl]
 8008344:	4641      	mov	r1, r8
 8008346:	fb02 3000 	mla	r0, r2, r0, r3
 800834a:	f7fe fe77 	bl	800703c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800834e:	6838      	ldr	r0, [r7, #0]
 8008350:	6af1      	ldr	r1, [r6, #44]	; 0x2c
 8008352:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8008354:	4291      	cmp	r1, r2
 8008356:	bf28      	it	cs
 8008358:	f04f 0b01 	movcs.w	fp, #1
 800835c:	e7cc      	b.n	80082f8 <xTaskIncrementTick+0x80>
		++uxPendedTicks;
 800835e:	4a0c      	ldr	r2, [pc, #48]	; (8008390 <xTaskIncrementTick+0x118>)
 8008360:	6813      	ldr	r3, [r2, #0]
 8008362:	3301      	adds	r3, #1
 8008364:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8008366:	f04f 0b00 	mov.w	fp, #0
 800836a:	e7b9      	b.n	80082e0 <xTaskIncrementTick+0x68>
 800836c:	20011fc0 	.word	0x20011fc0
 8008370:	2001203c 	.word	0x2001203c
 8008374:	20011b4c 	.word	0x20011b4c
 8008378:	20011b50 	.word	0x20011b50
 800837c:	20011ff8 	.word	0x20011ff8
 8008380:	20011ff4 	.word	0x20011ff4
 8008384:	20011b48 	.word	0x20011b48
 8008388:	20011b54 	.word	0x20011b54
 800838c:	20012040 	.word	0x20012040
 8008390:	20011fbc 	.word	0x20011fbc
 8008394:	20011fc8 	.word	0x20011fc8

08008398 <xTaskResumeAll>:
{
 8008398:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	configASSERT( uxSchedulerSuspended );
 800839c:	4c2f      	ldr	r4, [pc, #188]	; (800845c <xTaskResumeAll+0xc4>)
 800839e:	6823      	ldr	r3, [r4, #0]
 80083a0:	b943      	cbnz	r3, 80083b4 <xTaskResumeAll+0x1c>
 80083a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083a6:	f383 8811 	msr	BASEPRI, r3
 80083aa:	f3bf 8f6f 	isb	sy
 80083ae:	f3bf 8f4f 	dsb	sy
 80083b2:	e7fe      	b.n	80083b2 <xTaskResumeAll+0x1a>
	taskENTER_CRITICAL();
 80083b4:	f7fe fede 	bl	8007174 <vPortEnterCritical>
		--uxSchedulerSuspended;
 80083b8:	6823      	ldr	r3, [r4, #0]
 80083ba:	3b01      	subs	r3, #1
 80083bc:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80083be:	6824      	ldr	r4, [r4, #0]
 80083c0:	b12c      	cbz	r4, 80083ce <xTaskResumeAll+0x36>
BaseType_t xAlreadyYielded = pdFALSE;
 80083c2:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80083c4:	f7fe fef8 	bl	80071b8 <vPortExitCritical>
}
 80083c8:	4620      	mov	r0, r4
 80083ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 80083ce:	4b24      	ldr	r3, [pc, #144]	; (8008460 <xTaskResumeAll+0xc8>)
 80083d0:	681b      	ldr	r3, [r3, #0]
 80083d2:	2b00      	cmp	r3, #0
 80083d4:	d0f5      	beq.n	80083c2 <xTaskResumeAll+0x2a>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80083d6:	4d23      	ldr	r5, [pc, #140]	; (8008464 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 80083d8:	4e23      	ldr	r6, [pc, #140]	; (8008468 <xTaskResumeAll+0xd0>)
 80083da:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800847c <xTaskResumeAll+0xe4>
 80083de:	e01d      	b.n	800841c <xTaskResumeAll+0x84>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80083e0:	68eb      	ldr	r3, [r5, #12]
 80083e2:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80083e4:	1d27      	adds	r7, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80083e6:	f104 0018 	add.w	r0, r4, #24
 80083ea:	f7fe fe4a 	bl	8007082 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80083ee:	4638      	mov	r0, r7
 80083f0:	f7fe fe47 	bl	8007082 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80083f4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80083f6:	6832      	ldr	r2, [r6, #0]
 80083f8:	2014      	movs	r0, #20
 80083fa:	4293      	cmp	r3, r2
 80083fc:	fb00 8003 	mla	r0, r0, r3, r8
 8008400:	4639      	mov	r1, r7
 8008402:	bf88      	it	hi
 8008404:	6033      	strhi	r3, [r6, #0]
 8008406:	f7fe fe19 	bl	800703c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800840a:	4b18      	ldr	r3, [pc, #96]	; (800846c <xTaskResumeAll+0xd4>)
 800840c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800840e:	681b      	ldr	r3, [r3, #0]
 8008410:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008412:	429a      	cmp	r2, r3
 8008414:	d302      	bcc.n	800841c <xTaskResumeAll+0x84>
						xYieldPending = pdTRUE;
 8008416:	4b16      	ldr	r3, [pc, #88]	; (8008470 <xTaskResumeAll+0xd8>)
 8008418:	2201      	movs	r2, #1
 800841a:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800841c:	682b      	ldr	r3, [r5, #0]
 800841e:	2b00      	cmp	r3, #0
 8008420:	d1de      	bne.n	80083e0 <xTaskResumeAll+0x48>
				if( pxTCB != NULL )
 8008422:	b10c      	cbz	r4, 8008428 <xTaskResumeAll+0x90>
					prvResetNextTaskUnblockTime();
 8008424:	f7ff fdce 	bl	8007fc4 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8008428:	4d12      	ldr	r5, [pc, #72]	; (8008474 <xTaskResumeAll+0xdc>)
 800842a:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 800842c:	b144      	cbz	r4, 8008440 <xTaskResumeAll+0xa8>
								xYieldPending = pdTRUE;
 800842e:	4e10      	ldr	r6, [pc, #64]	; (8008470 <xTaskResumeAll+0xd8>)
 8008430:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8008432:	f7ff ff21 	bl	8008278 <xTaskIncrementTick>
 8008436:	b100      	cbz	r0, 800843a <xTaskResumeAll+0xa2>
								xYieldPending = pdTRUE;
 8008438:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 800843a:	3c01      	subs	r4, #1
 800843c:	d1f9      	bne.n	8008432 <xTaskResumeAll+0x9a>
						uxPendedTicks = 0;
 800843e:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8008440:	4b0b      	ldr	r3, [pc, #44]	; (8008470 <xTaskResumeAll+0xd8>)
 8008442:	681b      	ldr	r3, [r3, #0]
 8008444:	2b00      	cmp	r3, #0
 8008446:	d0bc      	beq.n	80083c2 <xTaskResumeAll+0x2a>
					taskYIELD_IF_USING_PREEMPTION();
 8008448:	4b0b      	ldr	r3, [pc, #44]	; (8008478 <xTaskResumeAll+0xe0>)
 800844a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800844e:	601a      	str	r2, [r3, #0]
 8008450:	f3bf 8f4f 	dsb	sy
 8008454:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8008458:	2401      	movs	r4, #1
 800845a:	e7b3      	b.n	80083c4 <xTaskResumeAll+0x2c>
 800845c:	20011fc0 	.word	0x20011fc0
 8008460:	20011fb4 	.word	0x20011fb4
 8008464:	20011ffc 	.word	0x20011ffc
 8008468:	20011fc8 	.word	0x20011fc8
 800846c:	20011b48 	.word	0x20011b48
 8008470:	20012040 	.word	0x20012040
 8008474:	20011fbc 	.word	0x20011fbc
 8008478:	e000ed04 	.word	0xe000ed04
 800847c:	20011b54 	.word	0x20011b54

08008480 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008480:	4b18      	ldr	r3, [pc, #96]	; (80084e4 <vTaskSwitchContext+0x64>)
 8008482:	681a      	ldr	r2, [r3, #0]
 8008484:	4b18      	ldr	r3, [pc, #96]	; (80084e8 <vTaskSwitchContext+0x68>)
{
 8008486:	b5f0      	push	{r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008488:	b112      	cbz	r2, 8008490 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800848a:	2201      	movs	r2, #1
 800848c:	601a      	str	r2, [r3, #0]
}
 800848e:	bdf0      	pop	{r4, r5, r6, r7, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008490:	4d16      	ldr	r5, [pc, #88]	; (80084ec <vTaskSwitchContext+0x6c>)
		xYieldPending = pdFALSE;
 8008492:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008494:	4a16      	ldr	r2, [pc, #88]	; (80084f0 <vTaskSwitchContext+0x70>)
 8008496:	682b      	ldr	r3, [r5, #0]
 8008498:	2714      	movs	r7, #20
 800849a:	4616      	mov	r6, r2
 800849c:	fb07 f103 	mul.w	r1, r7, r3
 80084a0:	1850      	adds	r0, r2, r1
 80084a2:	5854      	ldr	r4, [r2, r1]
 80084a4:	b18c      	cbz	r4, 80084ca <vTaskSwitchContext+0x4a>
 80084a6:	6844      	ldr	r4, [r0, #4]
 80084a8:	3108      	adds	r1, #8
 80084aa:	6864      	ldr	r4, [r4, #4]
 80084ac:	6044      	str	r4, [r0, #4]
 80084ae:	440a      	add	r2, r1
 80084b0:	4294      	cmp	r4, r2
 80084b2:	bf04      	itt	eq
 80084b4:	6862      	ldreq	r2, [r4, #4]
 80084b6:	6042      	streq	r2, [r0, #4]
 80084b8:	2214      	movs	r2, #20
 80084ba:	fb02 6203 	mla	r2, r2, r3, r6
 80084be:	6852      	ldr	r2, [r2, #4]
 80084c0:	68d1      	ldr	r1, [r2, #12]
 80084c2:	4a0c      	ldr	r2, [pc, #48]	; (80084f4 <vTaskSwitchContext+0x74>)
 80084c4:	6011      	str	r1, [r2, #0]
 80084c6:	602b      	str	r3, [r5, #0]
}
 80084c8:	e7e1      	b.n	800848e <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80084ca:	b943      	cbnz	r3, 80084de <vTaskSwitchContext+0x5e>
 80084cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084d0:	f383 8811 	msr	BASEPRI, r3
 80084d4:	f3bf 8f6f 	isb	sy
 80084d8:	f3bf 8f4f 	dsb	sy
 80084dc:	e7fe      	b.n	80084dc <vTaskSwitchContext+0x5c>
 80084de:	3b01      	subs	r3, #1
 80084e0:	e7dc      	b.n	800849c <vTaskSwitchContext+0x1c>
 80084e2:	bf00      	nop
 80084e4:	20011fc0 	.word	0x20011fc0
 80084e8:	20012040 	.word	0x20012040
 80084ec:	20011fc8 	.word	0x20011fc8
 80084f0:	20011b54 	.word	0x20011b54
 80084f4:	20011b48 	.word	0x20011b48

080084f8 <vTaskPlaceOnEventList>:
{
 80084f8:	b510      	push	{r4, lr}
 80084fa:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 80084fc:	b940      	cbnz	r0, 8008510 <vTaskPlaceOnEventList+0x18>
 80084fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008502:	f383 8811 	msr	BASEPRI, r3
 8008506:	f3bf 8f6f 	isb	sy
 800850a:	f3bf 8f4f 	dsb	sy
 800850e:	e7fe      	b.n	800850e <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008510:	4b05      	ldr	r3, [pc, #20]	; (8008528 <vTaskPlaceOnEventList+0x30>)
 8008512:	6819      	ldr	r1, [r3, #0]
 8008514:	3118      	adds	r1, #24
 8008516:	f7fe fd9d 	bl	8007054 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800851a:	4620      	mov	r0, r4
 800851c:	2101      	movs	r1, #1
}
 800851e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008522:	f7ff bdaf 	b.w	8008084 <prvAddCurrentTaskToDelayedList>
 8008526:	bf00      	nop
 8008528:	20011b48 	.word	0x20011b48

0800852c <vTaskPlaceOnEventListRestricted>:
	{
 800852c:	b538      	push	{r3, r4, r5, lr}
 800852e:	460d      	mov	r5, r1
 8008530:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8008532:	b940      	cbnz	r0, 8008546 <vTaskPlaceOnEventListRestricted+0x1a>
 8008534:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008538:	f383 8811 	msr	BASEPRI, r3
 800853c:	f3bf 8f6f 	isb	sy
 8008540:	f3bf 8f4f 	dsb	sy
 8008544:	e7fe      	b.n	8008544 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008546:	4b07      	ldr	r3, [pc, #28]	; (8008564 <vTaskPlaceOnEventListRestricted+0x38>)
 8008548:	6819      	ldr	r1, [r3, #0]
 800854a:	3118      	adds	r1, #24
 800854c:	f7fe fd76 	bl	800703c <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008550:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008552:	4621      	mov	r1, r4
 8008554:	bf0c      	ite	eq
 8008556:	4628      	moveq	r0, r5
 8008558:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
	}
 800855c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008560:	f7ff bd90 	b.w	8008084 <prvAddCurrentTaskToDelayedList>
 8008564:	20011b48 	.word	0x20011b48

08008568 <xTaskRemoveFromEventList>:
{
 8008568:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800856a:	68c3      	ldr	r3, [r0, #12]
 800856c:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800856e:	b944      	cbnz	r4, 8008582 <xTaskRemoveFromEventList+0x1a>
 8008570:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008574:	f383 8811 	msr	BASEPRI, r3
 8008578:	f3bf 8f6f 	isb	sy
 800857c:	f3bf 8f4f 	dsb	sy
 8008580:	e7fe      	b.n	8008580 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8008582:	f104 0518 	add.w	r5, r4, #24
 8008586:	4628      	mov	r0, r5
 8008588:	f7fe fd7b 	bl	8007082 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800858c:	4b10      	ldr	r3, [pc, #64]	; (80085d0 <xTaskRemoveFromEventList+0x68>)
 800858e:	681b      	ldr	r3, [r3, #0]
 8008590:	b9db      	cbnz	r3, 80085ca <xTaskRemoveFromEventList+0x62>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 8008592:	1d25      	adds	r5, r4, #4
 8008594:	4628      	mov	r0, r5
 8008596:	f7fe fd74 	bl	8007082 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800859a:	4a0e      	ldr	r2, [pc, #56]	; (80085d4 <xTaskRemoveFromEventList+0x6c>)
 800859c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800859e:	6811      	ldr	r1, [r2, #0]
 80085a0:	428b      	cmp	r3, r1
 80085a2:	bf88      	it	hi
 80085a4:	6013      	strhi	r3, [r2, #0]
 80085a6:	4a0c      	ldr	r2, [pc, #48]	; (80085d8 <xTaskRemoveFromEventList+0x70>)
 80085a8:	2014      	movs	r0, #20
 80085aa:	4629      	mov	r1, r5
 80085ac:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80085b0:	f7fe fd44 	bl	800703c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 80085b4:	4b09      	ldr	r3, [pc, #36]	; (80085dc <xTaskRemoveFromEventList+0x74>)
 80085b6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80085b8:	681b      	ldr	r3, [r3, #0]
 80085ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80085bc:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 80085be:	bf83      	ittte	hi
 80085c0:	4b07      	ldrhi	r3, [pc, #28]	; (80085e0 <xTaskRemoveFromEventList+0x78>)
 80085c2:	2001      	movhi	r0, #1
 80085c4:	6018      	strhi	r0, [r3, #0]
		xReturn = pdFALSE;
 80085c6:	2000      	movls	r0, #0
}
 80085c8:	bd38      	pop	{r3, r4, r5, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80085ca:	4629      	mov	r1, r5
 80085cc:	4805      	ldr	r0, [pc, #20]	; (80085e4 <xTaskRemoveFromEventList+0x7c>)
 80085ce:	e7ef      	b.n	80085b0 <xTaskRemoveFromEventList+0x48>
 80085d0:	20011fc0 	.word	0x20011fc0
 80085d4:	20011fc8 	.word	0x20011fc8
 80085d8:	20011b54 	.word	0x20011b54
 80085dc:	20011b48 	.word	0x20011b48
 80085e0:	20012040 	.word	0x20012040
 80085e4:	20011ffc 	.word	0x20011ffc

080085e8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 80085e8:	4b03      	ldr	r3, [pc, #12]	; (80085f8 <vTaskInternalSetTimeOutState+0x10>)
 80085ea:	681b      	ldr	r3, [r3, #0]
 80085ec:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80085ee:	4b03      	ldr	r3, [pc, #12]	; (80085fc <vTaskInternalSetTimeOutState+0x14>)
 80085f0:	681b      	ldr	r3, [r3, #0]
 80085f2:	6043      	str	r3, [r0, #4]
}
 80085f4:	4770      	bx	lr
 80085f6:	bf00      	nop
 80085f8:	20011ff8 	.word	0x20011ff8
 80085fc:	2001203c 	.word	0x2001203c

08008600 <xTaskCheckForTimeOut>:
{
 8008600:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008602:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008604:	4605      	mov	r5, r0
 8008606:	b940      	cbnz	r0, 800861a <xTaskCheckForTimeOut+0x1a>
 8008608:	f04f 0350 	mov.w	r3, #80	; 0x50
 800860c:	f383 8811 	msr	BASEPRI, r3
 8008610:	f3bf 8f6f 	isb	sy
 8008614:	f3bf 8f4f 	dsb	sy
 8008618:	e7fe      	b.n	8008618 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800861a:	b941      	cbnz	r1, 800862e <xTaskCheckForTimeOut+0x2e>
 800861c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008620:	f383 8811 	msr	BASEPRI, r3
 8008624:	f3bf 8f6f 	isb	sy
 8008628:	f3bf 8f4f 	dsb	sy
 800862c:	e7fe      	b.n	800862c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800862e:	f7fe fda1 	bl	8007174 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008632:	4b0f      	ldr	r3, [pc, #60]	; (8008670 <xTaskCheckForTimeOut+0x70>)
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008634:	6868      	ldr	r0, [r5, #4]
		const TickType_t xConstTickCount = xTickCount;
 8008636:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008638:	6823      	ldr	r3, [r4, #0]
 800863a:	1c5e      	adds	r6, r3, #1
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800863c:	eba1 0200 	sub.w	r2, r1, r0
			if( *pxTicksToWait == portMAX_DELAY )
 8008640:	d00d      	beq.n	800865e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008642:	4e0c      	ldr	r6, [pc, #48]	; (8008674 <xTaskCheckForTimeOut+0x74>)
 8008644:	682f      	ldr	r7, [r5, #0]
 8008646:	6836      	ldr	r6, [r6, #0]
 8008648:	42b7      	cmp	r7, r6
 800864a:	d001      	beq.n	8008650 <xTaskCheckForTimeOut+0x50>
 800864c:	4288      	cmp	r0, r1
 800864e:	d90d      	bls.n	800866c <xTaskCheckForTimeOut+0x6c>
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8008650:	4293      	cmp	r3, r2
 8008652:	d909      	bls.n	8008668 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008654:	1a9b      	subs	r3, r3, r2
 8008656:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008658:	4628      	mov	r0, r5
 800865a:	f7ff ffc5 	bl	80085e8 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800865e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008660:	f7fe fdaa 	bl	80071b8 <vPortExitCritical>
}
 8008664:	4620      	mov	r0, r4
 8008666:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			*pxTicksToWait = 0;
 8008668:	2300      	movs	r3, #0
 800866a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800866c:	2401      	movs	r4, #1
 800866e:	e7f7      	b.n	8008660 <xTaskCheckForTimeOut+0x60>
 8008670:	2001203c 	.word	0x2001203c
 8008674:	20011ff8 	.word	0x20011ff8

08008678 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008678:	4b01      	ldr	r3, [pc, #4]	; (8008680 <vTaskMissedYield+0x8>)
 800867a:	2201      	movs	r2, #1
 800867c:	601a      	str	r2, [r3, #0]
}
 800867e:	4770      	bx	lr
 8008680:	20012040 	.word	0x20012040

08008684 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008684:	4b05      	ldr	r3, [pc, #20]	; (800869c <xTaskGetSchedulerState+0x18>)
 8008686:	681b      	ldr	r3, [r3, #0]
 8008688:	b133      	cbz	r3, 8008698 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800868a:	4b05      	ldr	r3, [pc, #20]	; (80086a0 <xTaskGetSchedulerState+0x1c>)
 800868c:	681b      	ldr	r3, [r3, #0]
 800868e:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 8008690:	bf0c      	ite	eq
 8008692:	2002      	moveq	r0, #2
 8008694:	2000      	movne	r0, #0
 8008696:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008698:	2001      	movs	r0, #1
	}
 800869a:	4770      	bx	lr
 800869c:	20012010 	.word	0x20012010
 80086a0:	20011fc0 	.word	0x20011fc0

080086a4 <xTaskPriorityInherit>:
	{
 80086a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
 80086a6:	4604      	mov	r4, r0
 80086a8:	b340      	cbz	r0, 80086fc <xTaskPriorityInherit+0x58>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 80086aa:	4a1b      	ldr	r2, [pc, #108]	; (8008718 <xTaskPriorityInherit+0x74>)
 80086ac:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80086ae:	6811      	ldr	r1, [r2, #0]
 80086b0:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 80086b2:	428b      	cmp	r3, r1
 80086b4:	4616      	mov	r6, r2
 80086b6:	d226      	bcs.n	8008706 <xTaskPriorityInherit+0x62>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80086b8:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80086ba:	4d18      	ldr	r5, [pc, #96]	; (800871c <xTaskPriorityInherit+0x78>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80086bc:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80086be:	bfa1      	itttt	ge
 80086c0:	6832      	ldrge	r2, [r6, #0]
 80086c2:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 80086c4:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 80086c8:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80086ca:	2214      	movs	r2, #20
 80086cc:	fb02 5303 	mla	r3, r2, r3, r5
 80086d0:	6942      	ldr	r2, [r0, #20]
 80086d2:	429a      	cmp	r2, r3
 80086d4:	d113      	bne.n	80086fe <xTaskPriorityInherit+0x5a>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80086d6:	1d07      	adds	r7, r0, #4
 80086d8:	4638      	mov	r0, r7
 80086da:	f7fe fcd2 	bl	8007082 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80086de:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80086e0:	4a0f      	ldr	r2, [pc, #60]	; (8008720 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80086e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80086e4:	6811      	ldr	r1, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80086e6:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80086e8:	2014      	movs	r0, #20
 80086ea:	428b      	cmp	r3, r1
 80086ec:	fb00 5003 	mla	r0, r0, r3, r5
 80086f0:	4639      	mov	r1, r7
 80086f2:	bf88      	it	hi
 80086f4:	6013      	strhi	r3, [r2, #0]
 80086f6:	f7fe fca1 	bl	800703c <vListInsertEnd>
				xReturn = pdTRUE;
 80086fa:	2001      	movs	r0, #1
	}
 80086fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80086fe:	6833      	ldr	r3, [r6, #0]
 8008700:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008702:	62c3      	str	r3, [r0, #44]	; 0x2c
 8008704:	e7f9      	b.n	80086fa <xTaskPriorityInherit+0x56>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8008706:	6813      	ldr	r3, [r2, #0]
 8008708:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800870a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800870c:	42a0      	cmp	r0, r4
 800870e:	bf2c      	ite	cs
 8008710:	2000      	movcs	r0, #0
 8008712:	2001      	movcc	r0, #1
 8008714:	e7f2      	b.n	80086fc <xTaskPriorityInherit+0x58>
 8008716:	bf00      	nop
 8008718:	20011b48 	.word	0x20011b48
 800871c:	20011b54 	.word	0x20011b54
 8008720:	20011fc8 	.word	0x20011fc8

08008724 <xTaskPriorityDisinherit>:
	{
 8008724:	b538      	push	{r3, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008726:	b908      	cbnz	r0, 800872c <xTaskPriorityDisinherit+0x8>
	BaseType_t xReturn = pdFALSE;
 8008728:	2000      	movs	r0, #0
	}
 800872a:	bd38      	pop	{r3, r4, r5, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800872c:	4b1b      	ldr	r3, [pc, #108]	; (800879c <xTaskPriorityDisinherit+0x78>)
 800872e:	681c      	ldr	r4, [r3, #0]
 8008730:	4284      	cmp	r4, r0
 8008732:	d008      	beq.n	8008746 <xTaskPriorityDisinherit+0x22>
 8008734:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008738:	f383 8811 	msr	BASEPRI, r3
 800873c:	f3bf 8f6f 	isb	sy
 8008740:	f3bf 8f4f 	dsb	sy
 8008744:	e7fe      	b.n	8008744 <xTaskPriorityDisinherit+0x20>
			configASSERT( pxTCB->uxMutexesHeld );
 8008746:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8008748:	b943      	cbnz	r3, 800875c <xTaskPriorityDisinherit+0x38>
 800874a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800874e:	f383 8811 	msr	BASEPRI, r3
 8008752:	f3bf 8f6f 	isb	sy
 8008756:	f3bf 8f4f 	dsb	sy
 800875a:	e7fe      	b.n	800875a <xTaskPriorityDisinherit+0x36>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800875c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800875e:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8008760:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008762:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8008764:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008766:	d0df      	beq.n	8008728 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8008768:	2b00      	cmp	r3, #0
 800876a:	d1dd      	bne.n	8008728 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800876c:	1d25      	adds	r5, r4, #4
 800876e:	4628      	mov	r0, r5
 8008770:	f7fe fc87 	bl	8007082 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008774:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8008776:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008778:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800877c:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800877e:	4a08      	ldr	r2, [pc, #32]	; (80087a0 <xTaskPriorityDisinherit+0x7c>)
 8008780:	6811      	ldr	r1, [r2, #0]
 8008782:	428b      	cmp	r3, r1
 8008784:	bf88      	it	hi
 8008786:	6013      	strhi	r3, [r2, #0]
 8008788:	4a06      	ldr	r2, [pc, #24]	; (80087a4 <xTaskPriorityDisinherit+0x80>)
 800878a:	2014      	movs	r0, #20
 800878c:	fb00 2003 	mla	r0, r0, r3, r2
 8008790:	4629      	mov	r1, r5
 8008792:	f7fe fc53 	bl	800703c <vListInsertEnd>
					xReturn = pdTRUE;
 8008796:	2001      	movs	r0, #1
		return xReturn;
 8008798:	e7c7      	b.n	800872a <xTaskPriorityDisinherit+0x6>
 800879a:	bf00      	nop
 800879c:	20011b48 	.word	0x20011b48
 80087a0:	20011fc8 	.word	0x20011fc8
 80087a4:	20011b54 	.word	0x20011b54

080087a8 <vTaskPriorityDisinheritAfterTimeout>:
	{
 80087a8:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 80087aa:	4604      	mov	r4, r0
 80087ac:	2800      	cmp	r0, #0
 80087ae:	d041      	beq.n	8008834 <vTaskPriorityDisinheritAfterTimeout+0x8c>
			configASSERT( pxTCB->uxMutexesHeld );
 80087b0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 80087b2:	b942      	cbnz	r2, 80087c6 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 80087b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087b8:	f383 8811 	msr	BASEPRI, r3
 80087bc:	f3bf 8f6f 	isb	sy
 80087c0:	f3bf 8f4f 	dsb	sy
 80087c4:	e7fe      	b.n	80087c4 <vTaskPriorityDisinheritAfterTimeout+0x1c>
 80087c6:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80087c8:	4299      	cmp	r1, r3
 80087ca:	bf38      	it	cc
 80087cc:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 80087ce:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80087d0:	428b      	cmp	r3, r1
 80087d2:	d02f      	beq.n	8008834 <vTaskPriorityDisinheritAfterTimeout+0x8c>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 80087d4:	2a01      	cmp	r2, #1
 80087d6:	d12d      	bne.n	8008834 <vTaskPriorityDisinheritAfterTimeout+0x8c>
					configASSERT( pxTCB != pxCurrentTCB );
 80087d8:	4a17      	ldr	r2, [pc, #92]	; (8008838 <vTaskPriorityDisinheritAfterTimeout+0x90>)
 80087da:	6812      	ldr	r2, [r2, #0]
 80087dc:	4282      	cmp	r2, r0
 80087de:	d108      	bne.n	80087f2 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 80087e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087e4:	f383 8811 	msr	BASEPRI, r3
 80087e8:	f3bf 8f6f 	isb	sy
 80087ec:	f3bf 8f4f 	dsb	sy
 80087f0:	e7fe      	b.n	80087f0 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80087f2:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80087f4:	4d11      	ldr	r5, [pc, #68]	; (800883c <vTaskPriorityDisinheritAfterTimeout+0x94>)
					pxTCB->uxPriority = uxPriorityToUse;
 80087f6:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80087f8:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80087fa:	f04f 0214 	mov.w	r2, #20
 80087fe:	fb02 5303 	mla	r3, r2, r3, r5
 8008802:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008804:	bfa4      	itt	ge
 8008806:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800880a:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800880c:	429a      	cmp	r2, r3
 800880e:	d111      	bne.n	8008834 <vTaskPriorityDisinheritAfterTimeout+0x8c>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008810:	1d06      	adds	r6, r0, #4
 8008812:	4630      	mov	r0, r6
 8008814:	f7fe fc35 	bl	8007082 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8008818:	4a09      	ldr	r2, [pc, #36]	; (8008840 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800881a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800881c:	6811      	ldr	r1, [r2, #0]
 800881e:	2014      	movs	r0, #20
 8008820:	428b      	cmp	r3, r1
 8008822:	fb00 5003 	mla	r0, r0, r3, r5
 8008826:	4631      	mov	r1, r6
	}
 8008828:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
 800882c:	bf88      	it	hi
 800882e:	6013      	strhi	r3, [r2, #0]
 8008830:	f7fe bc04 	b.w	800703c <vListInsertEnd>
	}
 8008834:	bd70      	pop	{r4, r5, r6, pc}
 8008836:	bf00      	nop
 8008838:	20011b48 	.word	0x20011b48
 800883c:	20011b54 	.word	0x20011b54
 8008840:	20011fc8 	.word	0x20011fc8

08008844 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8008844:	4b04      	ldr	r3, [pc, #16]	; (8008858 <pvTaskIncrementMutexHeldCount+0x14>)
 8008846:	681a      	ldr	r2, [r3, #0]
 8008848:	b11a      	cbz	r2, 8008852 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800884a:	6819      	ldr	r1, [r3, #0]
 800884c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800884e:	3201      	adds	r2, #1
 8008850:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8008852:	6818      	ldr	r0, [r3, #0]
	}
 8008854:	4770      	bx	lr
 8008856:	bf00      	nop
 8008858:	20011b48 	.word	0x20011b48

0800885c <ulTaskNotifyTake>:
	{
 800885c:	b570      	push	{r4, r5, r6, lr}
			if( pxCurrentTCB->ulNotifiedValue == 0UL )
 800885e:	4c16      	ldr	r4, [pc, #88]	; (80088b8 <ulTaskNotifyTake+0x5c>)
	{
 8008860:	4606      	mov	r6, r0
 8008862:	460d      	mov	r5, r1
		taskENTER_CRITICAL();
 8008864:	f7fe fc86 	bl	8007174 <vPortEnterCritical>
			if( pxCurrentTCB->ulNotifiedValue == 0UL )
 8008868:	6823      	ldr	r3, [r4, #0]
 800886a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800886c:	b97b      	cbnz	r3, 800888e <ulTaskNotifyTake+0x32>
				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
 800886e:	6823      	ldr	r3, [r4, #0]
 8008870:	2101      	movs	r1, #1
 8008872:	f883 105c 	strb.w	r1, [r3, #92]	; 0x5c
				if( xTicksToWait > ( TickType_t ) 0 )
 8008876:	b155      	cbz	r5, 800888e <ulTaskNotifyTake+0x32>
					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008878:	4628      	mov	r0, r5
 800887a:	f7ff fc03 	bl	8008084 <prvAddCurrentTaskToDelayedList>
					portYIELD_WITHIN_API();
 800887e:	4b0f      	ldr	r3, [pc, #60]	; (80088bc <ulTaskNotifyTake+0x60>)
 8008880:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008884:	601a      	str	r2, [r3, #0]
 8008886:	f3bf 8f4f 	dsb	sy
 800888a:	f3bf 8f6f 	isb	sy
		taskEXIT_CRITICAL();
 800888e:	f7fe fc93 	bl	80071b8 <vPortExitCritical>
		taskENTER_CRITICAL();
 8008892:	f7fe fc6f 	bl	8007174 <vPortEnterCritical>
			ulReturn = pxCurrentTCB->ulNotifiedValue;
 8008896:	6823      	ldr	r3, [r4, #0]
 8008898:	6d9d      	ldr	r5, [r3, #88]	; 0x58
			if( ulReturn != 0UL )
 800889a:	b11d      	cbz	r5, 80088a4 <ulTaskNotifyTake+0x48>
					pxCurrentTCB->ulNotifiedValue = 0UL;
 800889c:	6823      	ldr	r3, [r4, #0]
				if( xClearCountOnExit != pdFALSE )
 800889e:	b14e      	cbz	r6, 80088b4 <ulTaskNotifyTake+0x58>
					pxCurrentTCB->ulNotifiedValue = 0UL;
 80088a0:	2200      	movs	r2, #0
					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
 80088a2:	659a      	str	r2, [r3, #88]	; 0x58
			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 80088a4:	6823      	ldr	r3, [r4, #0]
 80088a6:	2200      	movs	r2, #0
 80088a8:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
		taskEXIT_CRITICAL();
 80088ac:	f7fe fc84 	bl	80071b8 <vPortExitCritical>
	}
 80088b0:	4628      	mov	r0, r5
 80088b2:	bd70      	pop	{r4, r5, r6, pc}
					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
 80088b4:	1e6a      	subs	r2, r5, #1
 80088b6:	e7f4      	b.n	80088a2 <ulTaskNotifyTake+0x46>
 80088b8:	20011b48 	.word	0x20011b48
 80088bc:	e000ed04 	.word	0xe000ed04

080088c0 <xTaskGenericNotify>:
	{
 80088c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80088c2:	460d      	mov	r5, r1
 80088c4:	4616      	mov	r6, r2
 80088c6:	461f      	mov	r7, r3
		configASSERT( xTaskToNotify );
 80088c8:	4604      	mov	r4, r0
 80088ca:	b940      	cbnz	r0, 80088de <xTaskGenericNotify+0x1e>
 80088cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088d0:	f383 8811 	msr	BASEPRI, r3
 80088d4:	f3bf 8f6f 	isb	sy
 80088d8:	f3bf 8f4f 	dsb	sy
 80088dc:	e7fe      	b.n	80088dc <xTaskGenericNotify+0x1c>
		taskENTER_CRITICAL();
 80088de:	f7fe fc49 	bl	8007174 <vPortEnterCritical>
			if( pulPreviousNotificationValue != NULL )
 80088e2:	b10f      	cbz	r7, 80088e8 <xTaskGenericNotify+0x28>
				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
 80088e4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80088e6:	603b      	str	r3, [r7, #0]
			ucOriginalNotifyState = pxTCB->ucNotifyState;
 80088e8:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 80088ec:	2202      	movs	r2, #2
			ucOriginalNotifyState = pxTCB->ucNotifyState;
 80088ee:	b2db      	uxtb	r3, r3
			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 80088f0:	f884 205c 	strb.w	r2, [r4, #92]	; 0x5c
			switch( eAction )
 80088f4:	2e04      	cmp	r6, #4
 80088f6:	d816      	bhi.n	8008926 <xTaskGenericNotify+0x66>
 80088f8:	e8df f006 	tbb	[pc, r6]
 80088fc:	0507030a 	.word	0x0507030a
 8008900:	11          	.byte	0x11
 8008901:	00          	.byte	0x00
					pxTCB->ulNotifiedValue |= ulValue;
 8008902:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8008904:	430d      	orrs	r5, r1
						pxTCB->ulNotifiedValue = ulValue;
 8008906:	65a5      	str	r5, [r4, #88]	; 0x58
 8008908:	e002      	b.n	8008910 <xTaskGenericNotify+0x50>
					( pxTCB->ulNotifiedValue )++;
 800890a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 800890c:	3201      	adds	r2, #1
 800890e:	65a2      	str	r2, [r4, #88]	; 0x58
			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 8008910:	2b01      	cmp	r3, #1
 8008912:	d014      	beq.n	800893e <xTaskGenericNotify+0x7e>
 8008914:	2401      	movs	r4, #1
		taskEXIT_CRITICAL();
 8008916:	f7fe fc4f 	bl	80071b8 <vPortExitCritical>
	}
 800891a:	4620      	mov	r0, r4
 800891c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
 800891e:	2b02      	cmp	r3, #2
 8008920:	d1f1      	bne.n	8008906 <xTaskGenericNotify+0x46>
						xReturn = pdFAIL;
 8008922:	2400      	movs	r4, #0
 8008924:	e7f7      	b.n	8008916 <xTaskGenericNotify+0x56>
					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
 8008926:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8008928:	3201      	adds	r2, #1
 800892a:	d0f1      	beq.n	8008910 <xTaskGenericNotify+0x50>
 800892c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008930:	f383 8811 	msr	BASEPRI, r3
 8008934:	f3bf 8f6f 	isb	sy
 8008938:	f3bf 8f4f 	dsb	sy
 800893c:	e7fe      	b.n	800893c <xTaskGenericNotify+0x7c>
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800893e:	1d25      	adds	r5, r4, #4
 8008940:	4628      	mov	r0, r5
 8008942:	f7fe fb9e 	bl	8007082 <uxListRemove>
				prvAddTaskToReadyList( pxTCB );
 8008946:	4a13      	ldr	r2, [pc, #76]	; (8008994 <xTaskGenericNotify+0xd4>)
 8008948:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800894a:	6811      	ldr	r1, [r2, #0]
 800894c:	428b      	cmp	r3, r1
 800894e:	bf88      	it	hi
 8008950:	6013      	strhi	r3, [r2, #0]
 8008952:	4a11      	ldr	r2, [pc, #68]	; (8008998 <xTaskGenericNotify+0xd8>)
 8008954:	2014      	movs	r0, #20
 8008956:	fb00 2003 	mla	r0, r0, r3, r2
 800895a:	4629      	mov	r1, r5
 800895c:	f7fe fb6e 	bl	800703c <vListInsertEnd>
				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 8008960:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8008962:	b143      	cbz	r3, 8008976 <xTaskGenericNotify+0xb6>
 8008964:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008968:	f383 8811 	msr	BASEPRI, r3
 800896c:	f3bf 8f6f 	isb	sy
 8008970:	f3bf 8f4f 	dsb	sy
 8008974:	e7fe      	b.n	8008974 <xTaskGenericNotify+0xb4>
				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008976:	4b09      	ldr	r3, [pc, #36]	; (800899c <xTaskGenericNotify+0xdc>)
 8008978:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800897a:	681b      	ldr	r3, [r3, #0]
 800897c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800897e:	429a      	cmp	r2, r3
 8008980:	d9c8      	bls.n	8008914 <xTaskGenericNotify+0x54>
					taskYIELD_IF_USING_PREEMPTION();
 8008982:	4b07      	ldr	r3, [pc, #28]	; (80089a0 <xTaskGenericNotify+0xe0>)
 8008984:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008988:	601a      	str	r2, [r3, #0]
 800898a:	f3bf 8f4f 	dsb	sy
 800898e:	f3bf 8f6f 	isb	sy
 8008992:	e7bf      	b.n	8008914 <xTaskGenericNotify+0x54>
 8008994:	20011fc8 	.word	0x20011fc8
 8008998:	20011b54 	.word	0x20011b54
 800899c:	20011b48 	.word	0x20011b48
 80089a0:	e000ed04 	.word	0xe000ed04

080089a4 <xTaskGenericNotifyFromISR>:
	{
 80089a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80089a8:	9f08      	ldr	r7, [sp, #32]
 80089aa:	460d      	mov	r5, r1
 80089ac:	4690      	mov	r8, r2
 80089ae:	4699      	mov	r9, r3
		configASSERT( xTaskToNotify );
 80089b0:	4604      	mov	r4, r0
 80089b2:	b940      	cbnz	r0, 80089c6 <xTaskGenericNotifyFromISR+0x22>
 80089b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089b8:	f383 8811 	msr	BASEPRI, r3
 80089bc:	f3bf 8f6f 	isb	sy
 80089c0:	f3bf 8f4f 	dsb	sy
 80089c4:	e7fe      	b.n	80089c4 <xTaskGenericNotifyFromISR+0x20>
		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80089c6:	f7fe fcf3 	bl	80073b0 <vPortValidateInterruptPriority>
	__asm volatile
 80089ca:	f3ef 8611 	mrs	r6, BASEPRI
 80089ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80089d2:	f383 8811 	msr	BASEPRI, r3
 80089d6:	f3bf 8f6f 	isb	sy
 80089da:	f3bf 8f4f 	dsb	sy
			if( pulPreviousNotificationValue != NULL )
 80089de:	f1b9 0f00 	cmp.w	r9, #0
 80089e2:	d002      	beq.n	80089ea <xTaskGenericNotifyFromISR+0x46>
				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
 80089e4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80089e6:	f8c9 3000 	str.w	r3, [r9]
			ucOriginalNotifyState = pxTCB->ucNotifyState;
 80089ea:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 80089ee:	2202      	movs	r2, #2
			ucOriginalNotifyState = pxTCB->ucNotifyState;
 80089f0:	b2db      	uxtb	r3, r3
			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 80089f2:	f884 205c 	strb.w	r2, [r4, #92]	; 0x5c
			switch( eAction )
 80089f6:	f1b8 0f04 	cmp.w	r8, #4
 80089fa:	d816      	bhi.n	8008a2a <xTaskGenericNotifyFromISR+0x86>
 80089fc:	e8df f008 	tbb	[pc, r8]
 8008a00:	0507030a 	.word	0x0507030a
 8008a04:	11          	.byte	0x11
 8008a05:	00          	.byte	0x00
					pxTCB->ulNotifiedValue |= ulValue;
 8008a06:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8008a08:	430d      	orrs	r5, r1
						pxTCB->ulNotifiedValue = ulValue;
 8008a0a:	65a5      	str	r5, [r4, #88]	; 0x58
 8008a0c:	e002      	b.n	8008a14 <xTaskGenericNotifyFromISR+0x70>
					( pxTCB->ulNotifiedValue )++;
 8008a0e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8008a10:	3201      	adds	r2, #1
 8008a12:	65a2      	str	r2, [r4, #88]	; 0x58
			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 8008a14:	2b01      	cmp	r3, #1
 8008a16:	d014      	beq.n	8008a42 <xTaskGenericNotifyFromISR+0x9e>
 8008a18:	2001      	movs	r0, #1
	__asm volatile
 8008a1a:	f386 8811 	msr	BASEPRI, r6
	}
 8008a1e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
 8008a22:	2b02      	cmp	r3, #2
 8008a24:	d1f1      	bne.n	8008a0a <xTaskGenericNotifyFromISR+0x66>
						xReturn = pdFAIL;
 8008a26:	2000      	movs	r0, #0
 8008a28:	e7f7      	b.n	8008a1a <xTaskGenericNotifyFromISR+0x76>
					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
 8008a2a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8008a2c:	3201      	adds	r2, #1
 8008a2e:	d0f1      	beq.n	8008a14 <xTaskGenericNotifyFromISR+0x70>
	__asm volatile
 8008a30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a34:	f383 8811 	msr	BASEPRI, r3
 8008a38:	f3bf 8f6f 	isb	sy
 8008a3c:	f3bf 8f4f 	dsb	sy
 8008a40:	e7fe      	b.n	8008a40 <xTaskGenericNotifyFromISR+0x9c>
				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 8008a42:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8008a44:	b143      	cbz	r3, 8008a58 <xTaskGenericNotifyFromISR+0xb4>
 8008a46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a4a:	f383 8811 	msr	BASEPRI, r3
 8008a4e:	f3bf 8f6f 	isb	sy
 8008a52:	f3bf 8f4f 	dsb	sy
 8008a56:	e7fe      	b.n	8008a56 <xTaskGenericNotifyFromISR+0xb2>
				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008a58:	4b11      	ldr	r3, [pc, #68]	; (8008aa0 <xTaskGenericNotifyFromISR+0xfc>)
 8008a5a:	681b      	ldr	r3, [r3, #0]
 8008a5c:	b9e3      	cbnz	r3, 8008a98 <xTaskGenericNotifyFromISR+0xf4>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008a5e:	1d25      	adds	r5, r4, #4
 8008a60:	4628      	mov	r0, r5
 8008a62:	f7fe fb0e 	bl	8007082 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008a66:	4a0f      	ldr	r2, [pc, #60]	; (8008aa4 <xTaskGenericNotifyFromISR+0x100>)
 8008a68:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008a6a:	6811      	ldr	r1, [r2, #0]
 8008a6c:	428b      	cmp	r3, r1
 8008a6e:	bf88      	it	hi
 8008a70:	6013      	strhi	r3, [r2, #0]
 8008a72:	4a0d      	ldr	r2, [pc, #52]	; (8008aa8 <xTaskGenericNotifyFromISR+0x104>)
 8008a74:	2014      	movs	r0, #20
 8008a76:	4629      	mov	r1, r5
 8008a78:	fb00 2003 	mla	r0, r0, r3, r2
					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 8008a7c:	f7fe fade 	bl	800703c <vListInsertEnd>
				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008a80:	4b0a      	ldr	r3, [pc, #40]	; (8008aac <xTaskGenericNotifyFromISR+0x108>)
 8008a82:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008a84:	681b      	ldr	r3, [r3, #0]
 8008a86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a88:	429a      	cmp	r2, r3
 8008a8a:	d9c5      	bls.n	8008a18 <xTaskGenericNotifyFromISR+0x74>
 8008a8c:	2301      	movs	r3, #1
					if( pxHigherPriorityTaskWoken != NULL )
 8008a8e:	b107      	cbz	r7, 8008a92 <xTaskGenericNotifyFromISR+0xee>
						*pxHigherPriorityTaskWoken = pdTRUE;
 8008a90:	603b      	str	r3, [r7, #0]
					xYieldPending = pdTRUE;
 8008a92:	4a07      	ldr	r2, [pc, #28]	; (8008ab0 <xTaskGenericNotifyFromISR+0x10c>)
 8008a94:	6013      	str	r3, [r2, #0]
 8008a96:	e7bf      	b.n	8008a18 <xTaskGenericNotifyFromISR+0x74>
					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 8008a98:	f104 0118 	add.w	r1, r4, #24
 8008a9c:	4805      	ldr	r0, [pc, #20]	; (8008ab4 <xTaskGenericNotifyFromISR+0x110>)
 8008a9e:	e7ed      	b.n	8008a7c <xTaskGenericNotifyFromISR+0xd8>
 8008aa0:	20011fc0 	.word	0x20011fc0
 8008aa4:	20011fc8 	.word	0x20011fc8
 8008aa8:	20011b54 	.word	0x20011b54
 8008aac:	20011b48 	.word	0x20011b48
 8008ab0:	20012040 	.word	0x20012040
 8008ab4:	20011ffc 	.word	0x20011ffc

08008ab8 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8008ab8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8008aba:	4c11      	ldr	r4, [pc, #68]	; (8008b00 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8008abc:	f7fe fb5a 	bl	8007174 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8008ac0:	6825      	ldr	r5, [r4, #0]
 8008ac2:	b9bd      	cbnz	r5, 8008af4 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8008ac4:	4f0f      	ldr	r7, [pc, #60]	; (8008b04 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8008ac6:	4e10      	ldr	r6, [pc, #64]	; (8008b08 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8008ac8:	4638      	mov	r0, r7
 8008aca:	f7fe faa9 	bl	8007020 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8008ace:	4630      	mov	r0, r6
 8008ad0:	f7fe faa6 	bl	8007020 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8008ad4:	4b0d      	ldr	r3, [pc, #52]	; (8008b0c <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008ad6:	4a0e      	ldr	r2, [pc, #56]	; (8008b10 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8008ad8:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8008ada:	4b0e      	ldr	r3, [pc, #56]	; (8008b14 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008adc:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8008ade:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008ae0:	200a      	movs	r0, #10
 8008ae2:	9500      	str	r5, [sp, #0]
 8008ae4:	4b0c      	ldr	r3, [pc, #48]	; (8008b18 <prvCheckForValidListAndQueue+0x60>)
 8008ae6:	f7fe fd5d 	bl	80075a4 <xQueueGenericCreateStatic>
 8008aea:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8008aec:	b110      	cbz	r0, 8008af4 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8008aee:	490b      	ldr	r1, [pc, #44]	; (8008b1c <prvCheckForValidListAndQueue+0x64>)
 8008af0:	f7ff f93a 	bl	8007d68 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8008af4:	b003      	add	sp, #12
 8008af6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8008afa:	f7fe bb5d 	b.w	80071b8 <vPortExitCritical>
 8008afe:	bf00      	nop
 8008b00:	20012168 	.word	0x20012168
 8008b04:	200120ec 	.word	0x200120ec
 8008b08:	20012100 	.word	0x20012100
 8008b0c:	20012044 	.word	0x20012044
 8008b10:	2001204c 	.word	0x2001204c
 8008b14:	20012048 	.word	0x20012048
 8008b18:	20012118 	.word	0x20012118
 8008b1c:	0801bcf2 	.word	0x0801bcf2

08008b20 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8008b20:	4291      	cmp	r1, r2
{
 8008b22:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8008b24:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008b26:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8008b28:	d80a      	bhi.n	8008b40 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008b2a:	1ad2      	subs	r2, r2, r3
 8008b2c:	6983      	ldr	r3, [r0, #24]
 8008b2e:	429a      	cmp	r2, r3
 8008b30:	d20d      	bcs.n	8008b4e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8008b32:	4b08      	ldr	r3, [pc, #32]	; (8008b54 <prvInsertTimerInActiveList+0x34>)
 8008b34:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008b36:	6818      	ldr	r0, [r3, #0]
 8008b38:	f7fe fa8c 	bl	8007054 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8008b3c:	2000      	movs	r0, #0
}
 8008b3e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8008b40:	429a      	cmp	r2, r3
 8008b42:	d201      	bcs.n	8008b48 <prvInsertTimerInActiveList+0x28>
 8008b44:	4299      	cmp	r1, r3
 8008b46:	d202      	bcs.n	8008b4e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008b48:	1d01      	adds	r1, r0, #4
 8008b4a:	4b03      	ldr	r3, [pc, #12]	; (8008b58 <prvInsertTimerInActiveList+0x38>)
 8008b4c:	e7f3      	b.n	8008b36 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8008b4e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8008b50:	e7f5      	b.n	8008b3e <prvInsertTimerInActiveList+0x1e>
 8008b52:	bf00      	nop
 8008b54:	20012048 	.word	0x20012048
 8008b58:	20012044 	.word	0x20012044

08008b5c <xTimerCreateTimerTask>:
{
 8008b5c:	b510      	push	{r4, lr}
 8008b5e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8008b60:	f7ff ffaa 	bl	8008ab8 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8008b64:	4b12      	ldr	r3, [pc, #72]	; (8008bb0 <xTimerCreateTimerTask+0x54>)
 8008b66:	681b      	ldr	r3, [r3, #0]
 8008b68:	b1b3      	cbz	r3, 8008b98 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8008b6a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008b6c:	aa07      	add	r2, sp, #28
 8008b6e:	a906      	add	r1, sp, #24
 8008b70:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8008b72:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008b76:	f7fe f95f 	bl	8006e38 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8008b7a:	9b05      	ldr	r3, [sp, #20]
 8008b7c:	9302      	str	r3, [sp, #8]
 8008b7e:	9b06      	ldr	r3, [sp, #24]
 8008b80:	9301      	str	r3, [sp, #4]
 8008b82:	2302      	movs	r3, #2
 8008b84:	9300      	str	r3, [sp, #0]
 8008b86:	9a07      	ldr	r2, [sp, #28]
 8008b88:	490a      	ldr	r1, [pc, #40]	; (8008bb4 <xTimerCreateTimerTask+0x58>)
 8008b8a:	480b      	ldr	r0, [pc, #44]	; (8008bb8 <xTimerCreateTimerTask+0x5c>)
 8008b8c:	4623      	mov	r3, r4
 8008b8e:	f7ff fab3 	bl	80080f8 <xTaskCreateStatic>
 8008b92:	4b0a      	ldr	r3, [pc, #40]	; (8008bbc <xTimerCreateTimerTask+0x60>)
 8008b94:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8008b96:	b940      	cbnz	r0, 8008baa <xTimerCreateTimerTask+0x4e>
 8008b98:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b9c:	f383 8811 	msr	BASEPRI, r3
 8008ba0:	f3bf 8f6f 	isb	sy
 8008ba4:	f3bf 8f4f 	dsb	sy
 8008ba8:	e7fe      	b.n	8008ba8 <xTimerCreateTimerTask+0x4c>
}
 8008baa:	2001      	movs	r0, #1
 8008bac:	b008      	add	sp, #32
 8008bae:	bd10      	pop	{r4, pc}
 8008bb0:	20012168 	.word	0x20012168
 8008bb4:	0801bcf7 	.word	0x0801bcf7
 8008bb8:	08008cf5 	.word	0x08008cf5
 8008bbc:	2001216c 	.word	0x2001216c

08008bc0 <xTimerCreate>:
	{
 8008bc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008bc4:	4680      	mov	r8, r0
		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of Timer_t is always a pointer to the timer's mame. */
 8008bc6:	202c      	movs	r0, #44	; 0x2c
	{
 8008bc8:	460d      	mov	r5, r1
 8008bca:	4616      	mov	r6, r2
 8008bcc:	461f      	mov	r7, r3
		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of Timer_t is always a pointer to the timer's mame. */
 8008bce:	f7fe f963 	bl	8006e98 <pvPortMalloc>
		if( pxNewTimer != NULL )
 8008bd2:	4604      	mov	r4, r0
 8008bd4:	b1f0      	cbz	r0, 8008c14 <xTimerCreate+0x54>
			pxNewTimer->ucStatus = 0x00;
 8008bd6:	2300      	movs	r3, #0
 8008bd8:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 8008bdc:	b945      	cbnz	r5, 8008bf0 <xTimerCreate+0x30>
 8008bde:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008be2:	f383 8811 	msr	BASEPRI, r3
 8008be6:	f3bf 8f6f 	isb	sy
 8008bea:	f3bf 8f4f 	dsb	sy
 8008bee:	e7fe      	b.n	8008bee <xTimerCreate+0x2e>
		prvCheckForValidListAndQueue();
 8008bf0:	f7ff ff62 	bl	8008ab8 <prvCheckForValidListAndQueue>
		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 8008bf4:	9b06      	ldr	r3, [sp, #24]
		pxNewTimer->pcTimerName = pcTimerName;
 8008bf6:	f8c4 8000 	str.w	r8, [r4]
		pxNewTimer->pvTimerID = pvTimerID;
 8008bfa:	e9c4 5706 	strd	r5, r7, [r4, #24]
		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 8008bfe:	6223      	str	r3, [r4, #32]
		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 8008c00:	1d20      	adds	r0, r4, #4
 8008c02:	f7fe fa18 	bl	8007036 <vListInitialiseItem>
		if( uxAutoReload != pdFALSE )
 8008c06:	b12e      	cbz	r6, 8008c14 <xTimerCreate+0x54>
			pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 8008c08:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008c0c:	f043 0304 	orr.w	r3, r3, #4
 8008c10:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
	}
 8008c14:	4620      	mov	r0, r4
 8008c16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08008c1c <xTimerGenericCommand>:
{
 8008c1c:	b530      	push	{r4, r5, lr}
 8008c1e:	4615      	mov	r5, r2
 8008c20:	b085      	sub	sp, #20
 8008c22:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8008c24:	4603      	mov	r3, r0
 8008c26:	b940      	cbnz	r0, 8008c3a <xTimerGenericCommand+0x1e>
 8008c28:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c2c:	f383 8811 	msr	BASEPRI, r3
 8008c30:	f3bf 8f6f 	isb	sy
 8008c34:	f3bf 8f4f 	dsb	sy
 8008c38:	e7fe      	b.n	8008c38 <xTimerGenericCommand+0x1c>
	if( xTimerQueue != NULL )
 8008c3a:	4c0d      	ldr	r4, [pc, #52]	; (8008c70 <xTimerGenericCommand+0x54>)
 8008c3c:	6820      	ldr	r0, [r4, #0]
 8008c3e:	b180      	cbz	r0, 8008c62 <xTimerGenericCommand+0x46>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008c40:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8008c42:	e9cd 1500 	strd	r1, r5, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8008c46:	9302      	str	r3, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008c48:	dc0d      	bgt.n	8008c66 <xTimerGenericCommand+0x4a>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008c4a:	f7ff fd1b 	bl	8008684 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008c4e:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008c50:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008c52:	bf08      	it	eq
 8008c54:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8008c56:	6820      	ldr	r0, [r4, #0]
 8008c58:	bf18      	it	ne
 8008c5a:	461a      	movne	r2, r3
 8008c5c:	4669      	mov	r1, sp
 8008c5e:	f7fe fd57 	bl	8007710 <xQueueGenericSend>
}
 8008c62:	b005      	add	sp, #20
 8008c64:	bd30      	pop	{r4, r5, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8008c66:	2300      	movs	r3, #0
 8008c68:	4669      	mov	r1, sp
 8008c6a:	f7fe fe03 	bl	8007874 <xQueueGenericSendFromISR>
 8008c6e:	e7f8      	b.n	8008c62 <xTimerGenericCommand+0x46>
 8008c70:	20012168 	.word	0x20012168

08008c74 <prvSwitchTimerLists>:
{
 8008c74:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008c78:	4d1c      	ldr	r5, [pc, #112]	; (8008cec <prvSwitchTimerLists+0x78>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008c7a:	f04f 0800 	mov.w	r8, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008c7e:	682b      	ldr	r3, [r5, #0]
 8008c80:	681a      	ldr	r2, [r3, #0]
 8008c82:	b932      	cbnz	r2, 8008c92 <prvSwitchTimerLists+0x1e>
	pxCurrentTimerList = pxOverflowTimerList;
 8008c84:	4a1a      	ldr	r2, [pc, #104]	; (8008cf0 <prvSwitchTimerLists+0x7c>)
 8008c86:	6811      	ldr	r1, [r2, #0]
 8008c88:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 8008c8a:	6013      	str	r3, [r2, #0]
}
 8008c8c:	b002      	add	sp, #8
 8008c8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008c92:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008c94:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008c96:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008c98:	1d27      	adds	r7, r4, #4
 8008c9a:	4638      	mov	r0, r7
 8008c9c:	f7fe f9f1 	bl	8007082 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008ca0:	6a23      	ldr	r3, [r4, #32]
 8008ca2:	4620      	mov	r0, r4
 8008ca4:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008ca6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008caa:	075b      	lsls	r3, r3, #29
 8008cac:	d5e7      	bpl.n	8008c7e <prvSwitchTimerLists+0xa>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8008cae:	69a3      	ldr	r3, [r4, #24]
 8008cb0:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 8008cb2:	429e      	cmp	r6, r3
 8008cb4:	d206      	bcs.n	8008cc4 <prvSwitchTimerLists+0x50>
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8008cb6:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008cb8:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008cba:	4639      	mov	r1, r7
 8008cbc:	6828      	ldr	r0, [r5, #0]
 8008cbe:	f7fe f9c9 	bl	8007054 <vListInsert>
 8008cc2:	e7dc      	b.n	8008c7e <prvSwitchTimerLists+0xa>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008cc4:	2300      	movs	r3, #0
 8008cc6:	f8cd 8000 	str.w	r8, [sp]
 8008cca:	4632      	mov	r2, r6
 8008ccc:	4619      	mov	r1, r3
 8008cce:	4620      	mov	r0, r4
 8008cd0:	f7ff ffa4 	bl	8008c1c <xTimerGenericCommand>
				configASSERT( xResult );
 8008cd4:	2800      	cmp	r0, #0
 8008cd6:	d1d2      	bne.n	8008c7e <prvSwitchTimerLists+0xa>
 8008cd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cdc:	f383 8811 	msr	BASEPRI, r3
 8008ce0:	f3bf 8f6f 	isb	sy
 8008ce4:	f3bf 8f4f 	dsb	sy
 8008ce8:	e7fe      	b.n	8008ce8 <prvSwitchTimerLists+0x74>
 8008cea:	bf00      	nop
 8008cec:	20012044 	.word	0x20012044
 8008cf0:	20012048 	.word	0x20012048

08008cf4 <prvTimerTask>:
{
 8008cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008cf8:	4d81      	ldr	r5, [pc, #516]	; (8008f00 <prvTimerTask+0x20c>)
					portYIELD_WITHIN_API();
 8008cfa:	f8df 8210 	ldr.w	r8, [pc, #528]	; 8008f0c <prvTimerTask+0x218>
{
 8008cfe:	b087      	sub	sp, #28
 8008d00:	462f      	mov	r7, r5
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008d02:	682a      	ldr	r2, [r5, #0]
 8008d04:	6813      	ldr	r3, [r2, #0]
 8008d06:	b353      	cbz	r3, 8008d5e <prvTimerTask+0x6a>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008d08:	68d3      	ldr	r3, [r2, #12]
 8008d0a:	f8d3 9000 	ldr.w	r9, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008d0e:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 8008d10:	f8df b1fc 	ldr.w	fp, [pc, #508]	; 8008f10 <prvTimerTask+0x21c>
	vTaskSuspendAll();
 8008d14:	f7ff fa9a 	bl	800824c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 8008d18:	f7ff faa0 	bl	800825c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008d1c:	f8db 3000 	ldr.w	r3, [fp]
 8008d20:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8008d22:	4682      	mov	sl, r0
 8008d24:	465e      	mov	r6, fp
	if( xTimeNow < xLastTime )
 8008d26:	d31d      	bcc.n	8008d64 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 8008d28:	f8cb 0000 	str.w	r0, [fp]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008d2c:	b32c      	cbz	r4, 8008d7a <prvTimerTask+0x86>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8008d2e:	4b75      	ldr	r3, [pc, #468]	; (8008f04 <prvTimerTask+0x210>)
 8008d30:	681b      	ldr	r3, [r3, #0]
 8008d32:	681a      	ldr	r2, [r3, #0]
 8008d34:	fab2 f282 	clz	r2, r2
 8008d38:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8008d3a:	4b73      	ldr	r3, [pc, #460]	; (8008f08 <prvTimerTask+0x214>)
 8008d3c:	eba9 010a 	sub.w	r1, r9, sl
 8008d40:	6818      	ldr	r0, [r3, #0]
 8008d42:	f7ff f84e 	bl	8007de2 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8008d46:	f7ff fb27 	bl	8008398 <xTaskResumeAll>
 8008d4a:	b988      	cbnz	r0, 8008d70 <prvTimerTask+0x7c>
					portYIELD_WITHIN_API();
 8008d4c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008d50:	f8c8 3000 	str.w	r3, [r8]
 8008d54:	f3bf 8f4f 	dsb	sy
 8008d58:	f3bf 8f6f 	isb	sy
 8008d5c:	e008      	b.n	8008d70 <prvTimerTask+0x7c>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008d5e:	2401      	movs	r4, #1
		xNextExpireTime = ( TickType_t ) 0U;
 8008d60:	4699      	mov	r9, r3
 8008d62:	e7d5      	b.n	8008d10 <prvTimerTask+0x1c>
		prvSwitchTimerLists();
 8008d64:	f7ff ff86 	bl	8008c74 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 8008d68:	f8cb a000 	str.w	sl, [fp]
			( void ) xTaskResumeAll();
 8008d6c:	f7ff fb14 	bl	8008398 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008d70:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8008f08 <prvTimerTask+0x214>
 8008d74:	f04f 0a00 	mov.w	sl, #0
 8008d78:	e07d      	b.n	8008e76 <prvTimerTask+0x182>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008d7a:	4581      	cmp	r9, r0
 8008d7c:	d830      	bhi.n	8008de0 <prvTimerTask+0xec>
				( void ) xTaskResumeAll();
 8008d7e:	f7ff fb0b 	bl	8008398 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008d82:	683b      	ldr	r3, [r7, #0]
 8008d84:	68db      	ldr	r3, [r3, #12]
 8008d86:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008d8a:	f10b 0004 	add.w	r0, fp, #4
 8008d8e:	f7fe f978 	bl	8007082 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008d92:	f89b 3028 	ldrb.w	r3, [fp, #40]	; 0x28
 8008d96:	0758      	lsls	r0, r3, #29
 8008d98:	d519      	bpl.n	8008dce <prvTimerTask+0xda>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8008d9a:	f8db 1018 	ldr.w	r1, [fp, #24]
 8008d9e:	464b      	mov	r3, r9
 8008da0:	4652      	mov	r2, sl
 8008da2:	4449      	add	r1, r9
 8008da4:	4658      	mov	r0, fp
 8008da6:	f7ff febb 	bl	8008b20 <prvInsertTimerInActiveList>
 8008daa:	b1a0      	cbz	r0, 8008dd6 <prvTimerTask+0xe2>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008dac:	9400      	str	r4, [sp, #0]
 8008dae:	4623      	mov	r3, r4
 8008db0:	464a      	mov	r2, r9
 8008db2:	4621      	mov	r1, r4
 8008db4:	4658      	mov	r0, fp
 8008db6:	f7ff ff31 	bl	8008c1c <xTimerGenericCommand>
			configASSERT( xResult );
 8008dba:	b960      	cbnz	r0, 8008dd6 <prvTimerTask+0xe2>
 8008dbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008dc0:	f383 8811 	msr	BASEPRI, r3
 8008dc4:	f3bf 8f6f 	isb	sy
 8008dc8:	f3bf 8f4f 	dsb	sy
 8008dcc:	e7fe      	b.n	8008dcc <prvTimerTask+0xd8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008dce:	f023 0301 	bic.w	r3, r3, #1
 8008dd2:	f88b 3028 	strb.w	r3, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008dd6:	f8db 3020 	ldr.w	r3, [fp, #32]
 8008dda:	4658      	mov	r0, fp
 8008ddc:	4798      	blx	r3
 8008dde:	e7c7      	b.n	8008d70 <prvTimerTask+0x7c>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8008de0:	4622      	mov	r2, r4
 8008de2:	e7aa      	b.n	8008d3a <prvTimerTask+0x46>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008de4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008de8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008dea:	f043 0301 	orr.w	r3, r3, #1
 8008dee:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008df2:	9b03      	ldr	r3, [sp, #12]
 8008df4:	465a      	mov	r2, fp
 8008df6:	4419      	add	r1, r3
 8008df8:	4620      	mov	r0, r4
 8008dfa:	f7ff fe91 	bl	8008b20 <prvInsertTimerInActiveList>
 8008dfe:	2800      	cmp	r0, #0
 8008e00:	d039      	beq.n	8008e76 <prvTimerTask+0x182>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008e02:	6a23      	ldr	r3, [r4, #32]
 8008e04:	4620      	mov	r0, r4
 8008e06:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008e08:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008e0c:	0759      	lsls	r1, r3, #29
 8008e0e:	d532      	bpl.n	8008e76 <prvTimerTask+0x182>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8008e10:	69a2      	ldr	r2, [r4, #24]
 8008e12:	9903      	ldr	r1, [sp, #12]
 8008e14:	f8cd a000 	str.w	sl, [sp]
 8008e18:	2300      	movs	r3, #0
 8008e1a:	440a      	add	r2, r1
 8008e1c:	4620      	mov	r0, r4
 8008e1e:	4619      	mov	r1, r3
 8008e20:	f7ff fefc 	bl	8008c1c <xTimerGenericCommand>
							configASSERT( xResult );
 8008e24:	bb38      	cbnz	r0, 8008e76 <prvTimerTask+0x182>
 8008e26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e2a:	f383 8811 	msr	BASEPRI, r3
 8008e2e:	f3bf 8f6f 	isb	sy
 8008e32:	f3bf 8f4f 	dsb	sy
 8008e36:	e7fe      	b.n	8008e36 <prvTimerTask+0x142>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008e38:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8008e3c:	f023 0301 	bic.w	r3, r3, #1
 8008e40:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8008e44:	e017      	b.n	8008e76 <prvTimerTask+0x182>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008e46:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8008e4a:	9903      	ldr	r1, [sp, #12]
 8008e4c:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008e4e:	f043 0301 	orr.w	r3, r3, #1
 8008e52:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8008e56:	b941      	cbnz	r1, 8008e6a <prvTimerTask+0x176>
 8008e58:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e5c:	f383 8811 	msr	BASEPRI, r3
 8008e60:	f3bf 8f6f 	isb	sy
 8008e64:	f3bf 8f4f 	dsb	sy
 8008e68:	e7fe      	b.n	8008e68 <prvTimerTask+0x174>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8008e6a:	465b      	mov	r3, fp
 8008e6c:	465a      	mov	r2, fp
 8008e6e:	4459      	add	r1, fp
 8008e70:	4620      	mov	r0, r4
 8008e72:	f7ff fe55 	bl	8008b20 <prvInsertTimerInActiveList>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008e76:	2200      	movs	r2, #0
 8008e78:	a902      	add	r1, sp, #8
 8008e7a:	f8d9 0000 	ldr.w	r0, [r9]
 8008e7e:	f7fe fdaf 	bl	80079e0 <xQueueReceive>
 8008e82:	2800      	cmp	r0, #0
 8008e84:	f43f af3d 	beq.w	8008d02 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8008e88:	9b02      	ldr	r3, [sp, #8]
 8008e8a:	2b00      	cmp	r3, #0
 8008e8c:	da03      	bge.n	8008e96 <prvTimerTask+0x1a2>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8008e8e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8008e92:	9b03      	ldr	r3, [sp, #12]
 8008e94:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8008e96:	9b02      	ldr	r3, [sp, #8]
 8008e98:	2b00      	cmp	r3, #0
 8008e9a:	dbec      	blt.n	8008e76 <prvTimerTask+0x182>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8008e9c:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8008e9e:	6963      	ldr	r3, [r4, #20]
 8008ea0:	b113      	cbz	r3, 8008ea8 <prvTimerTask+0x1b4>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008ea2:	1d20      	adds	r0, r4, #4
 8008ea4:	f7fe f8ed 	bl	8007082 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 8008ea8:	f7ff f9d8 	bl	800825c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008eac:	6833      	ldr	r3, [r6, #0]
 8008eae:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 8008eb0:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
 8008eb2:	d201      	bcs.n	8008eb8 <prvTimerTask+0x1c4>
		prvSwitchTimerLists();
 8008eb4:	f7ff fede 	bl	8008c74 <prvSwitchTimerLists>
			switch( xMessage.xMessageID )
 8008eb8:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8008eba:	f8c6 b000 	str.w	fp, [r6]
			switch( xMessage.xMessageID )
 8008ebe:	2b09      	cmp	r3, #9
 8008ec0:	d8d9      	bhi.n	8008e76 <prvTimerTask+0x182>
 8008ec2:	a201      	add	r2, pc, #4	; (adr r2, 8008ec8 <prvTimerTask+0x1d4>)
 8008ec4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008ec8:	08008de5 	.word	0x08008de5
 8008ecc:	08008de5 	.word	0x08008de5
 8008ed0:	08008de5 	.word	0x08008de5
 8008ed4:	08008e39 	.word	0x08008e39
 8008ed8:	08008e47 	.word	0x08008e47
 8008edc:	08008ef1 	.word	0x08008ef1
 8008ee0:	08008de5 	.word	0x08008de5
 8008ee4:	08008de5 	.word	0x08008de5
 8008ee8:	08008e39 	.word	0x08008e39
 8008eec:	08008e47 	.word	0x08008e47
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8008ef0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008ef4:	079a      	lsls	r2, r3, #30
 8008ef6:	d4a1      	bmi.n	8008e3c <prvTimerTask+0x148>
							vPortFree( pxTimer );
 8008ef8:	4620      	mov	r0, r4
 8008efa:	f7fe f859 	bl	8006fb0 <vPortFree>
 8008efe:	e7ba      	b.n	8008e76 <prvTimerTask+0x182>
 8008f00:	20012044 	.word	0x20012044
 8008f04:	20012048 	.word	0x20012048
 8008f08:	20012168 	.word	0x20012168
 8008f0c:	e000ed04 	.word	0xe000ed04
 8008f10:	20012114 	.word	0x20012114

08008f14 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8008f14:	8880      	ldrh	r0, [r0, #4]
 8008f16:	4770      	bx	lr

08008f18 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8008f18:	2300      	movs	r3, #0
 8008f1a:	8083      	strh	r3, [r0, #4]
 8008f1c:	4770      	bx	lr
	...

08008f20 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8008f20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008f22:	6803      	ldr	r3, [r0, #0]
 8008f24:	4605      	mov	r5, r0
 8008f26:	460e      	mov	r6, r1
 8008f28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008f2a:	2100      	movs	r1, #0
 8008f2c:	4798      	blx	r3
 8008f2e:	682b      	ldr	r3, [r5, #0]
 8008f30:	4604      	mov	r4, r0
 8008f32:	6a1b      	ldr	r3, [r3, #32]
 8008f34:	4628      	mov	r0, r5
 8008f36:	4798      	blx	r3
 8008f38:	88ab      	ldrh	r3, [r5, #4]
 8008f3a:	1b34      	subs	r4, r6, r4
 8008f3c:	b2a4      	uxth	r4, r4
 8008f3e:	fbb4 f4f0 	udiv	r4, r4, r0
 8008f42:	42a3      	cmp	r3, r4
 8008f44:	d805      	bhi.n	8008f52 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8008f46:	4b0e      	ldr	r3, [pc, #56]	; (8008f80 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8008f48:	4a0e      	ldr	r2, [pc, #56]	; (8008f84 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008f4a:	2120      	movs	r1, #32
 8008f4c:	480e      	ldr	r0, [pc, #56]	; (8008f88 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 8008f4e:	f010 fda7 	bl	8019aa0 <__assert_func>
 8008f52:	682b      	ldr	r3, [r5, #0]
 8008f54:	2100      	movs	r1, #0
 8008f56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008f58:	4628      	mov	r0, r5
 8008f5a:	4798      	blx	r3
 8008f5c:	682b      	ldr	r3, [r5, #0]
 8008f5e:	4607      	mov	r7, r0
 8008f60:	6a1b      	ldr	r3, [r3, #32]
 8008f62:	4628      	mov	r0, r5
 8008f64:	4798      	blx	r3
 8008f66:	1bf3      	subs	r3, r6, r7
 8008f68:	b29b      	uxth	r3, r3
 8008f6a:	fbb3 f2f0 	udiv	r2, r3, r0
 8008f6e:	fb02 3010 	mls	r0, r2, r0, r3
 8008f72:	b118      	cbz	r0, 8008f7c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8008f74:	4b05      	ldr	r3, [pc, #20]	; (8008f8c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8008f76:	4a03      	ldr	r2, [pc, #12]	; (8008f84 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008f78:	2121      	movs	r1, #33	; 0x21
 8008f7a:	e7e7      	b.n	8008f4c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8008f7c:	4620      	mov	r0, r4
 8008f7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008f80:	0801bcff 	.word	0x0801bcff
 8008f84:	0801be6a 	.word	0x0801be6a
 8008f88:	0801bd14 	.word	0x0801bd14
 8008f8c:	0801bd42 	.word	0x0801bd42

08008f90 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8008f90:	b538      	push	{r3, r4, r5, lr}
 8008f92:	6803      	ldr	r3, [r0, #0]
 8008f94:	6a1b      	ldr	r3, [r3, #32]
 8008f96:	460d      	mov	r5, r1
 8008f98:	4604      	mov	r4, r0
 8008f9a:	4798      	blx	r3
 8008f9c:	4285      	cmp	r5, r0
 8008f9e:	d905      	bls.n	8008fac <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8008fa0:	4b0c      	ldr	r3, [pc, #48]	; (8008fd4 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8008fa2:	4a0d      	ldr	r2, [pc, #52]	; (8008fd8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008fa4:	2132      	movs	r1, #50	; 0x32
 8008fa6:	480d      	ldr	r0, [pc, #52]	; (8008fdc <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8008fa8:	f010 fd7a 	bl	8019aa0 <__assert_func>
 8008fac:	6823      	ldr	r3, [r4, #0]
 8008fae:	88a5      	ldrh	r5, [r4, #4]
 8008fb0:	69db      	ldr	r3, [r3, #28]
 8008fb2:	4620      	mov	r0, r4
 8008fb4:	4798      	blx	r3
 8008fb6:	4285      	cmp	r5, r0
 8008fb8:	d303      	bcc.n	8008fc2 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8008fba:	4b09      	ldr	r3, [pc, #36]	; (8008fe0 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8008fbc:	4a06      	ldr	r2, [pc, #24]	; (8008fd8 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008fbe:	2133      	movs	r1, #51	; 0x33
 8008fc0:	e7f1      	b.n	8008fa6 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 8008fc2:	6823      	ldr	r3, [r4, #0]
 8008fc4:	88a1      	ldrh	r1, [r4, #4]
 8008fc6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008fc8:	4620      	mov	r0, r4
 8008fca:	4798      	blx	r3
 8008fcc:	88a3      	ldrh	r3, [r4, #4]
 8008fce:	3301      	adds	r3, #1
 8008fd0:	80a3      	strh	r3, [r4, #4]
 8008fd2:	bd38      	pop	{r3, r4, r5, pc}
 8008fd4:	0801bdbc 	.word	0x0801bdbc
 8008fd8:	0801bead 	.word	0x0801bead
 8008fdc:	0801bd14 	.word	0x0801bd14
 8008fe0:	0801bdd3 	.word	0x0801bdd3

08008fe4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8008fe4:	b570      	push	{r4, r5, r6, lr}
 8008fe6:	6803      	ldr	r3, [r0, #0]
 8008fe8:	6a1b      	ldr	r3, [r3, #32]
 8008fea:	4616      	mov	r6, r2
 8008fec:	4604      	mov	r4, r0
 8008fee:	460d      	mov	r5, r1
 8008ff0:	4798      	blx	r3
 8008ff2:	4286      	cmp	r6, r0
 8008ff4:	d905      	bls.n	8009002 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 8008ff6:	4b06      	ldr	r3, [pc, #24]	; (8009010 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 8008ff8:	4a06      	ldr	r2, [pc, #24]	; (8009014 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 8008ffa:	4807      	ldr	r0, [pc, #28]	; (8009018 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 8008ffc:	213c      	movs	r1, #60	; 0x3c
 8008ffe:	f010 fd4f 	bl	8019aa0 <__assert_func>
 8009002:	6823      	ldr	r3, [r4, #0]
 8009004:	4629      	mov	r1, r5
 8009006:	4620      	mov	r0, r4
 8009008:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800900a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800900e:	4718      	bx	r3
 8009010:	0801bdbc 	.word	0x0801bdbc
 8009014:	0801be20 	.word	0x0801be20
 8009018:	0801bd14 	.word	0x0801bd14

0800901c <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800901c:	4770      	bx	lr
	...

08009020 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009020:	4a02      	ldr	r2, [pc, #8]	; (800902c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8009022:	6002      	str	r2, [r0, #0]
 8009024:	2200      	movs	r2, #0
 8009026:	8082      	strh	r2, [r0, #4]
 8009028:	4770      	bx	lr
 800902a:	bf00      	nop
 800902c:	0801bdf4 	.word	0x0801bdf4

08009030 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009030:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009032:	2000      	movs	r0, #0
 8009034:	b12b      	cbz	r3, 8009042 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009036:	b920      	cbnz	r0, 8009042 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009038:	1a5a      	subs	r2, r3, r1
 800903a:	4250      	negs	r0, r2
 800903c:	4150      	adcs	r0, r2
 800903e:	699b      	ldr	r3, [r3, #24]
 8009040:	e7f8      	b.n	8009034 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8009042:	4770      	bx	lr

08009044 <_ZN8touchgfx9Container9removeAllEv>:
 8009044:	2200      	movs	r2, #0
 8009046:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009048:	b123      	cbz	r3, 8009054 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800904a:	6999      	ldr	r1, [r3, #24]
 800904c:	6281      	str	r1, [r0, #40]	; 0x28
 800904e:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8009052:	e7f8      	b.n	8009046 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8009054:	4770      	bx	lr

08009056 <_ZN8touchgfx9Container6unlinkEv>:
 8009056:	2300      	movs	r3, #0
 8009058:	6283      	str	r3, [r0, #40]	; 0x28
 800905a:	4770      	bx	lr

0800905c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800905c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009060:	461f      	mov	r7, r3
 8009062:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8009066:	460d      	mov	r5, r1
 8009068:	4616      	mov	r6, r2
 800906a:	b103      	cbz	r3, 800906e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800906c:	6038      	str	r0, [r7, #0]
 800906e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8009070:	b314      	cbz	r4, 80090b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8009072:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009076:	b1eb      	cbz	r3, 80090b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009078:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800907c:	428d      	cmp	r5, r1
 800907e:	db19      	blt.n	80090b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009080:	8923      	ldrh	r3, [r4, #8]
 8009082:	b289      	uxth	r1, r1
 8009084:	440b      	add	r3, r1
 8009086:	b21b      	sxth	r3, r3
 8009088:	429d      	cmp	r5, r3
 800908a:	da13      	bge.n	80090b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800908c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8009090:	4296      	cmp	r6, r2
 8009092:	db0f      	blt.n	80090b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009094:	8963      	ldrh	r3, [r4, #10]
 8009096:	b292      	uxth	r2, r2
 8009098:	4413      	add	r3, r2
 800909a:	b21b      	sxth	r3, r3
 800909c:	429e      	cmp	r6, r3
 800909e:	da09      	bge.n	80090b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80090a0:	6823      	ldr	r3, [r4, #0]
 80090a2:	1ab2      	subs	r2, r6, r2
 80090a4:	1a69      	subs	r1, r5, r1
 80090a6:	f8d3 801c 	ldr.w	r8, [r3, #28]
 80090aa:	b212      	sxth	r2, r2
 80090ac:	463b      	mov	r3, r7
 80090ae:	b209      	sxth	r1, r1
 80090b0:	4620      	mov	r0, r4
 80090b2:	47c0      	blx	r8
 80090b4:	69a4      	ldr	r4, [r4, #24]
 80090b6:	e7db      	b.n	8009070 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80090b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080090bc <_ZNK8touchgfx9Container12getSolidRectEv>:
 80090bc:	2200      	movs	r2, #0
 80090be:	8002      	strh	r2, [r0, #0]
 80090c0:	8042      	strh	r2, [r0, #2]
 80090c2:	8082      	strh	r2, [r0, #4]
 80090c4:	80c2      	strh	r2, [r0, #6]
 80090c6:	4770      	bx	lr

080090c8 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80090c8:	b570      	push	{r4, r5, r6, lr}
 80090ca:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80090cc:	460d      	mov	r5, r1
 80090ce:	4616      	mov	r6, r2
 80090d0:	b13c      	cbz	r4, 80090e2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80090d2:	6823      	ldr	r3, [r4, #0]
 80090d4:	4620      	mov	r0, r4
 80090d6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80090d8:	4632      	mov	r2, r6
 80090da:	4629      	mov	r1, r5
 80090dc:	4798      	blx	r3
 80090de:	69a4      	ldr	r4, [r4, #24]
 80090e0:	e7f6      	b.n	80090d0 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80090e2:	bd70      	pop	{r4, r5, r6, pc}

080090e4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80090e4:	b538      	push	{r3, r4, r5, lr}
 80090e6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80090e8:	460d      	mov	r5, r1
 80090ea:	b134      	cbz	r4, 80090fa <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80090ec:	682b      	ldr	r3, [r5, #0]
 80090ee:	4621      	mov	r1, r4
 80090f0:	689b      	ldr	r3, [r3, #8]
 80090f2:	4628      	mov	r0, r5
 80090f4:	4798      	blx	r3
 80090f6:	69a4      	ldr	r4, [r4, #24]
 80090f8:	e7f7      	b.n	80090ea <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80090fa:	bd38      	pop	{r3, r4, r5, pc}

080090fc <_ZN8touchgfx9ContainerD1Ev>:
 80090fc:	4770      	bx	lr

080090fe <_ZN8touchgfx9ContainerD0Ev>:
 80090fe:	b510      	push	{r4, lr}
 8009100:	212c      	movs	r1, #44	; 0x2c
 8009102:	4604      	mov	r4, r0
 8009104:	f010 fca0 	bl	8019a48 <_ZdlPvj>
 8009108:	4620      	mov	r0, r4
 800910a:	bd10      	pop	{r4, pc}

0800910c <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800910c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800910e:	b19b      	cbz	r3, 8009138 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009110:	428b      	cmp	r3, r1
 8009112:	d109      	bne.n	8009128 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8009114:	699a      	ldr	r2, [r3, #24]
 8009116:	2100      	movs	r1, #0
 8009118:	6159      	str	r1, [r3, #20]
 800911a:	6282      	str	r2, [r0, #40]	; 0x28
 800911c:	b902      	cbnz	r2, 8009120 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800911e:	4770      	bx	lr
 8009120:	6199      	str	r1, [r3, #24]
 8009122:	4770      	bx	lr
 8009124:	4613      	mov	r3, r2
 8009126:	b13a      	cbz	r2, 8009138 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009128:	699a      	ldr	r2, [r3, #24]
 800912a:	428a      	cmp	r2, r1
 800912c:	d1fa      	bne.n	8009124 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800912e:	698a      	ldr	r2, [r1, #24]
 8009130:	619a      	str	r2, [r3, #24]
 8009132:	2300      	movs	r3, #0
 8009134:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8009138:	4770      	bx	lr

0800913a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800913a:	b410      	push	{r4}
 800913c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800913e:	4604      	mov	r4, r0
 8009140:	b92b      	cbnz	r3, 800914e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8009142:	6803      	ldr	r3, [r0, #0]
 8009144:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009148:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800914a:	4611      	mov	r1, r2
 800914c:	4718      	bx	r3
 800914e:	b941      	cbnz	r1, 8009162 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8009150:	6193      	str	r3, [r2, #24]
 8009152:	6282      	str	r2, [r0, #40]	; 0x28
 8009154:	6154      	str	r4, [r2, #20]
 8009156:	f85d 4b04 	ldr.w	r4, [sp], #4
 800915a:	4770      	bx	lr
 800915c:	4603      	mov	r3, r0
 800915e:	2800      	cmp	r0, #0
 8009160:	d0f9      	beq.n	8009156 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8009162:	4299      	cmp	r1, r3
 8009164:	6998      	ldr	r0, [r3, #24]
 8009166:	d1f9      	bne.n	800915c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009168:	6190      	str	r0, [r2, #24]
 800916a:	618a      	str	r2, [r1, #24]
 800916c:	e7f2      	b.n	8009154 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08009170 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009170:	4288      	cmp	r0, r1
 8009172:	b508      	push	{r3, lr}
 8009174:	d105      	bne.n	8009182 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8009176:	4b11      	ldr	r3, [pc, #68]	; (80091bc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8009178:	4a11      	ldr	r2, [pc, #68]	; (80091c0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800917a:	2123      	movs	r1, #35	; 0x23
 800917c:	4811      	ldr	r0, [pc, #68]	; (80091c4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800917e:	f010 fc8f 	bl	8019aa0 <__assert_func>
 8009182:	694b      	ldr	r3, [r1, #20]
 8009184:	b11b      	cbz	r3, 800918e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 8009186:	4b10      	ldr	r3, [pc, #64]	; (80091c8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8009188:	4a0d      	ldr	r2, [pc, #52]	; (80091c0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800918a:	2124      	movs	r1, #36	; 0x24
 800918c:	e7f6      	b.n	800917c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800918e:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8009192:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009194:	b913      	cbnz	r3, 800919c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 8009196:	6281      	str	r1, [r0, #40]	; 0x28
 8009198:	bd08      	pop	{r3, pc}
 800919a:	4613      	mov	r3, r2
 800919c:	699a      	ldr	r2, [r3, #24]
 800919e:	b12a      	cbz	r2, 80091ac <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 80091a0:	428b      	cmp	r3, r1
 80091a2:	d1fa      	bne.n	800919a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 80091a4:	4b09      	ldr	r3, [pc, #36]	; (80091cc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 80091a6:	4a06      	ldr	r2, [pc, #24]	; (80091c0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80091a8:	2135      	movs	r1, #53	; 0x35
 80091aa:	e7e7      	b.n	800917c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80091ac:	428b      	cmp	r3, r1
 80091ae:	d103      	bne.n	80091b8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 80091b0:	4b06      	ldr	r3, [pc, #24]	; (80091cc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 80091b2:	4a03      	ldr	r2, [pc, #12]	; (80091c0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 80091b4:	2138      	movs	r1, #56	; 0x38
 80091b6:	e7e1      	b.n	800917c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 80091b8:	6199      	str	r1, [r3, #24]
 80091ba:	e7ed      	b.n	8009198 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 80091bc:	0801beeb 	.word	0x0801beeb
 80091c0:	0801c040 	.word	0x0801c040
 80091c4:	0801bf17 	.word	0x0801bf17
 80091c8:	0801bf4a 	.word	0x0801bf4a
 80091cc:	0801bf80 	.word	0x0801bf80

080091d0 <_ZN8touchgfx4RectaNERKS0_>:
 80091d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80091d4:	f9b1 7000 	ldrsh.w	r7, [r1]
 80091d8:	888c      	ldrh	r4, [r1, #4]
 80091da:	f9b0 9000 	ldrsh.w	r9, [r0]
 80091de:	443c      	add	r4, r7
 80091e0:	b2a4      	uxth	r4, r4
 80091e2:	fa0f f884 	sxth.w	r8, r4
 80091e6:	45c1      	cmp	r9, r8
 80091e8:	da2f      	bge.n	800924a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80091ea:	8882      	ldrh	r2, [r0, #4]
 80091ec:	444a      	add	r2, r9
 80091ee:	b292      	uxth	r2, r2
 80091f0:	fa0f fe82 	sxth.w	lr, r2
 80091f4:	4577      	cmp	r7, lr
 80091f6:	da28      	bge.n	800924a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80091f8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80091fc:	88cb      	ldrh	r3, [r1, #6]
 80091fe:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8009202:	442b      	add	r3, r5
 8009204:	b21b      	sxth	r3, r3
 8009206:	429e      	cmp	r6, r3
 8009208:	da1f      	bge.n	800924a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800920a:	88c3      	ldrh	r3, [r0, #6]
 800920c:	4433      	add	r3, r6
 800920e:	b29b      	uxth	r3, r3
 8009210:	fa0f fc83 	sxth.w	ip, r3
 8009214:	4565      	cmp	r5, ip
 8009216:	da18      	bge.n	800924a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8009218:	454f      	cmp	r7, r9
 800921a:	bfb8      	it	lt
 800921c:	464f      	movlt	r7, r9
 800921e:	42b5      	cmp	r5, r6
 8009220:	bfb8      	it	lt
 8009222:	4635      	movlt	r5, r6
 8009224:	45f0      	cmp	r8, lr
 8009226:	bfd8      	it	le
 8009228:	4622      	movle	r2, r4
 800922a:	1bd2      	subs	r2, r2, r7
 800922c:	8082      	strh	r2, [r0, #4]
 800922e:	884a      	ldrh	r2, [r1, #2]
 8009230:	88c9      	ldrh	r1, [r1, #6]
 8009232:	8007      	strh	r7, [r0, #0]
 8009234:	440a      	add	r2, r1
 8009236:	b292      	uxth	r2, r2
 8009238:	b211      	sxth	r1, r2
 800923a:	458c      	cmp	ip, r1
 800923c:	bfa8      	it	ge
 800923e:	4613      	movge	r3, r2
 8009240:	1b5b      	subs	r3, r3, r5
 8009242:	80c3      	strh	r3, [r0, #6]
 8009244:	8045      	strh	r5, [r0, #2]
 8009246:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800924a:	2300      	movs	r3, #0
 800924c:	8003      	strh	r3, [r0, #0]
 800924e:	8043      	strh	r3, [r0, #2]
 8009250:	8083      	strh	r3, [r0, #4]
 8009252:	80c3      	strh	r3, [r0, #6]
 8009254:	e7f7      	b.n	8009246 <_ZN8touchgfx4RectaNERKS0_+0x76>

08009256 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8009256:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800925a:	2b00      	cmp	r3, #0
 800925c:	dd06      	ble.n	800926c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800925e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8009262:	2800      	cmp	r0, #0
 8009264:	bfcc      	ite	gt
 8009266:	2000      	movgt	r0, #0
 8009268:	2001      	movle	r0, #1
 800926a:	4770      	bx	lr
 800926c:	2001      	movs	r0, #1
 800926e:	4770      	bx	lr

08009270 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009270:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009274:	2300      	movs	r3, #0
 8009276:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8009278:	8003      	strh	r3, [r0, #0]
 800927a:	4604      	mov	r4, r0
 800927c:	8043      	strh	r3, [r0, #2]
 800927e:	8083      	strh	r3, [r0, #4]
 8009280:	80c3      	strh	r3, [r0, #6]
 8009282:	2d00      	cmp	r5, #0
 8009284:	d040      	beq.n	8009308 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8009286:	1d28      	adds	r0, r5, #4
 8009288:	f7ff ffe5 	bl	8009256 <_ZNK8touchgfx4Rect7isEmptyEv>
 800928c:	b988      	cbnz	r0, 80092b2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800928e:	4620      	mov	r0, r4
 8009290:	f7ff ffe1 	bl	8009256 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009294:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009298:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800929c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80092a0:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80092a4:	b138      	cbz	r0, 80092b6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80092a6:	8022      	strh	r2, [r4, #0]
 80092a8:	8063      	strh	r3, [r4, #2]
 80092aa:	f8a4 e004 	strh.w	lr, [r4, #4]
 80092ae:	f8a4 c006 	strh.w	ip, [r4, #6]
 80092b2:	69ad      	ldr	r5, [r5, #24]
 80092b4:	e7e5      	b.n	8009282 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80092b6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80092ba:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80092be:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80092c2:	4290      	cmp	r0, r2
 80092c4:	4607      	mov	r7, r0
 80092c6:	bfa8      	it	ge
 80092c8:	4617      	movge	r7, r2
 80092ca:	4472      	add	r2, lr
 80092cc:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80092d0:	8027      	strh	r7, [r4, #0]
 80092d2:	4299      	cmp	r1, r3
 80092d4:	460e      	mov	r6, r1
 80092d6:	4440      	add	r0, r8
 80092d8:	bfa8      	it	ge
 80092da:	461e      	movge	r6, r3
 80092dc:	4471      	add	r1, lr
 80092de:	4463      	add	r3, ip
 80092e0:	b200      	sxth	r0, r0
 80092e2:	b212      	sxth	r2, r2
 80092e4:	b209      	sxth	r1, r1
 80092e6:	b21b      	sxth	r3, r3
 80092e8:	4290      	cmp	r0, r2
 80092ea:	bfac      	ite	ge
 80092ec:	ebc7 0200 	rsbge	r2, r7, r0
 80092f0:	ebc7 0202 	rsblt	r2, r7, r2
 80092f4:	4299      	cmp	r1, r3
 80092f6:	bfac      	ite	ge
 80092f8:	ebc6 0301 	rsbge	r3, r6, r1
 80092fc:	ebc6 0303 	rsblt	r3, r6, r3
 8009300:	8066      	strh	r6, [r4, #2]
 8009302:	80a2      	strh	r2, [r4, #4]
 8009304:	80e3      	strh	r3, [r4, #6]
 8009306:	e7d4      	b.n	80092b2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8009308:	4620      	mov	r0, r4
 800930a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800930e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800930e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009312:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009316:	b383      	cbz	r3, 800937a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8009318:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800931a:	b374      	cbz	r4, 800937a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800931c:	f9b1 5000 	ldrsh.w	r5, [r1]
 8009320:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8009324:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8009328:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800932c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009330:	b303      	cbz	r3, 8009374 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009332:	4668      	mov	r0, sp
 8009334:	1d21      	adds	r1, r4, #4
 8009336:	f8ad 5000 	strh.w	r5, [sp]
 800933a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800933e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009342:	f8ad 8006 	strh.w	r8, [sp, #6]
 8009346:	f7ff ff43 	bl	80091d0 <_ZN8touchgfx4RectaNERKS0_>
 800934a:	4668      	mov	r0, sp
 800934c:	f7ff ff83 	bl	8009256 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009350:	b980      	cbnz	r0, 8009374 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009352:	f8bd 3000 	ldrh.w	r3, [sp]
 8009356:	88a2      	ldrh	r2, [r4, #4]
 8009358:	1a9b      	subs	r3, r3, r2
 800935a:	f8ad 3000 	strh.w	r3, [sp]
 800935e:	88e2      	ldrh	r2, [r4, #6]
 8009360:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009364:	1a9b      	subs	r3, r3, r2
 8009366:	f8ad 3002 	strh.w	r3, [sp, #2]
 800936a:	6823      	ldr	r3, [r4, #0]
 800936c:	4669      	mov	r1, sp
 800936e:	689b      	ldr	r3, [r3, #8]
 8009370:	4620      	mov	r0, r4
 8009372:	4798      	blx	r3
 8009374:	69a4      	ldr	r4, [r4, #24]
 8009376:	2c00      	cmp	r4, #0
 8009378:	d1d8      	bne.n	800932c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800937a:	b002      	add	sp, #8
 800937c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009380 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009380:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009382:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009386:	460d      	mov	r5, r1
 8009388:	4616      	mov	r6, r2
 800938a:	b323      	cbz	r3, 80093d6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800938c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800938e:	b314      	cbz	r4, 80093d6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009390:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009394:	b1eb      	cbz	r3, 80093d2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009396:	6828      	ldr	r0, [r5, #0]
 8009398:	6869      	ldr	r1, [r5, #4]
 800939a:	466b      	mov	r3, sp
 800939c:	c303      	stmia	r3!, {r0, r1}
 800939e:	4668      	mov	r0, sp
 80093a0:	1d21      	adds	r1, r4, #4
 80093a2:	f7ff ff15 	bl	80091d0 <_ZN8touchgfx4RectaNERKS0_>
 80093a6:	4668      	mov	r0, sp
 80093a8:	f7ff ff55 	bl	8009256 <_ZNK8touchgfx4Rect7isEmptyEv>
 80093ac:	b988      	cbnz	r0, 80093d2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80093ae:	f8bd 3000 	ldrh.w	r3, [sp]
 80093b2:	88a2      	ldrh	r2, [r4, #4]
 80093b4:	1a9b      	subs	r3, r3, r2
 80093b6:	f8ad 3000 	strh.w	r3, [sp]
 80093ba:	88e2      	ldrh	r2, [r4, #6]
 80093bc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80093c0:	1a9b      	subs	r3, r3, r2
 80093c2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80093c6:	6823      	ldr	r3, [r4, #0]
 80093c8:	4632      	mov	r2, r6
 80093ca:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80093cc:	4669      	mov	r1, sp
 80093ce:	4620      	mov	r0, r4
 80093d0:	4798      	blx	r3
 80093d2:	69a4      	ldr	r4, [r4, #24]
 80093d4:	e7db      	b.n	800938e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80093d6:	b002      	add	sp, #8
 80093d8:	bd70      	pop	{r4, r5, r6, pc}

080093da <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80093da:	b513      	push	{r0, r1, r4, lr}
 80093dc:	6803      	ldr	r3, [r0, #0]
 80093de:	f8d3 4090 	ldr.w	r4, [r3, #144]	; 0x90
 80093e2:	2300      	movs	r3, #0
 80093e4:	e9cd 3300 	strd	r3, r3, [sp]
 80093e8:	466b      	mov	r3, sp
 80093ea:	47a0      	blx	r4
 80093ec:	b002      	add	sp, #8
 80093ee:	bd10      	pop	{r4, pc}

080093f0 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80093f0:	2301      	movs	r3, #1
 80093f2:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80093f6:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80093fa:	4770      	bx	lr

080093fc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80093fc:	2301      	movs	r3, #1
 80093fe:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8009402:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8009406:	4770      	bx	lr

08009408 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8009408:	6843      	ldr	r3, [r0, #4]
 800940a:	2201      	movs	r2, #1
 800940c:	725a      	strb	r2, [r3, #9]
 800940e:	6840      	ldr	r0, [r0, #4]
 8009410:	6803      	ldr	r3, [r0, #0]
 8009412:	691b      	ldr	r3, [r3, #16]
 8009414:	4718      	bx	r3

08009416 <_ZN8touchgfx3HAL8flushDMAEv>:
 8009416:	6840      	ldr	r0, [r0, #4]
 8009418:	6803      	ldr	r3, [r0, #0]
 800941a:	689b      	ldr	r3, [r3, #8]
 800941c:	4718      	bx	r3
	...

08009420 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009420:	4b04      	ldr	r3, [pc, #16]	; (8009434 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8009422:	781b      	ldrb	r3, [r3, #0]
 8009424:	b123      	cbz	r3, 8009430 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8009426:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800942a:	f080 0001 	eor.w	r0, r0, #1
 800942e:	4770      	bx	lr
 8009430:	2001      	movs	r0, #1
 8009432:	4770      	bx	lr
 8009434:	2001217a 	.word	0x2001217a

08009438 <_ZN8touchgfx3HAL8endFrameEv>:
 8009438:	b510      	push	{r4, lr}
 800943a:	4604      	mov	r4, r0
 800943c:	6840      	ldr	r0, [r0, #4]
 800943e:	6803      	ldr	r3, [r0, #0]
 8009440:	689b      	ldr	r3, [r3, #8]
 8009442:	4798      	blx	r3
 8009444:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8009448:	b113      	cbz	r3, 8009450 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800944a:	2301      	movs	r3, #1
 800944c:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009450:	bd10      	pop	{r4, pc}
	...

08009454 <_ZN8touchgfx3HAL4tickEv>:
 8009454:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009456:	6803      	ldr	r3, [r0, #0]
 8009458:	4d5c      	ldr	r5, [pc, #368]	; (80095cc <_ZN8touchgfx3HAL4tickEv+0x178>)
 800945a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800945e:	4604      	mov	r4, r0
 8009460:	4798      	blx	r3
 8009462:	2800      	cmp	r0, #0
 8009464:	f000 8097 	beq.w	8009596 <_ZN8touchgfx3HAL4tickEv+0x142>
 8009468:	2001      	movs	r0, #1
 800946a:	f7f7 f965 	bl	8000738 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800946e:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8009472:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8009476:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800947a:	2600      	movs	r6, #0
 800947c:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8009480:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8009484:	b133      	cbz	r3, 8009494 <_ZN8touchgfx3HAL4tickEv+0x40>
 8009486:	6823      	ldr	r3, [r4, #0]
 8009488:	4620      	mov	r0, r4
 800948a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800948e:	4798      	blx	r3
 8009490:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8009494:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8009498:	6862      	ldr	r2, [r4, #4]
 800949a:	f083 0301 	eor.w	r3, r3, #1
 800949e:	7253      	strb	r3, [r2, #9]
 80094a0:	2601      	movs	r6, #1
 80094a2:	702e      	strb	r6, [r5, #0]
 80094a4:	f002 fad0 	bl	800ba48 <_ZN8touchgfx11Application11getInstanceEv>
 80094a8:	6803      	ldr	r3, [r0, #0]
 80094aa:	4631      	mov	r1, r6
 80094ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80094ae:	4798      	blx	r3
 80094b0:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 80094b4:	b90b      	cbnz	r3, 80094ba <_ZN8touchgfx3HAL4tickEv+0x66>
 80094b6:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 80094ba:	f002 fac5 	bl	800ba48 <_ZN8touchgfx11Application11getInstanceEv>
 80094be:	6803      	ldr	r3, [r0, #0]
 80094c0:	695b      	ldr	r3, [r3, #20]
 80094c2:	4798      	blx	r3
 80094c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80094c6:	6803      	ldr	r3, [r0, #0]
 80094c8:	691b      	ldr	r3, [r3, #16]
 80094ca:	4798      	blx	r3
 80094cc:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 80094d0:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 80094d4:	3b01      	subs	r3, #1
 80094d6:	b2db      	uxtb	r3, r3
 80094d8:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 80094dc:	b10a      	cbz	r2, 80094e2 <_ZN8touchgfx3HAL4tickEv+0x8e>
 80094de:	2b00      	cmp	r3, #0
 80094e0:	d1eb      	bne.n	80094ba <_ZN8touchgfx3HAL4tickEv+0x66>
 80094e2:	4a3b      	ldr	r2, [pc, #236]	; (80095d0 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80094e4:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 80094e8:	7813      	ldrb	r3, [r2, #0]
 80094ea:	3301      	adds	r3, #1
 80094ec:	b25b      	sxtb	r3, r3
 80094ee:	4299      	cmp	r1, r3
 80094f0:	7013      	strb	r3, [r2, #0]
 80094f2:	dc10      	bgt.n	8009516 <_ZN8touchgfx3HAL4tickEv+0xc2>
 80094f4:	68e0      	ldr	r0, [r4, #12]
 80094f6:	2300      	movs	r3, #0
 80094f8:	7013      	strb	r3, [r2, #0]
 80094fa:	6803      	ldr	r3, [r0, #0]
 80094fc:	aa03      	add	r2, sp, #12
 80094fe:	68db      	ldr	r3, [r3, #12]
 8009500:	a902      	add	r1, sp, #8
 8009502:	4798      	blx	r3
 8009504:	6823      	ldr	r3, [r4, #0]
 8009506:	2800      	cmp	r0, #0
 8009508:	d051      	beq.n	80095ae <_ZN8touchgfx3HAL4tickEv+0x15a>
 800950a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800950e:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8009512:	4620      	mov	r0, r4
 8009514:	4798      	blx	r3
 8009516:	6960      	ldr	r0, [r4, #20]
 8009518:	2300      	movs	r3, #0
 800951a:	f88d 3007 	strb.w	r3, [sp, #7]
 800951e:	b158      	cbz	r0, 8009538 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8009520:	6803      	ldr	r3, [r0, #0]
 8009522:	f10d 0107 	add.w	r1, sp, #7
 8009526:	68db      	ldr	r3, [r3, #12]
 8009528:	4798      	blx	r3
 800952a:	b128      	cbz	r0, 8009538 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800952c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800952e:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8009532:	6803      	ldr	r3, [r0, #0]
 8009534:	68db      	ldr	r3, [r3, #12]
 8009536:	4798      	blx	r3
 8009538:	f104 001c 	add.w	r0, r4, #28
 800953c:	f010 f9a2 	bl	8019884 <_ZN8touchgfx8Gestures4tickEv>
 8009540:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8009544:	b30b      	cbz	r3, 800958a <_ZN8touchgfx3HAL4tickEv+0x136>
 8009546:	6920      	ldr	r0, [r4, #16]
 8009548:	6803      	ldr	r3, [r0, #0]
 800954a:	691b      	ldr	r3, [r3, #16]
 800954c:	4798      	blx	r3
 800954e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009550:	4606      	mov	r6, r0
 8009552:	b903      	cbnz	r3, 8009556 <_ZN8touchgfx3HAL4tickEv+0x102>
 8009554:	6720      	str	r0, [r4, #112]	; 0x70
 8009556:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009558:	4a1e      	ldr	r2, [pc, #120]	; (80095d4 <_ZN8touchgfx3HAL4tickEv+0x180>)
 800955a:	1af3      	subs	r3, r6, r3
 800955c:	4293      	cmp	r3, r2
 800955e:	d914      	bls.n	800958a <_ZN8touchgfx3HAL4tickEv+0x136>
 8009560:	6920      	ldr	r0, [r4, #16]
 8009562:	6803      	ldr	r3, [r0, #0]
 8009564:	699b      	ldr	r3, [r3, #24]
 8009566:	4798      	blx	r3
 8009568:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800956a:	2264      	movs	r2, #100	; 0x64
 800956c:	1af3      	subs	r3, r6, r3
 800956e:	fbb3 f3f2 	udiv	r3, r3, r2
 8009572:	fbb0 f0f3 	udiv	r0, r0, r3
 8009576:	2800      	cmp	r0, #0
 8009578:	dc1e      	bgt.n	80095b8 <_ZN8touchgfx3HAL4tickEv+0x164>
 800957a:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800957e:	6920      	ldr	r0, [r4, #16]
 8009580:	6803      	ldr	r3, [r0, #0]
 8009582:	2100      	movs	r1, #0
 8009584:	69db      	ldr	r3, [r3, #28]
 8009586:	4798      	blx	r3
 8009588:	6726      	str	r6, [r4, #112]	; 0x70
 800958a:	f002 fa5d 	bl	800ba48 <_ZN8touchgfx11Application11getInstanceEv>
 800958e:	6803      	ldr	r3, [r0, #0]
 8009590:	2100      	movs	r1, #0
 8009592:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009594:	4798      	blx	r3
 8009596:	6823      	ldr	r3, [r4, #0]
 8009598:	4620      	mov	r0, r4
 800959a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800959e:	4798      	blx	r3
 80095a0:	2001      	movs	r0, #1
 80095a2:	f7f7 f8ca 	bl	800073a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80095a6:	2300      	movs	r3, #0
 80095a8:	702b      	strb	r3, [r5, #0]
 80095aa:	b004      	add	sp, #16
 80095ac:	bd70      	pop	{r4, r5, r6, pc}
 80095ae:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80095b2:	4620      	mov	r0, r4
 80095b4:	4798      	blx	r3
 80095b6:	e7ae      	b.n	8009516 <_ZN8touchgfx3HAL4tickEv+0xc2>
 80095b8:	2863      	cmp	r0, #99	; 0x63
 80095ba:	bfcb      	itete	gt
 80095bc:	2300      	movgt	r3, #0
 80095be:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80095c2:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 80095c6:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 80095ca:	e7d8      	b.n	800957e <_ZN8touchgfx3HAL4tickEv+0x12a>
 80095cc:	20012180 	.word	0x20012180
 80095d0:	20012181 	.word	0x20012181
 80095d4:	05f5e100 	.word	0x05f5e100

080095d8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80095d8:	f7f7 b9d8 	b.w	800098c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080095dc <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80095dc:	6581      	str	r1, [r0, #88]	; 0x58
 80095de:	301c      	adds	r0, #28
 80095e0:	f010 b94e 	b.w	8019880 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080095e4 <_ZN8touchgfx3HAL5touchEll>:
 80095e4:	b530      	push	{r4, r5, lr}
 80095e6:	b087      	sub	sp, #28
 80095e8:	4604      	mov	r4, r0
 80095ea:	a804      	add	r0, sp, #16
 80095ec:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80095f0:	f001 ffda 	bl	800b5a8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80095f4:	9b04      	ldr	r3, [sp, #16]
 80095f6:	f8ad 300c 	strh.w	r3, [sp, #12]
 80095fa:	a906      	add	r1, sp, #24
 80095fc:	9b05      	ldr	r3, [sp, #20]
 80095fe:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8009602:	a803      	add	r0, sp, #12
 8009604:	f002 f81e 	bl	800b644 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009608:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800960c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009610:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009614:	f104 001c 	add.w	r0, r4, #28
 8009618:	b189      	cbz	r1, 800963e <_ZN8touchgfx3HAL5touchEll+0x5a>
 800961a:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800961e:	9300      	str	r3, [sp, #0]
 8009620:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8009624:	4613      	mov	r3, r2
 8009626:	462a      	mov	r2, r5
 8009628:	f010 f93a 	bl	80198a0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800962c:	b128      	cbz	r0, 800963a <_ZN8touchgfx3HAL5touchEll+0x56>
 800962e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8009632:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009634:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009638:	6623      	str	r3, [r4, #96]	; 0x60
 800963a:	b007      	add	sp, #28
 800963c:	bd30      	pop	{r4, r5, pc}
 800963e:	f010 f973 	bl	8019928 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009642:	2301      	movs	r3, #1
 8009644:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009648:	e7f1      	b.n	800962e <_ZN8touchgfx3HAL5touchEll+0x4a>

0800964a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800964a:	b570      	push	{r4, r5, r6, lr}
 800964c:	2b00      	cmp	r3, #0
 800964e:	d050      	beq.n	80096f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009650:	ea81 0002 	eor.w	r0, r1, r2
 8009654:	07c6      	lsls	r6, r0, #31
 8009656:	d508      	bpl.n	800966a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009658:	3a01      	subs	r2, #1
 800965a:	18cc      	adds	r4, r1, r3
 800965c:	42a1      	cmp	r1, r4
 800965e:	d048      	beq.n	80096f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009660:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009664:	f801 0b01 	strb.w	r0, [r1], #1
 8009668:	e7f8      	b.n	800965c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800966a:	07d5      	lsls	r5, r2, #31
 800966c:	bf42      	ittt	mi
 800966e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8009672:	f801 0b01 	strbmi.w	r0, [r1], #1
 8009676:	f103 33ff 	addmi.w	r3, r3, #4294967295	; 0xffffffff
 800967a:	2b01      	cmp	r3, #1
 800967c:	d915      	bls.n	80096aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800967e:	ea82 0001 	eor.w	r0, r2, r1
 8009682:	0784      	lsls	r4, r0, #30
 8009684:	d02d      	beq.n	80096e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 8009686:	1e94      	subs	r4, r2, #2
 8009688:	4608      	mov	r0, r1
 800968a:	18ce      	adds	r6, r1, r3
 800968c:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 8009690:	f820 5b02 	strh.w	r5, [r0], #2
 8009694:	1a35      	subs	r5, r6, r0
 8009696:	2d01      	cmp	r5, #1
 8009698:	d8f8      	bhi.n	800968c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800969a:	1e98      	subs	r0, r3, #2
 800969c:	f020 0001 	bic.w	r0, r0, #1
 80096a0:	3002      	adds	r0, #2
 80096a2:	4401      	add	r1, r0
 80096a4:	4402      	add	r2, r0
 80096a6:	f003 0301 	and.w	r3, r3, #1
 80096aa:	1f14      	subs	r4, r2, #4
 80096ac:	4608      	mov	r0, r1
 80096ae:	18ce      	adds	r6, r1, r3
 80096b0:	1a35      	subs	r5, r6, r0
 80096b2:	2d03      	cmp	r5, #3
 80096b4:	d810      	bhi.n	80096d8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 80096b6:	089c      	lsrs	r4, r3, #2
 80096b8:	00a0      	lsls	r0, r4, #2
 80096ba:	4401      	add	r1, r0
 80096bc:	3801      	subs	r0, #1
 80096be:	4402      	add	r2, r0
 80096c0:	f06f 0003 	mvn.w	r0, #3
 80096c4:	fb00 3404 	mla	r4, r0, r4, r3
 80096c8:	440c      	add	r4, r1
 80096ca:	42a1      	cmp	r1, r4
 80096cc:	d011      	beq.n	80096f2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 80096ce:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 80096d2:	f801 3b01 	strb.w	r3, [r1], #1
 80096d6:	e7f8      	b.n	80096ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 80096d8:	f854 5f04 	ldr.w	r5, [r4, #4]!
 80096dc:	f840 5b04 	str.w	r5, [r0], #4
 80096e0:	e7e6      	b.n	80096b0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 80096e2:	0790      	lsls	r0, r2, #30
 80096e4:	d0e1      	beq.n	80096aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 80096e6:	f832 0b02 	ldrh.w	r0, [r2], #2
 80096ea:	f821 0b02 	strh.w	r0, [r1], #2
 80096ee:	3b02      	subs	r3, #2
 80096f0:	e7db      	b.n	80096aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 80096f2:	2001      	movs	r0, #1
 80096f4:	bd70      	pop	{r4, r5, r6, pc}

080096f6 <_ZN8touchgfx3HAL7noTouchEv>:
 80096f6:	b510      	push	{r4, lr}
 80096f8:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 80096fc:	4604      	mov	r4, r0
 80096fe:	b153      	cbz	r3, 8009716 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009700:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8009704:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8009708:	2101      	movs	r1, #1
 800970a:	301c      	adds	r0, #28
 800970c:	f010 f90c 	bl	8019928 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009710:	2300      	movs	r3, #0
 8009712:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009716:	bd10      	pop	{r4, pc}

08009718 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8009718:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800971c:	4605      	mov	r5, r0
 800971e:	6980      	ldr	r0, [r0, #24]
 8009720:	b085      	sub	sp, #20
 8009722:	460f      	mov	r7, r1
 8009724:	4690      	mov	r8, r2
 8009726:	4699      	mov	r9, r3
 8009728:	b930      	cbnz	r0, 8009738 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800972a:	4b1f      	ldr	r3, [pc, #124]	; (80097a8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800972c:	4a1f      	ldr	r2, [pc, #124]	; (80097ac <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800972e:	f240 112f 	movw	r1, #303	; 0x12f
 8009732:	481f      	ldr	r0, [pc, #124]	; (80097b0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x98>)
 8009734:	f010 f9b4 	bl	8019aa0 <__assert_func>
 8009738:	ac04      	add	r4, sp, #16
 800973a:	2600      	movs	r6, #0
 800973c:	f844 6d04 	str.w	r6, [r4, #-4]!
 8009740:	6806      	ldr	r6, [r0, #0]
 8009742:	9401      	str	r4, [sp, #4]
 8009744:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 8009748:	9400      	str	r4, [sp, #0]
 800974a:	6834      	ldr	r4, [r6, #0]
 800974c:	47a0      	blx	r4
 800974e:	4c19      	ldr	r4, [pc, #100]	; (80097b4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x9c>)
 8009750:	4606      	mov	r6, r0
 8009752:	f8a4 9000 	strh.w	r9, [r4]
 8009756:	f7f7 f9df 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 800975a:	6803      	ldr	r3, [r0, #0]
 800975c:	6a1b      	ldr	r3, [r3, #32]
 800975e:	4798      	blx	r3
 8009760:	280c      	cmp	r0, #12
 8009762:	d80f      	bhi.n	8009784 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 8009764:	e8df f000 	tbb	[pc, r0]
 8009768:	1b1b1207 	.word	0x1b1b1207
 800976c:	1b1b1b1b 	.word	0x1b1b1b1b
 8009770:	1b1b1b1b 	.word	0x1b1b1b1b
 8009774:	1b          	.byte	0x1b
 8009775:	00          	.byte	0x00
 8009776:	8823      	ldrh	r3, [r4, #0]
 8009778:	fb08 7203 	mla	r2, r8, r3, r7
 800977c:	9b03      	ldr	r3, [sp, #12]
 800977e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8009782:	63eb      	str	r3, [r5, #60]	; 0x3c
 8009784:	4630      	mov	r0, r6
 8009786:	b005      	add	sp, #20
 8009788:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800978c:	8822      	ldrh	r2, [r4, #0]
 800978e:	9b03      	ldr	r3, [sp, #12]
 8009790:	fb08 7202 	mla	r2, r8, r2, r7
 8009794:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009798:	1a9a      	subs	r2, r3, r2
 800979a:	63ea      	str	r2, [r5, #60]	; 0x3c
 800979c:	e7f2      	b.n	8009784 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800979e:	4b06      	ldr	r3, [pc, #24]	; (80097b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0xa0>)
 80097a0:	4a02      	ldr	r2, [pc, #8]	; (80097ac <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 80097a2:	f44f 71a6 	mov.w	r1, #332	; 0x14c
 80097a6:	e7c4      	b.n	8009732 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 80097a8:	0801c0e9 	.word	0x0801c0e9
 80097ac:	0801c343 	.word	0x0801c343
 80097b0:	0801c12e 	.word	0x0801c12e
 80097b4:	20012176 	.word	0x20012176
 80097b8:	0801c154 	.word	0x0801c154

080097bc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 80097bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80097c0:	4698      	mov	r8, r3
 80097c2:	6803      	ldr	r3, [r0, #0]
 80097c4:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 80097c6:	4b0f      	ldr	r3, [pc, #60]	; (8009804 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 80097c8:	b087      	sub	sp, #28
 80097ca:	f8b3 9000 	ldrh.w	r9, [r3]
 80097ce:	460e      	mov	r6, r1
 80097d0:	4617      	mov	r7, r2
 80097d2:	4604      	mov	r4, r0
 80097d4:	f7f7 f9a0 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 80097d8:	6803      	ldr	r3, [r0, #0]
 80097da:	6a1b      	ldr	r3, [r3, #32]
 80097dc:	4798      	blx	r3
 80097de:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 80097e2:	9302      	str	r3, [sp, #8]
 80097e4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80097e8:	9301      	str	r3, [sp, #4]
 80097ea:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80097ee:	9300      	str	r3, [sp, #0]
 80097f0:	e9cd 9003 	strd	r9, r0, [sp, #12]
 80097f4:	4643      	mov	r3, r8
 80097f6:	463a      	mov	r2, r7
 80097f8:	4631      	mov	r1, r6
 80097fa:	4620      	mov	r0, r4
 80097fc:	47a8      	blx	r5
 80097fe:	b007      	add	sp, #28
 8009800:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009804:	20012176 	.word	0x20012176

08009808 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009808:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800980c:	4606      	mov	r6, r0
 800980e:	b089      	sub	sp, #36	; 0x24
 8009810:	4610      	mov	r0, r2
 8009812:	460c      	mov	r4, r1
 8009814:	4691      	mov	r9, r2
 8009816:	4698      	mov	r8, r3
 8009818:	f004 fbb0 	bl	800df7c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800981c:	2800      	cmp	r0, #0
 800981e:	f000 8093 	beq.w	8009948 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x140>
 8009822:	f8df a13c 	ldr.w	sl, [pc, #316]	; 8009960 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 8009826:	f8df b13c 	ldr.w	fp, [pc, #316]	; 8009964 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>
 800982a:	f8da 0000 	ldr.w	r0, [sl]
 800982e:	4f4b      	ldr	r7, [pc, #300]	; (800995c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 8009830:	6802      	ldr	r2, [r0, #0]
 8009832:	6a12      	ldr	r2, [r2, #32]
 8009834:	4790      	blx	r2
 8009836:	f8da 0000 	ldr.w	r0, [sl]
 800983a:	6802      	ldr	r2, [r0, #0]
 800983c:	ad08      	add	r5, sp, #32
 800983e:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8009840:	4790      	blx	r2
 8009842:	f825 9d0c 	strh.w	r9, [r5, #-12]!
 8009846:	f8bb 3000 	ldrh.w	r3, [fp]
 800984a:	9300      	str	r3, [sp, #0]
 800984c:	4628      	mov	r0, r5
 800984e:	883b      	ldrh	r3, [r7, #0]
 8009850:	9301      	str	r3, [sp, #4]
 8009852:	f004 fc57 	bl	800e104 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009856:	f8ab 0000 	strh.w	r0, [fp]
 800985a:	4628      	mov	r0, r5
 800985c:	f004 fc8c 	bl	800e178 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009860:	f8da b000 	ldr.w	fp, [sl]
 8009864:	8038      	strh	r0, [r7, #0]
 8009866:	f8db 303c 	ldr.w	r3, [fp, #60]	; 0x3c
 800986a:	9302      	str	r3, [sp, #8]
 800986c:	4648      	mov	r0, r9
 800986e:	f8db 7040 	ldr.w	r7, [fp, #64]	; 0x40
 8009872:	f004 fb83 	bl	800df7c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009876:	f8da 2000 	ldr.w	r2, [sl]
 800987a:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 800987e:	63d0      	str	r0, [r2, #60]	; 0x3c
 8009880:	6822      	ldr	r2, [r4, #0]
 8009882:	f9b4 9004 	ldrsh.w	r9, [r4, #4]
 8009886:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8009888:	f9b4 a006 	ldrsh.w	sl, [r4, #6]
 800988c:	2200      	movs	r2, #0
 800988e:	4611      	mov	r1, r2
 8009890:	4620      	mov	r0, r4
 8009892:	4798      	blx	r3
 8009894:	2201      	movs	r2, #1
 8009896:	f894 b025 	ldrb.w	fp, [r4, #37]	; 0x25
 800989a:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800989e:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80098a2:	2a00      	cmp	r2, #0
 80098a4:	f104 0204 	add.w	r2, r4, #4
 80098a8:	dd51      	ble.n	800994e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x146>
 80098aa:	f9b8 1006 	ldrsh.w	r1, [r8, #6]
 80098ae:	2900      	cmp	r1, #0
 80098b0:	dd4d      	ble.n	800994e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x146>
 80098b2:	6810      	ldr	r0, [r2, #0]
 80098b4:	6851      	ldr	r1, [r2, #4]
 80098b6:	f10d 0c18 	add.w	ip, sp, #24
 80098ba:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80098be:	4641      	mov	r1, r8
 80098c0:	a806      	add	r0, sp, #24
 80098c2:	f7ff fc85 	bl	80091d0 <_ZN8touchgfx4RectaNERKS0_>
 80098c6:	4628      	mov	r0, r5
 80098c8:	f004 fda8 	bl	800e41c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80098cc:	4680      	mov	r8, r0
 80098ce:	f7f7 f923 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 80098d2:	6802      	ldr	r2, [r0, #0]
 80098d4:	6a12      	ldr	r2, [r2, #32]
 80098d6:	4790      	blx	r2
 80098d8:	4580      	cmp	r8, r0
 80098da:	d03d      	beq.n	8009958 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x150>
 80098dc:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 80098de:	b150      	cbz	r0, 80098f6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xee>
 80098e0:	4628      	mov	r0, r5
 80098e2:	f004 fd9b 	bl	800e41c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80098e6:	4605      	mov	r5, r0
 80098e8:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 80098ea:	6803      	ldr	r3, [r0, #0]
 80098ec:	6a1b      	ldr	r3, [r3, #32]
 80098ee:	4798      	blx	r3
 80098f0:	1a2b      	subs	r3, r5, r0
 80098f2:	4258      	negs	r0, r3
 80098f4:	4158      	adcs	r0, r3
 80098f6:	f886 0076 	strb.w	r0, [r6, #118]	; 0x76
 80098fa:	6822      	ldr	r2, [r4, #0]
 80098fc:	6963      	ldr	r3, [r4, #20]
 80098fe:	9303      	str	r3, [sp, #12]
 8009900:	2500      	movs	r5, #0
 8009902:	6165      	str	r5, [r4, #20]
 8009904:	4620      	mov	r0, r4
 8009906:	6892      	ldr	r2, [r2, #8]
 8009908:	a906      	add	r1, sp, #24
 800990a:	4790      	blx	r2
 800990c:	9b03      	ldr	r3, [sp, #12]
 800990e:	6163      	str	r3, [r4, #20]
 8009910:	f886 5076 	strb.w	r5, [r6, #118]	; 0x76
 8009914:	6823      	ldr	r3, [r4, #0]
 8009916:	f884 b025 	strb.w	fp, [r4, #37]	; 0x25
 800991a:	4620      	mov	r0, r4
 800991c:	4c10      	ldr	r4, [pc, #64]	; (8009960 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>)
 800991e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009920:	4652      	mov	r2, sl
 8009922:	4649      	mov	r1, r9
 8009924:	4798      	blx	r3
 8009926:	6820      	ldr	r0, [r4, #0]
 8009928:	9b02      	ldr	r3, [sp, #8]
 800992a:	9a00      	ldr	r2, [sp, #0]
 800992c:	e9c0 370f 	strd	r3, r7, [r0, #60]	; 0x3c
 8009930:	4b0c      	ldr	r3, [pc, #48]	; (8009964 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>)
 8009932:	801a      	strh	r2, [r3, #0]
 8009934:	4b09      	ldr	r3, [pc, #36]	; (800995c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 8009936:	9a01      	ldr	r2, [sp, #4]
 8009938:	801a      	strh	r2, [r3, #0]
 800993a:	6803      	ldr	r3, [r0, #0]
 800993c:	6a1b      	ldr	r3, [r3, #32]
 800993e:	4798      	blx	r3
 8009940:	6820      	ldr	r0, [r4, #0]
 8009942:	6803      	ldr	r3, [r0, #0]
 8009944:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009946:	4798      	blx	r3
 8009948:	b009      	add	sp, #36	; 0x24
 800994a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800994e:	6810      	ldr	r0, [r2, #0]
 8009950:	6851      	ldr	r1, [r2, #4]
 8009952:	ab06      	add	r3, sp, #24
 8009954:	c303      	stmia	r3!, {r0, r1}
 8009956:	e7b6      	b.n	80098c6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xbe>
 8009958:	2000      	movs	r0, #0
 800995a:	e7cc      	b.n	80098f6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xee>
 800995c:	20012178 	.word	0x20012178
 8009960:	2001217c 	.word	0x2001217c
 8009964:	20012176 	.word	0x20012176

08009968 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8009968:	b510      	push	{r4, lr}
 800996a:	4b07      	ldr	r3, [pc, #28]	; (8009988 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800996c:	781b      	ldrb	r3, [r3, #0]
 800996e:	4604      	mov	r4, r0
 8009970:	b13b      	cbz	r3, 8009982 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009972:	6803      	ldr	r3, [r0, #0]
 8009974:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009976:	4798      	blx	r3
 8009978:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800997a:	4283      	cmp	r3, r0
 800997c:	d101      	bne.n	8009982 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800997e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8009980:	bd10      	pop	{r4, pc}
 8009982:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8009984:	e7fc      	b.n	8009980 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8009986:	bf00      	nop
 8009988:	2001217a 	.word	0x2001217a

0800998c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800998c:	b510      	push	{r4, lr}
 800998e:	4b0b      	ldr	r3, [pc, #44]	; (80099bc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 8009990:	781b      	ldrb	r3, [r3, #0]
 8009992:	4604      	mov	r4, r0
 8009994:	b95b      	cbnz	r3, 80099ae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009996:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800999a:	2b02      	cmp	r3, #2
 800999c:	d007      	beq.n	80099ae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800999e:	6840      	ldr	r0, [r0, #4]
 80099a0:	f000 fbce 	bl	800a140 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80099a4:	b118      	cbz	r0, 80099ae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80099a6:	6862      	ldr	r2, [r4, #4]
 80099a8:	7a53      	ldrb	r3, [r2, #9]
 80099aa:	2b00      	cmp	r3, #0
 80099ac:	d0fc      	beq.n	80099a8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80099ae:	f7f6 ffd5 	bl	800095c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80099b2:	4620      	mov	r0, r4
 80099b4:	f7ff ffd8 	bl	8009968 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80099b8:	bd10      	pop	{r4, pc}
 80099ba:	bf00      	nop
 80099bc:	2001217a 	.word	0x2001217a

080099c0 <_ZN8touchgfx3HAL10initializeEv>:
 80099c0:	b510      	push	{r4, lr}
 80099c2:	4604      	mov	r4, r0
 80099c4:	f7f6 ffb2 	bl	800092c <_ZN8touchgfx10OSWrappers10initializeEv>
 80099c8:	6860      	ldr	r0, [r4, #4]
 80099ca:	6803      	ldr	r3, [r0, #0]
 80099cc:	68db      	ldr	r3, [r3, #12]
 80099ce:	4798      	blx	r3
 80099d0:	68e0      	ldr	r0, [r4, #12]
 80099d2:	6803      	ldr	r3, [r0, #0]
 80099d4:	689b      	ldr	r3, [r3, #8]
 80099d6:	4798      	blx	r3
 80099d8:	6823      	ldr	r3, [r4, #0]
 80099da:	4620      	mov	r0, r4
 80099dc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80099de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80099e2:	4718      	bx	r3

080099e4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 80099e4:	b508      	push	{r3, lr}
 80099e6:	290c      	cmp	r1, #12
 80099e8:	d817      	bhi.n	8009a1a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 80099ea:	e8df f001 	tbb	[pc, r1]
 80099ee:	090b      	.short	0x090b
 80099f0:	0d0d0d07 	.word	0x0d0d0d07
 80099f4:	1414140d 	.word	0x1414140d
 80099f8:	1414      	.short	0x1414
 80099fa:	0d          	.byte	0x0d
 80099fb:	00          	.byte	0x00
 80099fc:	2020      	movs	r0, #32
 80099fe:	bd08      	pop	{r3, pc}
 8009a00:	2018      	movs	r0, #24
 8009a02:	e7fc      	b.n	80099fe <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009a04:	2010      	movs	r0, #16
 8009a06:	e7fa      	b.n	80099fe <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009a08:	4b05      	ldr	r3, [pc, #20]	; (8009a20 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 8009a0a:	4a06      	ldr	r2, [pc, #24]	; (8009a24 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 8009a0c:	4806      	ldr	r0, [pc, #24]	; (8009a28 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 8009a0e:	f240 212f 	movw	r1, #559	; 0x22f
 8009a12:	f010 f845 	bl	8019aa0 <__assert_func>
 8009a16:	2008      	movs	r0, #8
 8009a18:	e7f1      	b.n	80099fe <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009a1a:	2000      	movs	r0, #0
 8009a1c:	e7ef      	b.n	80099fe <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009a1e:	bf00      	nop
 8009a20:	0801c227 	.word	0x0801c227
 8009a24:	0801c505 	.word	0x0801c505
 8009a28:	0801c12e 	.word	0x0801c12e

08009a2c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 8009a2c:	b570      	push	{r4, r5, r6, lr}
 8009a2e:	460d      	mov	r5, r1
 8009a30:	f89d 1014 	ldrb.w	r1, [sp, #20]
 8009a34:	4616      	mov	r6, r2
 8009a36:	461c      	mov	r4, r3
 8009a38:	f7ff ffd4 	bl	80099e4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 8009a3c:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8009a40:	10c0      	asrs	r0, r0, #3
 8009a42:	fb06 5101 	mla	r1, r6, r1, r5
 8009a46:	fb00 4001 	mla	r0, r0, r1, r4
 8009a4a:	bd70      	pop	{r4, r5, r6, pc}

08009a4c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 8009a4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009a50:	b08a      	sub	sp, #40	; 0x28
 8009a52:	f04f 0c00 	mov.w	ip, #0
 8009a56:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 8009a5a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8009a5e:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8009a62:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8009a66:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 8009a6a:	f8cd c020 	str.w	ip, [sp, #32]
 8009a6e:	f1b8 0f02 	cmp.w	r8, #2
 8009a72:	4604      	mov	r4, r0
 8009a74:	469a      	mov	sl, r3
 8009a76:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8009a7a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8009a7e:	d030      	beq.n	8009ae2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 8009a80:	2bff      	cmp	r3, #255	; 0xff
 8009a82:	d12c      	bne.n	8009ade <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 8009a84:	4560      	cmp	r0, ip
 8009a86:	bf14      	ite	ne
 8009a88:	2004      	movne	r0, #4
 8009a8a:	2001      	moveq	r0, #1
 8009a8c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8009a90:	9204      	str	r2, [sp, #16]
 8009a92:	4620      	mov	r0, r4
 8009a94:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8009a98:	f8ad 201c 	strh.w	r2, [sp, #28]
 8009a9c:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8009aa0:	f8ad 6018 	strh.w	r6, [sp, #24]
 8009aa4:	f8ad 501a 	strh.w	r5, [sp, #26]
 8009aa8:	f7ff ff5e 	bl	8009968 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009aac:	e9cd 9700 	strd	r9, r7, [sp]
 8009ab0:	4603      	mov	r3, r0
 8009ab2:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 8009ab6:	4651      	mov	r1, sl
 8009ab8:	4620      	mov	r0, r4
 8009aba:	f7ff ffb7 	bl	8009a2c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009abe:	f8ad 901e 	strh.w	r9, [sp, #30]
 8009ac2:	9005      	str	r0, [sp, #20]
 8009ac4:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 8009ac8:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 8009acc:	b106      	cbz	r6, 8009ad0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 8009ace:	b98d      	cbnz	r5, 8009af4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 8009ad0:	4b12      	ldr	r3, [pc, #72]	; (8009b1c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 8009ad2:	4a13      	ldr	r2, [pc, #76]	; (8009b20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 8009ad4:	f240 11af 	movw	r1, #431	; 0x1af
 8009ad8:	4812      	ldr	r0, [pc, #72]	; (8009b24 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 8009ada:	f00f ffe1 	bl	8019aa0 <__assert_func>
 8009ade:	2004      	movs	r0, #4
 8009ae0:	e7d4      	b.n	8009a8c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8009ae2:	2bff      	cmp	r3, #255	; 0xff
 8009ae4:	d104      	bne.n	8009af0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 8009ae6:	2800      	cmp	r0, #0
 8009ae8:	bf14      	ite	ne
 8009aea:	2040      	movne	r0, #64	; 0x40
 8009aec:	2020      	moveq	r0, #32
 8009aee:	e7cd      	b.n	8009a8c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8009af0:	2040      	movs	r0, #64	; 0x40
 8009af2:	e7cb      	b.n	8009a8c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 8009af4:	6823      	ldr	r3, [r4, #0]
 8009af6:	9d02      	ldr	r5, [sp, #8]
 8009af8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009afa:	4620      	mov	r0, r4
 8009afc:	4798      	blx	r3
 8009afe:	4228      	tst	r0, r5
 8009b00:	d104      	bne.n	8009b0c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 8009b02:	4b09      	ldr	r3, [pc, #36]	; (8009b28 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 8009b04:	4a06      	ldr	r2, [pc, #24]	; (8009b20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 8009b06:	f44f 71d8 	mov.w	r1, #432	; 0x1b0
 8009b0a:	e7e5      	b.n	8009ad8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 8009b0c:	6860      	ldr	r0, [r4, #4]
 8009b0e:	6803      	ldr	r3, [r0, #0]
 8009b10:	a902      	add	r1, sp, #8
 8009b12:	685b      	ldr	r3, [r3, #4]
 8009b14:	4798      	blx	r3
 8009b16:	b00a      	add	sp, #40	; 0x28
 8009b18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009b1c:	0801c1aa 	.word	0x0801c1aa
 8009b20:	0801c3a7 	.word	0x0801c3a7
 8009b24:	0801c12e 	.word	0x0801c12e
 8009b28:	0801c1e2 	.word	0x0801c1e2

08009b2c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 8009b2c:	b510      	push	{r4, lr}
 8009b2e:	b08a      	sub	sp, #40	; 0x28
 8009b30:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8009b34:	9408      	str	r4, [sp, #32]
 8009b36:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 8009b3a:	9407      	str	r4, [sp, #28]
 8009b3c:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 8009b40:	9406      	str	r4, [sp, #24]
 8009b42:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 8009b46:	9405      	str	r4, [sp, #20]
 8009b48:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 8009b4c:	9404      	str	r4, [sp, #16]
 8009b4e:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 8009b52:	9403      	str	r4, [sp, #12]
 8009b54:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 8009b58:	9402      	str	r4, [sp, #8]
 8009b5a:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 8009b5e:	e9cd 3400 	strd	r3, r4, [sp]
 8009b62:	4613      	mov	r3, r2
 8009b64:	2200      	movs	r2, #0
 8009b66:	f7ff ff71 	bl	8009a4c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8009b6a:	b00a      	add	sp, #40	; 0x28
 8009b6c:	bd10      	pop	{r4, pc}
	...

08009b70 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 8009b70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009b72:	b08b      	sub	sp, #44	; 0x2c
 8009b74:	4616      	mov	r6, r2
 8009b76:	460d      	mov	r5, r1
 8009b78:	461f      	mov	r7, r3
 8009b7a:	4604      	mov	r4, r0
 8009b7c:	f7f6 ffcc 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8009b80:	6803      	ldr	r3, [r0, #0]
 8009b82:	6a1b      	ldr	r3, [r3, #32]
 8009b84:	4798      	blx	r3
 8009b86:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8009b8a:	4b0d      	ldr	r3, [pc, #52]	; (8009bc0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 8009b8c:	881b      	ldrh	r3, [r3, #0]
 8009b8e:	9306      	str	r3, [sp, #24]
 8009b90:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8009b94:	9305      	str	r3, [sp, #20]
 8009b96:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8009b9a:	9304      	str	r3, [sp, #16]
 8009b9c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009ba0:	9303      	str	r3, [sp, #12]
 8009ba2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009ba6:	9302      	str	r3, [sp, #8]
 8009ba8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009bac:	2200      	movs	r2, #0
 8009bae:	e9cd 7300 	strd	r7, r3, [sp]
 8009bb2:	4629      	mov	r1, r5
 8009bb4:	4633      	mov	r3, r6
 8009bb6:	4620      	mov	r0, r4
 8009bb8:	f7ff ff48 	bl	8009a4c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8009bbc:	b00b      	add	sp, #44	; 0x2c
 8009bbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009bc0:	20012176 	.word	0x20012176

08009bc4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 8009bc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009bc8:	461f      	mov	r7, r3
 8009bca:	4b14      	ldr	r3, [pc, #80]	; (8009c1c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 8009bcc:	b08a      	sub	sp, #40	; 0x28
 8009bce:	4616      	mov	r6, r2
 8009bd0:	f8b3 8000 	ldrh.w	r8, [r3]
 8009bd4:	460d      	mov	r5, r1
 8009bd6:	4604      	mov	r4, r0
 8009bd8:	f7f6 ff9e 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8009bdc:	6803      	ldr	r3, [r0, #0]
 8009bde:	6a1b      	ldr	r3, [r3, #32]
 8009be0:	4798      	blx	r3
 8009be2:	2302      	movs	r3, #2
 8009be4:	e9cd 8306 	strd	r8, r3, [sp, #24]
 8009be8:	2301      	movs	r3, #1
 8009bea:	9305      	str	r3, [sp, #20]
 8009bec:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8009bf0:	9304      	str	r3, [sp, #16]
 8009bf2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009bf6:	9303      	str	r3, [sp, #12]
 8009bf8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009bfc:	9302      	str	r3, [sp, #8]
 8009bfe:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009c02:	9008      	str	r0, [sp, #32]
 8009c04:	e9cd 7300 	strd	r7, r3, [sp]
 8009c08:	2200      	movs	r2, #0
 8009c0a:	4633      	mov	r3, r6
 8009c0c:	4629      	mov	r1, r5
 8009c0e:	4620      	mov	r0, r4
 8009c10:	f7ff ff1c 	bl	8009a4c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8009c14:	b00a      	add	sp, #40	; 0x28
 8009c16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009c1a:	bf00      	nop
 8009c1c:	20012176 	.word	0x20012176

08009c20 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 8009c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c24:	b08b      	sub	sp, #44	; 0x2c
 8009c26:	469b      	mov	fp, r3
 8009c28:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8009c2c:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 8009c30:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 8009c34:	2fff      	cmp	r7, #255	; 0xff
 8009c36:	bf14      	ite	ne
 8009c38:	2308      	movne	r3, #8
 8009c3a:	2302      	moveq	r3, #2
 8009c3c:	2600      	movs	r6, #0
 8009c3e:	4604      	mov	r4, r0
 8009c40:	4689      	mov	r9, r1
 8009c42:	4692      	mov	sl, r2
 8009c44:	e9cd 3602 	strd	r3, r6, [sp, #8]
 8009c48:	9608      	str	r6, [sp, #32]
 8009c4a:	f7ff fe8d 	bl	8009968 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009c4e:	e9cd 8500 	strd	r8, r5, [sp]
 8009c52:	4603      	mov	r3, r0
 8009c54:	465a      	mov	r2, fp
 8009c56:	4651      	mov	r1, sl
 8009c58:	4620      	mov	r0, r4
 8009c5a:	f7ff fee7 	bl	8009a2c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009c5e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009c62:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009c66:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8009c6a:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009c6e:	6823      	ldr	r3, [r4, #0]
 8009c70:	9005      	str	r0, [sp, #20]
 8009c72:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 8009c76:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 8009c7a:	f8ad 601c 	strh.w	r6, [sp, #28]
 8009c7e:	f8ad 801e 	strh.w	r8, [sp, #30]
 8009c82:	f8cd 9020 	str.w	r9, [sp, #32]
 8009c86:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 8009c8a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009c8c:	9d02      	ldr	r5, [sp, #8]
 8009c8e:	4620      	mov	r0, r4
 8009c90:	4798      	blx	r3
 8009c92:	4228      	tst	r0, r5
 8009c94:	d106      	bne.n	8009ca4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 8009c96:	4b07      	ldr	r3, [pc, #28]	; (8009cb4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 8009c98:	4a07      	ldr	r2, [pc, #28]	; (8009cb8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 8009c9a:	4808      	ldr	r0, [pc, #32]	; (8009cbc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 8009c9c:	f240 11e7 	movw	r1, #487	; 0x1e7
 8009ca0:	f00f fefe 	bl	8019aa0 <__assert_func>
 8009ca4:	6860      	ldr	r0, [r4, #4]
 8009ca6:	6803      	ldr	r3, [r0, #0]
 8009ca8:	a902      	add	r1, sp, #8
 8009caa:	685b      	ldr	r3, [r3, #4]
 8009cac:	4798      	blx	r3
 8009cae:	b00b      	add	sp, #44	; 0x2c
 8009cb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009cb4:	0801c1e2 	.word	0x0801c1e2
 8009cb8:	0801c470 	.word	0x0801c470
 8009cbc:	0801c12e 	.word	0x0801c12e

08009cc0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8009cc0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009cc4:	461f      	mov	r7, r3
 8009cc6:	4b0b      	ldr	r3, [pc, #44]	; (8009cf4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8009cc8:	460d      	mov	r5, r1
 8009cca:	f8b3 8000 	ldrh.w	r8, [r3]
 8009cce:	4616      	mov	r6, r2
 8009cd0:	4604      	mov	r4, r0
 8009cd2:	f7f6 ff21 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8009cd6:	6803      	ldr	r3, [r0, #0]
 8009cd8:	6a1b      	ldr	r3, [r3, #32]
 8009cda:	4798      	blx	r3
 8009cdc:	463b      	mov	r3, r7
 8009cde:	e9cd 8000 	strd	r8, r0, [sp]
 8009ce2:	4632      	mov	r2, r6
 8009ce4:	4629      	mov	r1, r5
 8009ce6:	4620      	mov	r0, r4
 8009ce8:	f7ff fea0 	bl	8009a2c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009cec:	b002      	add	sp, #8
 8009cee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009cf2:	bf00      	nop
 8009cf4:	20012176 	.word	0x20012176

08009cf8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 8009cf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009cfc:	b088      	sub	sp, #32
 8009cfe:	4698      	mov	r8, r3
 8009d00:	2300      	movs	r3, #0
 8009d02:	9306      	str	r3, [sp, #24]
 8009d04:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009d08:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 8009d0c:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8009d10:	f8ad 6010 	strh.w	r6, [sp, #16]
 8009d14:	e9cd 3100 	strd	r3, r1, [sp]
 8009d18:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009d1c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8009d20:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8009d24:	f88d 301c 	strb.w	r3, [sp, #28]
 8009d28:	4617      	mov	r7, r2
 8009d2a:	4604      	mov	r4, r0
 8009d2c:	f8ad 5012 	strh.w	r5, [sp, #18]
 8009d30:	f7ff fe1a 	bl	8009968 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009d34:	4642      	mov	r2, r8
 8009d36:	4603      	mov	r3, r0
 8009d38:	4639      	mov	r1, r7
 8009d3a:	4620      	mov	r0, r4
 8009d3c:	f7ff ffc0 	bl	8009cc0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009d40:	4b16      	ldr	r3, [pc, #88]	; (8009d9c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 8009d42:	9003      	str	r0, [sp, #12]
 8009d44:	881b      	ldrh	r3, [r3, #0]
 8009d46:	f8ad 3016 	strh.w	r3, [sp, #22]
 8009d4a:	f7f6 fee5 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8009d4e:	6803      	ldr	r3, [r0, #0]
 8009d50:	6a1b      	ldr	r3, [r3, #32]
 8009d52:	4798      	blx	r3
 8009d54:	f88d 001e 	strb.w	r0, [sp, #30]
 8009d58:	f88d 001d 	strb.w	r0, [sp, #29]
 8009d5c:	b106      	cbz	r6, 8009d60 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 8009d5e:	b935      	cbnz	r5, 8009d6e <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 8009d60:	4b0f      	ldr	r3, [pc, #60]	; (8009da0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 8009d62:	4a10      	ldr	r2, [pc, #64]	; (8009da4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 8009d64:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8009d68:	480f      	ldr	r0, [pc, #60]	; (8009da8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 8009d6a:	f00f fe99 	bl	8019aa0 <__assert_func>
 8009d6e:	6823      	ldr	r3, [r4, #0]
 8009d70:	9d00      	ldr	r5, [sp, #0]
 8009d72:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009d74:	4620      	mov	r0, r4
 8009d76:	4798      	blx	r3
 8009d78:	4228      	tst	r0, r5
 8009d7a:	d104      	bne.n	8009d86 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 8009d7c:	4b0b      	ldr	r3, [pc, #44]	; (8009dac <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 8009d7e:	4a09      	ldr	r2, [pc, #36]	; (8009da4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 8009d80:	f240 11cd 	movw	r1, #461	; 0x1cd
 8009d84:	e7f0      	b.n	8009d68 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 8009d86:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8009d88:	6860      	ldr	r0, [r4, #4]
 8009d8a:	9306      	str	r3, [sp, #24]
 8009d8c:	6803      	ldr	r3, [r0, #0]
 8009d8e:	4669      	mov	r1, sp
 8009d90:	685b      	ldr	r3, [r3, #4]
 8009d92:	4798      	blx	r3
 8009d94:	b008      	add	sp, #32
 8009d96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009d9a:	bf00      	nop
 8009d9c:	20012176 	.word	0x20012176
 8009da0:	0801c1aa 	.word	0x0801c1aa
 8009da4:	0801c259 	.word	0x0801c259
 8009da8:	0801c12e 	.word	0x0801c12e
 8009dac:	0801c1e2 	.word	0x0801c1e2

08009db0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8009db0:	b570      	push	{r4, r5, r6, lr}
 8009db2:	b08a      	sub	sp, #40	; 0x28
 8009db4:	466b      	mov	r3, sp
 8009db6:	e883 0006 	stmia.w	r3, {r1, r2}
 8009dba:	4b20      	ldr	r3, [pc, #128]	; (8009e3c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 8009dbc:	781b      	ldrb	r3, [r3, #0]
 8009dbe:	4604      	mov	r4, r0
 8009dc0:	b933      	cbnz	r3, 8009dd0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 8009dc2:	4b1f      	ldr	r3, [pc, #124]	; (8009e40 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 8009dc4:	4a1f      	ldr	r2, [pc, #124]	; (8009e44 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 8009dc6:	4820      	ldr	r0, [pc, #128]	; (8009e48 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 8009dc8:	f44f 71fc 	mov.w	r1, #504	; 0x1f8
 8009dcc:	f00f fe68 	bl	8019aa0 <__assert_func>
 8009dd0:	2300      	movs	r3, #0
 8009dd2:	9308      	str	r3, [sp, #32]
 8009dd4:	2301      	movs	r3, #1
 8009dd6:	9302      	str	r3, [sp, #8]
 8009dd8:	6803      	ldr	r3, [r0, #0]
 8009dda:	f8bd 5000 	ldrh.w	r5, [sp]
 8009dde:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009de0:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 8009de4:	4798      	blx	r3
 8009de6:	4632      	mov	r2, r6
 8009de8:	4629      	mov	r1, r5
 8009dea:	4603      	mov	r3, r0
 8009dec:	4620      	mov	r0, r4
 8009dee:	f7ff ff67 	bl	8009cc0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009df2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8009df4:	9305      	str	r3, [sp, #20]
 8009df6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009dfa:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009dfe:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8009e02:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009e06:	4b11      	ldr	r3, [pc, #68]	; (8009e4c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 8009e08:	9003      	str	r0, [sp, #12]
 8009e0a:	881b      	ldrh	r3, [r3, #0]
 8009e0c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009e10:	f8ad 301e 	strh.w	r3, [sp, #30]
 8009e14:	f7f6 fe80 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8009e18:	6803      	ldr	r3, [r0, #0]
 8009e1a:	6a1b      	ldr	r3, [r3, #32]
 8009e1c:	4798      	blx	r3
 8009e1e:	23ff      	movs	r3, #255	; 0xff
 8009e20:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8009e24:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 8009e28:	6860      	ldr	r0, [r4, #4]
 8009e2a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8009e2e:	6803      	ldr	r3, [r0, #0]
 8009e30:	a902      	add	r1, sp, #8
 8009e32:	685b      	ldr	r3, [r3, #4]
 8009e34:	4798      	blx	r3
 8009e36:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8009e38:	b00a      	add	sp, #40	; 0x28
 8009e3a:	bd70      	pop	{r4, r5, r6, pc}
 8009e3c:	2001217b 	.word	0x2001217b
 8009e40:	0801c07b 	.word	0x0801c07b
 8009e44:	0801c2fd 	.word	0x0801c2fd
 8009e48:	0801c12e 	.word	0x0801c12e
 8009e4c:	20012176 	.word	0x20012176

08009e50 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8009e50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009e52:	b08b      	sub	sp, #44	; 0x2c
 8009e54:	466d      	mov	r5, sp
 8009e56:	e885 0006 	stmia.w	r5, {r1, r2}
 8009e5a:	461d      	mov	r5, r3
 8009e5c:	2300      	movs	r3, #0
 8009e5e:	9308      	str	r3, [sp, #32]
 8009e60:	2301      	movs	r3, #1
 8009e62:	9302      	str	r3, [sp, #8]
 8009e64:	6803      	ldr	r3, [r0, #0]
 8009e66:	f8bd 6000 	ldrh.w	r6, [sp]
 8009e6a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009e6c:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8009e70:	4604      	mov	r4, r0
 8009e72:	4798      	blx	r3
 8009e74:	463a      	mov	r2, r7
 8009e76:	4631      	mov	r1, r6
 8009e78:	4603      	mov	r3, r0
 8009e7a:	4620      	mov	r0, r4
 8009e7c:	f7ff ff20 	bl	8009cc0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8009e80:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009e84:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009e88:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8009e8c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009e90:	4b0e      	ldr	r3, [pc, #56]	; (8009ecc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 8009e92:	9003      	str	r0, [sp, #12]
 8009e94:	881b      	ldrh	r3, [r3, #0]
 8009e96:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009e9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8009e9c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8009ea0:	9505      	str	r5, [sp, #20]
 8009ea2:	f7f6 fe39 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 8009ea6:	6803      	ldr	r3, [r0, #0]
 8009ea8:	6a1b      	ldr	r3, [r3, #32]
 8009eaa:	4798      	blx	r3
 8009eac:	23ff      	movs	r3, #255	; 0xff
 8009eae:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8009eb2:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 8009eb6:	6860      	ldr	r0, [r4, #4]
 8009eb8:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8009ebc:	6803      	ldr	r3, [r0, #0]
 8009ebe:	a902      	add	r1, sp, #8
 8009ec0:	685b      	ldr	r3, [r3, #4]
 8009ec2:	4798      	blx	r3
 8009ec4:	4628      	mov	r0, r5
 8009ec6:	b00b      	add	sp, #44	; 0x2c
 8009ec8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009eca:	bf00      	nop
 8009ecc:	20012176 	.word	0x20012176

08009ed0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8009ed0:	b570      	push	{r4, r5, r6, lr}
 8009ed2:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 8009ed6:	4604      	mov	r4, r0
 8009ed8:	b19b      	cbz	r3, 8009f02 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8009eda:	2002      	movs	r0, #2
 8009edc:	f7f6 fc2e 	bl	800073c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8009ee0:	2300      	movs	r3, #0
 8009ee2:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009ee6:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8009eea:	6823      	ldr	r3, [r4, #0]
 8009eec:	4620      	mov	r0, r4
 8009eee:	f8d3 50a0 	ldr.w	r5, [r3, #160]	; 0xa0
 8009ef2:	f7ff fd39 	bl	8009968 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009ef6:	462b      	mov	r3, r5
 8009ef8:	4601      	mov	r1, r0
 8009efa:	4620      	mov	r0, r4
 8009efc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009f00:	4718      	bx	r3
 8009f02:	bd70      	pop	{r4, r5, r6, pc}

08009f04 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8009f04:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8009f08:	1a13      	subs	r3, r2, r0
 8009f0a:	4258      	negs	r0, r3
 8009f0c:	4158      	adcs	r0, r3
 8009f0e:	4770      	bx	lr

08009f10 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8009f10:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8009f14:	1a9b      	subs	r3, r3, r2
 8009f16:	2b00      	cmp	r3, #0
 8009f18:	bfdc      	itt	le
 8009f1a:	6882      	ldrle	r2, [r0, #8]
 8009f1c:	189b      	addle	r3, r3, r2
 8009f1e:	2b01      	cmp	r3, #1
 8009f20:	bfcc      	ite	gt
 8009f22:	2000      	movgt	r0, #0
 8009f24:	2001      	movle	r0, #1
 8009f26:	4770      	bx	lr

08009f28 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8009f28:	6902      	ldr	r2, [r0, #16]
 8009f2a:	6840      	ldr	r0, [r0, #4]
 8009f2c:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 8009f30:	4770      	bx	lr

08009f32 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8009f32:	6803      	ldr	r3, [r0, #0]
 8009f34:	691b      	ldr	r3, [r3, #16]
 8009f36:	4718      	bx	r3

08009f38 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8009f38:	4770      	bx	lr

08009f3a <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8009f3a:	4770      	bx	lr

08009f3c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8009f3c:	4770      	bx	lr
	...

08009f40 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8009f40:	b570      	push	{r4, r5, r6, lr}
 8009f42:	2301      	movs	r3, #1
 8009f44:	7203      	strb	r3, [r0, #8]
 8009f46:	4604      	mov	r4, r0
 8009f48:	6840      	ldr	r0, [r0, #4]
 8009f4a:	6803      	ldr	r3, [r0, #0]
 8009f4c:	699b      	ldr	r3, [r3, #24]
 8009f4e:	4798      	blx	r3
 8009f50:	6803      	ldr	r3, [r0, #0]
 8009f52:	2b08      	cmp	r3, #8
 8009f54:	4605      	mov	r5, r0
 8009f56:	d01e      	beq.n	8009f96 <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 8009f58:	d80b      	bhi.n	8009f72 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8009f5a:	2b02      	cmp	r3, #2
 8009f5c:	d027      	beq.n	8009fae <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 8009f5e:	2b04      	cmp	r3, #4
 8009f60:	d011      	beq.n	8009f86 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 8009f62:	2b01      	cmp	r3, #1
 8009f64:	d028      	beq.n	8009fb8 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8009f66:	4b17      	ldr	r3, [pc, #92]	; (8009fc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 8009f68:	4a17      	ldr	r2, [pc, #92]	; (8009fc8 <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 8009f6a:	4818      	ldr	r0, [pc, #96]	; (8009fcc <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 8009f6c:	218b      	movs	r1, #139	; 0x8b
 8009f6e:	f00f fd97 	bl	8019aa0 <__assert_func>
 8009f72:	2b40      	cmp	r3, #64	; 0x40
 8009f74:	d020      	beq.n	8009fb8 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8009f76:	d801      	bhi.n	8009f7c <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8009f78:	2b20      	cmp	r3, #32
 8009f7a:	e7f3      	b.n	8009f64 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 8009f7c:	2b80      	cmp	r3, #128	; 0x80
 8009f7e:	d01b      	beq.n	8009fb8 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8009f80:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009f84:	e7ee      	b.n	8009f64 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 8009f86:	6823      	ldr	r3, [r4, #0]
 8009f88:	7f01      	ldrb	r1, [r0, #28]
 8009f8a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009f8c:	4620      	mov	r0, r4
 8009f8e:	4798      	blx	r3
 8009f90:	6823      	ldr	r3, [r4, #0]
 8009f92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009f94:	e006      	b.n	8009fa4 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8009f96:	6823      	ldr	r3, [r4, #0]
 8009f98:	7f01      	ldrb	r1, [r0, #28]
 8009f9a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009f9c:	4620      	mov	r0, r4
 8009f9e:	4798      	blx	r3
 8009fa0:	6823      	ldr	r3, [r4, #0]
 8009fa2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009fa4:	4629      	mov	r1, r5
 8009fa6:	4620      	mov	r0, r4
 8009fa8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009fac:	4718      	bx	r3
 8009fae:	6823      	ldr	r3, [r4, #0]
 8009fb0:	4620      	mov	r0, r4
 8009fb2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009fb4:	4798      	blx	r3
 8009fb6:	e7f3      	b.n	8009fa0 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 8009fb8:	6823      	ldr	r3, [r4, #0]
 8009fba:	4620      	mov	r0, r4
 8009fbc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009fbe:	4798      	blx	r3
 8009fc0:	e7e6      	b.n	8009f90 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 8009fc2:	bf00      	nop
 8009fc4:	0801c54e 	.word	0x0801c54e
 8009fc8:	0801c610 	.word	0x0801c610
 8009fcc:	0801c573 	.word	0x0801c573

08009fd0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8009fd0:	b570      	push	{r4, r5, r6, lr}
 8009fd2:	4604      	mov	r4, r0
 8009fd4:	460e      	mov	r6, r1
 8009fd6:	6860      	ldr	r0, [r4, #4]
 8009fd8:	6803      	ldr	r3, [r0, #0]
 8009fda:	685b      	ldr	r3, [r3, #4]
 8009fdc:	4798      	blx	r3
 8009fde:	2800      	cmp	r0, #0
 8009fe0:	d1f9      	bne.n	8009fd6 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8009fe2:	4d0b      	ldr	r5, [pc, #44]	; (800a010 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x40>)
 8009fe4:	6828      	ldr	r0, [r5, #0]
 8009fe6:	6803      	ldr	r3, [r0, #0]
 8009fe8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009fea:	4798      	blx	r3
 8009fec:	f7f6 fce4 	bl	80009b8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8009ff0:	6860      	ldr	r0, [r4, #4]
 8009ff2:	6803      	ldr	r3, [r0, #0]
 8009ff4:	4631      	mov	r1, r6
 8009ff6:	689b      	ldr	r3, [r3, #8]
 8009ff8:	4798      	blx	r3
 8009ffa:	6823      	ldr	r3, [r4, #0]
 8009ffc:	4620      	mov	r0, r4
 8009ffe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a000:	4798      	blx	r3
 800a002:	6828      	ldr	r0, [r5, #0]
 800a004:	6803      	ldr	r3, [r0, #0]
 800a006:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a00a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a00c:	4718      	bx	r3
 800a00e:	bf00      	nop
 800a010:	2001217c 	.word	0x2001217c

0800a014 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a014:	b508      	push	{r3, lr}
 800a016:	f7f6 fca1 	bl	800095c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a01a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a01e:	f7f6 bcb5 	b.w	800098c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a022 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a022:	b510      	push	{r4, lr}
 800a024:	2114      	movs	r1, #20
 800a026:	4604      	mov	r4, r0
 800a028:	f00f fd0e 	bl	8019a48 <_ZdlPvj>
 800a02c:	4620      	mov	r0, r4
 800a02e:	bd10      	pop	{r4, pc}

0800a030 <_ZN8touchgfx13DMA_Interface5startEv>:
 800a030:	b510      	push	{r4, lr}
 800a032:	4604      	mov	r4, r0
 800a034:	6840      	ldr	r0, [r0, #4]
 800a036:	6803      	ldr	r3, [r0, #0]
 800a038:	681b      	ldr	r3, [r3, #0]
 800a03a:	4798      	blx	r3
 800a03c:	b948      	cbnz	r0, 800a052 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a03e:	7a63      	ldrb	r3, [r4, #9]
 800a040:	b13b      	cbz	r3, 800a052 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a042:	7a23      	ldrb	r3, [r4, #8]
 800a044:	b92b      	cbnz	r3, 800a052 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a046:	6823      	ldr	r3, [r4, #0]
 800a048:	4620      	mov	r0, r4
 800a04a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a04c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a050:	4718      	bx	r3
 800a052:	bd10      	pop	{r4, pc}

0800a054 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a054:	b510      	push	{r4, lr}
 800a056:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800a05a:	1b12      	subs	r2, r2, r4
 800a05c:	2a00      	cmp	r2, #0
 800a05e:	bfdc      	itt	le
 800a060:	6883      	ldrle	r3, [r0, #8]
 800a062:	18d2      	addle	r2, r2, r3
 800a064:	2a01      	cmp	r2, #1
 800a066:	dd18      	ble.n	800a09a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800a068:	6843      	ldr	r3, [r0, #4]
 800a06a:	f101 021c 	add.w	r2, r1, #28
 800a06e:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800a072:	f851 4b04 	ldr.w	r4, [r1], #4
 800a076:	f843 4b04 	str.w	r4, [r3], #4
 800a07a:	4291      	cmp	r1, r2
 800a07c:	d1f9      	bne.n	800a072 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800a07e:	880a      	ldrh	r2, [r1, #0]
 800a080:	801a      	strh	r2, [r3, #0]
 800a082:	788a      	ldrb	r2, [r1, #2]
 800a084:	709a      	strb	r2, [r3, #2]
 800a086:	68c3      	ldr	r3, [r0, #12]
 800a088:	6882      	ldr	r2, [r0, #8]
 800a08a:	f3bf 8f5b 	dmb	ish
 800a08e:	3301      	adds	r3, #1
 800a090:	429a      	cmp	r2, r3
 800a092:	bfd8      	it	le
 800a094:	1a9b      	suble	r3, r3, r2
 800a096:	60c3      	str	r3, [r0, #12]
 800a098:	bd10      	pop	{r4, pc}
 800a09a:	4b03      	ldr	r3, [pc, #12]	; (800a0a8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800a09c:	4a03      	ldr	r2, [pc, #12]	; (800a0ac <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800a09e:	4804      	ldr	r0, [pc, #16]	; (800a0b0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800a0a0:	2139      	movs	r1, #57	; 0x39
 800a0a2:	f00f fcfd 	bl	8019aa0 <__assert_func>
 800a0a6:	bf00      	nop
 800a0a8:	0801c599 	.word	0x0801c599
 800a0ac:	0801c640 	.word	0x0801c640
 800a0b0:	0801c573 	.word	0x0801c573

0800a0b4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a0b4:	b510      	push	{r4, lr}
 800a0b6:	6803      	ldr	r3, [r0, #0]
 800a0b8:	681b      	ldr	r3, [r3, #0]
 800a0ba:	4604      	mov	r4, r0
 800a0bc:	4798      	blx	r3
 800a0be:	b128      	cbz	r0, 800a0cc <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800a0c0:	4b07      	ldr	r3, [pc, #28]	; (800a0e0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800a0c2:	4a08      	ldr	r2, [pc, #32]	; (800a0e4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800a0c4:	4808      	ldr	r0, [pc, #32]	; (800a0e8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800a0c6:	213f      	movs	r1, #63	; 0x3f
 800a0c8:	f00f fcea 	bl	8019aa0 <__assert_func>
 800a0cc:	6923      	ldr	r3, [r4, #16]
 800a0ce:	68a2      	ldr	r2, [r4, #8]
 800a0d0:	f3bf 8f5b 	dmb	ish
 800a0d4:	3301      	adds	r3, #1
 800a0d6:	429a      	cmp	r2, r3
 800a0d8:	bfd8      	it	le
 800a0da:	1a9b      	suble	r3, r3, r2
 800a0dc:	6123      	str	r3, [r4, #16]
 800a0de:	bd10      	pop	{r4, pc}
 800a0e0:	0801c5bc 	.word	0x0801c5bc
 800a0e4:	0801c68e 	.word	0x0801c68e
 800a0e8:	0801c573 	.word	0x0801c573

0800a0ec <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a0ec:	b570      	push	{r4, r5, r6, lr}
 800a0ee:	4604      	mov	r4, r0
 800a0f0:	6840      	ldr	r0, [r0, #4]
 800a0f2:	6803      	ldr	r3, [r0, #0]
 800a0f4:	681b      	ldr	r3, [r3, #0]
 800a0f6:	4798      	blx	r3
 800a0f8:	4605      	mov	r5, r0
 800a0fa:	b930      	cbnz	r0, 800a10a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a0fc:	7a23      	ldrb	r3, [r4, #8]
 800a0fe:	b123      	cbz	r3, 800a10a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a100:	6860      	ldr	r0, [r4, #4]
 800a102:	6803      	ldr	r3, [r0, #0]
 800a104:	695b      	ldr	r3, [r3, #20]
 800a106:	4798      	blx	r3
 800a108:	7225      	strb	r5, [r4, #8]
 800a10a:	6860      	ldr	r0, [r4, #4]
 800a10c:	6803      	ldr	r3, [r0, #0]
 800a10e:	681b      	ldr	r3, [r3, #0]
 800a110:	4798      	blx	r3
 800a112:	b928      	cbnz	r0, 800a120 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a114:	6823      	ldr	r3, [r4, #0]
 800a116:	4620      	mov	r0, r4
 800a118:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a11a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a11e:	4718      	bx	r3
 800a120:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a124:	f7f6 bc60 	b.w	80009e8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a128 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a128:	b510      	push	{r4, lr}
 800a12a:	4c04      	ldr	r4, [pc, #16]	; (800a13c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a12c:	6082      	str	r2, [r0, #8]
 800a12e:	2200      	movs	r2, #0
 800a130:	e9c0 4100 	strd	r4, r1, [r0]
 800a134:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a138:	bd10      	pop	{r4, pc}
 800a13a:	bf00      	nop
 800a13c:	0801c5f4 	.word	0x0801c5f4

0800a140 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a140:	6840      	ldr	r0, [r0, #4]
 800a142:	6803      	ldr	r3, [r0, #0]
 800a144:	681b      	ldr	r3, [r3, #0]
 800a146:	4718      	bx	r3

0800a148 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800a148:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800a14c:	4770      	bx	lr

0800a14e <_ZN8touchgfx12ToggleButtonD1Ev>:
 800a14e:	4770      	bx	lr

0800a150 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800a150:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a154:	b133      	cbz	r3, 800a164 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800a156:	790b      	ldrb	r3, [r1, #4]
 800a158:	2b01      	cmp	r3, #1
 800a15a:	bf01      	itttt	eq
 800a15c:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800a15e:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800a160:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800a162:	8603      	strheq	r3, [r0, #48]	; 0x30
 800a164:	f00f bc42 	b.w	80199ec <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800a168 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800a168:	8813      	ldrh	r3, [r2, #0]
 800a16a:	8683      	strh	r3, [r0, #52]	; 0x34
 800a16c:	f000 ba3a 	b.w	800a5e4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800a170 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800a170:	b510      	push	{r4, lr}
 800a172:	2138      	movs	r1, #56	; 0x38
 800a174:	4604      	mov	r4, r0
 800a176:	f00f fc67 	bl	8019a48 <_ZdlPvj>
 800a17a:	4620      	mov	r0, r4
 800a17c:	bd10      	pop	{r4, pc}

0800a17e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800a17e:	2200      	movs	r2, #0
 800a180:	8002      	strh	r2, [r0, #0]
 800a182:	8042      	strh	r2, [r0, #2]
 800a184:	8082      	strh	r2, [r0, #4]
 800a186:	80c2      	strh	r2, [r0, #6]
 800a188:	4770      	bx	lr

0800a18a <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800a18a:	b570      	push	{r4, r5, r6, lr}
 800a18c:	6803      	ldr	r3, [r0, #0]
 800a18e:	4604      	mov	r4, r0
 800a190:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a192:	4615      	mov	r5, r2
 800a194:	4798      	blx	r3
 800a196:	6823      	ldr	r3, [r4, #0]
 800a198:	4629      	mov	r1, r5
 800a19a:	4620      	mov	r0, r4
 800a19c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a19e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a1a2:	4718      	bx	r3

0800a1a4 <_ZN8touchgfx8TextAreaD1Ev>:
 800a1a4:	4770      	bx	lr
	...

0800a1a8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800a1a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a1aa:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a1ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a1b0:	4299      	cmp	r1, r3
 800a1b2:	d029      	beq.n	800a208 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 800a1b4:	4b15      	ldr	r3, [pc, #84]	; (800a20c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800a1b6:	681b      	ldr	r3, [r3, #0]
 800a1b8:	b92b      	cbnz	r3, 800a1c6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 800a1ba:	4b15      	ldr	r3, [pc, #84]	; (800a210 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800a1bc:	4a15      	ldr	r2, [pc, #84]	; (800a214 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800a1be:	21b1      	movs	r1, #177	; 0xb1
 800a1c0:	4815      	ldr	r0, [pc, #84]	; (800a218 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800a1c2:	f00f fc6d 	bl	8019aa0 <__assert_func>
 800a1c6:	4a15      	ldr	r2, [pc, #84]	; (800a21c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 800a1c8:	8812      	ldrh	r2, [r2, #0]
 800a1ca:	428a      	cmp	r2, r1
 800a1cc:	d803      	bhi.n	800a1d6 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 800a1ce:	4b14      	ldr	r3, [pc, #80]	; (800a220 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 800a1d0:	4a10      	ldr	r2, [pc, #64]	; (800a214 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800a1d2:	21b2      	movs	r1, #178	; 0xb2
 800a1d4:	e7f4      	b.n	800a1c0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 800a1d6:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800a1da:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800a1de:	4b11      	ldr	r3, [pc, #68]	; (800a224 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 800a1e0:	7854      	ldrb	r4, [r2, #1]
 800a1e2:	681b      	ldr	r3, [r3, #0]
 800a1e4:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800a1e8:	682b      	ldr	r3, [r5, #0]
 800a1ea:	69de      	ldr	r6, [r3, #28]
 800a1ec:	4b0e      	ldr	r3, [pc, #56]	; (800a228 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 800a1ee:	6818      	ldr	r0, [r3, #0]
 800a1f0:	f7f8 fd70 	bl	8002cd4 <_ZNK8touchgfx5Texts7getTextEt>
 800a1f4:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800a1f8:	2300      	movs	r3, #0
 800a1fa:	4602      	mov	r2, r0
 800a1fc:	9300      	str	r3, [sp, #0]
 800a1fe:	4621      	mov	r1, r4
 800a200:	4628      	mov	r0, r5
 800a202:	47b0      	blx	r6
 800a204:	b002      	add	sp, #8
 800a206:	bd70      	pop	{r4, r5, r6, pc}
 800a208:	2000      	movs	r0, #0
 800a20a:	e7fb      	b.n	800a204 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 800a20c:	200121ec 	.word	0x200121ec
 800a210:	0801b648 	.word	0x0801b648
 800a214:	0801c7ac 	.word	0x0801c7ac
 800a218:	0801b6a8 	.word	0x0801b6a8
 800a21c:	200121f0 	.word	0x200121f0
 800a220:	0801b6d1 	.word	0x0801b6d1
 800a224:	200121f4 	.word	0x200121f4
 800a228:	200121f8 	.word	0x200121f8

0800a22c <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800a22c:	b570      	push	{r4, r5, r6, lr}
 800a22e:	6803      	ldr	r3, [r0, #0]
 800a230:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800a232:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 800a234:	4b11      	ldr	r3, [pc, #68]	; (800a27c <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800a236:	681b      	ldr	r3, [r3, #0]
 800a238:	4604      	mov	r4, r0
 800a23a:	b28d      	uxth	r5, r1
 800a23c:	b92b      	cbnz	r3, 800a24a <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 800a23e:	4b10      	ldr	r3, [pc, #64]	; (800a280 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800a240:	4a10      	ldr	r2, [pc, #64]	; (800a284 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800a242:	21b1      	movs	r1, #177	; 0xb1
 800a244:	4810      	ldr	r0, [pc, #64]	; (800a288 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800a246:	f00f fc2b 	bl	8019aa0 <__assert_func>
 800a24a:	4910      	ldr	r1, [pc, #64]	; (800a28c <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800a24c:	8809      	ldrh	r1, [r1, #0]
 800a24e:	4291      	cmp	r1, r2
 800a250:	d803      	bhi.n	800a25a <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800a252:	4b0f      	ldr	r3, [pc, #60]	; (800a290 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800a254:	4a0b      	ldr	r2, [pc, #44]	; (800a284 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800a256:	21b2      	movs	r1, #178	; 0xb2
 800a258:	e7f4      	b.n	800a244 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 800a25a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800a25e:	4b0d      	ldr	r3, [pc, #52]	; (800a294 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 800a260:	681b      	ldr	r3, [r3, #0]
 800a262:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800a266:	6803      	ldr	r3, [r0, #0]
 800a268:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a26a:	4798      	blx	r3
 800a26c:	1a29      	subs	r1, r5, r0
 800a26e:	4633      	mov	r3, r6
 800a270:	4620      	mov	r0, r4
 800a272:	b209      	sxth	r1, r1
 800a274:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a278:	4718      	bx	r3
 800a27a:	bf00      	nop
 800a27c:	200121ec 	.word	0x200121ec
 800a280:	0801b648 	.word	0x0801b648
 800a284:	0801c7ac 	.word	0x0801c7ac
 800a288:	0801b6a8 	.word	0x0801b6a8
 800a28c:	200121f0 	.word	0x200121f0
 800a290:	0801b6d1 	.word	0x0801b6d1
 800a294:	200121f4 	.word	0x200121f4

0800a298 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800a298:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a29c:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a29e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a2a2:	4293      	cmp	r3, r2
 800a2a4:	b08c      	sub	sp, #48	; 0x30
 800a2a6:	4604      	mov	r4, r0
 800a2a8:	4688      	mov	r8, r1
 800a2aa:	d05f      	beq.n	800a36c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800a2ac:	4e31      	ldr	r6, [pc, #196]	; (800a374 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 800a2ae:	6832      	ldr	r2, [r6, #0]
 800a2b0:	b92a      	cbnz	r2, 800a2be <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 800a2b2:	4b31      	ldr	r3, [pc, #196]	; (800a378 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 800a2b4:	4a31      	ldr	r2, [pc, #196]	; (800a37c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800a2b6:	21b1      	movs	r1, #177	; 0xb1
 800a2b8:	4831      	ldr	r0, [pc, #196]	; (800a380 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 800a2ba:	f00f fbf1 	bl	8019aa0 <__assert_func>
 800a2be:	4d31      	ldr	r5, [pc, #196]	; (800a384 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 800a2c0:	8829      	ldrh	r1, [r5, #0]
 800a2c2:	4299      	cmp	r1, r3
 800a2c4:	d803      	bhi.n	800a2ce <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 800a2c6:	4b30      	ldr	r3, [pc, #192]	; (800a388 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 800a2c8:	4a2c      	ldr	r2, [pc, #176]	; (800a37c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 800a2ca:	21b2      	movs	r1, #178	; 0xb2
 800a2cc:	e7f4      	b.n	800a2b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 800a2ce:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800a2d2:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a2d6:	4b2d      	ldr	r3, [pc, #180]	; (800a38c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 800a2d8:	681b      	ldr	r3, [r3, #0]
 800a2da:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800a2de:	2a00      	cmp	r2, #0
 800a2e0:	d044      	beq.n	800a36c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 800a2e2:	784b      	ldrb	r3, [r1, #1]
 800a2e4:	9207      	str	r2, [sp, #28]
 800a2e6:	f3c3 0901 	ubfx	r9, r3, #0, #2
 800a2ea:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800a2ee:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800a2f2:	4b27      	ldr	r3, [pc, #156]	; (800a390 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 800a2f4:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 800a2f8:	681b      	ldr	r3, [r3, #0]
 800a2fa:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800a2fe:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a302:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800a306:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 800a30a:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800a30e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800a310:	9009      	str	r0, [sp, #36]	; 0x24
 800a312:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 800a316:	f88d 9020 	strb.w	r9, [sp, #32]
 800a31a:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800a31e:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800a322:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 800a326:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800a32a:	b10a      	cbz	r2, 800a330 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 800a32c:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 800a32e:	b907      	cbnz	r7, 800a332 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 800a330:	689f      	ldr	r7, [r3, #8]
 800a332:	f10d 0914 	add.w	r9, sp, #20
 800a336:	4621      	mov	r1, r4
 800a338:	4648      	mov	r0, r9
 800a33a:	f002 f8fd 	bl	800c538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a33e:	6833      	ldr	r3, [r6, #0]
 800a340:	2b00      	cmp	r3, #0
 800a342:	d0b6      	beq.n	800a2b2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 800a344:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800a346:	882b      	ldrh	r3, [r5, #0]
 800a348:	428b      	cmp	r3, r1
 800a34a:	d9bc      	bls.n	800a2c6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 800a34c:	4b11      	ldr	r3, [pc, #68]	; (800a394 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 800a34e:	6818      	ldr	r0, [r3, #0]
 800a350:	f7f8 fcc0 	bl	8002cd4 <_ZNK8touchgfx5Texts7getTextEt>
 800a354:	2300      	movs	r3, #0
 800a356:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800a35a:	ab07      	add	r3, sp, #28
 800a35c:	9001      	str	r0, [sp, #4]
 800a35e:	9300      	str	r3, [sp, #0]
 800a360:	e899 0006 	ldmia.w	r9, {r1, r2}
 800a364:	4643      	mov	r3, r8
 800a366:	4638      	mov	r0, r7
 800a368:	f7f8 fc68 	bl	8002c3c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800a36c:	b00c      	add	sp, #48	; 0x30
 800a36e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a372:	bf00      	nop
 800a374:	200121ec 	.word	0x200121ec
 800a378:	0801b648 	.word	0x0801b648
 800a37c:	0801c7ac 	.word	0x0801c7ac
 800a380:	0801b6a8 	.word	0x0801b6a8
 800a384:	200121f0 	.word	0x200121f0
 800a388:	0801b6d1 	.word	0x0801b6d1
 800a38c:	200121f4 	.word	0x200121f4
 800a390:	2001217c 	.word	0x2001217c
 800a394:	200121f8 	.word	0x200121f8

0800a398 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800a398:	b40e      	push	{r1, r2, r3}
 800a39a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a39e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a3a0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a3a4:	4293      	cmp	r3, r2
 800a3a6:	b09b      	sub	sp, #108	; 0x6c
 800a3a8:	4604      	mov	r4, r0
 800a3aa:	d061      	beq.n	800a470 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 800a3ac:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800a484 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 800a3b0:	aa24      	add	r2, sp, #144	; 0x90
 800a3b2:	9203      	str	r2, [sp, #12]
 800a3b4:	f8da 2000 	ldr.w	r2, [sl]
 800a3b8:	b92a      	cbnz	r2, 800a3c6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 800a3ba:	4b2e      	ldr	r3, [pc, #184]	; (800a474 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>)
 800a3bc:	4a2e      	ldr	r2, [pc, #184]	; (800a478 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800a3be:	21b1      	movs	r1, #177	; 0xb1
 800a3c0:	482e      	ldr	r0, [pc, #184]	; (800a47c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>)
 800a3c2:	f00f fb6d 	bl	8019aa0 <__assert_func>
 800a3c6:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 800a488 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>
 800a3ca:	f8b8 1000 	ldrh.w	r1, [r8]
 800a3ce:	4299      	cmp	r1, r3
 800a3d0:	d803      	bhi.n	800a3da <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 800a3d2:	4b2b      	ldr	r3, [pc, #172]	; (800a480 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 800a3d4:	4a28      	ldr	r2, [pc, #160]	; (800a478 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 800a3d6:	21b2      	movs	r1, #178	; 0xb2
 800a3d8:	e7f2      	b.n	800a3c0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 800a3da:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800a48c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>
 800a3de:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a3e2:	f8d9 3000 	ldr.w	r3, [r9]
 800a3e6:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800a3ea:	683b      	ldr	r3, [r7, #0]
 800a3ec:	4638      	mov	r0, r7
 800a3ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a3f0:	4798      	blx	r3
 800a3f2:	4606      	mov	r6, r0
 800a3f4:	b205      	sxth	r5, r0
 800a3f6:	a804      	add	r0, sp, #16
 800a3f8:	f002 fcb8 	bl	800cd6c <_ZN8touchgfx12TextProviderC1Ev>
 800a3fc:	683b      	ldr	r3, [r7, #0]
 800a3fe:	4638      	mov	r0, r7
 800a400:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a402:	4798      	blx	r3
 800a404:	9923      	ldr	r1, [sp, #140]	; 0x8c
 800a406:	9a03      	ldr	r2, [sp, #12]
 800a408:	4603      	mov	r3, r0
 800a40a:	a804      	add	r0, sp, #16
 800a40c:	f002 fcf3 	bl	800cdf6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800a410:	f8da 3000 	ldr.w	r3, [sl]
 800a414:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800a418:	2b00      	cmp	r3, #0
 800a41a:	d0ce      	beq.n	800a3ba <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 800a41c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800a41e:	f8b8 0000 	ldrh.w	r0, [r8]
 800a422:	4290      	cmp	r0, r2
 800a424:	d9d5      	bls.n	800a3d2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 800a426:	eb03 0742 	add.w	r7, r3, r2, lsl #1
 800a42a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800a42e:	787a      	ldrb	r2, [r7, #1]
 800a430:	f8d9 3000 	ldr.w	r3, [r9]
 800a434:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
 800a438:	9700      	str	r7, [sp, #0]
 800a43a:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800a43e:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800a442:	a804      	add	r0, sp, #16
 800a444:	f000 feea 	bl	800b21c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800a448:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800a44c:	18a9      	adds	r1, r5, r2
 800a44e:	2900      	cmp	r1, #0
 800a450:	b203      	sxth	r3, r0
 800a452:	dd0b      	ble.n	800a46c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 800a454:	3b01      	subs	r3, #1
 800a456:	fb13 f302 	smulbb	r3, r3, r2
 800a45a:	fb16 3300 	smlabb	r3, r6, r0, r3
 800a45e:	b21d      	sxth	r5, r3
 800a460:	4628      	mov	r0, r5
 800a462:	b01b      	add	sp, #108	; 0x6c
 800a464:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a468:	b003      	add	sp, #12
 800a46a:	4770      	bx	lr
 800a46c:	2b00      	cmp	r3, #0
 800a46e:	dcf7      	bgt.n	800a460 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800a470:	2500      	movs	r5, #0
 800a472:	e7f5      	b.n	800a460 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800a474:	0801b648 	.word	0x0801b648
 800a478:	0801c7ac 	.word	0x0801c7ac
 800a47c:	0801b6a8 	.word	0x0801b6a8
 800a480:	0801b6d1 	.word	0x0801b6d1
 800a484:	200121ec 	.word	0x200121ec
 800a488:	200121f0 	.word	0x200121f0
 800a48c:	200121f4 	.word	0x200121f4

0800a490 <_ZN8touchgfx8TextAreaD0Ev>:
 800a490:	b510      	push	{r4, lr}
 800a492:	213c      	movs	r1, #60	; 0x3c
 800a494:	4604      	mov	r4, r0
 800a496:	f00f fad7 	bl	8019a48 <_ZdlPvj>
 800a49a:	4620      	mov	r0, r4
 800a49c:	bd10      	pop	{r4, pc}
	...

0800a4a0 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800a4a0:	b570      	push	{r4, r5, r6, lr}
 800a4a2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a4a4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a4a8:	4299      	cmp	r1, r3
 800a4aa:	4604      	mov	r4, r0
 800a4ac:	d01e      	beq.n	800a4ec <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 800a4ae:	6803      	ldr	r3, [r0, #0]
 800a4b0:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 800a4b2:	4b0f      	ldr	r3, [pc, #60]	; (800a4f0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 800a4b4:	681b      	ldr	r3, [r3, #0]
 800a4b6:	b92b      	cbnz	r3, 800a4c4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 800a4b8:	4b0e      	ldr	r3, [pc, #56]	; (800a4f4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 800a4ba:	4a0f      	ldr	r2, [pc, #60]	; (800a4f8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800a4bc:	21b1      	movs	r1, #177	; 0xb1
 800a4be:	480f      	ldr	r0, [pc, #60]	; (800a4fc <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 800a4c0:	f00f faee 	bl	8019aa0 <__assert_func>
 800a4c4:	4b0e      	ldr	r3, [pc, #56]	; (800a500 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 800a4c6:	881b      	ldrh	r3, [r3, #0]
 800a4c8:	428b      	cmp	r3, r1
 800a4ca:	d803      	bhi.n	800a4d4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 800a4cc:	4b0d      	ldr	r3, [pc, #52]	; (800a504 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 800a4ce:	4a0a      	ldr	r2, [pc, #40]	; (800a4f8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 800a4d0:	21b2      	movs	r1, #178	; 0xb2
 800a4d2:	e7f4      	b.n	800a4be <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 800a4d4:	4b0c      	ldr	r3, [pc, #48]	; (800a508 <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 800a4d6:	6818      	ldr	r0, [r3, #0]
 800a4d8:	f7f8 fbfc 	bl	8002cd4 <_ZNK8touchgfx5Texts7getTextEt>
 800a4dc:	2300      	movs	r3, #0
 800a4de:	4601      	mov	r1, r0
 800a4e0:	46ac      	mov	ip, r5
 800a4e2:	4620      	mov	r0, r4
 800a4e4:	461a      	mov	r2, r3
 800a4e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a4ea:	4760      	bx	ip
 800a4ec:	2000      	movs	r0, #0
 800a4ee:	bd70      	pop	{r4, r5, r6, pc}
 800a4f0:	200121ec 	.word	0x200121ec
 800a4f4:	0801b648 	.word	0x0801b648
 800a4f8:	0801c7ac 	.word	0x0801c7ac
 800a4fc:	0801b6a8 	.word	0x0801b6a8
 800a500:	200121f0 	.word	0x200121f0
 800a504:	0801b6d1 	.word	0x0801b6d1
 800a508:	200121f8 	.word	0x200121f8

0800a50c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800a50c:	b570      	push	{r4, r5, r6, lr}
 800a50e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800a510:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a514:	429a      	cmp	r2, r3
 800a516:	4604      	mov	r4, r0
 800a518:	d021      	beq.n	800a55e <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x52>
 800a51a:	6803      	ldr	r3, [r0, #0]
 800a51c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800a51e:	4798      	blx	r3
 800a520:	6823      	ldr	r3, [r4, #0]
 800a522:	4605      	mov	r5, r0
 800a524:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800a526:	4620      	mov	r0, r4
 800a528:	4798      	blx	r3
 800a52a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800a52e:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800a532:	6823      	ldr	r3, [r4, #0]
 800a534:	4606      	mov	r6, r0
 800a536:	b22d      	sxth	r5, r5
 800a538:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a53a:	d109      	bne.n	800a550 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x44>
 800a53c:	4629      	mov	r1, r5
 800a53e:	4620      	mov	r0, r4
 800a540:	4798      	blx	r3
 800a542:	6823      	ldr	r3, [r4, #0]
 800a544:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a546:	4631      	mov	r1, r6
 800a548:	4620      	mov	r0, r4
 800a54a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a54e:	4718      	bx	r3
 800a550:	4601      	mov	r1, r0
 800a552:	4620      	mov	r0, r4
 800a554:	4798      	blx	r3
 800a556:	6823      	ldr	r3, [r4, #0]
 800a558:	4629      	mov	r1, r5
 800a55a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a55c:	e7f4      	b.n	800a548 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>
 800a55e:	bd70      	pop	{r4, r5, r6, pc}

0800a560 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 800a560:	888a      	ldrh	r2, [r1, #4]
 800a562:	8582      	strh	r2, [r0, #44]	; 0x2c
 800a564:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800a568:	b922      	cbnz	r2, 800a574 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800a56a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800a56e:	b90b      	cbnz	r3, 800a574 <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 800a570:	f7ff bfcc 	b.w	800a50c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800a574:	4770      	bx	lr

0800a576 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800a576:	2300      	movs	r3, #0
 800a578:	8003      	strh	r3, [r0, #0]
 800a57a:	8043      	strh	r3, [r0, #2]
 800a57c:	8083      	strh	r3, [r0, #4]
 800a57e:	80c3      	strh	r3, [r0, #6]
 800a580:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800a584:	b91b      	cbnz	r3, 800a58e <_ZNK8touchgfx3Box12getSolidRectEv+0x18>
 800a586:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800a58a:	2bff      	cmp	r3, #255	; 0xff
 800a58c:	d103      	bne.n	800a596 <_ZNK8touchgfx3Box12getSolidRectEv+0x20>
 800a58e:	890b      	ldrh	r3, [r1, #8]
 800a590:	8083      	strh	r3, [r0, #4]
 800a592:	894b      	ldrh	r3, [r1, #10]
 800a594:	80c3      	strh	r3, [r0, #6]
 800a596:	4770      	bx	lr

0800a598 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800a598:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a59a:	4604      	mov	r4, r0
 800a59c:	6808      	ldr	r0, [r1, #0]
 800a59e:	6849      	ldr	r1, [r1, #4]
 800a5a0:	466b      	mov	r3, sp
 800a5a2:	c303      	stmia	r3!, {r0, r1}
 800a5a4:	6823      	ldr	r3, [r4, #0]
 800a5a6:	4669      	mov	r1, sp
 800a5a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a5aa:	4620      	mov	r0, r4
 800a5ac:	4798      	blx	r3
 800a5ae:	4b08      	ldr	r3, [pc, #32]	; (800a5d0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800a5b0:	681b      	ldr	r3, [r3, #0]
 800a5b2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a5b6:	b10a      	cbz	r2, 800a5bc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800a5b8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a5ba:	b900      	cbnz	r0, 800a5be <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800a5bc:	6898      	ldr	r0, [r3, #8]
 800a5be:	6803      	ldr	r3, [r0, #0]
 800a5c0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800a5c2:	699d      	ldr	r5, [r3, #24]
 800a5c4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800a5c8:	4669      	mov	r1, sp
 800a5ca:	47a8      	blx	r5
 800a5cc:	b003      	add	sp, #12
 800a5ce:	bd30      	pop	{r4, r5, pc}
 800a5d0:	2001217c 	.word	0x2001217c

0800a5d4 <_ZN8touchgfx3BoxD1Ev>:
 800a5d4:	4770      	bx	lr

0800a5d6 <_ZN8touchgfx3BoxD0Ev>:
 800a5d6:	b510      	push	{r4, lr}
 800a5d8:	2130      	movs	r1, #48	; 0x30
 800a5da:	4604      	mov	r4, r0
 800a5dc:	f00f fa34 	bl	8019a48 <_ZdlPvj>
 800a5e0:	4620      	mov	r0, r4
 800a5e2:	bd10      	pop	{r4, pc}

0800a5e4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800a5e4:	b538      	push	{r3, r4, r5, lr}
 800a5e6:	880b      	ldrh	r3, [r1, #0]
 800a5e8:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800a5ea:	4605      	mov	r5, r0
 800a5ec:	8813      	ldrh	r3, [r2, #0]
 800a5ee:	f825 3f30 	strh.w	r3, [r5, #48]!
 800a5f2:	4604      	mov	r4, r0
 800a5f4:	4628      	mov	r0, r5
 800a5f6:	f003 fd85 	bl	800e104 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a5fa:	8120      	strh	r0, [r4, #8]
 800a5fc:	4628      	mov	r0, r5
 800a5fe:	f003 fdbb 	bl	800e178 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a602:	8160      	strh	r0, [r4, #10]
 800a604:	bd38      	pop	{r3, r4, r5, pc}

0800a606 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800a606:	b510      	push	{r4, lr}
 800a608:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800a60c:	2bff      	cmp	r3, #255	; 0xff
 800a60e:	4604      	mov	r4, r0
 800a610:	d006      	beq.n	800a620 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800a612:	2300      	movs	r3, #0
 800a614:	8003      	strh	r3, [r0, #0]
 800a616:	8043      	strh	r3, [r0, #2]
 800a618:	8083      	strh	r3, [r0, #4]
 800a61a:	80c3      	strh	r3, [r0, #6]
 800a61c:	4620      	mov	r0, r4
 800a61e:	bd10      	pop	{r4, pc}
 800a620:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800a624:	b11b      	cbz	r3, 800a62e <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800a626:	3130      	adds	r1, #48	; 0x30
 800a628:	f003 fde0 	bl	800e1ec <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800a62c:	e7f6      	b.n	800a61c <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800a62e:	312e      	adds	r1, #46	; 0x2e
 800a630:	e7fa      	b.n	800a628 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800a634 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800a634:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a638:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a63c:	b08a      	sub	sp, #40	; 0x28
 800a63e:	4604      	mov	r4, r0
 800a640:	4688      	mov	r8, r1
 800a642:	2b00      	cmp	r3, #0
 800a644:	d044      	beq.n	800a6d0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 800a646:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800a648:	f8ad 3014 	strh.w	r3, [sp, #20]
 800a64c:	a805      	add	r0, sp, #20
 800a64e:	f003 fd59 	bl	800e104 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800a652:	4605      	mov	r5, r0
 800a654:	b206      	sxth	r6, r0
 800a656:	a805      	add	r0, sp, #20
 800a658:	f003 fd8e 	bl	800e178 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800a65c:	f9b8 2000 	ldrsh.w	r2, [r8]
 800a660:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 800a664:	4417      	add	r7, r2
 800a666:	b2bf      	uxth	r7, r7
 800a668:	2300      	movs	r3, #0
 800a66a:	fa0f fe87 	sxth.w	lr, r7
 800a66e:	459e      	cmp	lr, r3
 800a670:	fa0f fc80 	sxth.w	ip, r0
 800a674:	9306      	str	r3, [sp, #24]
 800a676:	dd2d      	ble.n	800a6d4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a678:	4296      	cmp	r6, r2
 800a67a:	dd2b      	ble.n	800a6d4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a67c:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 800a680:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 800a684:	4419      	add	r1, r3
 800a686:	b289      	uxth	r1, r1
 800a688:	fa0f f881 	sxth.w	r8, r1
 800a68c:	f1b8 0f00 	cmp.w	r8, #0
 800a690:	dd20      	ble.n	800a6d4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a692:	459c      	cmp	ip, r3
 800a694:	dd1e      	ble.n	800a6d4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 800a696:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800a69a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800a69e:	4576      	cmp	r6, lr
 800a6a0:	bfa8      	it	ge
 800a6a2:	463d      	movge	r5, r7
 800a6a4:	45c4      	cmp	ip, r8
 800a6a6:	bfa8      	it	ge
 800a6a8:	4608      	movge	r0, r1
 800a6aa:	1aad      	subs	r5, r5, r2
 800a6ac:	1ac0      	subs	r0, r0, r3
 800a6ae:	f8ad 501c 	strh.w	r5, [sp, #28]
 800a6b2:	f8ad 001e 	strh.w	r0, [sp, #30]
 800a6b6:	f8ad 2018 	strh.w	r2, [sp, #24]
 800a6ba:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a6be:	4b1f      	ldr	r3, [pc, #124]	; (800a73c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800a6c0:	681b      	ldr	r3, [r3, #0]
 800a6c2:	b953      	cbnz	r3, 800a6da <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 800a6c4:	4b1e      	ldr	r3, [pc, #120]	; (800a740 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800a6c6:	4a1f      	ldr	r2, [pc, #124]	; (800a744 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800a6c8:	481f      	ldr	r0, [pc, #124]	; (800a748 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 800a6ca:	2189      	movs	r1, #137	; 0x89
 800a6cc:	f00f f9e8 	bl	8019aa0 <__assert_func>
 800a6d0:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800a6d2:	e7b9      	b.n	800a648 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800a6d4:	2300      	movs	r3, #0
 800a6d6:	9307      	str	r3, [sp, #28]
 800a6d8:	e7f1      	b.n	800a6be <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 800a6da:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800a6de:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a6e2:	429a      	cmp	r2, r3
 800a6e4:	d026      	beq.n	800a734 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800a6e6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800a6ea:	2b00      	cmp	r3, #0
 800a6ec:	dd22      	ble.n	800a734 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800a6ee:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800a6f2:	2b00      	cmp	r3, #0
 800a6f4:	dd1e      	ble.n	800a734 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 800a6f6:	2300      	movs	r3, #0
 800a6f8:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800a6fc:	6823      	ldr	r3, [r4, #0]
 800a6fe:	a908      	add	r1, sp, #32
 800a700:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a702:	4620      	mov	r0, r4
 800a704:	4798      	blx	r3
 800a706:	4b11      	ldr	r3, [pc, #68]	; (800a74c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 800a708:	681b      	ldr	r3, [r3, #0]
 800a70a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800a70e:	b10a      	cbz	r2, 800a714 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800a710:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800a712:	b900      	cbnz	r0, 800a716 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 800a714:	6898      	ldr	r0, [r3, #8]
 800a716:	6801      	ldr	r1, [r0, #0]
 800a718:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800a71c:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800a720:	2501      	movs	r5, #1
 800a722:	9502      	str	r5, [sp, #8]
 800a724:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800a728:	9401      	str	r4, [sp, #4]
 800a72a:	ac06      	add	r4, sp, #24
 800a72c:	9400      	str	r4, [sp, #0]
 800a72e:	688c      	ldr	r4, [r1, #8]
 800a730:	a905      	add	r1, sp, #20
 800a732:	47a0      	blx	r4
 800a734:	b00a      	add	sp, #40	; 0x28
 800a736:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a73a:	bf00      	nop
 800a73c:	20012224 	.word	0x20012224
 800a740:	0801baf3 	.word	0x0801baf3
 800a744:	0801c844 	.word	0x0801c844
 800a748:	0801bb4d 	.word	0x0801bb4d
 800a74c:	2001217c 	.word	0x2001217c

0800a750 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
 800a750:	4770      	bx	lr
	...

0800a754 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
 800a754:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a756:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a758:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a75c:	4299      	cmp	r1, r3
 800a75e:	4606      	mov	r6, r0
 800a760:	d02a      	beq.n	800a7b8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
 800a762:	4b16      	ldr	r3, [pc, #88]	; (800a7bc <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 800a764:	681b      	ldr	r3, [r3, #0]
 800a766:	b92b      	cbnz	r3, 800a774 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 800a768:	4b15      	ldr	r3, [pc, #84]	; (800a7c0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 800a76a:	4a16      	ldr	r2, [pc, #88]	; (800a7c4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800a76c:	21b1      	movs	r1, #177	; 0xb1
 800a76e:	4816      	ldr	r0, [pc, #88]	; (800a7c8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 800a770:	f00f f996 	bl	8019aa0 <__assert_func>
 800a774:	4a15      	ldr	r2, [pc, #84]	; (800a7cc <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 800a776:	8812      	ldrh	r2, [r2, #0]
 800a778:	428a      	cmp	r2, r1
 800a77a:	d803      	bhi.n	800a784 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 800a77c:	4b14      	ldr	r3, [pc, #80]	; (800a7d0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 800a77e:	4a11      	ldr	r2, [pc, #68]	; (800a7c4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 800a780:	21b2      	movs	r1, #178	; 0xb2
 800a782:	e7f4      	b.n	800a76e <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
 800a784:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800a788:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800a78c:	4b11      	ldr	r3, [pc, #68]	; (800a7d4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
 800a78e:	7854      	ldrb	r4, [r2, #1]
 800a790:	681b      	ldr	r3, [r3, #0]
 800a792:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 800a796:	682b      	ldr	r3, [r5, #0]
 800a798:	69df      	ldr	r7, [r3, #28]
 800a79a:	4b0f      	ldr	r3, [pc, #60]	; (800a7d8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 800a79c:	6818      	ldr	r0, [r3, #0]
 800a79e:	f7f8 fa99 	bl	8002cd4 <_ZNK8touchgfx5Texts7getTextEt>
 800a7a2:	f3c4 0481 	ubfx	r4, r4, #2, #2
 800a7a6:	2300      	movs	r3, #0
 800a7a8:	9300      	str	r3, [sp, #0]
 800a7aa:	4602      	mov	r2, r0
 800a7ac:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
 800a7ae:	4621      	mov	r1, r4
 800a7b0:	4628      	mov	r0, r5
 800a7b2:	47b8      	blx	r7
 800a7b4:	b003      	add	sp, #12
 800a7b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a7b8:	2000      	movs	r0, #0
 800a7ba:	e7fb      	b.n	800a7b4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 800a7bc:	200121ec 	.word	0x200121ec
 800a7c0:	0801b648 	.word	0x0801b648
 800a7c4:	0801c8f4 	.word	0x0801c8f4
 800a7c8:	0801b6a8 	.word	0x0801b6a8
 800a7cc:	200121f0 	.word	0x200121f0
 800a7d0:	0801b6d1 	.word	0x0801b6d1
 800a7d4:	200121f4 	.word	0x200121f4
 800a7d8:	200121f8 	.word	0x200121f8

0800a7dc <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
 800a7dc:	b570      	push	{r4, r5, r6, lr}
 800a7de:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a7e0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a7e4:	4299      	cmp	r1, r3
 800a7e6:	4604      	mov	r4, r0
 800a7e8:	d01e      	beq.n	800a828 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 800a7ea:	6803      	ldr	r3, [r0, #0]
 800a7ec:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 800a7ee:	4b0f      	ldr	r3, [pc, #60]	; (800a82c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 800a7f0:	681b      	ldr	r3, [r3, #0]
 800a7f2:	b92b      	cbnz	r3, 800a800 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 800a7f4:	4b0e      	ldr	r3, [pc, #56]	; (800a830 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 800a7f6:	4a0f      	ldr	r2, [pc, #60]	; (800a834 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800a7f8:	21b1      	movs	r1, #177	; 0xb1
 800a7fa:	480f      	ldr	r0, [pc, #60]	; (800a838 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 800a7fc:	f00f f950 	bl	8019aa0 <__assert_func>
 800a800:	4b0e      	ldr	r3, [pc, #56]	; (800a83c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 800a802:	881b      	ldrh	r3, [r3, #0]
 800a804:	428b      	cmp	r3, r1
 800a806:	d803      	bhi.n	800a810 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 800a808:	4b0d      	ldr	r3, [pc, #52]	; (800a840 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 800a80a:	4a0a      	ldr	r2, [pc, #40]	; (800a834 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 800a80c:	21b2      	movs	r1, #178	; 0xb2
 800a80e:	e7f4      	b.n	800a7fa <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
 800a810:	4b0c      	ldr	r3, [pc, #48]	; (800a844 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 800a812:	6818      	ldr	r0, [r3, #0]
 800a814:	f7f8 fa5e 	bl	8002cd4 <_ZNK8touchgfx5Texts7getTextEt>
 800a818:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800a81a:	4601      	mov	r1, r0
 800a81c:	46ac      	mov	ip, r5
 800a81e:	4620      	mov	r0, r4
 800a820:	2300      	movs	r3, #0
 800a822:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a826:	4760      	bx	ip
 800a828:	2000      	movs	r0, #0
 800a82a:	bd70      	pop	{r4, r5, r6, pc}
 800a82c:	200121ec 	.word	0x200121ec
 800a830:	0801b648 	.word	0x0801b648
 800a834:	0801c8f4 	.word	0x0801c8f4
 800a838:	0801b6a8 	.word	0x0801b6a8
 800a83c:	200121f0 	.word	0x200121f0
 800a840:	0801b6d1 	.word	0x0801b6d1
 800a844:	200121f8 	.word	0x200121f8

0800a848 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800a848:	b510      	push	{r4, lr}
 800a84a:	2140      	movs	r1, #64	; 0x40
 800a84c:	4604      	mov	r4, r0
 800a84e:	f00f f8fb 	bl	8019a48 <_ZdlPvj>
 800a852:	4620      	mov	r0, r4
 800a854:	bd10      	pop	{r4, pc}
	...

0800a858 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 800a858:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a85c:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a85e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a862:	4293      	cmp	r3, r2
 800a864:	b08c      	sub	sp, #48	; 0x30
 800a866:	4604      	mov	r4, r0
 800a868:	460e      	mov	r6, r1
 800a86a:	d05d      	beq.n	800a928 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800a86c:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 800a94c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 800a870:	f8d8 2000 	ldr.w	r2, [r8]
 800a874:	b92a      	cbnz	r2, 800a882 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 800a876:	4b2e      	ldr	r3, [pc, #184]	; (800a930 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 800a878:	4a2e      	ldr	r2, [pc, #184]	; (800a934 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800a87a:	21b1      	movs	r1, #177	; 0xb1
 800a87c:	482e      	ldr	r0, [pc, #184]	; (800a938 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 800a87e:	f00f f90f 	bl	8019aa0 <__assert_func>
 800a882:	4f2e      	ldr	r7, [pc, #184]	; (800a93c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 800a884:	8839      	ldrh	r1, [r7, #0]
 800a886:	4299      	cmp	r1, r3
 800a888:	d803      	bhi.n	800a892 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 800a88a:	4b2d      	ldr	r3, [pc, #180]	; (800a940 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 800a88c:	4a29      	ldr	r2, [pc, #164]	; (800a934 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 800a88e:	21b2      	movs	r1, #178	; 0xb2
 800a890:	e7f4      	b.n	800a87c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 800a892:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800a896:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a89a:	4b2a      	ldr	r3, [pc, #168]	; (800a944 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 800a89c:	681b      	ldr	r3, [r3, #0]
 800a89e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800a8a2:	2a00      	cmp	r2, #0
 800a8a4:	d040      	beq.n	800a928 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 800a8a6:	784b      	ldrb	r3, [r1, #1]
 800a8a8:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800a8ac:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 800a8b0:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800a8b4:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 800a8b8:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 800a8bc:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800a8be:	9207      	str	r2, [sp, #28]
 800a8c0:	f3c3 0901 	ubfx	r9, r3, #0, #2
 800a8c4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800a8c8:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800a8cc:	f88d 9020 	strb.w	r9, [sp, #32]
 800a8d0:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800a8d4:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800a8d8:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800a8dc:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 800a8e0:	9009      	str	r0, [sp, #36]	; 0x24
 800a8e2:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 800a8e6:	f7f6 f917 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 800a8ea:	ad05      	add	r5, sp, #20
 800a8ec:	4681      	mov	r9, r0
 800a8ee:	4621      	mov	r1, r4
 800a8f0:	4628      	mov	r0, r5
 800a8f2:	f001 fe21 	bl	800c538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800a8f6:	f8d8 3000 	ldr.w	r3, [r8]
 800a8fa:	2b00      	cmp	r3, #0
 800a8fc:	d0bb      	beq.n	800a876 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 800a8fe:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800a900:	883b      	ldrh	r3, [r7, #0]
 800a902:	428b      	cmp	r3, r1
 800a904:	d9c1      	bls.n	800a88a <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 800a906:	4b10      	ldr	r3, [pc, #64]	; (800a948 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 800a908:	6818      	ldr	r0, [r3, #0]
 800a90a:	f7f8 f9e3 	bl	8002cd4 <_ZNK8touchgfx5Texts7getTextEt>
 800a90e:	2300      	movs	r3, #0
 800a910:	9303      	str	r3, [sp, #12]
 800a912:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a914:	e9cd 0301 	strd	r0, r3, [sp, #4]
 800a918:	ab07      	add	r3, sp, #28
 800a91a:	9300      	str	r3, [sp, #0]
 800a91c:	e895 0006 	ldmia.w	r5, {r1, r2}
 800a920:	4633      	mov	r3, r6
 800a922:	4648      	mov	r0, r9
 800a924:	f7f8 f98a 	bl	8002c3c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800a928:	b00c      	add	sp, #48	; 0x30
 800a92a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a92e:	bf00      	nop
 800a930:	0801b648 	.word	0x0801b648
 800a934:	0801c8f4 	.word	0x0801c8f4
 800a938:	0801b6a8 	.word	0x0801b6a8
 800a93c:	200121f0 	.word	0x200121f0
 800a940:	0801b6d1 	.word	0x0801b6d1
 800a944:	200121f4 	.word	0x200121f4
 800a948:	200121f8 	.word	0x200121f8
 800a94c:	200121ec 	.word	0x200121ec

0800a950 <_ZNK8touchgfx13BoxWithBorder12getSolidRectEv>:
 800a950:	2300      	movs	r3, #0
 800a952:	8083      	strh	r3, [r0, #4]
 800a954:	80c3      	strh	r3, [r0, #6]
 800a956:	8003      	strh	r3, [r0, #0]
 800a958:	8043      	strh	r3, [r0, #2]
 800a95a:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800a95e:	2bff      	cmp	r3, #255	; 0xff
 800a960:	bf01      	itttt	eq
 800a962:	890b      	ldrheq	r3, [r1, #8]
 800a964:	8083      	strheq	r3, [r0, #4]
 800a966:	894b      	ldrheq	r3, [r1, #10]
 800a968:	80c3      	strheq	r3, [r0, #6]
 800a96a:	4770      	bx	lr

0800a96c <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800a96c:	4770      	bx	lr

0800a96e <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800a96e:	b510      	push	{r4, lr}
 800a970:	2134      	movs	r1, #52	; 0x34
 800a972:	4604      	mov	r4, r0
 800a974:	f00f f868 	bl	8019a48 <_ZdlPvj>
 800a978:	4620      	mov	r0, r4
 800a97a:	bd10      	pop	{r4, pc}

0800a97c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800a97c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a980:	4604      	mov	r4, r0
 800a982:	f890 3030 	ldrb.w	r3, [r0, #48]	; 0x30
 800a986:	8962      	ldrh	r2, [r4, #10]
 800a988:	460e      	mov	r6, r1
 800a98a:	8921      	ldrh	r1, [r4, #8]
 800a98c:	b08c      	sub	sp, #48	; 0x30
 800a98e:	b218      	sxth	r0, r3
 800a990:	005b      	lsls	r3, r3, #1
 800a992:	1ac9      	subs	r1, r1, r3
 800a994:	f8ad 0010 	strh.w	r0, [sp, #16]
 800a998:	1ad3      	subs	r3, r2, r3
 800a99a:	f8ad 0012 	strh.w	r0, [sp, #18]
 800a99e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800a9a2:	6830      	ldr	r0, [r6, #0]
 800a9a4:	6871      	ldr	r1, [r6, #4]
 800a9a6:	f8ad 3016 	strh.w	r3, [sp, #22]
 800a9aa:	466b      	mov	r3, sp
 800a9ac:	c303      	stmia	r3!, {r0, r1}
 800a9ae:	a904      	add	r1, sp, #16
 800a9b0:	4668      	mov	r0, sp
 800a9b2:	f7fe fc0d 	bl	80091d0 <_ZN8touchgfx4RectaNERKS0_>
 800a9b6:	6823      	ldr	r3, [r4, #0]
 800a9b8:	4669      	mov	r1, sp
 800a9ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a9bc:	4620      	mov	r0, r4
 800a9be:	4798      	blx	r3
 800a9c0:	f7f6 f8aa 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 800a9c4:	6803      	ldr	r3, [r0, #0]
 800a9c6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800a9c8:	699d      	ldr	r5, [r3, #24]
 800a9ca:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800a9ce:	4669      	mov	r1, sp
 800a9d0:	47a8      	blx	r5
 800a9d2:	f894 2030 	ldrb.w	r2, [r4, #48]	; 0x30
 800a9d6:	2a00      	cmp	r2, #0
 800a9d8:	d04d      	beq.n	800aa76 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xfa>
 800a9da:	8963      	ldrh	r3, [r4, #10]
 800a9dc:	f9b4 0008 	ldrsh.w	r0, [r4, #8]
 800a9e0:	f8ad 0014 	strh.w	r0, [sp, #20]
 800a9e4:	b211      	sxth	r1, r2
 800a9e6:	b292      	uxth	r2, r2
 800a9e8:	1a9f      	subs	r7, r3, r2
 800a9ea:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800a9ee:	2500      	movs	r5, #0
 800a9f0:	b21b      	sxth	r3, r3
 800a9f2:	1a82      	subs	r2, r0, r2
 800a9f4:	f8ad 701a 	strh.w	r7, [sp, #26]
 800a9f8:	9504      	str	r5, [sp, #16]
 800a9fa:	f8ad 1016 	strh.w	r1, [sp, #22]
 800a9fe:	f8ad 5018 	strh.w	r5, [sp, #24]
 800aa02:	f8ad 001c 	strh.w	r0, [sp, #28]
 800aa06:	f8ad 101e 	strh.w	r1, [sp, #30]
 800aa0a:	f8ad 5020 	strh.w	r5, [sp, #32]
 800aa0e:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 800aa12:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800aa16:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800aa1a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800aa1e:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 800aa22:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 800aa26:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800aa2a:	af02      	add	r7, sp, #8
 800aa2c:	ab04      	add	r3, sp, #16
 800aa2e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800aa32:	e893 0003 	ldmia.w	r3, {r0, r1}
 800aa36:	e887 0003 	stmia.w	r7, {r0, r1}
 800aa3a:	4631      	mov	r1, r6
 800aa3c:	4638      	mov	r0, r7
 800aa3e:	f7fe fbc7 	bl	80091d0 <_ZN8touchgfx4RectaNERKS0_>
 800aa42:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800aa46:	2b00      	cmp	r3, #0
 800aa48:	dd12      	ble.n	800aa70 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf4>
 800aa4a:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800aa4e:	2b00      	cmp	r3, #0
 800aa50:	dd0e      	ble.n	800aa70 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf4>
 800aa52:	6823      	ldr	r3, [r4, #0]
 800aa54:	4639      	mov	r1, r7
 800aa56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aa58:	4620      	mov	r0, r4
 800aa5a:	4798      	blx	r3
 800aa5c:	f7f6 f85c 	bl	8000b18 <_ZN8touchgfx3HAL3lcdEv>
 800aa60:	6803      	ldr	r3, [r0, #0]
 800aa62:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800aa64:	f8d3 8018 	ldr.w	r8, [r3, #24]
 800aa68:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800aa6c:	4639      	mov	r1, r7
 800aa6e:	47c0      	blx	r8
 800aa70:	3501      	adds	r5, #1
 800aa72:	2d04      	cmp	r5, #4
 800aa74:	d1da      	bne.n	800aa2c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xb0>
 800aa76:	b00c      	add	sp, #48	; 0x30
 800aa78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aa7c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800aa7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa80:	b091      	sub	sp, #68	; 0x44
 800aa82:	4699      	mov	r9, r3
 800aa84:	f8dd a06c 	ldr.w	sl, [sp, #108]	; 0x6c
 800aa88:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800aa8a:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 800aa8e:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800aa92:	4680      	mov	r8, r0
 800aa94:	4617      	mov	r7, r2
 800aa96:	a80e      	add	r0, sp, #56	; 0x38
 800aa98:	f9ba 2008 	ldrsh.w	r2, [sl, #8]
 800aa9c:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800aaa0:	2500      	movs	r5, #0
 800aaa2:	910d      	str	r1, [sp, #52]	; 0x34
 800aaa4:	950e      	str	r5, [sp, #56]	; 0x38
 800aaa6:	f000 fe3b 	bl	800b720 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800aaaa:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800aaac:	f8d9 6000 	ldr.w	r6, [r9]
 800aab0:	6818      	ldr	r0, [r3, #0]
 800aab2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800aab4:	f9b4 b000 	ldrsh.w	fp, [r4]
 800aab8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800aabc:	eb02 0c06 	add.w	ip, r2, r6
 800aac0:	1b80      	subs	r0, r0, r6
 800aac2:	ebab 0e0c 	sub.w	lr, fp, ip
 800aac6:	4570      	cmp	r0, lr
 800aac8:	f340 80bd 	ble.w	800ac46 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800aacc:	88a1      	ldrh	r1, [r4, #4]
 800aace:	4459      	add	r1, fp
 800aad0:	b209      	sxth	r1, r1
 800aad2:	458c      	cmp	ip, r1
 800aad4:	f300 80b7 	bgt.w	800ac46 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800aad8:	f8bd 3080 	ldrh.w	r3, [sp, #128]	; 0x80
 800aadc:	ed97 4a09 	vldr	s8, [r7, #36]	; 0x24
 800aae0:	edd7 4a0b 	vldr	s9, [r7, #44]	; 0x2c
 800aae4:	edd9 6a07 	vldr	s13, [r9, #28]
 800aae8:	edd9 1a0a 	vldr	s3, [r9, #40]	; 0x28
 800aaec:	ed99 2a0d 	vldr	s4, [r9, #52]	; 0x34
 800aaf0:	4283      	cmp	r3, r0
 800aaf2:	bfa8      	it	ge
 800aaf4:	4603      	movge	r3, r0
 800aaf6:	ee07 3a90 	vmov	s15, r3
 800aafa:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800aafe:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800ab02:	ee25 4a04 	vmul.f32	s8, s10, s8
 800ab06:	ee65 4a24 	vmul.f32	s9, s10, s9
 800ab0a:	ee25 5a27 	vmul.f32	s10, s10, s15
 800ab0e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800ab12:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800ab16:	45e3      	cmp	fp, ip
 800ab18:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800ab1c:	ee32 1a05 	vadd.f32	s2, s4, s10
 800ab20:	ee36 0a84 	vadd.f32	s0, s13, s8
 800ab24:	ee61 1a87 	vmul.f32	s3, s3, s14
 800ab28:	ee22 2a07 	vmul.f32	s4, s4, s14
 800ab2c:	f340 808e 	ble.w	800ac4c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1d0>
 800ab30:	fb9e f5f3 	sdiv	r5, lr, r3
 800ab34:	ee07 5a10 	vmov	s14, r5
 800ab38:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ab3c:	2d00      	cmp	r5, #0
 800ab3e:	fb03 e415 	mls	r4, r3, r5, lr
 800ab42:	eea7 0a04 	vfma.f32	s0, s14, s8
 800ab46:	eee7 0a24 	vfma.f32	s1, s14, s9
 800ab4a:	eea7 1a05 	vfma.f32	s2, s14, s10
 800ab4e:	dd13      	ble.n	800ab78 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800ab50:	ee70 6a44 	vsub.f32	s13, s0, s8
 800ab54:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800ab58:	eef5 6a40 	vcmp.f32	s13, #0.0
 800ab5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ab60:	bf18      	it	ne
 800ab62:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800ab66:	ee31 2a45 	vsub.f32	s4, s2, s10
 800ab6a:	bf08      	it	eq
 800ab6c:	eeb0 7a67 	vmoveq.f32	s14, s15
 800ab70:	ee61 1a87 	vmul.f32	s3, s3, s14
 800ab74:	ee22 2a07 	vmul.f32	s4, s4, s14
 800ab78:	fb05 f703 	mul.w	r7, r5, r3
 800ab7c:	1bc0      	subs	r0, r0, r7
 800ab7e:	443e      	add	r6, r7
 800ab80:	1997      	adds	r7, r2, r6
 800ab82:	4407      	add	r7, r0
 800ab84:	42b9      	cmp	r1, r7
 800ab86:	bfbc      	itt	lt
 800ab88:	1a88      	sublt	r0, r1, r2
 800ab8a:	1b80      	sublt	r0, r0, r6
 800ab8c:	2800      	cmp	r0, #0
 800ab8e:	dd5a      	ble.n	800ac46 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800ab90:	fb90 f1f3 	sdiv	r1, r0, r3
 800ab94:	fb03 0211 	mls	r2, r3, r1, r0
 800ab98:	b90a      	cbnz	r2, 800ab9e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x122>
 800ab9a:	3901      	subs	r1, #1
 800ab9c:	461a      	mov	r2, r3
 800ab9e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800aba2:	f89d b07c 	ldrb.w	fp, [sp, #124]	; 0x7c
 800aba6:	44a4      	add	ip, r4
 800aba8:	fb03 c505 	mla	r5, r3, r5, ip
 800abac:	2900      	cmp	r1, #0
 800abae:	bfcc      	ite	gt
 800abb0:	469e      	movgt	lr, r3
 800abb2:	4696      	movle	lr, r2
 800abb4:	eef0 6a42 	vmov.f32	s13, s4
 800abb8:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800abbc:	ee21 3a23 	vmul.f32	s6, s2, s7
 800abc0:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800abc4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800abc8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800abcc:	eeb0 7a61 	vmov.f32	s14, s3
 800abd0:	ee17 0a90 	vmov	r0, s15
 800abd4:	ee73 7a42 	vsub.f32	s15, s6, s4
 800abd8:	fb90 f6f3 	sdiv	r6, r0, r3
 800abdc:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800abe0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800abe4:	ee17 0a90 	vmov	r0, s15
 800abe8:	fb90 f7f3 	sdiv	r7, r0, r3
 800abec:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800abf0:	900c      	str	r0, [sp, #48]	; 0x30
 800abf2:	f8d0 8000 	ldr.w	r8, [r0]
 800abf6:	981c      	ldr	r0, [sp, #112]	; 0x70
 800abf8:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 800abfc:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 800ac00:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800ac04:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 800ac08:	f8cd a020 	str.w	sl, [sp, #32]
 800ac0c:	f9b0 a002 	ldrsh.w	sl, [r0, #2]
 800ac10:	980d      	ldr	r0, [sp, #52]	; 0x34
 800ac12:	f8d9 9014 	ldr.w	r9, [r9, #20]
 800ac16:	9603      	str	r6, [sp, #12]
 800ac18:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800ac1c:	ee16 0a90 	vmov	r0, s13
 800ac20:	fb07 0704 	mla	r7, r7, r4, r0
 800ac24:	ee17 0a10 	vmov	r0, s14
 800ac28:	fb06 0604 	mla	r6, r6, r4, r0
 800ac2c:	e9cd 3600 	strd	r3, r6, [sp]
 800ac30:	44ca      	add	sl, r9
 800ac32:	f8cd a01c 	str.w	sl, [sp, #28]
 800ac36:	9506      	str	r5, [sp, #24]
 800ac38:	9702      	str	r7, [sp, #8]
 800ac3a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800ac3e:	980c      	ldr	r0, [sp, #48]	; 0x30
 800ac40:	ebae 0304 	sub.w	r3, lr, r4
 800ac44:	47a8      	blx	r5
 800ac46:	b011      	add	sp, #68	; 0x44
 800ac48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac4c:	462c      	mov	r4, r5
 800ac4e:	e797      	b.n	800ab80 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x104>

0800ac50 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800ac50:	b570      	push	{r4, r5, r6, lr}
 800ac52:	4604      	mov	r4, r0
 800ac54:	2500      	movs	r5, #0
 800ac56:	7223      	strb	r3, [r4, #8]
 800ac58:	9804      	ldr	r0, [sp, #16]
 800ac5a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800ac5e:	8025      	strh	r5, [r4, #0]
 800ac60:	6061      	str	r1, [r4, #4]
 800ac62:	7263      	strb	r3, [r4, #9]
 800ac64:	60e0      	str	r0, [r4, #12]
 800ac66:	8222      	strh	r2, [r4, #16]
 800ac68:	8265      	strh	r5, [r4, #18]
 800ac6a:	82a5      	strh	r5, [r4, #20]
 800ac6c:	82e5      	strh	r5, [r4, #22]
 800ac6e:	8325      	strh	r5, [r4, #24]
 800ac70:	8365      	strh	r5, [r4, #26]
 800ac72:	83a5      	strh	r5, [r4, #28]
 800ac74:	77a5      	strb	r5, [r4, #30]
 800ac76:	6803      	ldr	r3, [r0, #0]
 800ac78:	695b      	ldr	r3, [r3, #20]
 800ac7a:	4798      	blx	r3
 800ac7c:	4606      	mov	r6, r0
 800ac7e:	b1f8      	cbz	r0, 800acc0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800ac80:	68e0      	ldr	r0, [r4, #12]
 800ac82:	6803      	ldr	r3, [r0, #0]
 800ac84:	4631      	mov	r1, r6
 800ac86:	68db      	ldr	r3, [r3, #12]
 800ac88:	4798      	blx	r3
 800ac8a:	7b43      	ldrb	r3, [r0, #13]
 800ac8c:	7a82      	ldrb	r2, [r0, #10]
 800ac8e:	005b      	lsls	r3, r3, #1
 800ac90:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ac94:	4313      	orrs	r3, r2
 800ac96:	83a3      	strh	r3, [r4, #28]
 800ac98:	7a63      	ldrb	r3, [r4, #9]
 800ac9a:	2b04      	cmp	r3, #4
 800ac9c:	4605      	mov	r5, r0
 800ac9e:	d10f      	bne.n	800acc0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800aca0:	68e0      	ldr	r0, [r4, #12]
 800aca2:	6803      	ldr	r3, [r0, #0]
 800aca4:	462a      	mov	r2, r5
 800aca6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800aca8:	4631      	mov	r1, r6
 800acaa:	4798      	blx	r3
 800acac:	7b6b      	ldrb	r3, [r5, #13]
 800acae:	005b      	lsls	r3, r3, #1
 800acb0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800acb4:	7aab      	ldrb	r3, [r5, #10]
 800acb6:	4313      	orrs	r3, r2
 800acb8:	4418      	add	r0, r3
 800acba:	8ba3      	ldrh	r3, [r4, #28]
 800acbc:	4418      	add	r0, r3
 800acbe:	83a0      	strh	r0, [r4, #28]
 800acc0:	4620      	mov	r0, r4
 800acc2:	bd70      	pop	{r4, r5, r6, pc}

0800acc4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800acc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800acc8:	2400      	movs	r4, #0
 800acca:	b085      	sub	sp, #20
 800accc:	4681      	mov	r9, r0
 800acce:	4688      	mov	r8, r1
 800acd0:	4692      	mov	sl, r2
 800acd2:	469b      	mov	fp, r3
 800acd4:	4627      	mov	r7, r4
 800acd6:	4625      	mov	r5, r4
 800acd8:	4626      	mov	r6, r4
 800acda:	4554      	cmp	r4, sl
 800acdc:	da2a      	bge.n	800ad34 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800acde:	2300      	movs	r3, #0
 800ace0:	9303      	str	r3, [sp, #12]
 800ace2:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ace6:	429d      	cmp	r5, r3
 800ace8:	d004      	beq.n	800acf4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800acea:	f242 030b 	movw	r3, #8203	; 0x200b
 800acee:	429d      	cmp	r5, r3
 800acf0:	bf18      	it	ne
 800acf2:	462f      	movne	r7, r5
 800acf4:	ab03      	add	r3, sp, #12
 800acf6:	4642      	mov	r2, r8
 800acf8:	4659      	mov	r1, fp
 800acfa:	4648      	mov	r0, r9
 800acfc:	f002 fb74 	bl	800d3e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ad00:	4605      	mov	r5, r0
 800ad02:	b1b8      	cbz	r0, 800ad34 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ad04:	280a      	cmp	r0, #10
 800ad06:	d015      	beq.n	800ad34 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800ad08:	9a03      	ldr	r2, [sp, #12]
 800ad0a:	b18a      	cbz	r2, 800ad30 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800ad0c:	7b50      	ldrb	r0, [r2, #13]
 800ad0e:	7a93      	ldrb	r3, [r2, #10]
 800ad10:	8895      	ldrh	r5, [r2, #4]
 800ad12:	0040      	lsls	r0, r0, #1
 800ad14:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800ad18:	4303      	orrs	r3, r0
 800ad1a:	9301      	str	r3, [sp, #4]
 800ad1c:	f8d8 3000 	ldr.w	r3, [r8]
 800ad20:	4639      	mov	r1, r7
 800ad22:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ad24:	4640      	mov	r0, r8
 800ad26:	4798      	blx	r3
 800ad28:	9b01      	ldr	r3, [sp, #4]
 800ad2a:	4418      	add	r0, r3
 800ad2c:	4406      	add	r6, r0
 800ad2e:	b2b6      	uxth	r6, r6
 800ad30:	3401      	adds	r4, #1
 800ad32:	e7d2      	b.n	800acda <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800ad34:	4630      	mov	r0, r6
 800ad36:	b005      	add	sp, #20
 800ad38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ad3c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800ad3c:	2a02      	cmp	r2, #2
 800ad3e:	b530      	push	{r4, r5, lr}
 800ad40:	d011      	beq.n	800ad66 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800ad42:	2a03      	cmp	r2, #3
 800ad44:	d01c      	beq.n	800ad80 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800ad46:	2a01      	cmp	r2, #1
 800ad48:	d10c      	bne.n	800ad64 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800ad4a:	888b      	ldrh	r3, [r1, #4]
 800ad4c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800ad50:	8801      	ldrh	r1, [r0, #0]
 800ad52:	8844      	ldrh	r4, [r0, #2]
 800ad54:	8004      	strh	r4, [r0, #0]
 800ad56:	1a9b      	subs	r3, r3, r2
 800ad58:	1a5b      	subs	r3, r3, r1
 800ad5a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800ad5e:	8043      	strh	r3, [r0, #2]
 800ad60:	8081      	strh	r1, [r0, #4]
 800ad62:	80c2      	strh	r2, [r0, #6]
 800ad64:	bd30      	pop	{r4, r5, pc}
 800ad66:	88cb      	ldrh	r3, [r1, #6]
 800ad68:	88c2      	ldrh	r2, [r0, #6]
 800ad6a:	1a9b      	subs	r3, r3, r2
 800ad6c:	8842      	ldrh	r2, [r0, #2]
 800ad6e:	1a9b      	subs	r3, r3, r2
 800ad70:	888a      	ldrh	r2, [r1, #4]
 800ad72:	8881      	ldrh	r1, [r0, #4]
 800ad74:	8043      	strh	r3, [r0, #2]
 800ad76:	1a52      	subs	r2, r2, r1
 800ad78:	8801      	ldrh	r1, [r0, #0]
 800ad7a:	1a52      	subs	r2, r2, r1
 800ad7c:	8002      	strh	r2, [r0, #0]
 800ad7e:	e7f1      	b.n	800ad64 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800ad80:	88cb      	ldrh	r3, [r1, #6]
 800ad82:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800ad86:	8841      	ldrh	r1, [r0, #2]
 800ad88:	f9b0 5000 	ldrsh.w	r5, [r0]
 800ad8c:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800ad90:	8045      	strh	r5, [r0, #2]
 800ad92:	1a9b      	subs	r3, r3, r2
 800ad94:	1a5b      	subs	r3, r3, r1
 800ad96:	8003      	strh	r3, [r0, #0]
 800ad98:	8082      	strh	r2, [r0, #4]
 800ad9a:	80c4      	strh	r4, [r0, #6]
 800ad9c:	e7e2      	b.n	800ad64 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800ad9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800ad9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ada2:	b09f      	sub	sp, #124	; 0x7c
 800ada4:	9116      	str	r1, [sp, #88]	; 0x58
 800ada6:	9317      	str	r3, [sp, #92]	; 0x5c
 800ada8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800adaa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800adac:	8809      	ldrh	r1, [r1, #0]
 800adae:	889b      	ldrh	r3, [r3, #4]
 800adb0:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800adb4:	9212      	str	r2, [sp, #72]	; 0x48
 800adb6:	440b      	add	r3, r1
 800adb8:	b21b      	sxth	r3, r3
 800adba:	9310      	str	r3, [sp, #64]	; 0x40
 800adbc:	f8d8 3000 	ldr.w	r3, [r8]
 800adc0:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800adc4:	7a59      	ldrb	r1, [r3, #9]
 800adc6:	7a1b      	ldrb	r3, [r3, #8]
 800adc8:	9315      	str	r3, [sp, #84]	; 0x54
 800adca:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800adcc:	9011      	str	r0, [sp, #68]	; 0x44
 800adce:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800add2:	9114      	str	r1, [sp, #80]	; 0x50
 800add4:	f9b3 5000 	ldrsh.w	r5, [r3]
 800add8:	2a00      	cmp	r2, #0
 800adda:	d067      	beq.n	800aeac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 800addc:	f898 3010 	ldrb.w	r3, [r8, #16]
 800ade0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800ade2:	2b04      	cmp	r3, #4
 800ade4:	bf14      	ite	ne
 800ade6:	2301      	movne	r3, #1
 800ade8:	2302      	moveq	r3, #2
 800adea:	4413      	add	r3, r2
 800adec:	f04f 0900 	mov.w	r9, #0
 800adf0:	930f      	str	r3, [sp, #60]	; 0x3c
 800adf2:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800adf6:	464c      	mov	r4, r9
 800adf8:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800adfc:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800ae00:	4293      	cmp	r3, r2
 800ae02:	f280 808c 	bge.w	800af1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800ae06:	2300      	movs	r3, #0
 800ae08:	931c      	str	r3, [sp, #112]	; 0x70
 800ae0a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ae0e:	429c      	cmp	r4, r3
 800ae10:	d006      	beq.n	800ae20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 800ae12:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ae14:	f242 020b 	movw	r2, #8203	; 0x200b
 800ae18:	4294      	cmp	r4, r2
 800ae1a:	bf18      	it	ne
 800ae1c:	4623      	movne	r3, r4
 800ae1e:	930d      	str	r3, [sp, #52]	; 0x34
 800ae20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ae22:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800ae24:	f8d8 2000 	ldr.w	r2, [r8]
 800ae28:	428b      	cmp	r3, r1
 800ae2a:	db41      	blt.n	800aeb0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800ae2c:	6813      	ldr	r3, [r2, #0]
 800ae2e:	4610      	mov	r0, r2
 800ae30:	695b      	ldr	r3, [r3, #20]
 800ae32:	4798      	blx	r3
 800ae34:	4604      	mov	r4, r0
 800ae36:	f8d8 0000 	ldr.w	r0, [r8]
 800ae3a:	6803      	ldr	r3, [r0, #0]
 800ae3c:	aa1d      	add	r2, sp, #116	; 0x74
 800ae3e:	689e      	ldr	r6, [r3, #8]
 800ae40:	4621      	mov	r1, r4
 800ae42:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800ae46:	47b0      	blx	r6
 800ae48:	901c      	str	r0, [sp, #112]	; 0x70
 800ae4a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800ae4e:	429c      	cmp	r4, r3
 800ae50:	f000 80e9 	beq.w	800b026 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800ae54:	f242 030b 	movw	r3, #8203	; 0x200b
 800ae58:	429c      	cmp	r4, r3
 800ae5a:	f000 80e4 	beq.w	800b026 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800ae5e:	2c00      	cmp	r4, #0
 800ae60:	f000 80f6 	beq.w	800b050 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800ae64:	2c0a      	cmp	r4, #10
 800ae66:	d060      	beq.n	800af2a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800ae68:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800ae6a:	b36a      	cbz	r2, 800aec8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 800ae6c:	8894      	ldrh	r4, [r2, #4]
 800ae6e:	f1bb 0f00 	cmp.w	fp, #0
 800ae72:	d03b      	beq.n	800aeec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 800ae74:	f892 900d 	ldrb.w	r9, [r2, #13]
 800ae78:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800ae7c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800ae80:	f892 900a 	ldrb.w	r9, [r2, #10]
 800ae84:	f1bb 0f01 	cmp.w	fp, #1
 800ae88:	ea49 0903 	orr.w	r9, r9, r3
 800ae8c:	d134      	bne.n	800aef8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 800ae8e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ae90:	eba5 0509 	sub.w	r5, r5, r9
 800ae94:	2b00      	cmp	r3, #0
 800ae96:	d14f      	bne.n	800af38 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800ae98:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ae9a:	eb09 0305 	add.w	r3, r9, r5
 800ae9e:	4413      	add	r3, r2
 800aea0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800aea2:	f9b2 2000 	ldrsh.w	r2, [r2]
 800aea6:	4293      	cmp	r3, r2
 800aea8:	da51      	bge.n	800af4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800aeaa:	e038      	b.n	800af1e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800aeac:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800aeae:	e79d      	b.n	800adec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 800aeb0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800aeb4:	9301      	str	r3, [sp, #4]
 800aeb6:	ab1d      	add	r3, sp, #116	; 0x74
 800aeb8:	9300      	str	r3, [sp, #0]
 800aeba:	4659      	mov	r1, fp
 800aebc:	ab1c      	add	r3, sp, #112	; 0x70
 800aebe:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800aec0:	f002 faea 	bl	800d498 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800aec4:	4604      	mov	r4, r0
 800aec6:	e7c0      	b.n	800ae4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800aec8:	f8d8 0000 	ldr.w	r0, [r8]
 800aecc:	6803      	ldr	r3, [r0, #0]
 800aece:	691b      	ldr	r3, [r3, #16]
 800aed0:	4798      	blx	r3
 800aed2:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800aed6:	4298      	cmp	r0, r3
 800aed8:	f000 80a5 	beq.w	800b026 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800aedc:	f242 030b 	movw	r3, #8203	; 0x200b
 800aee0:	4298      	cmp	r0, r3
 800aee2:	f000 80a0 	beq.w	800b026 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800aee6:	f1bb 0f00 	cmp.w	fp, #0
 800aeea:	d100      	bne.n	800aeee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800aeec:	444d      	add	r5, r9
 800aeee:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800aef0:	2a00      	cmp	r2, #0
 800aef2:	d1bf      	bne.n	800ae74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 800aef4:	4691      	mov	r9, r2
 800aef6:	e096      	b.n	800b026 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800aef8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800aefa:	2b00      	cmp	r3, #0
 800aefc:	f000 80aa 	beq.w	800b054 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 800af00:	f1bb 0f00 	cmp.w	fp, #0
 800af04:	d118      	bne.n	800af38 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800af06:	f8d8 0000 	ldr.w	r0, [r8]
 800af0a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800af0c:	6803      	ldr	r3, [r0, #0]
 800af0e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800af10:	4798      	blx	r3
 800af12:	4405      	add	r5, r0
 800af14:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800af16:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800af18:	1aeb      	subs	r3, r5, r3
 800af1a:	4293      	cmp	r3, r2
 800af1c:	dd17      	ble.n	800af4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 800af1e:	2c00      	cmp	r4, #0
 800af20:	f000 8096 	beq.w	800b050 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800af24:	2c0a      	cmp	r4, #10
 800af26:	f040 8084 	bne.w	800b032 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 800af2a:	240a      	movs	r4, #10
 800af2c:	fab4 f084 	clz	r0, r4
 800af30:	0940      	lsrs	r0, r0, #5
 800af32:	b01f      	add	sp, #124	; 0x7c
 800af34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af38:	f8d8 0000 	ldr.w	r0, [r8]
 800af3c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800af3e:	6803      	ldr	r3, [r0, #0]
 800af40:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800af42:	4798      	blx	r3
 800af44:	f1bb 0f01 	cmp.w	fp, #1
 800af48:	eba5 0500 	sub.w	r5, r5, r0
 800af4c:	d0a4      	beq.n	800ae98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 800af4e:	981c      	ldr	r0, [sp, #112]	; 0x70
 800af50:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800af52:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800af56:	f9b3 6000 	ldrsh.w	r6, [r3]
 800af5a:	7b43      	ldrb	r3, [r0, #13]
 800af5c:	015b      	lsls	r3, r3, #5
 800af5e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800af62:	7983      	ldrb	r3, [r0, #6]
 800af64:	4429      	add	r1, r5
 800af66:	4313      	orrs	r3, r2
 800af68:	440b      	add	r3, r1
 800af6a:	42b3      	cmp	r3, r6
 800af6c:	db5b      	blt.n	800b026 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800af6e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800af70:	4299      	cmp	r1, r3
 800af72:	da58      	bge.n	800b026 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800af74:	f8d8 0000 	ldr.w	r0, [r8]
 800af78:	6803      	ldr	r3, [r0, #0]
 800af7a:	42ae      	cmp	r6, r5
 800af7c:	bfc8      	it	gt
 800af7e:	1b76      	subgt	r6, r6, r5
 800af80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800af82:	bfcc      	ite	gt
 800af84:	b2b6      	uxthgt	r6, r6
 800af86:	2600      	movle	r6, #0
 800af88:	4798      	blx	r3
 800af8a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800af8c:	7b5a      	ldrb	r2, [r3, #13]
 800af8e:	00d1      	lsls	r1, r2, #3
 800af90:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800af94:	7a19      	ldrb	r1, [r3, #8]
 800af96:	4339      	orrs	r1, r7
 800af98:	0657      	lsls	r7, r2, #25
 800af9a:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800af9c:	bf44      	itt	mi
 800af9e:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800afa2:	b209      	sxthmi	r1, r1
 800afa4:	19c7      	adds	r7, r0, r7
 800afa6:	1a7f      	subs	r7, r7, r1
 800afa8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800afaa:	b2bf      	uxth	r7, r7
 800afac:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800afb0:	fa0f fa87 	sxth.w	sl, r7
 800afb4:	4551      	cmp	r1, sl
 800afb6:	dd3a      	ble.n	800b02e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800afb8:	0112      	lsls	r2, r2, #4
 800afba:	79d8      	ldrb	r0, [r3, #7]
 800afbc:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800afc0:	4302      	orrs	r2, r0
 800afc2:	4492      	add	sl, r2
 800afc4:	4551      	cmp	r1, sl
 800afc6:	dc2e      	bgt.n	800b026 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x288>
 800afc8:	1bcf      	subs	r7, r1, r7
 800afca:	b2bf      	uxth	r7, r7
 800afcc:	468a      	mov	sl, r1
 800afce:	9319      	str	r3, [sp, #100]	; 0x64
 800afd0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800afd2:	f8d8 0000 	ldr.w	r0, [r8]
 800afd6:	681a      	ldr	r2, [r3, #0]
 800afd8:	6801      	ldr	r1, [r0, #0]
 800afda:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800afdc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800afde:	9313      	str	r3, [sp, #76]	; 0x4c
 800afe0:	9218      	str	r2, [sp, #96]	; 0x60
 800afe2:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800afe4:	4788      	blx	r1
 800afe6:	f898 1006 	ldrb.w	r1, [r8, #6]
 800afea:	910b      	str	r1, [sp, #44]	; 0x2c
 800afec:	f898 100e 	ldrb.w	r1, [r8, #14]
 800aff0:	910a      	str	r1, [sp, #40]	; 0x28
 800aff2:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800aff6:	9109      	str	r1, [sp, #36]	; 0x24
 800aff8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800affa:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800affe:	9305      	str	r3, [sp, #20]
 800b000:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800b002:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800b004:	9206      	str	r2, [sp, #24]
 800b006:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800b00a:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800b00e:	e9cd a601 	strd	sl, r6, [sp, #4]
 800b012:	442e      	add	r6, r5
 800b014:	b236      	sxth	r6, r6
 800b016:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b018:	9600      	str	r6, [sp, #0]
 800b01a:	681a      	ldr	r2, [r3, #0]
 800b01c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800b01e:	685b      	ldr	r3, [r3, #4]
 800b020:	9811      	ldr	r0, [sp, #68]	; 0x44
 800b022:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800b024:	47b0      	blx	r6
 800b026:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b028:	3301      	adds	r3, #1
 800b02a:	930e      	str	r3, [sp, #56]	; 0x38
 800b02c:	e6e6      	b.n	800adfc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 800b02e:	2700      	movs	r7, #0
 800b030:	e7cd      	b.n	800afce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x230>
 800b032:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800b034:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800b036:	3501      	adds	r5, #1
 800b038:	429d      	cmp	r5, r3
 800b03a:	f6bf af77 	bge.w	800af2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800b03e:	4659      	mov	r1, fp
 800b040:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800b042:	f7f7 fdb7 	bl	8002bb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800b046:	4604      	mov	r4, r0
 800b048:	b110      	cbz	r0, 800b050 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b2>
 800b04a:	280a      	cmp	r0, #10
 800b04c:	d1f2      	bne.n	800b034 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800b04e:	e76c      	b.n	800af2a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800b050:	2400      	movs	r4, #0
 800b052:	e76b      	b.n	800af2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800b054:	f1bb 0f00 	cmp.w	fp, #0
 800b058:	f43f af5c 	beq.w	800af14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800b05c:	e777      	b.n	800af4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0800b05e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800b05e:	b530      	push	{r4, r5, lr}
 800b060:	8a44      	ldrh	r4, [r0, #18]
 800b062:	8ac5      	ldrh	r5, [r0, #22]
 800b064:	82c3      	strh	r3, [r0, #22]
 800b066:	442c      	add	r4, r5
 800b068:	1ae4      	subs	r4, r4, r3
 800b06a:	8244      	strh	r4, [r0, #18]
 800b06c:	8b03      	ldrh	r3, [r0, #24]
 800b06e:	8a84      	ldrh	r4, [r0, #20]
 800b070:	4422      	add	r2, r4
 800b072:	440c      	add	r4, r1
 800b074:	1a59      	subs	r1, r3, r1
 800b076:	8342      	strh	r2, [r0, #26]
 800b078:	8284      	strh	r4, [r0, #20]
 800b07a:	8301      	strh	r1, [r0, #24]
 800b07c:	bd30      	pop	{r4, r5, pc}

0800b07e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800b07e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b082:	7a43      	ldrb	r3, [r0, #9]
 800b084:	1eda      	subs	r2, r3, #3
 800b086:	b087      	sub	sp, #28
 800b088:	4604      	mov	r4, r0
 800b08a:	b2d2      	uxtb	r2, r2
 800b08c:	460f      	mov	r7, r1
 800b08e:	2900      	cmp	r1, #0
 800b090:	d036      	beq.n	800b100 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800b092:	2a01      	cmp	r2, #1
 800b094:	d932      	bls.n	800b0fc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800b096:	1e58      	subs	r0, r3, #1
 800b098:	f1d0 0b00 	rsbs	fp, r0, #0
 800b09c:	eb4b 0b00 	adc.w	fp, fp, r0
 800b0a0:	1e99      	subs	r1, r3, #2
 800b0a2:	424b      	negs	r3, r1
 800b0a4:	414b      	adcs	r3, r1
 800b0a6:	9303      	str	r3, [sp, #12]
 800b0a8:	2300      	movs	r3, #0
 800b0aa:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800b0ae:	2500      	movs	r5, #0
 800b0b0:	8265      	strh	r5, [r4, #18]
 800b0b2:	82a5      	strh	r5, [r4, #20]
 800b0b4:	46a9      	mov	r9, r5
 800b0b6:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800b0ba:	2300      	movs	r3, #0
 800b0bc:	9305      	str	r3, [sp, #20]
 800b0be:	8823      	ldrh	r3, [r4, #0]
 800b0c0:	2b20      	cmp	r3, #32
 800b0c2:	d02b      	beq.n	800b11c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800b0c4:	eba3 020a 	sub.w	r2, r3, sl
 800b0c8:	4256      	negs	r6, r2
 800b0ca:	4156      	adcs	r6, r2
 800b0cc:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800b0d0:	4293      	cmp	r3, r2
 800b0d2:	d004      	beq.n	800b0de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800b0d4:	4553      	cmp	r3, sl
 800b0d6:	bf16      	itet	ne
 800b0d8:	4699      	movne	r9, r3
 800b0da:	2601      	moveq	r6, #1
 800b0dc:	2600      	movne	r6, #0
 800b0de:	ab05      	add	r3, sp, #20
 800b0e0:	68e2      	ldr	r2, [r4, #12]
 800b0e2:	7a21      	ldrb	r1, [r4, #8]
 800b0e4:	6860      	ldr	r0, [r4, #4]
 800b0e6:	f002 f97f 	bl	800d3e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800b0ea:	8020      	strh	r0, [r4, #0]
 800b0ec:	b9c8      	cbnz	r0, 800b122 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800b0ee:	8b22      	ldrh	r2, [r4, #24]
 800b0f0:	2300      	movs	r3, #0
 800b0f2:	4611      	mov	r1, r2
 800b0f4:	4620      	mov	r0, r4
 800b0f6:	f7ff ffb2 	bl	800b05e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800b0fa:	e066      	b.n	800b1ca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800b0fc:	468b      	mov	fp, r1
 800b0fe:	e7cf      	b.n	800b0a0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800b100:	3b01      	subs	r3, #1
 800b102:	2a01      	cmp	r2, #1
 800b104:	bf8c      	ite	hi
 800b106:	2200      	movhi	r2, #0
 800b108:	2201      	movls	r2, #1
 800b10a:	2b01      	cmp	r3, #1
 800b10c:	bf8c      	ite	hi
 800b10e:	2300      	movhi	r3, #0
 800b110:	2301      	movls	r3, #1
 800b112:	9202      	str	r2, [sp, #8]
 800b114:	9301      	str	r3, [sp, #4]
 800b116:	9103      	str	r1, [sp, #12]
 800b118:	468b      	mov	fp, r1
 800b11a:	e7c8      	b.n	800b0ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800b11c:	4699      	mov	r9, r3
 800b11e:	2601      	movs	r6, #1
 800b120:	e7dd      	b.n	800b0de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800b122:	8ae3      	ldrh	r3, [r4, #22]
 800b124:	280a      	cmp	r0, #10
 800b126:	f103 0301 	add.w	r3, r3, #1
 800b12a:	82e3      	strh	r3, [r4, #22]
 800b12c:	d0df      	beq.n	800b0ee <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800b12e:	9a05      	ldr	r2, [sp, #20]
 800b130:	bb42      	cbnz	r2, 800b184 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800b132:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800b136:	4298      	cmp	r0, r3
 800b138:	d001      	beq.n	800b13e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800b13a:	4550      	cmp	r0, sl
 800b13c:	d1bd      	bne.n	800b0ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b13e:	8823      	ldrh	r3, [r4, #0]
 800b140:	8b21      	ldrh	r1, [r4, #24]
 800b142:	2b20      	cmp	r3, #32
 800b144:	d001      	beq.n	800b14a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800b146:	4553      	cmp	r3, sl
 800b148:	d131      	bne.n	800b1ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800b14a:	2e00      	cmp	r6, #0
 800b14c:	bf0a      	itet	eq
 800b14e:	460d      	moveq	r5, r1
 800b150:	4630      	movne	r0, r6
 800b152:	2001      	moveq	r0, #1
 800b154:	440a      	add	r2, r1
 800b156:	8aa3      	ldrh	r3, [r4, #20]
 800b158:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800b15c:	b292      	uxth	r2, r2
 800b15e:	8322      	strh	r2, [r4, #24]
 800b160:	4413      	add	r3, r2
 800b162:	2f00      	cmp	r7, #0
 800b164:	d03a      	beq.n	800b1dc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800b166:	f1bb 0f00 	cmp.w	fp, #0
 800b16a:	d102      	bne.n	800b172 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800b16c:	9903      	ldr	r1, [sp, #12]
 800b16e:	b301      	cbz	r1, 800b1b2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800b170:	b1f8      	cbz	r0, 800b1b2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800b172:	8ba1      	ldrh	r1, [r4, #28]
 800b174:	4419      	add	r1, r3
 800b176:	458c      	cmp	ip, r1
 800b178:	da2a      	bge.n	800b1d0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800b17a:	8a61      	ldrh	r1, [r4, #18]
 800b17c:	b341      	cbz	r1, 800b1d0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800b17e:	4563      	cmp	r3, ip
 800b180:	dd9b      	ble.n	800b0ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b182:	e01c      	b.n	800b1be <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800b184:	8893      	ldrh	r3, [r2, #4]
 800b186:	8023      	strh	r3, [r4, #0]
 800b188:	f892 800d 	ldrb.w	r8, [r2, #13]
 800b18c:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800b190:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800b194:	f892 800a 	ldrb.w	r8, [r2, #10]
 800b198:	ea48 0800 	orr.w	r8, r8, r0
 800b19c:	68e0      	ldr	r0, [r4, #12]
 800b19e:	6803      	ldr	r3, [r0, #0]
 800b1a0:	4649      	mov	r1, r9
 800b1a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b1a4:	4798      	blx	r3
 800b1a6:	eb08 0200 	add.w	r2, r8, r0
 800b1aa:	b292      	uxth	r2, r2
 800b1ac:	e7c7      	b.n	800b13e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800b1ae:	2000      	movs	r0, #0
 800b1b0:	e7d0      	b.n	800b154 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800b1b2:	4563      	cmp	r3, ip
 800b1b4:	dd81      	ble.n	800b0ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b1b6:	8a63      	ldrh	r3, [r4, #18]
 800b1b8:	2b00      	cmp	r3, #0
 800b1ba:	f43f af7e 	beq.w	800b0ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b1be:	2301      	movs	r3, #1
 800b1c0:	77a3      	strb	r3, [r4, #30]
 800b1c2:	8ba2      	ldrh	r2, [r4, #28]
 800b1c4:	8b63      	ldrh	r3, [r4, #26]
 800b1c6:	4413      	add	r3, r2
 800b1c8:	8363      	strh	r3, [r4, #26]
 800b1ca:	b007      	add	sp, #28
 800b1cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b1d0:	2300      	movs	r3, #0
 800b1d2:	4611      	mov	r1, r2
 800b1d4:	4620      	mov	r0, r4
 800b1d6:	f7ff ff42 	bl	800b05e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800b1da:	e76e      	b.n	800b0ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b1dc:	4563      	cmp	r3, ip
 800b1de:	dd14      	ble.n	800b20a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800b1e0:	9b02      	ldr	r3, [sp, #8]
 800b1e2:	b113      	cbz	r3, 800b1ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800b1e4:	2301      	movs	r3, #1
 800b1e6:	460a      	mov	r2, r1
 800b1e8:	e783      	b.n	800b0f2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800b1ea:	9b01      	ldr	r3, [sp, #4]
 800b1ec:	2b00      	cmp	r3, #0
 800b1ee:	f43f af64 	beq.w	800b0ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b1f2:	2800      	cmp	r0, #0
 800b1f4:	f47f af61 	bne.w	800b0ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b1f8:	b116      	cbz	r6, 800b200 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800b1fa:	2301      	movs	r3, #1
 800b1fc:	462a      	mov	r2, r5
 800b1fe:	e779      	b.n	800b0f4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800b200:	8a63      	ldrh	r3, [r4, #18]
 800b202:	2b00      	cmp	r3, #0
 800b204:	f43f af59 	beq.w	800b0ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b208:	e7df      	b.n	800b1ca <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800b20a:	2800      	cmp	r0, #0
 800b20c:	f47f af55 	bne.w	800b0ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b210:	2e00      	cmp	r6, #0
 800b212:	f43f af52 	beq.w	800b0ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800b216:	2301      	movs	r3, #1
 800b218:	462a      	mov	r2, r5
 800b21a:	e7db      	b.n	800b1d4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800b21c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800b21c:	b530      	push	{r4, r5, lr}
 800b21e:	4605      	mov	r5, r0
 800b220:	b08b      	sub	sp, #44	; 0x2c
 800b222:	b191      	cbz	r1, 800b24a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800b224:	e9cd 3100 	strd	r3, r1, [sp]
 800b228:	4613      	mov	r3, r2
 800b22a:	4601      	mov	r1, r0
 800b22c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800b230:	a802      	add	r0, sp, #8
 800b232:	f7ff fd0d 	bl	800ac50 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800b236:	2401      	movs	r4, #1
 800b238:	2100      	movs	r1, #0
 800b23a:	a802      	add	r0, sp, #8
 800b23c:	f7ff ff1f 	bl	800b07e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800b240:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800b244:	b163      	cbz	r3, 800b260 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800b246:	3401      	adds	r4, #1
 800b248:	e7f6      	b.n	800b238 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800b24a:	f002 f9c5 	bl	800d5d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800b24e:	2401      	movs	r4, #1
 800b250:	280a      	cmp	r0, #10
 800b252:	4628      	mov	r0, r5
 800b254:	bf08      	it	eq
 800b256:	3401      	addeq	r4, #1
 800b258:	f002 f9be 	bl	800d5d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800b25c:	2800      	cmp	r0, #0
 800b25e:	d1f7      	bne.n	800b250 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800b260:	b2a0      	uxth	r0, r4
 800b262:	b00b      	add	sp, #44	; 0x2c
 800b264:	bd30      	pop	{r4, r5, pc}

0800b266 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800b266:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b26a:	b0db      	sub	sp, #364	; 0x16c
 800b26c:	4689      	mov	r9, r1
 800b26e:	f8dd a190 	ldr.w	sl, [sp, #400]	; 0x190
 800b272:	900a      	str	r0, [sp, #40]	; 0x28
 800b274:	461c      	mov	r4, r3
 800b276:	f1ba 0f00 	cmp.w	sl, #0
 800b27a:	f000 80a5 	beq.w	800b3c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b27e:	681b      	ldr	r3, [r3, #0]
 800b280:	2b00      	cmp	r3, #0
 800b282:	f000 80a1 	beq.w	800b3c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b286:	7ba3      	ldrb	r3, [r4, #14]
 800b288:	2b00      	cmp	r3, #0
 800b28a:	f000 809d 	beq.w	800b3c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b28e:	6810      	ldr	r0, [r2, #0]
 800b290:	6851      	ldr	r1, [r2, #4]
 800b292:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800b296:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800b29a:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 800b29e:	4643      	mov	r3, r8
 800b2a0:	c303      	stmia	r3!, {r0, r1}
 800b2a2:	2500      	movs	r5, #0
 800b2a4:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800b2a8:	79a2      	ldrb	r2, [r4, #6]
 800b2aa:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800b2ae:	a90e      	add	r1, sp, #56	; 0x38
 800b2b0:	4640      	mov	r0, r8
 800b2b2:	950e      	str	r5, [sp, #56]	; 0x38
 800b2b4:	f7ff fd42 	bl	800ad3c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800b2b8:	a90e      	add	r1, sp, #56	; 0x38
 800b2ba:	4608      	mov	r0, r1
 800b2bc:	79a2      	ldrb	r2, [r4, #6]
 800b2be:	af18      	add	r7, sp, #96	; 0x60
 800b2c0:	f7ff fd3c 	bl	800ad3c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800b2c4:	4638      	mov	r0, r7
 800b2c6:	f001 fd51 	bl	800cd6c <_ZN8touchgfx12TextProviderC1Ev>
 800b2ca:	6820      	ldr	r0, [r4, #0]
 800b2cc:	6803      	ldr	r3, [r0, #0]
 800b2ce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b2d0:	4798      	blx	r3
 800b2d2:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800b2d4:	4603      	mov	r3, r0
 800b2d6:	4651      	mov	r1, sl
 800b2d8:	4638      	mov	r0, r7
 800b2da:	f001 fd8c 	bl	800cdf6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800b2de:	6820      	ldr	r0, [r4, #0]
 800b2e0:	7923      	ldrb	r3, [r4, #4]
 800b2e2:	9308      	str	r3, [sp, #32]
 800b2e4:	6803      	ldr	r3, [r0, #0]
 800b2e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b2e8:	4798      	blx	r3
 800b2ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800b2ee:	181e      	adds	r6, r3, r0
 800b2f0:	42ae      	cmp	r6, r5
 800b2f2:	dd06      	ble.n	800b302 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 800b2f4:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800b2f8:	4282      	cmp	r2, r0
 800b2fa:	bfa4      	itt	ge
 800b2fc:	189d      	addge	r5, r3, r2
 800b2fe:	fb95 f5f6 	sdivge	r5, r5, r6
 800b302:	a82e      	add	r0, sp, #184	; 0xb8
 800b304:	f001 fd32 	bl	800cd6c <_ZN8touchgfx12TextProviderC1Ev>
 800b308:	7c23      	ldrb	r3, [r4, #16]
 800b30a:	b14b      	cbz	r3, 800b320 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 800b30c:	6820      	ldr	r0, [r4, #0]
 800b30e:	6803      	ldr	r3, [r0, #0]
 800b310:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800b312:	4798      	blx	r3
 800b314:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800b316:	4603      	mov	r3, r0
 800b318:	4651      	mov	r1, sl
 800b31a:	a82e      	add	r0, sp, #184	; 0xb8
 800b31c:	f001 fd6b 	bl	800cdf6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800b320:	7c21      	ldrb	r1, [r4, #16]
 800b322:	9101      	str	r1, [sp, #4]
 800b324:	6821      	ldr	r1, [r4, #0]
 800b326:	7963      	ldrb	r3, [r4, #5]
 800b328:	9100      	str	r1, [sp, #0]
 800b32a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800b32e:	a92e      	add	r1, sp, #184	; 0xb8
 800b330:	a810      	add	r0, sp, #64	; 0x40
 800b332:	f7ff fc8d 	bl	800ac50 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800b336:	7c23      	ldrb	r3, [r4, #16]
 800b338:	b9bb      	cbnz	r3, 800b36a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x104>
 800b33a:	fa1f fa86 	uxth.w	sl, r6
 800b33e:	2d00      	cmp	r5, #0
 800b340:	dd45      	ble.n	800b3ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800b342:	4638      	mov	r0, r7
 800b344:	f002 f948 	bl	800d5d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800b348:	2800      	cmp	r0, #0
 800b34a:	d03d      	beq.n	800b3c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b34c:	280a      	cmp	r0, #10
 800b34e:	d1f6      	bne.n	800b33e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800b350:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800b354:	4453      	add	r3, sl
 800b356:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800b35a:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800b35e:	eba3 030a 	sub.w	r3, r3, sl
 800b362:	3d01      	subs	r5, #1
 800b364:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800b368:	e7e9      	b.n	800b33e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 800b36a:	0073      	lsls	r3, r6, #1
 800b36c:	9309      	str	r3, [sp, #36]	; 0x24
 800b36e:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800b372:	fa1f fa86 	uxth.w	sl, r6
 800b376:	2d00      	cmp	r5, #0
 800b378:	dd29      	ble.n	800b3ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 800b37a:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800b37e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b380:	428b      	cmp	r3, r1
 800b382:	bfd4      	ite	le
 800b384:	2100      	movle	r1, #0
 800b386:	2101      	movgt	r1, #1
 800b388:	a810      	add	r0, sp, #64	; 0x40
 800b38a:	f7ff fe78 	bl	800b07e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800b38e:	f8bd 3052 	ldrh.w	r3, [sp, #82]	; 0x52
 800b392:	3b01      	subs	r3, #1
 800b394:	b29b      	uxth	r3, r3
 800b396:	455b      	cmp	r3, fp
 800b398:	930b      	str	r3, [sp, #44]	; 0x2c
 800b39a:	d005      	beq.n	800b3a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800b39c:	7961      	ldrb	r1, [r4, #5]
 800b39e:	4638      	mov	r0, r7
 800b3a0:	f7f7 fc08 	bl	8002bb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800b3a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800b3a6:	e7f4      	b.n	800b392 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12c>
 800b3a8:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800b3ac:	4453      	add	r3, sl
 800b3ae:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800b3b2:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800b3b6:	eba3 030a 	sub.w	r3, r3, sl
 800b3ba:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800b3be:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b3c2:	3d01      	subs	r5, #1
 800b3c4:	2b00      	cmp	r3, #0
 800b3c6:	d1d6      	bne.n	800b376 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x110>
 800b3c8:	b05b      	add	sp, #364	; 0x16c
 800b3ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b3ce:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 800b3d2:	ad44      	add	r5, sp, #272	; 0x110
 800b3d4:	f04f 0b00 	mov.w	fp, #0
 800b3d8:	7c23      	ldrb	r3, [r4, #16]
 800b3da:	2b00      	cmp	r3, #0
 800b3dc:	d067      	beq.n	800b4ae <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800b3de:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800b3e2:	458a      	cmp	sl, r1
 800b3e4:	bfd4      	ite	le
 800b3e6:	2100      	movle	r1, #0
 800b3e8:	2101      	movgt	r1, #1
 800b3ea:	a810      	add	r0, sp, #64	; 0x40
 800b3ec:	f7ff fe47 	bl	800b07e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800b3f0:	9b08      	ldr	r3, [sp, #32]
 800b3f2:	2b00      	cmp	r3, #0
 800b3f4:	d056      	beq.n	800b4a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800b3f6:	7c23      	ldrb	r3, [r4, #16]
 800b3f8:	9309      	str	r3, [sp, #36]	; 0x24
 800b3fa:	2258      	movs	r2, #88	; 0x58
 800b3fc:	4639      	mov	r1, r7
 800b3fe:	4628      	mov	r0, r5
 800b400:	f00e fbcc 	bl	8019b9c <memcpy>
 800b404:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b406:	2b00      	cmp	r3, #0
 800b408:	d059      	beq.n	800b4be <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 800b40a:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 800b40e:	7922      	ldrb	r2, [r4, #4]
 800b410:	2a01      	cmp	r2, #1
 800b412:	d13d      	bne.n	800b490 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x22a>
 800b414:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 800b418:	1ac0      	subs	r0, r0, r3
 800b41a:	2302      	movs	r3, #2
 800b41c:	fb90 f0f3 	sdiv	r0, r0, r3
 800b420:	b200      	sxth	r0, r0
 800b422:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b426:	4418      	add	r0, r3
 800b428:	7c23      	ldrb	r3, [r4, #16]
 800b42a:	f8ad 0110 	strh.w	r0, [sp, #272]	; 0x110
 800b42e:	2b00      	cmp	r3, #0
 800b430:	d03a      	beq.n	800b4a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800b432:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 800b436:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 800b43a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 800b43e:	9500      	str	r5, [sp, #0]
 800b440:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800b444:	e9cd b703 	strd	fp, r7, [sp, #12]
 800b448:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800b44c:	464a      	mov	r2, r9
 800b44e:	2100      	movs	r1, #0
 800b450:	980a      	ldr	r0, [sp, #40]	; 0x28
 800b452:	f7ff fca4 	bl	800ad9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800b456:	2800      	cmp	r0, #0
 800b458:	d1b6      	bne.n	800b3c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b45a:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800b45e:	b2b2      	uxth	r2, r6
 800b460:	4611      	mov	r1, r2
 800b462:	4413      	add	r3, r2
 800b464:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800b468:	1a52      	subs	r2, r2, r1
 800b46a:	7c21      	ldrb	r1, [r4, #16]
 800b46c:	b21b      	sxth	r3, r3
 800b46e:	b212      	sxth	r2, r2
 800b470:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800b474:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800b478:	b109      	cbz	r1, 800b47e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 800b47a:	42b2      	cmp	r2, r6
 800b47c:	dba4      	blt.n	800b3c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b47e:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800b482:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800b486:	440a      	add	r2, r1
 800b488:	b212      	sxth	r2, r2
 800b48a:	4293      	cmp	r3, r2
 800b48c:	dda4      	ble.n	800b3d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x172>
 800b48e:	e79b      	b.n	800b3c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 800b490:	2a02      	cmp	r2, #2
 800b492:	d105      	bne.n	800b4a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23a>
 800b494:	7be2      	ldrb	r2, [r4, #15]
 800b496:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 800b49a:	1a80      	subs	r0, r0, r2
 800b49c:	1ac0      	subs	r0, r0, r3
 800b49e:	e7bf      	b.n	800b420 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ba>
 800b4a0:	2000      	movs	r0, #0
 800b4a2:	e7be      	b.n	800b422 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800b4a4:	7be0      	ldrb	r0, [r4, #15]
 800b4a6:	e7bc      	b.n	800b422 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 800b4a8:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800b4ac:	e7c3      	b.n	800b436 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d0>
 800b4ae:	9b08      	ldr	r3, [sp, #32]
 800b4b0:	2b00      	cmp	r3, #0
 800b4b2:	d0f7      	beq.n	800b4a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800b4b4:	2258      	movs	r2, #88	; 0x58
 800b4b6:	4639      	mov	r1, r7
 800b4b8:	4628      	mov	r0, r5
 800b4ba:	f00e fb6f 	bl	8019b9c <memcpy>
 800b4be:	2300      	movs	r3, #0
 800b4c0:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800b4c4:	6821      	ldr	r1, [r4, #0]
 800b4c6:	4628      	mov	r0, r5
 800b4c8:	f7ff fbfc 	bl	800acc4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800b4cc:	b203      	sxth	r3, r0
 800b4ce:	e79e      	b.n	800b40e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a8>

0800b4d0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800b4d0:	b510      	push	{r4, lr}
 800b4d2:	2b02      	cmp	r3, #2
 800b4d4:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b4d8:	d00b      	beq.n	800b4f2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800b4da:	2b03      	cmp	r3, #3
 800b4dc:	d00e      	beq.n	800b4fc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800b4de:	2b01      	cmp	r3, #1
 800b4e0:	d001      	beq.n	800b4e6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800b4e2:	1860      	adds	r0, r4, r1
 800b4e4:	bd10      	pop	{r4, pc}
 800b4e6:	8880      	ldrh	r0, [r0, #4]
 800b4e8:	4420      	add	r0, r4
 800b4ea:	b200      	sxth	r0, r0
 800b4ec:	1a80      	subs	r0, r0, r2
 800b4ee:	3801      	subs	r0, #1
 800b4f0:	e7f8      	b.n	800b4e4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800b4f2:	8880      	ldrh	r0, [r0, #4]
 800b4f4:	4420      	add	r0, r4
 800b4f6:	b200      	sxth	r0, r0
 800b4f8:	1a40      	subs	r0, r0, r1
 800b4fa:	e7f8      	b.n	800b4ee <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800b4fc:	18a0      	adds	r0, r4, r2
 800b4fe:	e7f1      	b.n	800b4e4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800b500 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800b500:	b510      	push	{r4, lr}
 800b502:	2b02      	cmp	r3, #2
 800b504:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800b508:	d006      	beq.n	800b518 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800b50a:	2b03      	cmp	r3, #3
 800b50c:	d00a      	beq.n	800b524 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800b50e:	2b01      	cmp	r3, #1
 800b510:	bf14      	ite	ne
 800b512:	18a0      	addne	r0, r4, r2
 800b514:	1860      	addeq	r0, r4, r1
 800b516:	bd10      	pop	{r4, pc}
 800b518:	88c0      	ldrh	r0, [r0, #6]
 800b51a:	4420      	add	r0, r4
 800b51c:	b200      	sxth	r0, r0
 800b51e:	1a80      	subs	r0, r0, r2
 800b520:	3801      	subs	r0, #1
 800b522:	e7f8      	b.n	800b516 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800b524:	88c0      	ldrh	r0, [r0, #6]
 800b526:	4420      	add	r0, r4
 800b528:	b200      	sxth	r0, r0
 800b52a:	1a40      	subs	r0, r0, r1
 800b52c:	e7f8      	b.n	800b520 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800b530 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800b530:	4b01      	ldr	r3, [pc, #4]	; (800b538 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800b532:	2200      	movs	r2, #0
 800b534:	601a      	str	r2, [r3, #0]
 800b536:	4770      	bx	lr
 800b538:	20012184 	.word	0x20012184

0800b53c <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>:
 800b53c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b53e:	e9dd e405 	ldrd	lr, r4, [sp, #20]
 800b542:	1e05      	subs	r5, r0, #0
 800b544:	bfba      	itte	lt
 800b546:	f04f 37ff 	movlt.w	r7, #4294967295	; 0xffffffff
 800b54a:	426d      	neglt	r5, r5
 800b54c:	2701      	movge	r7, #1
 800b54e:	f1be 0f00 	cmp.w	lr, #0
 800b552:	bfb8      	it	lt
 800b554:	f1ce 0e00 	rsblt	lr, lr, #0
 800b558:	f04f 0601 	mov.w	r6, #1
 800b55c:	fa4e f001 	asr.w	r0, lr, r1
 800b560:	fa06 f101 	lsl.w	r1, r6, r1
 800b564:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800b568:	f101 31ff 	add.w	r1, r1, #4294967295	; 0xffffffff
 800b56c:	ea01 010e 	and.w	r1, r1, lr
 800b570:	bfb8      	it	lt
 800b572:	427f      	neglt	r7, r7
 800b574:	434d      	muls	r5, r1
 800b576:	2c00      	cmp	r4, #0
 800b578:	f8dc 1000 	ldr.w	r1, [ip]
 800b57c:	bfb8      	it	lt
 800b57e:	4264      	neglt	r4, r4
 800b580:	fb03 1300 	mla	r3, r3, r0, r1
 800b584:	fb95 f1f4 	sdiv	r1, r5, r4
 800b588:	fb04 5511 	mls	r5, r4, r1, r5
 800b58c:	441d      	add	r5, r3
 800b58e:	fb95 f3f4 	sdiv	r3, r5, r4
 800b592:	fb04 5413 	mls	r4, r4, r3, r5
 800b596:	4419      	add	r1, r3
 800b598:	bfb8      	it	lt
 800b59a:	427f      	neglt	r7, r7
 800b59c:	fb02 1000 	mla	r0, r2, r0, r1
 800b5a0:	f8cc 4000 	str.w	r4, [ip]
 800b5a4:	4378      	muls	r0, r7
 800b5a6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b5a8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800b5a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b5ac:	4c24      	ldr	r4, [pc, #144]	; (800b640 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x98>)
 800b5ae:	6807      	ldr	r7, [r0, #0]
 800b5b0:	69a3      	ldr	r3, [r4, #24]
 800b5b2:	b086      	sub	sp, #24
 800b5b4:	4605      	mov	r5, r0
 800b5b6:	b92b      	cbnz	r3, 800b5c4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1c>
 800b5b8:	6840      	ldr	r0, [r0, #4]
 800b5ba:	e9c5 7000 	strd	r7, r0, [r5]
 800b5be:	b006      	add	sp, #24
 800b5c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b5c4:	68a2      	ldr	r2, [r4, #8]
 800b5c6:	6820      	ldr	r0, [r4, #0]
 800b5c8:	ae06      	add	r6, sp, #24
 800b5ca:	f04f 0802 	mov.w	r8, #2
 800b5ce:	fb93 f1f8 	sdiv	r1, r3, r8
 800b5d2:	440a      	add	r2, r1
 800b5d4:	f846 2d04 	str.w	r2, [r6, #-4]!
 800b5d8:	69e1      	ldr	r1, [r4, #28]
 800b5da:	9700      	str	r7, [sp, #0]
 800b5dc:	e9cd 3601 	strd	r3, r6, [sp, #4]
 800b5e0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b5e2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b5e4:	f7ff ffaa 	bl	800b53c <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800b5e8:	69a3      	ldr	r3, [r4, #24]
 800b5ea:	9301      	str	r3, [sp, #4]
 800b5ec:	686b      	ldr	r3, [r5, #4]
 800b5ee:	9300      	str	r3, [sp, #0]
 800b5f0:	4607      	mov	r7, r0
 800b5f2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b5f4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b5f6:	6a21      	ldr	r1, [r4, #32]
 800b5f8:	9602      	str	r6, [sp, #8]
 800b5fa:	6860      	ldr	r0, [r4, #4]
 800b5fc:	f7ff ff9e 	bl	800b53c <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800b600:	6963      	ldr	r3, [r4, #20]
 800b602:	69a2      	ldr	r2, [r4, #24]
 800b604:	fb92 f8f8 	sdiv	r8, r2, r8
 800b608:	4443      	add	r3, r8
 800b60a:	9305      	str	r3, [sp, #20]
 800b60c:	682b      	ldr	r3, [r5, #0]
 800b60e:	9300      	str	r3, [sp, #0]
 800b610:	e9cd 2601 	strd	r2, r6, [sp, #4]
 800b614:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b616:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b618:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b61a:	4407      	add	r7, r0
 800b61c:	68e0      	ldr	r0, [r4, #12]
 800b61e:	f7ff ff8d 	bl	800b53c <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800b622:	69a3      	ldr	r3, [r4, #24]
 800b624:	9301      	str	r3, [sp, #4]
 800b626:	686b      	ldr	r3, [r5, #4]
 800b628:	9300      	str	r3, [sp, #0]
 800b62a:	4680      	mov	r8, r0
 800b62c:	9602      	str	r6, [sp, #8]
 800b62e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800b630:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b632:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800b634:	6920      	ldr	r0, [r4, #16]
 800b636:	f7ff ff81 	bl	800b53c <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800b63a:	4440      	add	r0, r8
 800b63c:	e7bd      	b.n	800b5ba <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x12>
 800b63e:	bf00      	nop
 800b640:	20012188 	.word	0x20012188

0800b644 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800b644:	b510      	push	{r4, lr}
 800b646:	4b07      	ldr	r3, [pc, #28]	; (800b664 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800b648:	781b      	ldrb	r3, [r3, #0]
 800b64a:	2b01      	cmp	r3, #1
 800b64c:	d108      	bne.n	800b660 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800b64e:	4b06      	ldr	r3, [pc, #24]	; (800b668 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800b650:	880c      	ldrh	r4, [r1, #0]
 800b652:	881b      	ldrh	r3, [r3, #0]
 800b654:	f9b0 2000 	ldrsh.w	r2, [r0]
 800b658:	3b01      	subs	r3, #1
 800b65a:	1b1b      	subs	r3, r3, r4
 800b65c:	8003      	strh	r3, [r0, #0]
 800b65e:	800a      	strh	r2, [r1, #0]
 800b660:	bd10      	pop	{r4, pc}
 800b662:	bf00      	nop
 800b664:	20012174 	.word	0x20012174
 800b668:	20012178 	.word	0x20012178

0800b66c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800b66c:	b510      	push	{r4, lr}
 800b66e:	4b0a      	ldr	r3, [pc, #40]	; (800b698 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800b670:	781b      	ldrb	r3, [r3, #0]
 800b672:	2b01      	cmp	r3, #1
 800b674:	d10e      	bne.n	800b694 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800b676:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800b67a:	8843      	ldrh	r3, [r0, #2]
 800b67c:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b680:	8044      	strh	r4, [r0, #2]
 800b682:	18ca      	adds	r2, r1, r3
 800b684:	4b05      	ldr	r3, [pc, #20]	; (800b69c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800b686:	881b      	ldrh	r3, [r3, #0]
 800b688:	1a9b      	subs	r3, r3, r2
 800b68a:	8003      	strh	r3, [r0, #0]
 800b68c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b690:	80c3      	strh	r3, [r0, #6]
 800b692:	8081      	strh	r1, [r0, #4]
 800b694:	bd10      	pop	{r4, pc}
 800b696:	bf00      	nop
 800b698:	20012174 	.word	0x20012174
 800b69c:	20012170 	.word	0x20012170

0800b6a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800b6a0:	b510      	push	{r4, lr}
 800b6a2:	4b07      	ldr	r3, [pc, #28]	; (800b6c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800b6a4:	781b      	ldrb	r3, [r3, #0]
 800b6a6:	2b01      	cmp	r3, #1
 800b6a8:	d108      	bne.n	800b6bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800b6aa:	f9b1 3000 	ldrsh.w	r3, [r1]
 800b6ae:	f9b0 4000 	ldrsh.w	r4, [r0]
 800b6b2:	8003      	strh	r3, [r0, #0]
 800b6b4:	8893      	ldrh	r3, [r2, #4]
 800b6b6:	3b01      	subs	r3, #1
 800b6b8:	1b1b      	subs	r3, r3, r4
 800b6ba:	800b      	strh	r3, [r1, #0]
 800b6bc:	bd10      	pop	{r4, pc}
 800b6be:	bf00      	nop
 800b6c0:	20012174 	.word	0x20012174

0800b6c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800b6c4:	b513      	push	{r0, r1, r4, lr}
 800b6c6:	4b08      	ldr	r3, [pc, #32]	; (800b6e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800b6c8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b6cc:	4b07      	ldr	r3, [pc, #28]	; (800b6ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800b6ce:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b6d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b6d6:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b6da:	2400      	movs	r4, #0
 800b6dc:	466a      	mov	r2, sp
 800b6de:	9400      	str	r4, [sp, #0]
 800b6e0:	f7ff ffde 	bl	800b6a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800b6e4:	b002      	add	sp, #8
 800b6e6:	bd10      	pop	{r4, pc}
 800b6e8:	20012170 	.word	0x20012170
 800b6ec:	20012172 	.word	0x20012172

0800b6f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800b6f0:	b510      	push	{r4, lr}
 800b6f2:	4b0a      	ldr	r3, [pc, #40]	; (800b71c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800b6f4:	781b      	ldrb	r3, [r3, #0]
 800b6f6:	2b01      	cmp	r3, #1
 800b6f8:	460a      	mov	r2, r1
 800b6fa:	d10d      	bne.n	800b718 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800b6fc:	8881      	ldrh	r1, [r0, #4]
 800b6fe:	8803      	ldrh	r3, [r0, #0]
 800b700:	440b      	add	r3, r1
 800b702:	4601      	mov	r1, r0
 800b704:	3b01      	subs	r3, #1
 800b706:	f821 3b02 	strh.w	r3, [r1], #2
 800b70a:	f7ff ffc9 	bl	800b6a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800b70e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800b712:	88c2      	ldrh	r2, [r0, #6]
 800b714:	8082      	strh	r2, [r0, #4]
 800b716:	80c3      	strh	r3, [r0, #6]
 800b718:	bd10      	pop	{r4, pc}
 800b71a:	bf00      	nop
 800b71c:	20012174 	.word	0x20012174

0800b720 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800b720:	b507      	push	{r0, r1, r2, lr}
 800b722:	4b09      	ldr	r3, [pc, #36]	; (800b748 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800b724:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b728:	4b08      	ldr	r3, [pc, #32]	; (800b74c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800b72a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b72e:	2100      	movs	r1, #0
 800b730:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b734:	9100      	str	r1, [sp, #0]
 800b736:	4669      	mov	r1, sp
 800b738:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b73c:	f7ff ffd8 	bl	800b6f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800b740:	b003      	add	sp, #12
 800b742:	f85d fb04 	ldr.w	pc, [sp], #4
 800b746:	bf00      	nop
 800b748:	20012170 	.word	0x20012170
 800b74c:	20012172 	.word	0x20012172

0800b750 <_ZN8touchgfx11Application13requestRedrawEv>:
 800b750:	4b06      	ldr	r3, [pc, #24]	; (800b76c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800b752:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b756:	4b06      	ldr	r3, [pc, #24]	; (800b770 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800b758:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800b75c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b760:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800b764:	2100      	movs	r1, #0
 800b766:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800b76a:	4770      	bx	lr
 800b76c:	20012170 	.word	0x20012170
 800b770:	20012172 	.word	0x20012172

0800b774 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800b774:	4b03      	ldr	r3, [pc, #12]	; (800b784 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800b776:	6818      	ldr	r0, [r3, #0]
 800b778:	b110      	cbz	r0, 800b780 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800b77a:	6803      	ldr	r3, [r0, #0]
 800b77c:	699b      	ldr	r3, [r3, #24]
 800b77e:	4718      	bx	r3
 800b780:	4770      	bx	lr
 800b782:	bf00      	nop
 800b784:	200121d8 	.word	0x200121d8

0800b788 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800b788:	4770      	bx	lr
	...

0800b78c <_ZN8touchgfx11Application4drawEv>:
 800b78c:	b507      	push	{r0, r1, r2, lr}
 800b78e:	4b09      	ldr	r3, [pc, #36]	; (800b7b4 <_ZN8touchgfx11Application4drawEv+0x28>)
 800b790:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b794:	4b08      	ldr	r3, [pc, #32]	; (800b7b8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800b796:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b79a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b79e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b7a2:	6803      	ldr	r3, [r0, #0]
 800b7a4:	2100      	movs	r1, #0
 800b7a6:	9100      	str	r1, [sp, #0]
 800b7a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b7aa:	4669      	mov	r1, sp
 800b7ac:	4798      	blx	r3
 800b7ae:	b003      	add	sp, #12
 800b7b0:	f85d fb04 	ldr.w	pc, [sp], #4
 800b7b4:	20012170 	.word	0x20012170
 800b7b8:	20012172 	.word	0x20012172

0800b7bc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800b7bc:	4b03      	ldr	r3, [pc, #12]	; (800b7cc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800b7be:	6818      	ldr	r0, [r3, #0]
 800b7c0:	b110      	cbz	r0, 800b7c8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800b7c2:	6803      	ldr	r3, [r0, #0]
 800b7c4:	69db      	ldr	r3, [r3, #28]
 800b7c6:	4718      	bx	r3
 800b7c8:	4770      	bx	lr
 800b7ca:	bf00      	nop
 800b7cc:	200121d8 	.word	0x200121d8

0800b7d0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800b7d0:	4b03      	ldr	r3, [pc, #12]	; (800b7e0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800b7d2:	6818      	ldr	r0, [r3, #0]
 800b7d4:	b110      	cbz	r0, 800b7dc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800b7d6:	6803      	ldr	r3, [r0, #0]
 800b7d8:	6a1b      	ldr	r3, [r3, #32]
 800b7da:	4718      	bx	r3
 800b7dc:	4770      	bx	lr
 800b7de:	bf00      	nop
 800b7e0:	200121d8 	.word	0x200121d8

0800b7e4 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800b7e4:	4b03      	ldr	r3, [pc, #12]	; (800b7f4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800b7e6:	6818      	ldr	r0, [r3, #0]
 800b7e8:	b110      	cbz	r0, 800b7f0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800b7ea:	6803      	ldr	r3, [r0, #0]
 800b7ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b7ee:	4718      	bx	r3
 800b7f0:	4770      	bx	lr
 800b7f2:	bf00      	nop
 800b7f4:	200121d8 	.word	0x200121d8

0800b7f8 <_ZN8touchgfx11Application15handleTickEventEv>:
 800b7f8:	b570      	push	{r4, r5, r6, lr}
 800b7fa:	4d34      	ldr	r5, [pc, #208]	; (800b8cc <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800b7fc:	4604      	mov	r4, r0
 800b7fe:	6828      	ldr	r0, [r5, #0]
 800b800:	b140      	cbz	r0, 800b814 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800b802:	7a03      	ldrb	r3, [r0, #8]
 800b804:	b933      	cbnz	r3, 800b814 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800b806:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800b80a:	6803      	ldr	r3, [r0, #0]
 800b80c:	689b      	ldr	r3, [r3, #8]
 800b80e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b812:	4718      	bx	r3
 800b814:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800b818:	b97b      	cbnz	r3, 800b83a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800b81a:	b170      	cbz	r0, 800b83a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800b81c:	7a03      	ldrb	r3, [r0, #8]
 800b81e:	b163      	cbz	r3, 800b83a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800b820:	4b2b      	ldr	r3, [pc, #172]	; (800b8d0 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800b822:	6818      	ldr	r0, [r3, #0]
 800b824:	b110      	cbz	r0, 800b82c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800b826:	6803      	ldr	r3, [r0, #0]
 800b828:	691b      	ldr	r3, [r3, #16]
 800b82a:	4798      	blx	r3
 800b82c:	6828      	ldr	r0, [r5, #0]
 800b82e:	6803      	ldr	r3, [r0, #0]
 800b830:	68db      	ldr	r3, [r3, #12]
 800b832:	4798      	blx	r3
 800b834:	2301      	movs	r3, #1
 800b836:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800b83a:	2500      	movs	r5, #0
 800b83c:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800b840:	42a8      	cmp	r0, r5
 800b842:	dd0c      	ble.n	800b85e <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800b844:	1963      	adds	r3, r4, r5
 800b846:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800b84a:	b132      	cbz	r2, 800b85a <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800b84c:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800b850:	4413      	add	r3, r2
 800b852:	6858      	ldr	r0, [r3, #4]
 800b854:	6803      	ldr	r3, [r0, #0]
 800b856:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800b858:	4798      	blx	r3
 800b85a:	3501      	adds	r5, #1
 800b85c:	e7ee      	b.n	800b83c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800b85e:	2300      	movs	r3, #0
 800b860:	461a      	mov	r2, r3
 800b862:	4298      	cmp	r0, r3
 800b864:	d114      	bne.n	800b890 <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800b866:	1d25      	adds	r5, r4, #4
 800b868:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800b86c:	1e48      	subs	r0, r1, #1
 800b86e:	b280      	uxth	r0, r0
 800b870:	4291      	cmp	r1, r2
 800b872:	dd24      	ble.n	800b8be <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800b874:	4288      	cmp	r0, r1
 800b876:	d2fb      	bcs.n	800b870 <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800b878:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800b87c:	3304      	adds	r3, #4
 800b87e:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800b882:	428b      	cmp	r3, r1
 800b884:	d018      	beq.n	800b8b8 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800b886:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800b88a:	f843 6c04 	str.w	r6, [r3, #-4]
 800b88e:	e7f8      	b.n	800b882 <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800b890:	18e1      	adds	r1, r4, r3
 800b892:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800b896:	b16d      	cbz	r5, 800b8b4 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800b898:	429a      	cmp	r2, r3
 800b89a:	d00a      	beq.n	800b8b2 <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800b89c:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800b8a0:	4431      	add	r1, r6
 800b8a2:	684e      	ldr	r6, [r1, #4]
 800b8a4:	b291      	uxth	r1, r2
 800b8a6:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800b8aa:	604e      	str	r6, [r1, #4]
 800b8ac:	18a1      	adds	r1, r4, r2
 800b8ae:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800b8b2:	3201      	adds	r2, #1
 800b8b4:	3301      	adds	r3, #1
 800b8b6:	e7d4      	b.n	800b862 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800b8b8:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800b8bc:	e7d4      	b.n	800b868 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800b8be:	4b04      	ldr	r3, [pc, #16]	; (800b8d0 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800b8c0:	6818      	ldr	r0, [r3, #0]
 800b8c2:	b110      	cbz	r0, 800b8ca <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800b8c4:	6803      	ldr	r3, [r0, #0]
 800b8c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b8c8:	e7a1      	b.n	800b80e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800b8ca:	bd70      	pop	{r4, r5, r6, pc}
 800b8cc:	200121dc 	.word	0x200121dc
 800b8d0:	200121d8 	.word	0x200121d8

0800b8d4 <_ZN8touchgfx11ApplicationD1Ev>:
 800b8d4:	4770      	bx	lr

0800b8d6 <_ZN8touchgfx11ApplicationD0Ev>:
 800b8d6:	b510      	push	{r4, lr}
 800b8d8:	f44f 719c 	mov.w	r1, #312	; 0x138
 800b8dc:	4604      	mov	r4, r0
 800b8de:	f00e f8b3 	bl	8019a48 <_ZdlPvj>
 800b8e2:	4620      	mov	r0, r4
 800b8e4:	bd10      	pop	{r4, pc}
	...

0800b8e8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800b8e8:	b570      	push	{r4, r5, r6, lr}
 800b8ea:	4606      	mov	r6, r0
 800b8ec:	460c      	mov	r4, r1
 800b8ee:	b929      	cbnz	r1, 800b8fc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800b8f0:	4b0c      	ldr	r3, [pc, #48]	; (800b924 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800b8f2:	4a0d      	ldr	r2, [pc, #52]	; (800b928 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800b8f4:	480d      	ldr	r0, [pc, #52]	; (800b92c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800b8f6:	2166      	movs	r1, #102	; 0x66
 800b8f8:	f00e f8d2 	bl	8019aa0 <__assert_func>
 800b8fc:	4d0c      	ldr	r5, [pc, #48]	; (800b930 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800b8fe:	2300      	movs	r3, #0
 800b900:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800b904:	6828      	ldr	r0, [r5, #0]
 800b906:	b110      	cbz	r0, 800b90e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800b908:	6803      	ldr	r3, [r0, #0]
 800b90a:	695b      	ldr	r3, [r3, #20]
 800b90c:	4798      	blx	r3
 800b90e:	602c      	str	r4, [r5, #0]
 800b910:	6823      	ldr	r3, [r4, #0]
 800b912:	4620      	mov	r0, r4
 800b914:	68db      	ldr	r3, [r3, #12]
 800b916:	4798      	blx	r3
 800b918:	6833      	ldr	r3, [r6, #0]
 800b91a:	4630      	mov	r0, r6
 800b91c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b91e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b922:	4718      	bx	r3
 800b924:	0801c98c 	.word	0x0801c98c
 800b928:	0801ca5c 	.word	0x0801ca5c
 800b92c:	0801c996 	.word	0x0801c996
 800b930:	200121d8 	.word	0x200121d8

0800b934 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800b934:	b510      	push	{r4, lr}
 800b936:	f9b1 4000 	ldrsh.w	r4, [r1]
 800b93a:	888a      	ldrh	r2, [r1, #4]
 800b93c:	f9b0 3000 	ldrsh.w	r3, [r0]
 800b940:	4422      	add	r2, r4
 800b942:	b212      	sxth	r2, r2
 800b944:	4293      	cmp	r3, r2
 800b946:	da15      	bge.n	800b974 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800b948:	8882      	ldrh	r2, [r0, #4]
 800b94a:	4413      	add	r3, r2
 800b94c:	b21b      	sxth	r3, r3
 800b94e:	429c      	cmp	r4, r3
 800b950:	da10      	bge.n	800b974 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800b952:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800b956:	88c9      	ldrh	r1, [r1, #6]
 800b958:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800b95c:	4419      	add	r1, r3
 800b95e:	b209      	sxth	r1, r1
 800b960:	428a      	cmp	r2, r1
 800b962:	da07      	bge.n	800b974 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800b964:	88c0      	ldrh	r0, [r0, #6]
 800b966:	4410      	add	r0, r2
 800b968:	b200      	sxth	r0, r0
 800b96a:	4283      	cmp	r3, r0
 800b96c:	bfac      	ite	ge
 800b96e:	2000      	movge	r0, #0
 800b970:	2001      	movlt	r0, #1
 800b972:	bd10      	pop	{r4, pc}
 800b974:	2000      	movs	r0, #0
 800b976:	e7fc      	b.n	800b972 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800b978 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800b978:	b570      	push	{r4, r5, r6, lr}
 800b97a:	f9b1 4000 	ldrsh.w	r4, [r1]
 800b97e:	f9b0 5000 	ldrsh.w	r5, [r0]
 800b982:	42ac      	cmp	r4, r5
 800b984:	db18      	blt.n	800b9b8 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800b986:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800b98a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800b98e:	429a      	cmp	r2, r3
 800b990:	db12      	blt.n	800b9b8 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800b992:	8886      	ldrh	r6, [r0, #4]
 800b994:	4435      	add	r5, r6
 800b996:	888e      	ldrh	r6, [r1, #4]
 800b998:	4434      	add	r4, r6
 800b99a:	b22d      	sxth	r5, r5
 800b99c:	b224      	sxth	r4, r4
 800b99e:	42a5      	cmp	r5, r4
 800b9a0:	db0a      	blt.n	800b9b8 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800b9a2:	88c0      	ldrh	r0, [r0, #6]
 800b9a4:	4418      	add	r0, r3
 800b9a6:	88cb      	ldrh	r3, [r1, #6]
 800b9a8:	441a      	add	r2, r3
 800b9aa:	b200      	sxth	r0, r0
 800b9ac:	b212      	sxth	r2, r2
 800b9ae:	4290      	cmp	r0, r2
 800b9b0:	bfb4      	ite	lt
 800b9b2:	2000      	movlt	r0, #0
 800b9b4:	2001      	movge	r0, #1
 800b9b6:	bd70      	pop	{r4, r5, r6, pc}
 800b9b8:	2000      	movs	r0, #0
 800b9ba:	e7fc      	b.n	800b9b6 <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800b9bc <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800b9bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b9be:	4604      	mov	r4, r0
 800b9c0:	4608      	mov	r0, r1
 800b9c2:	460d      	mov	r5, r1
 800b9c4:	f7fd fc47 	bl	8009256 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b9c8:	b978      	cbnz	r0, 800b9ea <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800b9ca:	4620      	mov	r0, r4
 800b9cc:	f7fd fc43 	bl	8009256 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b9d0:	f9b5 6000 	ldrsh.w	r6, [r5]
 800b9d4:	b150      	cbz	r0, 800b9ec <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800b9d6:	8026      	strh	r6, [r4, #0]
 800b9d8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800b9dc:	8063      	strh	r3, [r4, #2]
 800b9de:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800b9e2:	80a3      	strh	r3, [r4, #4]
 800b9e4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800b9e8:	80e3      	strh	r3, [r4, #6]
 800b9ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b9ec:	f9b4 1000 	ldrsh.w	r1, [r4]
 800b9f0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800b9f4:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800b9f8:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800b9fc:	88ed      	ldrh	r5, [r5, #6]
 800b9fe:	42b1      	cmp	r1, r6
 800ba00:	460f      	mov	r7, r1
 800ba02:	bfa8      	it	ge
 800ba04:	4637      	movge	r7, r6
 800ba06:	4293      	cmp	r3, r2
 800ba08:	4618      	mov	r0, r3
 800ba0a:	4466      	add	r6, ip
 800ba0c:	bfa8      	it	ge
 800ba0e:	4610      	movge	r0, r2
 800ba10:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800ba14:	8027      	strh	r7, [r4, #0]
 800ba16:	442a      	add	r2, r5
 800ba18:	88e5      	ldrh	r5, [r4, #6]
 800ba1a:	8060      	strh	r0, [r4, #2]
 800ba1c:	4461      	add	r1, ip
 800ba1e:	442b      	add	r3, r5
 800ba20:	b236      	sxth	r6, r6
 800ba22:	b209      	sxth	r1, r1
 800ba24:	b212      	sxth	r2, r2
 800ba26:	b21b      	sxth	r3, r3
 800ba28:	428e      	cmp	r6, r1
 800ba2a:	bfac      	ite	ge
 800ba2c:	ebc7 0106 	rsbge	r1, r7, r6
 800ba30:	ebc7 0101 	rsblt	r1, r7, r1
 800ba34:	429a      	cmp	r2, r3
 800ba36:	bfac      	ite	ge
 800ba38:	ebc0 0202 	rsbge	r2, r0, r2
 800ba3c:	ebc0 0203 	rsblt	r2, r0, r3
 800ba40:	80a1      	strh	r1, [r4, #4]
 800ba42:	80e2      	strh	r2, [r4, #6]
 800ba44:	e7d1      	b.n	800b9ea <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800ba48 <_ZN8touchgfx11Application11getInstanceEv>:
 800ba48:	4b01      	ldr	r3, [pc, #4]	; (800ba50 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800ba4a:	6818      	ldr	r0, [r3, #0]
 800ba4c:	4770      	bx	lr
 800ba4e:	bf00      	nop
 800ba50:	200121e8 	.word	0x200121e8

0800ba54 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800ba54:	2300      	movs	r3, #0
 800ba56:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800ba5a:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800ba5e:	30a8      	adds	r0, #168	; 0xa8
 800ba60:	f802 3b01 	strb.w	r3, [r2], #1
 800ba64:	4282      	cmp	r2, r0
 800ba66:	d1fb      	bne.n	800ba60 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800ba68:	4770      	bx	lr

0800ba6a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800ba6a:	4603      	mov	r3, r0
 800ba6c:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800ba70:	2200      	movs	r2, #0
 800ba72:	801a      	strh	r2, [r3, #0]
 800ba74:	805a      	strh	r2, [r3, #2]
 800ba76:	809a      	strh	r2, [r3, #4]
 800ba78:	80da      	strh	r2, [r3, #6]
 800ba7a:	3308      	adds	r3, #8
 800ba7c:	428b      	cmp	r3, r1
 800ba7e:	d1f8      	bne.n	800ba72 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800ba80:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800ba84:	4770      	bx	lr
	...

0800ba88 <_ZN8touchgfx11ApplicationC1Ev>:
 800ba88:	b570      	push	{r4, r5, r6, lr}
 800ba8a:	4b1a      	ldr	r3, [pc, #104]	; (800baf4 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800ba8c:	6003      	str	r3, [r0, #0]
 800ba8e:	2500      	movs	r5, #0
 800ba90:	4604      	mov	r4, r0
 800ba92:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800ba96:	30a8      	adds	r0, #168	; 0xa8
 800ba98:	f7ff ffe7 	bl	800ba6a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ba9c:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800baa0:	f7ff ffe3 	bl	800ba6a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800baa4:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800baa8:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800baac:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800bab0:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800bab4:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800bab8:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800babc:	490e      	ldr	r1, [pc, #56]	; (800baf8 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800babe:	480f      	ldr	r0, [pc, #60]	; (800bafc <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800bac0:	4e0f      	ldr	r6, [pc, #60]	; (800bb00 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800bac2:	f00d fe91 	bl	80197e8 <CRC_Lock>
 800bac6:	4b0f      	ldr	r3, [pc, #60]	; (800bb04 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800bac8:	b158      	cbz	r0, 800bae2 <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800baca:	801d      	strh	r5, [r3, #0]
 800bacc:	4a0e      	ldr	r2, [pc, #56]	; (800bb08 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800bace:	2300      	movs	r3, #0
 800bad0:	6013      	str	r3, [r2, #0]
 800bad2:	4a0e      	ldr	r2, [pc, #56]	; (800bb0c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800bad4:	6033      	str	r3, [r6, #0]
 800bad6:	4620      	mov	r0, r4
 800bad8:	6013      	str	r3, [r2, #0]
 800bada:	f7ff ffbb 	bl	800ba54 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800bade:	4620      	mov	r0, r4
 800bae0:	bd70      	pop	{r4, r5, r6, pc}
 800bae2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800bae6:	2002      	movs	r0, #2
 800bae8:	801a      	strh	r2, [r3, #0]
 800baea:	6030      	str	r0, [r6, #0]
 800baec:	f000 fff6 	bl	800cadc <_ZN8touchgfx6Screen4drawEv>
 800baf0:	e7ec      	b.n	800bacc <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800baf2:	bf00      	nop
 800baf4:	0801ca20 	.word	0x0801ca20
 800baf8:	b5e8b5cd 	.word	0xb5e8b5cd
 800bafc:	f407a5c2 	.word	0xf407a5c2
 800bb00:	200121d8 	.word	0x200121d8
 800bb04:	20000084 	.word	0x20000084
 800bb08:	200121e8 	.word	0x200121e8
 800bb0c:	200121dc 	.word	0x200121dc

0800bb10 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800bb10:	2300      	movs	r3, #0
 800bb12:	8003      	strh	r3, [r0, #0]
 800bb14:	8043      	strh	r3, [r0, #2]
 800bb16:	8083      	strh	r3, [r0, #4]
 800bb18:	80c3      	strh	r3, [r0, #6]
 800bb1a:	f8b1 3040 	ldrh.w	r3, [r1, #64]	; 0x40
 800bb1e:	4293      	cmp	r3, r2
 800bb20:	b530      	push	{r4, r5, lr}
 800bb22:	d912      	bls.n	800bb4a <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800bb24:	eb01 04c2 	add.w	r4, r1, r2, lsl #3
 800bb28:	3b01      	subs	r3, #1
 800bb2a:	6825      	ldr	r5, [r4, #0]
 800bb2c:	6005      	str	r5, [r0, #0]
 800bb2e:	b29b      	uxth	r3, r3
 800bb30:	6865      	ldr	r5, [r4, #4]
 800bb32:	6045      	str	r5, [r0, #4]
 800bb34:	4293      	cmp	r3, r2
 800bb36:	f8a1 3040 	strh.w	r3, [r1, #64]	; 0x40
 800bb3a:	d906      	bls.n	800bb4a <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800bb3c:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800bb40:	681d      	ldr	r5, [r3, #0]
 800bb42:	f841 5032 	str.w	r5, [r1, r2, lsl #3]
 800bb46:	685d      	ldr	r5, [r3, #4]
 800bb48:	6065      	str	r5, [r4, #4]
 800bb4a:	bd30      	pop	{r4, r5, pc}

0800bb4c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800bb4c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bb4e:	466b      	mov	r3, sp
 800bb50:	e883 0006 	stmia.w	r3, {r1, r2}
 800bb54:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800bb58:	2a07      	cmp	r2, #7
 800bb5a:	4604      	mov	r4, r0
 800bb5c:	d906      	bls.n	800bb6c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800bb5e:	4b09      	ldr	r3, [pc, #36]	; (800bb84 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800bb60:	4a09      	ldr	r2, [pc, #36]	; (800bb88 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800bb62:	480a      	ldr	r0, [pc, #40]	; (800bb8c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800bb64:	f240 118f 	movw	r1, #399	; 0x18f
 800bb68:	f00d ff9a 	bl	8019aa0 <__assert_func>
 800bb6c:	1c51      	adds	r1, r2, #1
 800bb6e:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800bb72:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800bb76:	cb03      	ldmia	r3!, {r0, r1}
 800bb78:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800bb7c:	6069      	str	r1, [r5, #4]
 800bb7e:	b003      	add	sp, #12
 800bb80:	bd30      	pop	{r4, r5, pc}
 800bb82:	bf00      	nop
 800bb84:	0801c9c0 	.word	0x0801c9c0
 800bb88:	0801caa0 	.word	0x0801caa0
 800bb8c:	0801c9ef 	.word	0x0801c9ef

0800bb90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800bb90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bb94:	b089      	sub	sp, #36	; 0x24
 800bb96:	466c      	mov	r4, sp
 800bb98:	4606      	mov	r6, r0
 800bb9a:	4620      	mov	r0, r4
 800bb9c:	e884 0006 	stmia.w	r4, {r1, r2}
 800bba0:	f7fd fb59 	bl	8009256 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bba4:	bbb0      	cbnz	r0, 800bc14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800bba6:	f8b6 50e8 	ldrh.w	r5, [r6, #232]	; 0xe8
 800bbaa:	b1fd      	cbz	r5, 800bbec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c>
 800bbac:	3d01      	subs	r5, #1
 800bbae:	af04      	add	r7, sp, #16
 800bbb0:	f04f 090a 	mov.w	r9, #10
 800bbb4:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
 800bbb8:	ab02      	add	r3, sp, #8
 800bbba:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800bbbe:	6851      	ldr	r1, [r2, #4]
 800bbc0:	c303      	stmia	r3!, {r0, r1}
 800bbc2:	4621      	mov	r1, r4
 800bbc4:	a802      	add	r0, sp, #8
 800bbc6:	fa1f f885 	uxth.w	r8, r5
 800bbca:	f7ff fed5 	bl	800b978 <_ZNK8touchgfx4Rect8includesERKS0_>
 800bbce:	bb08      	cbnz	r0, 800bc14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800bbd0:	a902      	add	r1, sp, #8
 800bbd2:	4620      	mov	r0, r4
 800bbd4:	f7ff fed0 	bl	800b978 <_ZNK8touchgfx4Rect8includesERKS0_>
 800bbd8:	b1f8      	cbz	r0, 800bc1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x8a>
 800bbda:	4642      	mov	r2, r8
 800bbdc:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800bbe0:	a806      	add	r0, sp, #24
 800bbe2:	f7ff ff95 	bl	800bb10 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800bbe6:	f115 35ff 	adds.w	r5, r5, #4294967295	; 0xffffffff
 800bbea:	d2e3      	bcs.n	800bbb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24>
 800bbec:	f8b6 30e8 	ldrh.w	r3, [r6, #232]	; 0xe8
 800bbf0:	2b08      	cmp	r3, #8
 800bbf2:	f106 05a8 	add.w	r5, r6, #168	; 0xa8
 800bbf6:	d108      	bne.n	800bc0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800bbf8:	4629      	mov	r1, r5
 800bbfa:	a806      	add	r0, sp, #24
 800bbfc:	2207      	movs	r2, #7
 800bbfe:	f7ff ff87 	bl	800bb10 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800bc02:	a906      	add	r1, sp, #24
 800bc04:	4620      	mov	r0, r4
 800bc06:	f7ff fed9 	bl	800b9bc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800bc0a:	e894 0006 	ldmia.w	r4, {r1, r2}
 800bc0e:	4628      	mov	r0, r5
 800bc10:	f7ff ff9c 	bl	800bb4c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800bc14:	b009      	add	sp, #36	; 0x24
 800bc16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bc1a:	4621      	mov	r1, r4
 800bc1c:	a802      	add	r0, sp, #8
 800bc1e:	f7ff fe89 	bl	800b934 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800bc22:	b150      	cbz	r0, 800bc3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xaa>
 800bc24:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800bc28:	a806      	add	r0, sp, #24
 800bc2a:	4642      	mov	r2, r8
 800bc2c:	f7ff ff70 	bl	800bb10 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800bc30:	a902      	add	r1, sp, #8
 800bc32:	4620      	mov	r0, r4
 800bc34:	f7ff fec2 	bl	800b9bc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800bc38:	e7d5      	b.n	800bbe6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800bc3a:	e894 0003 	ldmia.w	r4, {r0, r1}
 800bc3e:	e887 0003 	stmia.w	r7, {r0, r1}
 800bc42:	a902      	add	r1, sp, #8
 800bc44:	4638      	mov	r0, r7
 800bc46:	f7ff feb9 	bl	800b9bc <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800bc4a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800bc4e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800bc52:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 800bc56:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800bc5a:	fb13 f302 	smulbb	r3, r3, r2
 800bc5e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800bc62:	fb11 f102 	smulbb	r1, r1, r2
 800bc66:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800bc6a:	fb12 1100 	smlabb	r1, r2, r0, r1
 800bc6e:	220b      	movs	r2, #11
 800bc70:	fb09 f303 	mul.w	r3, r9, r3
 800bc74:	434a      	muls	r2, r1
 800bc76:	4293      	cmp	r3, r2
 800bc78:	dab5      	bge.n	800bbe6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800bc7a:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800bc7e:	a806      	add	r0, sp, #24
 800bc80:	4642      	mov	r2, r8
 800bc82:	f7ff ff45 	bl	800bb10 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800bc86:	e897 0003 	ldmia.w	r7, {r0, r1}
 800bc8a:	e884 0003 	stmia.w	r4, {r0, r1}
 800bc8e:	e7aa      	b.n	800bbe6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>

0800bc90 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800bc90:	b530      	push	{r4, r5, lr}
 800bc92:	4b1d      	ldr	r3, [pc, #116]	; (800bd08 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800bc94:	b085      	sub	sp, #20
 800bc96:	460c      	mov	r4, r1
 800bc98:	f9b3 2000 	ldrsh.w	r2, [r3]
 800bc9c:	4b1b      	ldr	r3, [pc, #108]	; (800bd0c <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800bc9e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800bca2:	2100      	movs	r1, #0
 800bca4:	f9b3 3000 	ldrsh.w	r3, [r3]
 800bca8:	9100      	str	r1, [sp, #0]
 800bcaa:	4605      	mov	r5, r0
 800bcac:	6861      	ldr	r1, [r4, #4]
 800bcae:	6820      	ldr	r0, [r4, #0]
 800bcb0:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bcb4:	ab02      	add	r3, sp, #8
 800bcb6:	c303      	stmia	r3!, {r0, r1}
 800bcb8:	4669      	mov	r1, sp
 800bcba:	a802      	add	r0, sp, #8
 800bcbc:	f7fd fa88 	bl	80091d0 <_ZN8touchgfx4RectaNERKS0_>
 800bcc0:	ab02      	add	r3, sp, #8
 800bcc2:	cb03      	ldmia	r3!, {r0, r1}
 800bcc4:	4b12      	ldr	r3, [pc, #72]	; (800bd10 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800bcc6:	6020      	str	r0, [r4, #0]
 800bcc8:	6818      	ldr	r0, [r3, #0]
 800bcca:	6061      	str	r1, [r4, #4]
 800bccc:	b138      	cbz	r0, 800bcde <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800bcce:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800bcd2:	b133      	cbz	r3, 800bce2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800bcd4:	6821      	ldr	r1, [r4, #0]
 800bcd6:	6862      	ldr	r2, [r4, #4]
 800bcd8:	4628      	mov	r0, r5
 800bcda:	f7ff ff59 	bl	800bb90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800bcde:	b005      	add	sp, #20
 800bce0:	bd30      	pop	{r4, r5, pc}
 800bce2:	6803      	ldr	r3, [r0, #0]
 800bce4:	4621      	mov	r1, r4
 800bce6:	689b      	ldr	r3, [r3, #8]
 800bce8:	4798      	blx	r3
 800bcea:	4b0a      	ldr	r3, [pc, #40]	; (800bd14 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800bcec:	6818      	ldr	r0, [r3, #0]
 800bcee:	b118      	cbz	r0, 800bcf8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800bcf0:	6803      	ldr	r3, [r0, #0]
 800bcf2:	4621      	mov	r1, r4
 800bcf4:	689b      	ldr	r3, [r3, #8]
 800bcf6:	4798      	blx	r3
 800bcf8:	4b07      	ldr	r3, [pc, #28]	; (800bd18 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800bcfa:	6818      	ldr	r0, [r3, #0]
 800bcfc:	6803      	ldr	r3, [r0, #0]
 800bcfe:	4621      	mov	r1, r4
 800bd00:	695b      	ldr	r3, [r3, #20]
 800bd02:	4798      	blx	r3
 800bd04:	e7eb      	b.n	800bcde <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800bd06:	bf00      	nop
 800bd08:	20012170 	.word	0x20012170
 800bd0c:	20012172 	.word	0x20012172
 800bd10:	200121d8 	.word	0x200121d8
 800bd14:	200121d4 	.word	0x200121d4
 800bd18:	2001217c 	.word	0x2001217c

0800bd1c <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800bd1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd20:	4604      	mov	r4, r0
 800bd22:	b09b      	sub	sp, #108	; 0x6c
 800bd24:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800bd28:	b129      	cbz	r1, 800bd36 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800bd2a:	2300      	movs	r3, #0
 800bd2c:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800bd30:	b01b      	add	sp, #108	; 0x6c
 800bd32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd36:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800bd3a:	4630      	mov	r0, r6
 800bd3c:	f7fd fa8b 	bl	8009256 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bd40:	4605      	mov	r5, r0
 800bd42:	b940      	cbnz	r0, 800bd56 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800bd44:	e896 0006 	ldmia.w	r6, {r1, r2}
 800bd48:	4620      	mov	r0, r4
 800bd4a:	f7ff ff21 	bl	800bb90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800bd4e:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800bd52:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800bd56:	4b92      	ldr	r3, [pc, #584]	; (800bfa0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x284>)
 800bd58:	681b      	ldr	r3, [r3, #0]
 800bd5a:	b33b      	cbz	r3, 800bdac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800bd5c:	4d91      	ldr	r5, [pc, #580]	; (800bfa4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x288>)
 800bd5e:	4628      	mov	r0, r5
 800bd60:	f7fd fa79 	bl	8009256 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bd64:	4606      	mov	r6, r0
 800bd66:	bb08      	cbnz	r0, 800bdac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800bd68:	4628      	mov	r0, r5
 800bd6a:	f7ff fc7f 	bl	800b66c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800bd6e:	6829      	ldr	r1, [r5, #0]
 800bd70:	686a      	ldr	r2, [r5, #4]
 800bd72:	4620      	mov	r0, r4
 800bd74:	f7ff ff0c 	bl	800bb90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800bd78:	802e      	strh	r6, [r5, #0]
 800bd7a:	806e      	strh	r6, [r5, #2]
 800bd7c:	80ae      	strh	r6, [r5, #4]
 800bd7e:	80ee      	strh	r6, [r5, #6]
 800bd80:	4f89      	ldr	r7, [pc, #548]	; (800bfa8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x28c>)
 800bd82:	a809      	add	r0, sp, #36	; 0x24
 800bd84:	f7ff fe71 	bl	800ba6a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800bd88:	883d      	ldrh	r5, [r7, #0]
 800bd8a:	462e      	mov	r6, r5
 800bd8c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800bd90:	42b3      	cmp	r3, r6
 800bd92:	d910      	bls.n	800bdb6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800bd94:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800bd98:	a809      	add	r0, sp, #36	; 0x24
 800bd9a:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800bd9e:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800bda2:	3601      	adds	r6, #1
 800bda4:	f7ff fed2 	bl	800bb4c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800bda8:	b2b6      	uxth	r6, r6
 800bdaa:	e7ef      	b.n	800bd8c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800bdac:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800bdb0:	2b00      	cmp	r3, #0
 800bdb2:	d1e5      	bne.n	800bd80 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800bdb4:	e7bc      	b.n	800bd30 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800bdb6:	462e      	mov	r6, r5
 800bdb8:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800bdbc:	42b3      	cmp	r3, r6
 800bdbe:	d90b      	bls.n	800bdd8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800bdc0:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800bdc4:	4620      	mov	r0, r4
 800bdc6:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800bdca:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800bdce:	3601      	adds	r6, #1
 800bdd0:	f7ff fede 	bl	800bb90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800bdd4:	b2b6      	uxth	r6, r6
 800bdd6:	e7ef      	b.n	800bdb8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800bdd8:	4a74      	ldr	r2, [pc, #464]	; (800bfac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x290>)
 800bdda:	6813      	ldr	r3, [r2, #0]
 800bddc:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800bde0:	2b01      	cmp	r3, #1
 800bde2:	4690      	mov	r8, r2
 800bde4:	f040 8094 	bne.w	800bf10 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 800bde8:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800bdec:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800bdf0:	33aa      	adds	r3, #170	; 0xaa
 800bdf2:	f04f 0900 	mov.w	r9, #0
 800bdf6:	42a8      	cmp	r0, r5
 800bdf8:	f103 0308 	add.w	r3, r3, #8
 800bdfc:	dd0a      	ble.n	800be14 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800bdfe:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800be02:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800be06:	440a      	add	r2, r1
 800be08:	b212      	sxth	r2, r2
 800be0a:	4591      	cmp	r9, r2
 800be0c:	bfb8      	it	lt
 800be0e:	4691      	movlt	r9, r2
 800be10:	3501      	adds	r5, #1
 800be12:	e7f0      	b.n	800bdf6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800be14:	4b66      	ldr	r3, [pc, #408]	; (800bfb0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x294>)
 800be16:	4e67      	ldr	r6, [pc, #412]	; (800bfb4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x298>)
 800be18:	881d      	ldrh	r5, [r3, #0]
 800be1a:	2300      	movs	r3, #0
 800be1c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800be20:	2d0f      	cmp	r5, #15
 800be22:	bf8c      	ite	hi
 800be24:	08ed      	lsrhi	r5, r5, #3
 800be26:	2501      	movls	r5, #1
 800be28:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800be2c:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800be30:	f8d8 0000 	ldr.w	r0, [r8]
 800be34:	440b      	add	r3, r1
 800be36:	b21b      	sxth	r3, r3
 800be38:	4599      	cmp	r9, r3
 800be3a:	6802      	ldr	r2, [r0, #0]
 800be3c:	dd4b      	ble.n	800bed6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 800be3e:	f8d2 3084 	ldr.w	r3, [r2, #132]	; 0x84
 800be42:	4798      	blx	r3
 800be44:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800be48:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800be4c:	4413      	add	r3, r2
 800be4e:	b21b      	sxth	r3, r3
 800be50:	195a      	adds	r2, r3, r5
 800be52:	4290      	cmp	r0, r2
 800be54:	da07      	bge.n	800be66 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800be56:	4581      	cmp	r9, r0
 800be58:	dd05      	ble.n	800be66 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800be5a:	4298      	cmp	r0, r3
 800be5c:	da33      	bge.n	800bec6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800be5e:	2b00      	cmp	r3, #0
 800be60:	dd31      	ble.n	800bec6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800be62:	4648      	mov	r0, r9
 800be64:	e004      	b.n	800be70 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800be66:	4298      	cmp	r0, r3
 800be68:	dbfb      	blt.n	800be62 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800be6a:	4548      	cmp	r0, r9
 800be6c:	bfa8      	it	ge
 800be6e:	4648      	movge	r0, r9
 800be70:	f9b6 2000 	ldrsh.w	r2, [r6]
 800be74:	f8b7 a000 	ldrh.w	sl, [r7]
 800be78:	f8ad 3016 	strh.w	r3, [sp, #22]
 800be7c:	2100      	movs	r1, #0
 800be7e:	1ac0      	subs	r0, r0, r3
 800be80:	f8ad 1014 	strh.w	r1, [sp, #20]
 800be84:	f8ad 2018 	strh.w	r2, [sp, #24]
 800be88:	f8ad 001a 	strh.w	r0, [sp, #26]
 800be8c:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800be90:	4553      	cmp	r3, sl
 800be92:	d9c9      	bls.n	800be28 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800be94:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800be98:	ab07      	add	r3, sp, #28
 800be9a:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800be9e:	6851      	ldr	r1, [r2, #4]
 800bea0:	c303      	stmia	r3!, {r0, r1}
 800bea2:	a807      	add	r0, sp, #28
 800bea4:	a905      	add	r1, sp, #20
 800bea6:	f7fd f993 	bl	80091d0 <_ZN8touchgfx4RectaNERKS0_>
 800beaa:	a807      	add	r0, sp, #28
 800beac:	f7fd f9d3 	bl	8009256 <_ZNK8touchgfx4Rect7isEmptyEv>
 800beb0:	b920      	cbnz	r0, 800bebc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800beb2:	6823      	ldr	r3, [r4, #0]
 800beb4:	a907      	add	r1, sp, #28
 800beb6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800beb8:	4620      	mov	r0, r4
 800beba:	4798      	blx	r3
 800bebc:	f10a 0a01 	add.w	sl, sl, #1
 800bec0:	fa1f fa8a 	uxth.w	sl, sl
 800bec4:	e7e2      	b.n	800be8c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800bec6:	f8d8 0000 	ldr.w	r0, [r8]
 800beca:	6803      	ldr	r3, [r0, #0]
 800becc:	2101      	movs	r1, #1
 800bece:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800bed2:	4798      	blx	r3
 800bed4:	e7a8      	b.n	800be28 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800bed6:	69d3      	ldr	r3, [r2, #28]
 800bed8:	4798      	blx	r3
 800beda:	4b37      	ldr	r3, [pc, #220]	; (800bfb8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x29c>)
 800bedc:	781b      	ldrb	r3, [r3, #0]
 800bede:	2b00      	cmp	r3, #0
 800bee0:	f43f af26 	beq.w	800bd30 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800bee4:	2300      	movs	r3, #0
 800bee6:	883d      	ldrh	r5, [r7, #0]
 800bee8:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800beec:	34ea      	adds	r4, #234	; 0xea
 800beee:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800bef2:	42ab      	cmp	r3, r5
 800bef4:	f67f af1c 	bls.w	800bd30 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800bef8:	ab1a      	add	r3, sp, #104	; 0x68
 800befa:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800befe:	3b44      	subs	r3, #68	; 0x44
 800bf00:	e893 0006 	ldmia.w	r3, {r1, r2}
 800bf04:	4620      	mov	r0, r4
 800bf06:	3501      	adds	r5, #1
 800bf08:	f7ff fe20 	bl	800bb4c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800bf0c:	b2ad      	uxth	r5, r5
 800bf0e:	e7ee      	b.n	800beee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 800bf10:	2b02      	cmp	r3, #2
 800bf12:	f040 813d 	bne.w	800c190 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x474>
 800bf16:	4b29      	ldr	r3, [pc, #164]	; (800bfbc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a0>)
 800bf18:	781b      	ldrb	r3, [r3, #0]
 800bf1a:	2b01      	cmp	r3, #1
 800bf1c:	f000 809d 	beq.w	800c05a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800bf20:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800bf24:	883a      	ldrh	r2, [r7, #0]
 800bf26:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800bf2a:	3201      	adds	r2, #1
 800bf2c:	b292      	uxth	r2, r2
 800bf2e:	2900      	cmp	r1, #0
 800bf30:	d0d3      	beq.n	800beda <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800bf32:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800bf36:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800bf3a:	441d      	add	r5, r3
 800bf3c:	b22d      	sxth	r5, r5
 800bf3e:	4610      	mov	r0, r2
 800bf40:	f04f 0a00 	mov.w	sl, #0
 800bf44:	b283      	uxth	r3, r0
 800bf46:	4299      	cmp	r1, r3
 800bf48:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800bf4c:	f240 80c3 	bls.w	800c0d6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3ba>
 800bf50:	4426      	add	r6, r4
 800bf52:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800bf56:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800bf5a:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800bf5e:	4573      	cmp	r3, lr
 800bf60:	4684      	mov	ip, r0
 800bf62:	f340 80a5 	ble.w	800c0b0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x394>
 800bf66:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800bf6a:	4475      	add	r5, lr
 800bf6c:	b22d      	sxth	r5, r5
 800bf6e:	429d      	cmp	r5, r3
 800bf70:	bfa8      	it	ge
 800bf72:	461d      	movge	r5, r3
 800bf74:	3001      	adds	r0, #1
 800bf76:	46e2      	mov	sl, ip
 800bf78:	e7e4      	b.n	800bf44 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x228>
 800bf7a:	d10b      	bne.n	800bf94 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x278>
 800bf7c:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800bf80:	f9b9 10ae 	ldrsh.w	r1, [r9, #174]	; 0xae
 800bf84:	458c      	cmp	ip, r1
 800bf86:	bfb4      	ite	lt
 800bf88:	469c      	movlt	ip, r3
 800bf8a:	46b4      	movge	ip, r6
 800bf8c:	4572      	cmp	r2, lr
 800bf8e:	bfb8      	it	lt
 800bf90:	4672      	movlt	r2, lr
 800bf92:	e08a      	b.n	800c0aa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x38e>
 800bf94:	428a      	cmp	r2, r1
 800bf96:	bfb8      	it	lt
 800bf98:	460a      	movlt	r2, r1
 800bf9a:	46b4      	mov	ip, r6
 800bf9c:	e085      	b.n	800c0aa <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x38e>
 800bf9e:	bf00      	nop
 800bfa0:	200121d4 	.word	0x200121d4
 800bfa4:	200121e0 	.word	0x200121e0
 800bfa8:	20000084 	.word	0x20000084
 800bfac:	2001217c 	.word	0x2001217c
 800bfb0:	20012172 	.word	0x20012172
 800bfb4:	20012170 	.word	0x20012170
 800bfb8:	2001217a 	.word	0x2001217a
 800bfbc:	20012174 	.word	0x20012174
 800bfc0:	1961      	adds	r1, r4, r5
 800bfc2:	ab05      	add	r3, sp, #20
 800bfc4:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800bfc8:	6849      	ldr	r1, [r1, #4]
 800bfca:	c303      	stmia	r3!, {r0, r1}
 800bfcc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800bfd0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800bfd4:	2b13      	cmp	r3, #19
 800bfd6:	bfd8      	it	le
 800bfd8:	f9bd 2014 	ldrshle.w	r2, [sp, #20]
 800bfdc:	f8ad 2014 	strh.w	r2, [sp, #20]
 800bfe0:	440b      	add	r3, r1
 800bfe2:	1a9b      	subs	r3, r3, r2
 800bfe4:	a805      	add	r0, sp, #20
 800bfe6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bfea:	f7ff fb99 	bl	800b720 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800bfee:	a805      	add	r0, sp, #20
 800bff0:	f7fd f931 	bl	8009256 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bff4:	bb88      	cbnz	r0, 800c05a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800bff6:	f9bd c01a 	ldrsh.w	ip, [sp, #26]
 800bffa:	f8d8 0000 	ldr.w	r0, [r8]
 800bffe:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800c002:	f8d0 e000 	ldr.w	lr, [r0]
 800c006:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800c00a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800c00e:	f1bc 0f14 	cmp.w	ip, #20
 800c012:	bfa8      	it	ge
 800c014:	f04f 0c14 	movge.w	ip, #20
 800c018:	fa1f fc8c 	uxth.w	ip, ip
 800c01c:	f8cd c000 	str.w	ip, [sp]
 800c020:	f8de 9078 	ldr.w	r9, [lr, #120]	; 0x78
 800c024:	47c8      	blx	r9
 800c026:	4681      	mov	r9, r0
 800c028:	f8ad 001a 	strh.w	r0, [sp, #26]
 800c02c:	a805      	add	r0, sp, #20
 800c02e:	f7ff fb1d 	bl	800b66c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800c032:	6823      	ldr	r3, [r4, #0]
 800c034:	4425      	add	r5, r4
 800c036:	4620      	mov	r0, r4
 800c038:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c03a:	a905      	add	r1, sp, #20
 800c03c:	4798      	blx	r3
 800c03e:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800c042:	eba0 0009 	sub.w	r0, r0, r9
 800c046:	b200      	sxth	r0, r0
 800c048:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800c04c:	b928      	cbnz	r0, 800c05a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x33e>
 800c04e:	b2b2      	uxth	r2, r6
 800c050:	f104 01a8 	add.w	r1, r4, #168	; 0xa8
 800c054:	a807      	add	r0, sp, #28
 800c056:	f7ff fd5b 	bl	800bb10 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c05a:	f8b4 a0e8 	ldrh.w	sl, [r4, #232]	; 0xe8
 800c05e:	f1ba 0f00 	cmp.w	sl, #0
 800c062:	f43f af3a 	beq.w	800beda <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800c066:	883b      	ldrh	r3, [r7, #0]
 800c068:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800c06c:	3301      	adds	r3, #1
 800c06e:	b29b      	uxth	r3, r3
 800c070:	2600      	movs	r6, #0
 800c072:	b299      	uxth	r1, r3
 800c074:	458a      	cmp	sl, r1
 800c076:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800c07a:	d9a1      	bls.n	800bfc0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a4>
 800c07c:	4425      	add	r5, r4
 800c07e:	eb04 09c3 	add.w	r9, r4, r3, lsl #3
 800c082:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800c086:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800c08a:	f9b9 e0a8 	ldrsh.w	lr, [r9, #168]	; 0xa8
 800c08e:	4408      	add	r0, r1
 800c090:	f8b9 10ac 	ldrh.w	r1, [r9, #172]	; 0xac
 800c094:	4471      	add	r1, lr
 800c096:	b200      	sxth	r0, r0
 800c098:	b209      	sxth	r1, r1
 800c09a:	4288      	cmp	r0, r1
 800c09c:	469c      	mov	ip, r3
 800c09e:	f6bf af6c 	bge.w	800bf7a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 800c0a2:	4586      	cmp	lr, r0
 800c0a4:	4672      	mov	r2, lr
 800c0a6:	bfb8      	it	lt
 800c0a8:	4602      	movlt	r2, r0
 800c0aa:	3301      	adds	r3, #1
 800c0ac:	4666      	mov	r6, ip
 800c0ae:	e7e0      	b.n	800c072 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x356>
 800c0b0:	d10c      	bne.n	800c0cc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b0>
 800c0b2:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800c0b6:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800c0ba:	45b4      	cmp	ip, r6
 800c0bc:	bfb4      	ite	lt
 800c0be:	4684      	movlt	ip, r0
 800c0c0:	46d4      	movge	ip, sl
 800c0c2:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800c0c6:	4433      	add	r3, r6
 800c0c8:	b21b      	sxth	r3, r3
 800c0ca:	e750      	b.n	800bf6e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x252>
 800c0cc:	4575      	cmp	r5, lr
 800c0ce:	bfa8      	it	ge
 800c0d0:	4675      	movge	r5, lr
 800c0d2:	46d4      	mov	ip, sl
 800c0d4:	e74e      	b.n	800bf74 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x258>
 800c0d6:	eb0b 0006 	add.w	r0, fp, r6
 800c0da:	4426      	add	r6, r4
 800c0dc:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800c0e0:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800c0e4:	f1b9 0f13 	cmp.w	r9, #19
 800c0e8:	bfde      	ittt	le
 800c0ea:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800c0ee:	444d      	addle	r5, r9
 800c0f0:	b22d      	sxthle	r5, r5
 800c0f2:	f7fd f8b0 	bl	8009256 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c0f6:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c0fa:	2800      	cmp	r0, #0
 800c0fc:	f47f af17 	bne.w	800bf2e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x212>
 800c100:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800c104:	f8ad 001a 	strh.w	r0, [sp, #26]
 800c108:	eba5 050c 	sub.w	r5, r5, ip
 800c10c:	fa1f f28c 	uxth.w	r2, ip
 800c110:	fa1f f989 	uxth.w	r9, r9
 800c114:	eb02 0009 	add.w	r0, r2, r9
 800c118:	2d14      	cmp	r5, #20
 800c11a:	bfa8      	it	ge
 800c11c:	2514      	movge	r5, #20
 800c11e:	b200      	sxth	r0, r0
 800c120:	fa1f fe85 	uxth.w	lr, r5
 800c124:	eba0 000c 	sub.w	r0, r0, ip
 800c128:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800c12c:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800c130:	f8ad 1014 	strh.w	r1, [sp, #20]
 800c134:	4586      	cmp	lr, r0
 800c136:	f8d8 0000 	ldr.w	r0, [r8]
 800c13a:	f8ad c016 	strh.w	ip, [sp, #22]
 800c13e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c142:	bfb8      	it	lt
 800c144:	46f1      	movlt	r9, lr
 800c146:	6805      	ldr	r5, [r0, #0]
 800c148:	f8cd 9000 	str.w	r9, [sp]
 800c14c:	b29b      	uxth	r3, r3
 800c14e:	b289      	uxth	r1, r1
 800c150:	6fad      	ldr	r5, [r5, #120]	; 0x78
 800c152:	47a8      	blx	r5
 800c154:	6823      	ldr	r3, [r4, #0]
 800c156:	f8ad 001a 	strh.w	r0, [sp, #26]
 800c15a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c15c:	a905      	add	r1, sp, #20
 800c15e:	4620      	mov	r0, r4
 800c160:	4798      	blx	r3
 800c162:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800c166:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800c16a:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800c16e:	1a5b      	subs	r3, r3, r1
 800c170:	440a      	add	r2, r1
 800c172:	b21b      	sxth	r3, r3
 800c174:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800c178:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800c17c:	2b00      	cmp	r3, #0
 800c17e:	f47f aed1 	bne.w	800bf24 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x208>
 800c182:	fa1f f28a 	uxth.w	r2, sl
 800c186:	4659      	mov	r1, fp
 800c188:	a807      	add	r0, sp, #28
 800c18a:	f7ff fcc1 	bl	800bb10 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800c18e:	e6c9      	b.n	800bf24 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x208>
 800c190:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800c194:	42ab      	cmp	r3, r5
 800c196:	f67f aea0 	bls.w	800beda <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800c19a:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800c19e:	ab07      	add	r3, sp, #28
 800c1a0:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800c1a4:	6851      	ldr	r1, [r2, #4]
 800c1a6:	c303      	stmia	r3!, {r0, r1}
 800c1a8:	a807      	add	r0, sp, #28
 800c1aa:	f7fd f854 	bl	8009256 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c1ae:	b920      	cbnz	r0, 800c1ba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x49e>
 800c1b0:	6823      	ldr	r3, [r4, #0]
 800c1b2:	a907      	add	r1, sp, #28
 800c1b4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c1b6:	4620      	mov	r0, r4
 800c1b8:	4798      	blx	r3
 800c1ba:	3501      	adds	r5, #1
 800c1bc:	b2ad      	uxth	r5, r5
 800c1be:	e7e7      	b.n	800c190 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x474>

0800c1c0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800c1c0:	4b03      	ldr	r3, [pc, #12]	; (800c1d0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800c1c2:	2200      	movs	r2, #0
 800c1c4:	801a      	strh	r2, [r3, #0]
 800c1c6:	805a      	strh	r2, [r3, #2]
 800c1c8:	809a      	strh	r2, [r3, #4]
 800c1ca:	80da      	strh	r2, [r3, #6]
 800c1cc:	4770      	bx	lr
 800c1ce:	bf00      	nop
 800c1d0:	200121e0 	.word	0x200121e0

0800c1d4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800c1d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c1d8:	4607      	mov	r7, r0
 800c1da:	b099      	sub	sp, #100	; 0x64
 800c1dc:	a802      	add	r0, sp, #8
 800c1de:	4614      	mov	r4, r2
 800c1e0:	461d      	mov	r5, r3
 800c1e2:	468a      	mov	sl, r1
 800c1e4:	f000 fdc2 	bl	800cd6c <_ZN8touchgfx12TextProviderC1Ev>
 800c1e8:	683b      	ldr	r3, [r7, #0]
 800c1ea:	4638      	mov	r0, r7
 800c1ec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c1ee:	4798      	blx	r3
 800c1f0:	462a      	mov	r2, r5
 800c1f2:	4603      	mov	r3, r0
 800c1f4:	4621      	mov	r1, r4
 800c1f6:	a802      	add	r0, sp, #8
 800c1f8:	f000 fdfd 	bl	800cdf6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c1fc:	2500      	movs	r5, #0
 800c1fe:	462c      	mov	r4, r5
 800c200:	46a9      	mov	r9, r5
 800c202:	46a8      	mov	r8, r5
 800c204:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800c208:	2300      	movs	r3, #0
 800c20a:	9301      	str	r3, [sp, #4]
 800c20c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c210:	429c      	cmp	r4, r3
 800c212:	d002      	beq.n	800c21a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x46>
 800c214:	455c      	cmp	r4, fp
 800c216:	bf18      	it	ne
 800c218:	4625      	movne	r5, r4
 800c21a:	ab01      	add	r3, sp, #4
 800c21c:	463a      	mov	r2, r7
 800c21e:	4651      	mov	r1, sl
 800c220:	a802      	add	r0, sp, #8
 800c222:	f001 f8e1 	bl	800d3e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c226:	4604      	mov	r4, r0
 800c228:	b108      	cbz	r0, 800c22e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5a>
 800c22a:	280a      	cmp	r0, #10
 800c22c:	d10a      	bne.n	800c244 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>
 800c22e:	45c1      	cmp	r9, r8
 800c230:	bf38      	it	cc
 800c232:	46c1      	movcc	r9, r8
 800c234:	f04f 0800 	mov.w	r8, #0
 800c238:	2c00      	cmp	r4, #0
 800c23a:	d1e5      	bne.n	800c208 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800c23c:	4648      	mov	r0, r9
 800c23e:	b019      	add	sp, #100	; 0x64
 800c240:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c244:	9a01      	ldr	r2, [sp, #4]
 800c246:	2a00      	cmp	r2, #0
 800c248:	d0de      	beq.n	800c208 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 800c24a:	7b56      	ldrb	r6, [r2, #13]
 800c24c:	683b      	ldr	r3, [r7, #0]
 800c24e:	8894      	ldrh	r4, [r2, #4]
 800c250:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c252:	0076      	lsls	r6, r6, #1
 800c254:	f406 7080 	and.w	r0, r6, #256	; 0x100
 800c258:	7a96      	ldrb	r6, [r2, #10]
 800c25a:	4629      	mov	r1, r5
 800c25c:	4306      	orrs	r6, r0
 800c25e:	4638      	mov	r0, r7
 800c260:	4798      	blx	r3
 800c262:	4430      	add	r0, r6
 800c264:	4480      	add	r8, r0
 800c266:	fa1f f888 	uxth.w	r8, r8
 800c26a:	e7e5      	b.n	800c238 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x64>

0800c26c <_ZNK8touchgfx4Font12getCharWidthEt>:
 800c26c:	b508      	push	{r3, lr}
 800c26e:	6803      	ldr	r3, [r0, #0]
 800c270:	68db      	ldr	r3, [r3, #12]
 800c272:	4798      	blx	r3
 800c274:	b128      	cbz	r0, 800c282 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800c276:	7b43      	ldrb	r3, [r0, #13]
 800c278:	7a80      	ldrb	r0, [r0, #10]
 800c27a:	005b      	lsls	r3, r3, #1
 800c27c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c280:	4318      	orrs	r0, r3
 800c282:	bd08      	pop	{r3, pc}

0800c284 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800c284:	b40e      	push	{r1, r2, r3}
 800c286:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c288:	b098      	sub	sp, #96	; 0x60
 800c28a:	ab1d      	add	r3, sp, #116	; 0x74
 800c28c:	4605      	mov	r5, r0
 800c28e:	f853 4b04 	ldr.w	r4, [r3], #4
 800c292:	9300      	str	r3, [sp, #0]
 800c294:	a802      	add	r0, sp, #8
 800c296:	f000 fd69 	bl	800cd6c <_ZN8touchgfx12TextProviderC1Ev>
 800c29a:	682b      	ldr	r3, [r5, #0]
 800c29c:	4628      	mov	r0, r5
 800c29e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c2a0:	4798      	blx	r3
 800c2a2:	ae18      	add	r6, sp, #96	; 0x60
 800c2a4:	4603      	mov	r3, r0
 800c2a6:	4621      	mov	r1, r4
 800c2a8:	9a00      	ldr	r2, [sp, #0]
 800c2aa:	2400      	movs	r4, #0
 800c2ac:	a802      	add	r0, sp, #8
 800c2ae:	f000 fda2 	bl	800cdf6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c2b2:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800c2b6:	462a      	mov	r2, r5
 800c2b8:	4633      	mov	r3, r6
 800c2ba:	4621      	mov	r1, r4
 800c2bc:	a802      	add	r0, sp, #8
 800c2be:	f001 f893 	bl	800d3e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c2c2:	b1f0      	cbz	r0, 800c302 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7e>
 800c2c4:	280a      	cmp	r0, #10
 800c2c6:	d018      	beq.n	800c2fa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800c2c8:	9f01      	ldr	r7, [sp, #4]
 800c2ca:	b1b7      	cbz	r7, 800c2fa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x76>
 800c2cc:	7b78      	ldrb	r0, [r7, #13]
 800c2ce:	7a3b      	ldrb	r3, [r7, #8]
 800c2d0:	88aa      	ldrh	r2, [r5, #4]
 800c2d2:	00c1      	lsls	r1, r0, #3
 800c2d4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800c2d8:	4319      	orrs	r1, r3
 800c2da:	0643      	lsls	r3, r0, #25
 800c2dc:	bf44      	itt	mi
 800c2de:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800c2e2:	b219      	sxthmi	r1, r3
 800c2e4:	0100      	lsls	r0, r0, #4
 800c2e6:	79fb      	ldrb	r3, [r7, #7]
 800c2e8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800c2ec:	4303      	orrs	r3, r0
 800c2ee:	4413      	add	r3, r2
 800c2f0:	1a5b      	subs	r3, r3, r1
 800c2f2:	b29b      	uxth	r3, r3
 800c2f4:	42a3      	cmp	r3, r4
 800c2f6:	bfc8      	it	gt
 800c2f8:	b21c      	sxthgt	r4, r3
 800c2fa:	4633      	mov	r3, r6
 800c2fc:	462a      	mov	r2, r5
 800c2fe:	2100      	movs	r1, #0
 800c300:	e7dc      	b.n	800c2bc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x38>
 800c302:	b2a0      	uxth	r0, r4
 800c304:	b018      	add	sp, #96	; 0x60
 800c306:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c30a:	b003      	add	sp, #12
 800c30c:	4770      	bx	lr

0800c30e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800c30e:	b40e      	push	{r1, r2, r3}
 800c310:	b530      	push	{r4, r5, lr}
 800c312:	b098      	sub	sp, #96	; 0x60
 800c314:	ab1b      	add	r3, sp, #108	; 0x6c
 800c316:	4604      	mov	r4, r0
 800c318:	f853 5b04 	ldr.w	r5, [r3], #4
 800c31c:	9301      	str	r3, [sp, #4]
 800c31e:	a802      	add	r0, sp, #8
 800c320:	f000 fd24 	bl	800cd6c <_ZN8touchgfx12TextProviderC1Ev>
 800c324:	6823      	ldr	r3, [r4, #0]
 800c326:	4620      	mov	r0, r4
 800c328:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c32a:	4798      	blx	r3
 800c32c:	9a01      	ldr	r2, [sp, #4]
 800c32e:	4603      	mov	r3, r0
 800c330:	4629      	mov	r1, r5
 800c332:	a802      	add	r0, sp, #8
 800c334:	f000 fd5f 	bl	800cdf6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c338:	a802      	add	r0, sp, #8
 800c33a:	f001 f94d 	bl	800d5d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c33e:	2401      	movs	r4, #1
 800c340:	b2a3      	uxth	r3, r4
 800c342:	b140      	cbz	r0, 800c356 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800c344:	280a      	cmp	r0, #10
 800c346:	bf08      	it	eq
 800c348:	3301      	addeq	r3, #1
 800c34a:	a802      	add	r0, sp, #8
 800c34c:	bf08      	it	eq
 800c34e:	b21c      	sxtheq	r4, r3
 800c350:	f001 f942 	bl	800d5d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c354:	e7f4      	b.n	800c340 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800c356:	4618      	mov	r0, r3
 800c358:	b018      	add	sp, #96	; 0x60
 800c35a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c35e:	b003      	add	sp, #12
 800c360:	4770      	bx	lr

0800c362 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800c362:	b40e      	push	{r1, r2, r3}
 800c364:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c366:	b098      	sub	sp, #96	; 0x60
 800c368:	ab1d      	add	r3, sp, #116	; 0x74
 800c36a:	4604      	mov	r4, r0
 800c36c:	f853 5b04 	ldr.w	r5, [r3], #4
 800c370:	9300      	str	r3, [sp, #0]
 800c372:	a802      	add	r0, sp, #8
 800c374:	f000 fcfa 	bl	800cd6c <_ZN8touchgfx12TextProviderC1Ev>
 800c378:	6823      	ldr	r3, [r4, #0]
 800c37a:	4620      	mov	r0, r4
 800c37c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c37e:	4798      	blx	r3
 800c380:	4629      	mov	r1, r5
 800c382:	4603      	mov	r3, r0
 800c384:	9a00      	ldr	r2, [sp, #0]
 800c386:	a802      	add	r0, sp, #8
 800c388:	ad18      	add	r5, sp, #96	; 0x60
 800c38a:	f000 fd34 	bl	800cdf6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c38e:	2100      	movs	r1, #0
 800c390:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800c394:	4622      	mov	r2, r4
 800c396:	462b      	mov	r3, r5
 800c398:	a802      	add	r0, sp, #8
 800c39a:	f001 f825 	bl	800d3e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c39e:	26ff      	movs	r6, #255	; 0xff
 800c3a0:	b1d8      	cbz	r0, 800c3da <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800c3a2:	280a      	cmp	r0, #10
 800c3a4:	d012      	beq.n	800c3cc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800c3a6:	9801      	ldr	r0, [sp, #4]
 800c3a8:	b180      	cbz	r0, 800c3cc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 800c3aa:	7b47      	ldrb	r7, [r0, #13]
 800c3ac:	7922      	ldrb	r2, [r4, #4]
 800c3ae:	00fb      	lsls	r3, r7, #3
 800c3b0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800c3b4:	7a03      	ldrb	r3, [r0, #8]
 800c3b6:	430b      	orrs	r3, r1
 800c3b8:	0679      	lsls	r1, r7, #25
 800c3ba:	bf44      	itt	mi
 800c3bc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800c3c0:	b21b      	sxthmi	r3, r3
 800c3c2:	1ad3      	subs	r3, r2, r3
 800c3c4:	b2db      	uxtb	r3, r3
 800c3c6:	429e      	cmp	r6, r3
 800c3c8:	bf28      	it	cs
 800c3ca:	461e      	movcs	r6, r3
 800c3cc:	462b      	mov	r3, r5
 800c3ce:	4622      	mov	r2, r4
 800c3d0:	2100      	movs	r1, #0
 800c3d2:	a802      	add	r0, sp, #8
 800c3d4:	f001 f808 	bl	800d3e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c3d8:	e7e2      	b.n	800c3a0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800c3da:	4630      	mov	r0, r6
 800c3dc:	b018      	add	sp, #96	; 0x60
 800c3de:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c3e2:	b003      	add	sp, #12
 800c3e4:	4770      	bx	lr

0800c3e6 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800c3e6:	b513      	push	{r0, r1, r4, lr}
 800c3e8:	1d01      	adds	r1, r0, #4
 800c3ea:	4603      	mov	r3, r0
 800c3ec:	c903      	ldmia	r1, {r0, r1}
 800c3ee:	466a      	mov	r2, sp
 800c3f0:	e882 0003 	stmia.w	r2, {r0, r1}
 800c3f4:	2100      	movs	r1, #0
 800c3f6:	9100      	str	r1, [sp, #0]
 800c3f8:	6819      	ldr	r1, [r3, #0]
 800c3fa:	4618      	mov	r0, r3
 800c3fc:	690c      	ldr	r4, [r1, #16]
 800c3fe:	4611      	mov	r1, r2
 800c400:	47a0      	blx	r4
 800c402:	b002      	add	sp, #8
 800c404:	bd10      	pop	{r4, pc}

0800c406 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800c406:	b538      	push	{r3, r4, r5, lr}
 800c408:	680b      	ldr	r3, [r1, #0]
 800c40a:	460c      	mov	r4, r1
 800c40c:	68db      	ldr	r3, [r3, #12]
 800c40e:	4605      	mov	r5, r0
 800c410:	4798      	blx	r3
 800c412:	6823      	ldr	r3, [r4, #0]
 800c414:	4620      	mov	r0, r4
 800c416:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c418:	4629      	mov	r1, r5
 800c41a:	4798      	blx	r3
 800c41c:	4628      	mov	r0, r5
 800c41e:	bd38      	pop	{r3, r4, r5, pc}

0800c420 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800c420:	b410      	push	{r4}
 800c422:	880a      	ldrh	r2, [r1, #0]
 800c424:	8884      	ldrh	r4, [r0, #4]
 800c426:	4422      	add	r2, r4
 800c428:	800a      	strh	r2, [r1, #0]
 800c42a:	88c4      	ldrh	r4, [r0, #6]
 800c42c:	884a      	ldrh	r2, [r1, #2]
 800c42e:	4422      	add	r2, r4
 800c430:	804a      	strh	r2, [r1, #2]
 800c432:	6940      	ldr	r0, [r0, #20]
 800c434:	b120      	cbz	r0, 800c440 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800c436:	6803      	ldr	r3, [r0, #0]
 800c438:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c43c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c43e:	4718      	bx	r3
 800c440:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c444:	4770      	bx	lr

0800c446 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800c446:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c448:	460b      	mov	r3, r1
 800c44a:	b085      	sub	sp, #20
 800c44c:	4604      	mov	r4, r0
 800c44e:	b901      	cbnz	r1, 800c452 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800c450:	b1fa      	cbz	r2, 800c492 <_ZN8touchgfx8Drawable12moveRelativeEss+0x4c>
 800c452:	1d27      	adds	r7, r4, #4
 800c454:	e897 0003 	ldmia.w	r7, {r0, r1}
 800c458:	466e      	mov	r6, sp
 800c45a:	e886 0003 	stmia.w	r6, {r0, r1}
 800c45e:	88e1      	ldrh	r1, [r4, #6]
 800c460:	440a      	add	r2, r1
 800c462:	88a1      	ldrh	r1, [r4, #4]
 800c464:	4419      	add	r1, r3
 800c466:	6823      	ldr	r3, [r4, #0]
 800c468:	b209      	sxth	r1, r1
 800c46a:	4620      	mov	r0, r4
 800c46c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c46e:	b212      	sxth	r2, r2
 800c470:	4798      	blx	r3
 800c472:	e897 0003 	ldmia.w	r7, {r0, r1}
 800c476:	ad02      	add	r5, sp, #8
 800c478:	e885 0003 	stmia.w	r5, {r0, r1}
 800c47c:	6960      	ldr	r0, [r4, #20]
 800c47e:	b150      	cbz	r0, 800c496 <_ZN8touchgfx8Drawable12moveRelativeEss+0x50>
 800c480:	6803      	ldr	r3, [r0, #0]
 800c482:	4631      	mov	r1, r6
 800c484:	691b      	ldr	r3, [r3, #16]
 800c486:	4798      	blx	r3
 800c488:	6960      	ldr	r0, [r4, #20]
 800c48a:	6803      	ldr	r3, [r0, #0]
 800c48c:	691b      	ldr	r3, [r3, #16]
 800c48e:	4629      	mov	r1, r5
 800c490:	4798      	blx	r3
 800c492:	b005      	add	sp, #20
 800c494:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c496:	f7ff fad7 	bl	800ba48 <_ZN8touchgfx11Application11getInstanceEv>
 800c49a:	6803      	ldr	r3, [r0, #0]
 800c49c:	4631      	mov	r1, r6
 800c49e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c4a0:	4798      	blx	r3
 800c4a2:	f7ff fad1 	bl	800ba48 <_ZN8touchgfx11Application11getInstanceEv>
 800c4a6:	6803      	ldr	r3, [r0, #0]
 800c4a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c4aa:	e7f0      	b.n	800c48e <_ZN8touchgfx8Drawable12moveRelativeEss+0x48>

0800c4ac <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800c4ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c4ae:	8882      	ldrh	r2, [r0, #4]
 800c4b0:	880b      	ldrh	r3, [r1, #0]
 800c4b2:	4413      	add	r3, r2
 800c4b4:	800b      	strh	r3, [r1, #0]
 800c4b6:	88c2      	ldrh	r2, [r0, #6]
 800c4b8:	884b      	ldrh	r3, [r1, #2]
 800c4ba:	4413      	add	r3, r2
 800c4bc:	4602      	mov	r2, r0
 800c4be:	804b      	strh	r3, [r1, #2]
 800c4c0:	4605      	mov	r5, r0
 800c4c2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800c4c6:	460c      	mov	r4, r1
 800c4c8:	6851      	ldr	r1, [r2, #4]
 800c4ca:	466b      	mov	r3, sp
 800c4cc:	c303      	stmia	r3!, {r0, r1}
 800c4ce:	4621      	mov	r1, r4
 800c4d0:	4668      	mov	r0, sp
 800c4d2:	f7fc fe7d 	bl	80091d0 <_ZN8touchgfx4RectaNERKS0_>
 800c4d6:	466b      	mov	r3, sp
 800c4d8:	cb03      	ldmia	r3!, {r0, r1}
 800c4da:	6020      	str	r0, [r4, #0]
 800c4dc:	6061      	str	r1, [r4, #4]
 800c4de:	6968      	ldr	r0, [r5, #20]
 800c4e0:	b128      	cbz	r0, 800c4ee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800c4e2:	6803      	ldr	r3, [r0, #0]
 800c4e4:	691b      	ldr	r3, [r3, #16]
 800c4e6:	4621      	mov	r1, r4
 800c4e8:	4798      	blx	r3
 800c4ea:	b003      	add	sp, #12
 800c4ec:	bd30      	pop	{r4, r5, pc}
 800c4ee:	f7ff faab 	bl	800ba48 <_ZN8touchgfx11Application11getInstanceEv>
 800c4f2:	6803      	ldr	r3, [r0, #0]
 800c4f4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c4f6:	e7f6      	b.n	800c4e6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800c4f8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800c4f8:	b570      	push	{r4, r5, r6, lr}
 800c4fa:	8882      	ldrh	r2, [r0, #4]
 800c4fc:	880b      	ldrh	r3, [r1, #0]
 800c4fe:	4413      	add	r3, r2
 800c500:	800b      	strh	r3, [r1, #0]
 800c502:	88c2      	ldrh	r2, [r0, #6]
 800c504:	884b      	ldrh	r3, [r1, #2]
 800c506:	460c      	mov	r4, r1
 800c508:	4413      	add	r3, r2
 800c50a:	804b      	strh	r3, [r1, #2]
 800c50c:	4605      	mov	r5, r0
 800c50e:	1d01      	adds	r1, r0, #4
 800c510:	4620      	mov	r0, r4
 800c512:	f7fc fe5d 	bl	80091d0 <_ZN8touchgfx4RectaNERKS0_>
 800c516:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800c51a:	2b00      	cmp	r3, #0
 800c51c:	dd0b      	ble.n	800c536 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c51e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800c522:	2b00      	cmp	r3, #0
 800c524:	dd07      	ble.n	800c536 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c526:	6968      	ldr	r0, [r5, #20]
 800c528:	b128      	cbz	r0, 800c536 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800c52a:	6803      	ldr	r3, [r0, #0]
 800c52c:	4621      	mov	r1, r4
 800c52e:	6a1b      	ldr	r3, [r3, #32]
 800c530:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c534:	4718      	bx	r3
 800c536:	bd70      	pop	{r4, r5, r6, pc}

0800c538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800c538:	b510      	push	{r4, lr}
 800c53a:	4604      	mov	r4, r0
 800c53c:	4608      	mov	r0, r1
 800c53e:	2300      	movs	r3, #0
 800c540:	8023      	strh	r3, [r4, #0]
 800c542:	8063      	strh	r3, [r4, #2]
 800c544:	6803      	ldr	r3, [r0, #0]
 800c546:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c54a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800c54e:	80a1      	strh	r1, [r4, #4]
 800c550:	80e2      	strh	r2, [r4, #6]
 800c552:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c554:	4621      	mov	r1, r4
 800c556:	4798      	blx	r3
 800c558:	4620      	mov	r0, r4
 800c55a:	bd10      	pop	{r4, pc}

0800c55c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800c55c:	b530      	push	{r4, r5, lr}
 800c55e:	8083      	strh	r3, [r0, #4]
 800c560:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800c564:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800c568:	7183      	strb	r3, [r0, #6]
 800c56a:	79c3      	ldrb	r3, [r0, #7]
 800c56c:	6101      	str	r1, [r0, #16]
 800c56e:	f365 0306 	bfi	r3, r5, #0, #7
 800c572:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800c576:	8282      	strh	r2, [r0, #20]
 800c578:	f365 13c7 	bfi	r3, r5, #7, #1
 800c57c:	71c3      	strb	r3, [r0, #7]
 800c57e:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800c582:	7203      	strb	r3, [r0, #8]
 800c584:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800c588:	7243      	strb	r3, [r0, #9]
 800c58a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800c58e:	8143      	strh	r3, [r0, #10]
 800c590:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800c594:	8183      	strh	r3, [r0, #12]
 800c596:	4b01      	ldr	r3, [pc, #4]	; (800c59c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800c598:	6003      	str	r3, [r0, #0]
 800c59a:	bd30      	pop	{r4, r5, pc}
 800c59c:	0801cb78 	.word	0x0801cb78

0800c5a0 <_ZNK8touchgfx9ConstFont4findEt>:
 800c5a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c5a2:	6904      	ldr	r4, [r0, #16]
 800c5a4:	8a82      	ldrh	r2, [r0, #20]
 800c5a6:	88a3      	ldrh	r3, [r4, #4]
 800c5a8:	1acb      	subs	r3, r1, r3
 800c5aa:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 800c5ae:	d431      	bmi.n	800c614 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c5b0:	4293      	cmp	r3, r2
 800c5b2:	dd0c      	ble.n	800c5ce <_ZNK8touchgfx9ConstFont4findEt+0x2e>
 800c5b4:	230e      	movs	r3, #14
 800c5b6:	fb03 4302 	mla	r3, r3, r2, r4
 800c5ba:	889b      	ldrh	r3, [r3, #4]
 800c5bc:	1a5b      	subs	r3, r3, r1
 800c5be:	1ad3      	subs	r3, r2, r3
 800c5c0:	429a      	cmp	r2, r3
 800c5c2:	db27      	blt.n	800c614 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c5c4:	2b00      	cmp	r3, #0
 800c5c6:	bfbc      	itt	lt
 800c5c8:	2302      	movlt	r3, #2
 800c5ca:	fb92 f3f3 	sdivlt	r3, r2, r3
 800c5ce:	2500      	movs	r5, #0
 800c5d0:	260e      	movs	r6, #14
 800c5d2:	4295      	cmp	r5, r2
 800c5d4:	dc1e      	bgt.n	800c614 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c5d6:	fb06 4003 	mla	r0, r6, r3, r4
 800c5da:	8887      	ldrh	r7, [r0, #4]
 800c5dc:	42b9      	cmp	r1, r7
 800c5de:	d01a      	beq.n	800c616 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800c5e0:	d20d      	bcs.n	800c5fe <_ZNK8touchgfx9ConstFont4findEt+0x5e>
 800c5e2:	1e5a      	subs	r2, r3, #1
 800c5e4:	4295      	cmp	r5, r2
 800c5e6:	dc15      	bgt.n	800c614 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c5e8:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800c5ec:	1a5b      	subs	r3, r3, r1
 800c5ee:	1ad3      	subs	r3, r2, r3
 800c5f0:	429a      	cmp	r2, r3
 800c5f2:	db0f      	blt.n	800c614 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c5f4:	429d      	cmp	r5, r3
 800c5f6:	ddec      	ble.n	800c5d2 <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800c5f8:	1953      	adds	r3, r2, r5
 800c5fa:	105b      	asrs	r3, r3, #1
 800c5fc:	e7e9      	b.n	800c5d2 <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800c5fe:	1c5d      	adds	r5, r3, #1
 800c600:	42aa      	cmp	r2, r5
 800c602:	db07      	blt.n	800c614 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c604:	8a43      	ldrh	r3, [r0, #18]
 800c606:	1acb      	subs	r3, r1, r3
 800c608:	442b      	add	r3, r5
 800c60a:	429d      	cmp	r5, r3
 800c60c:	dc02      	bgt.n	800c614 <_ZNK8touchgfx9ConstFont4findEt+0x74>
 800c60e:	429a      	cmp	r2, r3
 800c610:	dadf      	bge.n	800c5d2 <_ZNK8touchgfx9ConstFont4findEt+0x32>
 800c612:	e7f1      	b.n	800c5f8 <_ZNK8touchgfx9ConstFont4findEt+0x58>
 800c614:	2000      	movs	r0, #0
 800c616:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c618 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800c618:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c61a:	4604      	mov	r4, r0
 800c61c:	4617      	mov	r7, r2
 800c61e:	461e      	mov	r6, r3
 800c620:	b911      	cbnz	r1, 800c628 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800c622:	2500      	movs	r5, #0
 800c624:	4628      	mov	r0, r5
 800c626:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c628:	290a      	cmp	r1, #10
 800c62a:	d0fa      	beq.n	800c622 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c62c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800c630:	4291      	cmp	r1, r2
 800c632:	d0f6      	beq.n	800c622 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c634:	f242 020b 	movw	r2, #8203	; 0x200b
 800c638:	4291      	cmp	r1, r2
 800c63a:	d0f2      	beq.n	800c622 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c63c:	f7ff ffb0 	bl	800c5a0 <_ZNK8touchgfx9ConstFont4findEt>
 800c640:	4605      	mov	r5, r0
 800c642:	b950      	cbnz	r0, 800c65a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800c644:	6823      	ldr	r3, [r4, #0]
 800c646:	4620      	mov	r0, r4
 800c648:	691b      	ldr	r3, [r3, #16]
 800c64a:	4798      	blx	r3
 800c64c:	4601      	mov	r1, r0
 800c64e:	4620      	mov	r0, r4
 800c650:	f7ff ffa6 	bl	800c5a0 <_ZNK8touchgfx9ConstFont4findEt>
 800c654:	4605      	mov	r5, r0
 800c656:	2800      	cmp	r0, #0
 800c658:	d0e3      	beq.n	800c622 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800c65a:	6823      	ldr	r3, [r4, #0]
 800c65c:	4629      	mov	r1, r5
 800c65e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c660:	4620      	mov	r0, r4
 800c662:	4798      	blx	r3
 800c664:	6038      	str	r0, [r7, #0]
 800c666:	6823      	ldr	r3, [r4, #0]
 800c668:	4620      	mov	r0, r4
 800c66a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c66c:	4798      	blx	r3
 800c66e:	7030      	strb	r0, [r6, #0]
 800c670:	e7d8      	b.n	800c624 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800c672 <_ZN8touchgfx6memsetEPvhm>:
 800c672:	4402      	add	r2, r0
 800c674:	4290      	cmp	r0, r2
 800c676:	d002      	beq.n	800c67e <_ZN8touchgfx6memsetEPvhm+0xc>
 800c678:	f800 1b01 	strb.w	r1, [r0], #1
 800c67c:	e7fa      	b.n	800c674 <_ZN8touchgfx6memsetEPvhm+0x2>
 800c67e:	4770      	bx	lr

0800c680 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800c680:	2000      	movs	r0, #0
 800c682:	4770      	bx	lr

0800c684 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800c684:	2001      	movs	r0, #1
 800c686:	4770      	bx	lr

0800c688 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800c688:	2002      	movs	r0, #2
 800c68a:	4770      	bx	lr

0800c68c <_ZN8touchgfx6ScreenD1Ev>:
 800c68c:	4770      	bx	lr

0800c68e <_ZN8touchgfx12GestureEventD1Ev>:
 800c68e:	4770      	bx	lr

0800c690 <_ZN8touchgfx9DragEventD1Ev>:
 800c690:	4770      	bx	lr

0800c692 <_ZN8touchgfx10ClickEventD1Ev>:
 800c692:	4770      	bx	lr

0800c694 <_ZN8touchgfx10ClickEventD0Ev>:
 800c694:	b510      	push	{r4, lr}
 800c696:	210c      	movs	r1, #12
 800c698:	4604      	mov	r4, r0
 800c69a:	f00d f9d5 	bl	8019a48 <_ZdlPvj>
 800c69e:	4620      	mov	r0, r4
 800c6a0:	bd10      	pop	{r4, pc}

0800c6a2 <_ZN8touchgfx9DragEventD0Ev>:
 800c6a2:	b510      	push	{r4, lr}
 800c6a4:	2110      	movs	r1, #16
 800c6a6:	4604      	mov	r4, r0
 800c6a8:	f00d f9ce 	bl	8019a48 <_ZdlPvj>
 800c6ac:	4620      	mov	r0, r4
 800c6ae:	bd10      	pop	{r4, pc}

0800c6b0 <_ZN8touchgfx12GestureEventD0Ev>:
 800c6b0:	b510      	push	{r4, lr}
 800c6b2:	210c      	movs	r1, #12
 800c6b4:	4604      	mov	r4, r0
 800c6b6:	f00d f9c7 	bl	8019a48 <_ZdlPvj>
 800c6ba:	4620      	mov	r0, r4
 800c6bc:	bd10      	pop	{r4, pc}

0800c6be <_ZN8touchgfx6ScreenD0Ev>:
 800c6be:	b510      	push	{r4, lr}
 800c6c0:	213c      	movs	r1, #60	; 0x3c
 800c6c2:	4604      	mov	r4, r0
 800c6c4:	f00d f9c0 	bl	8019a48 <_ZdlPvj>
 800c6c8:	4620      	mov	r0, r4
 800c6ca:	bd10      	pop	{r4, pc}

0800c6cc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800c6cc:	b530      	push	{r4, r5, lr}
 800c6ce:	460d      	mov	r5, r1
 800c6d0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800c6d2:	b087      	sub	sp, #28
 800c6d4:	4604      	mov	r4, r0
 800c6d6:	b301      	cbz	r1, 800c71a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800c6d8:	a801      	add	r0, sp, #4
 800c6da:	f7ff ff2d 	bl	800c538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c6de:	892a      	ldrh	r2, [r5, #8]
 800c6e0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800c6e4:	7928      	ldrb	r0, [r5, #4]
 800c6e6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800c6ea:	f88d 0010 	strb.w	r0, [sp, #16]
 800c6ee:	1ad2      	subs	r2, r2, r3
 800c6f0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800c6f2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800c6f4:	f8ad 1012 	strh.w	r1, [sp, #18]
 800c6f8:	441a      	add	r2, r3
 800c6fa:	896b      	ldrh	r3, [r5, #10]
 800c6fc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800c700:	f8ad 2014 	strh.w	r2, [sp, #20]
 800c704:	1b5b      	subs	r3, r3, r5
 800c706:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800c708:	442b      	add	r3, r5
 800c70a:	4d05      	ldr	r5, [pc, #20]	; (800c720 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800c70c:	9503      	str	r5, [sp, #12]
 800c70e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c712:	6803      	ldr	r3, [r0, #0]
 800c714:	a903      	add	r1, sp, #12
 800c716:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c718:	4798      	blx	r3
 800c71a:	b007      	add	sp, #28
 800c71c:	bd30      	pop	{r4, r5, pc}
 800c71e:	bf00      	nop
 800c720:	0801cbf4 	.word	0x0801cbf4

0800c724 <_ZNK8touchgfx4Rect9intersectEss>:
 800c724:	b510      	push	{r4, lr}
 800c726:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c72a:	428b      	cmp	r3, r1
 800c72c:	dc10      	bgt.n	800c750 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800c72e:	8884      	ldrh	r4, [r0, #4]
 800c730:	4423      	add	r3, r4
 800c732:	b21b      	sxth	r3, r3
 800c734:	4299      	cmp	r1, r3
 800c736:	da0b      	bge.n	800c750 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800c738:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800c73c:	4293      	cmp	r3, r2
 800c73e:	dc07      	bgt.n	800c750 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800c740:	88c0      	ldrh	r0, [r0, #6]
 800c742:	4418      	add	r0, r3
 800c744:	b200      	sxth	r0, r0
 800c746:	4282      	cmp	r2, r0
 800c748:	bfac      	ite	ge
 800c74a:	2000      	movge	r0, #0
 800c74c:	2001      	movlt	r0, #1
 800c74e:	bd10      	pop	{r4, pc}
 800c750:	2000      	movs	r0, #0
 800c752:	e7fc      	b.n	800c74e <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800c754 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800c754:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c756:	460c      	mov	r4, r1
 800c758:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800c75a:	b089      	sub	sp, #36	; 0x24
 800c75c:	4605      	mov	r5, r0
 800c75e:	2900      	cmp	r1, #0
 800c760:	d054      	beq.n	800c80c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800c762:	4668      	mov	r0, sp
 800c764:	f7ff fee8 	bl	800c538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c768:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800c76a:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800c76c:	8922      	ldrh	r2, [r4, #8]
 800c76e:	88e1      	ldrh	r1, [r4, #6]
 800c770:	443a      	add	r2, r7
 800c772:	4431      	add	r1, r6
 800c774:	b212      	sxth	r2, r2
 800c776:	b209      	sxth	r1, r1
 800c778:	4668      	mov	r0, sp
 800c77a:	f7ff ffd3 	bl	800c724 <_ZNK8touchgfx4Rect9intersectEss>
 800c77e:	b1d0      	cbz	r0, 800c7b6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800c780:	89a2      	ldrh	r2, [r4, #12]
 800c782:	8961      	ldrh	r1, [r4, #10]
 800c784:	443a      	add	r2, r7
 800c786:	4431      	add	r1, r6
 800c788:	b212      	sxth	r2, r2
 800c78a:	b209      	sxth	r1, r1
 800c78c:	4668      	mov	r0, sp
 800c78e:	f7ff ffc9 	bl	800c724 <_ZNK8touchgfx4Rect9intersectEss>
 800c792:	4603      	mov	r3, r0
 800c794:	b978      	cbnz	r0, 800c7b6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800c796:	4a1e      	ldr	r2, [pc, #120]	; (800c810 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800c798:	9204      	str	r2, [sp, #16]
 800c79a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800c79c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c7a0:	2202      	movs	r2, #2
 800c7a2:	f88d 2014 	strb.w	r2, [sp, #20]
 800c7a6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c7aa:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c7ae:	6803      	ldr	r3, [r0, #0]
 800c7b0:	a904      	add	r1, sp, #16
 800c7b2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c7b4:	4798      	blx	r3
 800c7b6:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800c7b8:	a802      	add	r0, sp, #8
 800c7ba:	f7ff febd 	bl	800c538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c7be:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800c7c2:	88e0      	ldrh	r0, [r4, #6]
 800c7c4:	8961      	ldrh	r1, [r4, #10]
 800c7c6:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800c7ca:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800c7ce:	8923      	ldrh	r3, [r4, #8]
 800c7d0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800c7d2:	7927      	ldrb	r7, [r4, #4]
 800c7d4:	f88d 7014 	strb.w	r7, [sp, #20]
 800c7d8:	1a80      	subs	r0, r0, r2
 800c7da:	1a89      	subs	r1, r1, r2
 800c7dc:	89a2      	ldrh	r2, [r4, #12]
 800c7de:	4c0d      	ldr	r4, [pc, #52]	; (800c814 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800c7e0:	9404      	str	r4, [sp, #16]
 800c7e2:	4460      	add	r0, ip
 800c7e4:	eba3 030e 	sub.w	r3, r3, lr
 800c7e8:	eba2 020e 	sub.w	r2, r2, lr
 800c7ec:	f8ad 0016 	strh.w	r0, [sp, #22]
 800c7f0:	4433      	add	r3, r6
 800c7f2:	4461      	add	r1, ip
 800c7f4:	4432      	add	r2, r6
 800c7f6:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800c7f8:	f8ad 101a 	strh.w	r1, [sp, #26]
 800c7fc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c800:	f8ad 201c 	strh.w	r2, [sp, #28]
 800c804:	6803      	ldr	r3, [r0, #0]
 800c806:	a904      	add	r1, sp, #16
 800c808:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c80a:	4798      	blx	r3
 800c80c:	b009      	add	sp, #36	; 0x24
 800c80e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c810:	0801cbcc 	.word	0x0801cbcc
 800c814:	0801cbe0 	.word	0x0801cbe0

0800c818 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800c818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c81c:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800c820:	790b      	ldrb	r3, [r1, #4]
 800c822:	b0a1      	sub	sp, #132	; 0x84
 800c824:	4604      	mov	r4, r0
 800c826:	460d      	mov	r5, r1
 800c828:	f1b9 0f00 	cmp.w	r9, #0
 800c82c:	d00f      	beq.n	800c84e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800c82e:	2b00      	cmp	r3, #0
 800c830:	f040 80a0 	bne.w	800c974 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800c834:	b021      	add	sp, #132	; 0x84
 800c836:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c83a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800c83e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800c842:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800c846:	1d20      	adds	r0, r4, #4
 800c848:	f7fc fc08 	bl	800905c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c84c:	e092      	b.n	800c974 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800c84e:	2b00      	cmp	r3, #0
 800c850:	d1f0      	bne.n	800c834 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800c852:	4b5e      	ldr	r3, [pc, #376]	; (800c9cc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800c854:	681b      	ldr	r3, [r3, #0]
 800c856:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800c85a:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800c85e:	f1ba 0f03 	cmp.w	sl, #3
 800c862:	ddea      	ble.n	800c83a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800c864:	f1ba 0f0c 	cmp.w	sl, #12
 800c868:	f04f 0303 	mov.w	r3, #3
 800c86c:	bfdc      	itt	le
 800c86e:	f10a 32ff 	addle.w	r2, sl, #4294967295	; 0xffffffff
 800c872:	fb92 f3f3 	sdivle	r3, r2, r3
 800c876:	9301      	str	r3, [sp, #4]
 800c878:	4b55      	ldr	r3, [pc, #340]	; (800c9d0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800c87a:	4956      	ldr	r1, [pc, #344]	; (800c9d4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800c87c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c880:	4b55      	ldr	r3, [pc, #340]	; (800c9d8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800c882:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800c886:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c88a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800c88e:	ab0e      	add	r3, sp, #56	; 0x38
 800c890:	2248      	movs	r2, #72	; 0x48
 800c892:	2600      	movs	r6, #0
 800c894:	4618      	mov	r0, r3
 800c896:	960a      	str	r6, [sp, #40]	; 0x28
 800c898:	f00d f980 	bl	8019b9c <memcpy>
 800c89c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800c8a0:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800c8a4:	f8cd a008 	str.w	sl, [sp, #8]
 800c8a8:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800c8ac:	fb93 f3f2 	sdiv	r3, r3, r2
 800c8b0:	b29b      	uxth	r3, r3
 800c8b2:	46b3      	mov	fp, r6
 800c8b4:	9303      	str	r3, [sp, #12]
 800c8b6:	2300      	movs	r3, #0
 800c8b8:	9309      	str	r3, [sp, #36]	; 0x24
 800c8ba:	9b07      	ldr	r3, [sp, #28]
 800c8bc:	9a03      	ldr	r2, [sp, #12]
 800c8be:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800c8c2:	88ef      	ldrh	r7, [r5, #6]
 800c8c4:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800c8c8:	fb13 f302 	smulbb	r3, r3, r2
 800c8cc:	b29b      	uxth	r3, r3
 800c8ce:	9304      	str	r3, [sp, #16]
 800c8d0:	9b07      	ldr	r3, [sp, #28]
 800c8d2:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800c8d6:	a80a      	add	r0, sp, #40	; 0x28
 800c8d8:	685b      	ldr	r3, [r3, #4]
 800c8da:	fb13 f302 	smulbb	r3, r3, r2
 800c8de:	b29b      	uxth	r3, r3
 800c8e0:	9305      	str	r3, [sp, #20]
 800c8e2:	9b04      	ldr	r3, [sp, #16]
 800c8e4:	441f      	add	r7, r3
 800c8e6:	9b05      	ldr	r3, [sp, #20]
 800c8e8:	4498      	add	r8, r3
 800c8ea:	b23f      	sxth	r7, r7
 800c8ec:	fa0f f888 	sxth.w	r8, r8
 800c8f0:	4642      	mov	r2, r8
 800c8f2:	4639      	mov	r1, r7
 800c8f4:	f7ff ff16 	bl	800c724 <_ZNK8touchgfx4Rect9intersectEss>
 800c8f8:	b380      	cbz	r0, 800c95c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800c8fa:	4639      	mov	r1, r7
 800c8fc:	ab09      	add	r3, sp, #36	; 0x24
 800c8fe:	4642      	mov	r2, r8
 800c900:	1d20      	adds	r0, r4, #4
 800c902:	f7fc fbab 	bl	800905c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c906:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c908:	b341      	cbz	r1, 800c95c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800c90a:	4549      	cmp	r1, r9
 800c90c:	d026      	beq.n	800c95c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800c90e:	a80c      	add	r0, sp, #48	; 0x30
 800c910:	f7ff fe12 	bl	800c538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c914:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800c918:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c91c:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800c920:	2002      	movs	r0, #2
 800c922:	fb92 f2f0 	sdiv	r2, r2, r0
 800c926:	440a      	add	r2, r1
 800c928:	1a99      	subs	r1, r3, r2
 800c92a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800c92e:	fb93 f3f0 	sdiv	r3, r3, r0
 800c932:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800c936:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800c93a:	4403      	add	r3, r0
 800c93c:	1ad3      	subs	r3, r2, r3
 800c93e:	435b      	muls	r3, r3
 800c940:	9a06      	ldr	r2, [sp, #24]
 800c942:	fb01 3301 	mla	r3, r1, r1, r3
 800c946:	4293      	cmp	r3, r2
 800c948:	d208      	bcs.n	800c95c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800c94a:	9a04      	ldr	r2, [sp, #16]
 800c94c:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800c950:	86a2      	strh	r2, [r4, #52]	; 0x34
 800c952:	9a05      	ldr	r2, [sp, #20]
 800c954:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800c958:	86e2      	strh	r2, [r4, #54]	; 0x36
 800c95a:	9306      	str	r3, [sp, #24]
 800c95c:	f10b 0b02 	add.w	fp, fp, #2
 800c960:	f1bb 0f08 	cmp.w	fp, #8
 800c964:	dda7      	ble.n	800c8b6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800c966:	9b02      	ldr	r3, [sp, #8]
 800c968:	4453      	add	r3, sl
 800c96a:	9302      	str	r3, [sp, #8]
 800c96c:	9b01      	ldr	r3, [sp, #4]
 800c96e:	3601      	adds	r6, #1
 800c970:	42b3      	cmp	r3, r6
 800c972:	d199      	bne.n	800c8a8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800c974:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c976:	2900      	cmp	r1, #0
 800c978:	f43f af5c 	beq.w	800c834 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800c97c:	a80c      	add	r0, sp, #48	; 0x30
 800c97e:	f7ff fddb 	bl	800c538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c982:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800c986:	88ea      	ldrh	r2, [r5, #6]
 800c988:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800c98c:	7929      	ldrb	r1, [r5, #4]
 800c98e:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800c992:	1ad2      	subs	r2, r2, r3
 800c994:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800c996:	441a      	add	r2, r3
 800c998:	892b      	ldrh	r3, [r5, #8]
 800c99a:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800c99e:	1a1b      	subs	r3, r3, r0
 800c9a0:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800c9a2:	4403      	add	r3, r0
 800c9a4:	480d      	ldr	r0, [pc, #52]	; (800c9dc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800c9a6:	900e      	str	r0, [sp, #56]	; 0x38
 800c9a8:	2600      	movs	r6, #0
 800c9aa:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800c9ac:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800c9b0:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800c9b4:	6803      	ldr	r3, [r0, #0]
 800c9b6:	a90e      	add	r1, sp, #56	; 0x38
 800c9b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c9ba:	4798      	blx	r3
 800c9bc:	792b      	ldrb	r3, [r5, #4]
 800c9be:	2b00      	cmp	r3, #0
 800c9c0:	f43f af38 	beq.w	800c834 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800c9c4:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800c9c8:	e734      	b.n	800c834 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800c9ca:	bf00      	nop
 800c9cc:	2001217c 	.word	0x2001217c
 800c9d0:	20012170 	.word	0x20012170
 800c9d4:	0801aac4 	.word	0x0801aac4
 800c9d8:	20012172 	.word	0x20012172
 800c9dc:	0801cbcc 	.word	0x0801cbcc

0800c9e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800c9e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c9e2:	4604      	mov	r4, r0
 800c9e4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800c9e8:	3201      	adds	r2, #1
 800c9ea:	d112      	bne.n	800ca12 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800c9ec:	6803      	ldr	r3, [r0, #0]
 800c9ee:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800c9f2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c9f6:	f8ad 1004 	strh.w	r1, [sp, #4]
 800c9fa:	2500      	movs	r5, #0
 800c9fc:	9500      	str	r5, [sp, #0]
 800c9fe:	466d      	mov	r5, sp
 800ca00:	4629      	mov	r1, r5
 800ca02:	f8ad 2006 	strh.w	r2, [sp, #6]
 800ca06:	6a1b      	ldr	r3, [r3, #32]
 800ca08:	4798      	blx	r3
 800ca0a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ca0e:	e884 0003 	stmia.w	r4, {r0, r1}
 800ca12:	4620      	mov	r0, r4
 800ca14:	b003      	add	sp, #12
 800ca16:	bd30      	pop	{r4, r5, pc}

0800ca18 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800ca18:	b513      	push	{r0, r1, r4, lr}
 800ca1a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800ca1e:	3301      	adds	r3, #1
 800ca20:	4604      	mov	r4, r0
 800ca22:	d109      	bne.n	800ca38 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800ca24:	4601      	mov	r1, r0
 800ca26:	4668      	mov	r0, sp
 800ca28:	f7ff fd86 	bl	800c538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ca2c:	f8bd 3000 	ldrh.w	r3, [sp]
 800ca30:	8423      	strh	r3, [r4, #32]
 800ca32:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ca36:	8463      	strh	r3, [r4, #34]	; 0x22
 800ca38:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800ca3c:	b002      	add	sp, #8
 800ca3e:	bd10      	pop	{r4, pc}

0800ca40 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800ca40:	b513      	push	{r0, r1, r4, lr}
 800ca42:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800ca46:	3301      	adds	r3, #1
 800ca48:	4604      	mov	r4, r0
 800ca4a:	d109      	bne.n	800ca60 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800ca4c:	4601      	mov	r1, r0
 800ca4e:	4668      	mov	r0, sp
 800ca50:	f7ff fd72 	bl	800c538 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ca54:	f8bd 3000 	ldrh.w	r3, [sp]
 800ca58:	8423      	strh	r3, [r4, #32]
 800ca5a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ca5e:	8463      	strh	r3, [r4, #34]	; 0x22
 800ca60:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800ca64:	b002      	add	sp, #8
 800ca66:	bd10      	pop	{r4, pc}

0800ca68 <_ZN8touchgfx6ScreenC1Ev>:
 800ca68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ca6a:	4605      	mov	r5, r0
 800ca6c:	4b17      	ldr	r3, [pc, #92]	; (800cacc <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800ca6e:	f845 3b04 	str.w	r3, [r5], #4
 800ca72:	2301      	movs	r3, #1
 800ca74:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
 800ca78:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 800ca7c:	4b14      	ldr	r3, [pc, #80]	; (800cad0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800ca7e:	4915      	ldr	r1, [pc, #84]	; (800cad4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800ca80:	f9b3 7000 	ldrsh.w	r7, [r3]
 800ca84:	4b14      	ldr	r3, [pc, #80]	; (800cad8 <_ZN8touchgfx6ScreenC1Ev+0x70>)
 800ca86:	6041      	str	r1, [r0, #4]
 800ca88:	2200      	movs	r2, #0
 800ca8a:	8102      	strh	r2, [r0, #8]
 800ca8c:	8142      	strh	r2, [r0, #10]
 800ca8e:	8182      	strh	r2, [r0, #12]
 800ca90:	81c2      	strh	r2, [r0, #14]
 800ca92:	8202      	strh	r2, [r0, #16]
 800ca94:	8242      	strh	r2, [r0, #18]
 800ca96:	8282      	strh	r2, [r0, #20]
 800ca98:	82c2      	strh	r2, [r0, #22]
 800ca9a:	e9c0 2206 	strd	r2, r2, [r0, #24]
 800ca9e:	6202      	str	r2, [r0, #32]
 800caa0:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800caa4:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 800caa8:	6342      	str	r2, [r0, #52]	; 0x34
 800caaa:	f9b3 6000 	ldrsh.w	r6, [r3]
 800caae:	4611      	mov	r1, r2
 800cab0:	4604      	mov	r4, r0
 800cab2:	4628      	mov	r0, r5
 800cab4:	f7f5 fbf4 	bl	80022a0 <_ZN8touchgfx8Drawable5setXYEss>
 800cab8:	4639      	mov	r1, r7
 800caba:	4628      	mov	r0, r5
 800cabc:	f7f5 fbfd 	bl	80022ba <_ZN8touchgfx8Drawable8setWidthEs>
 800cac0:	4628      	mov	r0, r5
 800cac2:	4631      	mov	r1, r6
 800cac4:	f7f5 fbfb 	bl	80022be <_ZN8touchgfx8Drawable9setHeightEs>
 800cac8:	4620      	mov	r0, r4
 800caca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cacc:	0801cc08 	.word	0x0801cc08
 800cad0:	20012170 	.word	0x20012170
 800cad4:	0801bfbc 	.word	0x0801bfbc
 800cad8:	20012172 	.word	0x20012172

0800cadc <_ZN8touchgfx6Screen4drawEv>:
 800cadc:	b507      	push	{r0, r1, r2, lr}
 800cade:	4b09      	ldr	r3, [pc, #36]	; (800cb04 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800cae0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cae4:	4b08      	ldr	r3, [pc, #32]	; (800cb08 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800cae6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800caea:	f9b3 3000 	ldrsh.w	r3, [r3]
 800caee:	f8ad 3006 	strh.w	r3, [sp, #6]
 800caf2:	6803      	ldr	r3, [r0, #0]
 800caf4:	2100      	movs	r1, #0
 800caf6:	9100      	str	r1, [sp, #0]
 800caf8:	689b      	ldr	r3, [r3, #8]
 800cafa:	4669      	mov	r1, sp
 800cafc:	4798      	blx	r3
 800cafe:	b003      	add	sp, #12
 800cb00:	f85d fb04 	ldr.w	pc, [sp], #4
 800cb04:	20012170 	.word	0x20012170
 800cb08:	20012172 	.word	0x20012172

0800cb0c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800cb0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb10:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800cb14:	2b00      	cmp	r3, #0
 800cb16:	b089      	sub	sp, #36	; 0x24
 800cb18:	4680      	mov	r8, r0
 800cb1a:	460c      	mov	r4, r1
 800cb1c:	4615      	mov	r5, r2
 800cb1e:	dd0e      	ble.n	800cb3e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800cb20:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800cb24:	2b00      	cmp	r3, #0
 800cb26:	dd0a      	ble.n	800cb3e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800cb28:	4628      	mov	r0, r5
 800cb2a:	f7ff ff59 	bl	800c9e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800cb2e:	4621      	mov	r1, r4
 800cb30:	f7fe ff00 	bl	800b934 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cb34:	69eb      	ldr	r3, [r5, #28]
 800cb36:	b928      	cbnz	r0, 800cb44 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800cb38:	461d      	mov	r5, r3
 800cb3a:	2b00      	cmp	r3, #0
 800cb3c:	d1f4      	bne.n	800cb28 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800cb3e:	b009      	add	sp, #36	; 0x24
 800cb40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb44:	ae04      	add	r6, sp, #16
 800cb46:	2b00      	cmp	r3, #0
 800cb48:	d051      	beq.n	800cbee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800cb4a:	682b      	ldr	r3, [r5, #0]
 800cb4c:	4629      	mov	r1, r5
 800cb4e:	68db      	ldr	r3, [r3, #12]
 800cb50:	a802      	add	r0, sp, #8
 800cb52:	4798      	blx	r3
 800cb54:	4628      	mov	r0, r5
 800cb56:	f7ff ff5f 	bl	800ca18 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800cb5a:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800cb5e:	4407      	add	r7, r0
 800cb60:	4628      	mov	r0, r5
 800cb62:	f7ff ff6d 	bl	800ca40 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800cb66:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800cb6a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800cb6e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800cb72:	4418      	add	r0, r3
 800cb74:	4621      	mov	r1, r4
 800cb76:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800cb7a:	f8ad 0012 	strh.w	r0, [sp, #18]
 800cb7e:	b23f      	sxth	r7, r7
 800cb80:	4630      	mov	r0, r6
 800cb82:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cb86:	f8ad 7010 	strh.w	r7, [sp, #16]
 800cb8a:	f7fc fb21 	bl	80091d0 <_ZN8touchgfx4RectaNERKS0_>
 800cb8e:	4628      	mov	r0, r5
 800cb90:	f7ff ff26 	bl	800c9e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800cb94:	4602      	mov	r2, r0
 800cb96:	e896 0003 	ldmia.w	r6, {r0, r1}
 800cb9a:	ab06      	add	r3, sp, #24
 800cb9c:	e883 0003 	stmia.w	r3, {r0, r1}
 800cba0:	4611      	mov	r1, r2
 800cba2:	4618      	mov	r0, r3
 800cba4:	f7fc fb14 	bl	80091d0 <_ZN8touchgfx4RectaNERKS0_>
 800cba8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800cbac:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cbb0:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800cbb4:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800cbb8:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800cbbc:	4299      	cmp	r1, r3
 800cbbe:	d10b      	bne.n	800cbd8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800cbc0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800cbc4:	4552      	cmp	r2, sl
 800cbc6:	d107      	bne.n	800cbd8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800cbc8:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800cbcc:	455a      	cmp	r2, fp
 800cbce:	d103      	bne.n	800cbd8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xcc>
 800cbd0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800cbd4:	454a      	cmp	r2, r9
 800cbd6:	d00a      	beq.n	800cbee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800cbd8:	f1bb 0f00 	cmp.w	fp, #0
 800cbdc:	d002      	beq.n	800cbe4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd8>
 800cbde:	f1b9 0f00 	cmp.w	r9, #0
 800cbe2:	d12e      	bne.n	800cc42 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x136>
 800cbe4:	69ea      	ldr	r2, [r5, #28]
 800cbe6:	4621      	mov	r1, r4
 800cbe8:	4640      	mov	r0, r8
 800cbea:	f7ff ff8f 	bl	800cb0c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800cbee:	4628      	mov	r0, r5
 800cbf0:	f7ff fef6 	bl	800c9e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800cbf4:	6861      	ldr	r1, [r4, #4]
 800cbf6:	4602      	mov	r2, r0
 800cbf8:	6820      	ldr	r0, [r4, #0]
 800cbfa:	4633      	mov	r3, r6
 800cbfc:	c303      	stmia	r3!, {r0, r1}
 800cbfe:	4611      	mov	r1, r2
 800cc00:	4630      	mov	r0, r6
 800cc02:	f7fc fae5 	bl	80091d0 <_ZN8touchgfx4RectaNERKS0_>
 800cc06:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800cc0a:	2b00      	cmp	r3, #0
 800cc0c:	dd97      	ble.n	800cb3e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800cc0e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800cc12:	2b00      	cmp	r3, #0
 800cc14:	dd93      	ble.n	800cb3e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800cc16:	4628      	mov	r0, r5
 800cc18:	f7ff fefe 	bl	800ca18 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800cc1c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800cc20:	1a18      	subs	r0, r3, r0
 800cc22:	f8ad 0010 	strh.w	r0, [sp, #16]
 800cc26:	4628      	mov	r0, r5
 800cc28:	f7ff ff0a 	bl	800ca40 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800cc2c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800cc30:	1a18      	subs	r0, r3, r0
 800cc32:	f8ad 0012 	strh.w	r0, [sp, #18]
 800cc36:	682b      	ldr	r3, [r5, #0]
 800cc38:	4631      	mov	r1, r6
 800cc3a:	689b      	ldr	r3, [r3, #8]
 800cc3c:	4628      	mov	r0, r5
 800cc3e:	4798      	blx	r3
 800cc40:	e77d      	b.n	800cb3e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800cc42:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800cc46:	fa1f f08a 	uxth.w	r0, sl
 800cc4a:	4552      	cmp	r2, sl
 800cc4c:	9000      	str	r0, [sp, #0]
 800cc4e:	da12      	bge.n	800cc76 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x16a>
 800cc50:	9301      	str	r3, [sp, #4]
 800cc52:	9b00      	ldr	r3, [sp, #0]
 800cc54:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800cc58:	f8ad 2012 	strh.w	r2, [sp, #18]
 800cc5c:	1a9a      	subs	r2, r3, r2
 800cc5e:	f8ad 1010 	strh.w	r1, [sp, #16]
 800cc62:	f8ad 0014 	strh.w	r0, [sp, #20]
 800cc66:	f8ad 2016 	strh.w	r2, [sp, #22]
 800cc6a:	69ea      	ldr	r2, [r5, #28]
 800cc6c:	4631      	mov	r1, r6
 800cc6e:	4640      	mov	r0, r8
 800cc70:	f7ff ff4c 	bl	800cb0c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800cc74:	9b01      	ldr	r3, [sp, #4]
 800cc76:	f9b4 2000 	ldrsh.w	r2, [r4]
 800cc7a:	429a      	cmp	r2, r3
 800cc7c:	b29f      	uxth	r7, r3
 800cc7e:	da0d      	bge.n	800cc9c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x190>
 800cc80:	f8ad 2010 	strh.w	r2, [sp, #16]
 800cc84:	1aba      	subs	r2, r7, r2
 800cc86:	f8ad a012 	strh.w	sl, [sp, #18]
 800cc8a:	f8ad 2014 	strh.w	r2, [sp, #20]
 800cc8e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800cc92:	69ea      	ldr	r2, [r5, #28]
 800cc94:	4631      	mov	r1, r6
 800cc96:	4640      	mov	r0, r8
 800cc98:	f7ff ff38 	bl	800cb0c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800cc9c:	8822      	ldrh	r2, [r4, #0]
 800cc9e:	88a3      	ldrh	r3, [r4, #4]
 800cca0:	445f      	add	r7, fp
 800cca2:	4413      	add	r3, r2
 800cca4:	b29b      	uxth	r3, r3
 800cca6:	b2bf      	uxth	r7, r7
 800cca8:	b23a      	sxth	r2, r7
 800ccaa:	b219      	sxth	r1, r3
 800ccac:	4291      	cmp	r1, r2
 800ccae:	dd0d      	ble.n	800cccc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c0>
 800ccb0:	1bdb      	subs	r3, r3, r7
 800ccb2:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ccb6:	f8ad a012 	strh.w	sl, [sp, #18]
 800ccba:	f8ad 3014 	strh.w	r3, [sp, #20]
 800ccbe:	f8ad 9016 	strh.w	r9, [sp, #22]
 800ccc2:	69ea      	ldr	r2, [r5, #28]
 800ccc4:	4631      	mov	r1, r6
 800ccc6:	4640      	mov	r0, r8
 800ccc8:	f7ff ff20 	bl	800cb0c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800cccc:	88e2      	ldrh	r2, [r4, #6]
 800ccce:	8863      	ldrh	r3, [r4, #2]
 800ccd0:	4413      	add	r3, r2
 800ccd2:	9a00      	ldr	r2, [sp, #0]
 800ccd4:	444a      	add	r2, r9
 800ccd6:	b29b      	uxth	r3, r3
 800ccd8:	fa1f f982 	uxth.w	r9, r2
 800ccdc:	fa0f f289 	sxth.w	r2, r9
 800cce0:	b219      	sxth	r1, r3
 800cce2:	428a      	cmp	r2, r1
 800cce4:	da83      	bge.n	800cbee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xe2>
 800cce6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ccea:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ccee:	f8ad 1014 	strh.w	r1, [sp, #20]
 800ccf2:	eba3 0309 	sub.w	r3, r3, r9
 800ccf6:	f8ad 0010 	strh.w	r0, [sp, #16]
 800ccfa:	f8ad 2012 	strh.w	r2, [sp, #18]
 800ccfe:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cd02:	69ea      	ldr	r2, [r5, #28]
 800cd04:	4631      	mov	r1, r6
 800cd06:	e76f      	b.n	800cbe8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xdc>

0800cd08 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800cd08:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cd0a:	aa02      	add	r2, sp, #8
 800cd0c:	2300      	movs	r3, #0
 800cd0e:	f842 3d04 	str.w	r3, [r2, #-4]!
 800cd12:	4604      	mov	r4, r0
 800cd14:	3004      	adds	r0, #4
 800cd16:	460d      	mov	r5, r1
 800cd18:	f7fc fb32 	bl	8009380 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800cd1c:	9a01      	ldr	r2, [sp, #4]
 800cd1e:	b11a      	cbz	r2, 800cd28 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800cd20:	4629      	mov	r1, r5
 800cd22:	4620      	mov	r0, r4
 800cd24:	f7ff fef2 	bl	800cb0c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800cd28:	b003      	add	sp, #12
 800cd2a:	bd30      	pop	{r4, r5, pc}

0800cd2c <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800cd2c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cd2e:	4602      	mov	r2, r0
 800cd30:	4604      	mov	r4, r0
 800cd32:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800cd36:	460d      	mov	r5, r1
 800cd38:	6851      	ldr	r1, [r2, #4]
 800cd3a:	466b      	mov	r3, sp
 800cd3c:	c303      	stmia	r3!, {r0, r1}
 800cd3e:	4629      	mov	r1, r5
 800cd40:	4668      	mov	r0, sp
 800cd42:	f7fc fa45 	bl	80091d0 <_ZN8touchgfx4RectaNERKS0_>
 800cd46:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cd4a:	4669      	mov	r1, sp
 800cd4c:	b123      	cbz	r3, 800cd58 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800cd4e:	4620      	mov	r0, r4
 800cd50:	f7ff ffda 	bl	800cd08 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800cd54:	b003      	add	sp, #12
 800cd56:	bd30      	pop	{r4, r5, pc}
 800cd58:	1d20      	adds	r0, r4, #4
 800cd5a:	f7fc fad8 	bl	800930e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800cd5e:	e7f9      	b.n	800cd54 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800cd60 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800cd60:	680a      	ldr	r2, [r1, #0]
 800cd62:	460b      	mov	r3, r1
 800cd64:	6992      	ldr	r2, [r2, #24]
 800cd66:	1d01      	adds	r1, r0, #4
 800cd68:	4618      	mov	r0, r3
 800cd6a:	4710      	bx	r2

0800cd6c <_ZN8touchgfx12TextProviderC1Ev>:
 800cd6c:	b510      	push	{r4, lr}
 800cd6e:	2300      	movs	r3, #0
 800cd70:	2201      	movs	r2, #1
 800cd72:	4604      	mov	r4, r0
 800cd74:	e9c0 3300 	strd	r3, r3, [r0]
 800cd78:	60c3      	str	r3, [r0, #12]
 800cd7a:	7403      	strb	r3, [r0, #16]
 800cd7c:	82c3      	strh	r3, [r0, #22]
 800cd7e:	8303      	strh	r3, [r0, #24]
 800cd80:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800cd82:	8603      	strh	r3, [r0, #48]	; 0x30
 800cd84:	86c3      	strh	r3, [r0, #54]	; 0x36
 800cd86:	8703      	strh	r3, [r0, #56]	; 0x38
 800cd88:	63c3      	str	r3, [r0, #60]	; 0x3c
 800cd8a:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800cd8e:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800cd92:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800cd96:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800cd9a:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800cd9e:	f7f5 ff4b 	bl	8002c38 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800cda2:	4620      	mov	r0, r4
 800cda4:	bd10      	pop	{r4, pc}

0800cda6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800cda6:	b530      	push	{r4, r5, lr}
 800cda8:	2500      	movs	r5, #0
 800cdaa:	2401      	movs	r4, #1
 800cdac:	6843      	ldr	r3, [r0, #4]
 800cdae:	b913      	cbnz	r3, 800cdb6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800cdb0:	6803      	ldr	r3, [r0, #0]
 800cdb2:	b1f3      	cbz	r3, 800cdf2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800cdb4:	6043      	str	r3, [r0, #4]
 800cdb6:	7c03      	ldrb	r3, [r0, #16]
 800cdb8:	b143      	cbz	r3, 800cdcc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800cdba:	68c3      	ldr	r3, [r0, #12]
 800cdbc:	b12b      	cbz	r3, 800cdca <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800cdbe:	881a      	ldrh	r2, [r3, #0]
 800cdc0:	b11a      	cbz	r2, 800cdca <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800cdc2:	1c9a      	adds	r2, r3, #2
 800cdc4:	60c2      	str	r2, [r0, #12]
 800cdc6:	8818      	ldrh	r0, [r3, #0]
 800cdc8:	bd30      	pop	{r4, r5, pc}
 800cdca:	7405      	strb	r5, [r0, #16]
 800cdcc:	6843      	ldr	r3, [r0, #4]
 800cdce:	8819      	ldrh	r1, [r3, #0]
 800cdd0:	b179      	cbz	r1, 800cdf2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800cdd2:	1c9a      	adds	r2, r3, #2
 800cdd4:	2902      	cmp	r1, #2
 800cdd6:	6042      	str	r2, [r0, #4]
 800cdd8:	d1f5      	bne.n	800cdc6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800cdda:	6883      	ldr	r3, [r0, #8]
 800cddc:	1d1a      	adds	r2, r3, #4
 800cdde:	6082      	str	r2, [r0, #8]
 800cde0:	681b      	ldr	r3, [r3, #0]
 800cde2:	60c3      	str	r3, [r0, #12]
 800cde4:	2b00      	cmp	r3, #0
 800cde6:	d0e1      	beq.n	800cdac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800cde8:	881b      	ldrh	r3, [r3, #0]
 800cdea:	2b00      	cmp	r3, #0
 800cdec:	d0de      	beq.n	800cdac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800cdee:	7404      	strb	r4, [r0, #16]
 800cdf0:	e7dc      	b.n	800cdac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800cdf2:	2000      	movs	r0, #0
 800cdf4:	e7e8      	b.n	800cdc8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800cdf6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800cdf6:	b410      	push	{r4}
 800cdf8:	63c3      	str	r3, [r0, #60]	; 0x3c
 800cdfa:	2300      	movs	r3, #0
 800cdfc:	6082      	str	r2, [r0, #8]
 800cdfe:	6001      	str	r1, [r0, #0]
 800ce00:	6043      	str	r3, [r0, #4]
 800ce02:	60c3      	str	r3, [r0, #12]
 800ce04:	7403      	strb	r3, [r0, #16]
 800ce06:	8603      	strh	r3, [r0, #48]	; 0x30
 800ce08:	8303      	strh	r3, [r0, #24]
 800ce0a:	8703      	strh	r3, [r0, #56]	; 0x38
 800ce0c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ce10:	f7f5 bf12 	b.w	8002c38 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800ce14 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800ce14:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ce16:	4605      	mov	r5, r0
 800ce18:	4608      	mov	r0, r1
 800ce1a:	b1e9      	cbz	r1, 800ce58 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800ce1c:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800ce20:	460b      	mov	r3, r1
 800ce22:	f101 0708 	add.w	r7, r1, #8
 800ce26:	4622      	mov	r2, r4
 800ce28:	6818      	ldr	r0, [r3, #0]
 800ce2a:	6859      	ldr	r1, [r3, #4]
 800ce2c:	4626      	mov	r6, r4
 800ce2e:	c603      	stmia	r6!, {r0, r1}
 800ce30:	3308      	adds	r3, #8
 800ce32:	42bb      	cmp	r3, r7
 800ce34:	4634      	mov	r4, r6
 800ce36:	d1f7      	bne.n	800ce28 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800ce38:	6818      	ldr	r0, [r3, #0]
 800ce3a:	6030      	str	r0, [r6, #0]
 800ce3c:	889b      	ldrh	r3, [r3, #4]
 800ce3e:	80b3      	strh	r3, [r6, #4]
 800ce40:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800ce44:	015b      	lsls	r3, r3, #5
 800ce46:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800ce4a:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800ce4e:	430b      	orrs	r3, r1
 800ce50:	425b      	negs	r3, r3
 800ce52:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800ce56:	4610      	mov	r0, r2
 800ce58:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ce5a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800ce5a:	b538      	push	{r3, r4, r5, lr}
 800ce5c:	460c      	mov	r4, r1
 800ce5e:	6811      	ldr	r1, [r2, #0]
 800ce60:	4610      	mov	r0, r2
 800ce62:	68cd      	ldr	r5, [r1, #12]
 800ce64:	4619      	mov	r1, r3
 800ce66:	47a8      	blx	r5
 800ce68:	2800      	cmp	r0, #0
 800ce6a:	bf08      	it	eq
 800ce6c:	4620      	moveq	r0, r4
 800ce6e:	bd38      	pop	{r3, r4, r5, pc}

0800ce70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800ce70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ce72:	4604      	mov	r4, r0
 800ce74:	4615      	mov	r5, r2
 800ce76:	4608      	mov	r0, r1
 800ce78:	b93a      	cbnz	r2, 800ce8a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800ce7a:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800ce7e:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800ce82:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800ce86:	4628      	mov	r0, r5
 800ce88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ce8a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800ce8e:	8893      	ldrh	r3, [r2, #4]
 800ce90:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800ce94:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800ce98:	79ee      	ldrb	r6, [r5, #7]
 800ce9a:	4316      	orrs	r6, r2
 800ce9c:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800cea0:	189a      	adds	r2, r3, r2
 800cea2:	b291      	uxth	r1, r2
 800cea4:	291d      	cmp	r1, #29
 800cea6:	b2b7      	uxth	r7, r6
 800cea8:	f200 8083 	bhi.w	800cfb2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800ceac:	2201      	movs	r2, #1
 800ceae:	408a      	lsls	r2, r1
 800ceb0:	4978      	ldr	r1, [pc, #480]	; (800d094 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800ceb2:	420a      	tst	r2, r1
 800ceb4:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800ceb8:	d12d      	bne.n	800cf16 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800ceba:	f412 7f60 	tst.w	r2, #896	; 0x380
 800cebe:	d078      	beq.n	800cfb2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800cec0:	f104 0240 	add.w	r2, r4, #64	; 0x40
 800cec4:	462b      	mov	r3, r5
 800cec6:	f105 0e08 	add.w	lr, r5, #8
 800ceca:	4615      	mov	r5, r2
 800cecc:	6818      	ldr	r0, [r3, #0]
 800cece:	6859      	ldr	r1, [r3, #4]
 800ced0:	4694      	mov	ip, r2
 800ced2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800ced6:	3308      	adds	r3, #8
 800ced8:	4573      	cmp	r3, lr
 800ceda:	4662      	mov	r2, ip
 800cedc:	d1f6      	bne.n	800cecc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800cede:	6818      	ldr	r0, [r3, #0]
 800cee0:	f8cc 0000 	str.w	r0, [ip]
 800cee4:	889b      	ldrh	r3, [r3, #4]
 800cee6:	f8ac 3004 	strh.w	r3, [ip, #4]
 800ceea:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800ceee:	f894 004d 	ldrb.w	r0, [r4, #77]	; 0x4d
 800cef2:	b2b3      	uxth	r3, r6
 800cef4:	1aca      	subs	r2, r1, r3
 800cef6:	b292      	uxth	r2, r2
 800cef8:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 800cefc:	10d2      	asrs	r2, r2, #3
 800cefe:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800cf02:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800cf06:	4302      	orrs	r2, r0
 800cf08:	1bcf      	subs	r7, r1, r7
 800cf0a:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
 800cf0e:	1afb      	subs	r3, r7, r3
 800cf10:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 800cf14:	e7b7      	b.n	800ce86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800cf16:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800cf18:	b92b      	cbnz	r3, 800cf26 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800cf1a:	4b5f      	ldr	r3, [pc, #380]	; (800d098 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800cf1c:	4a5f      	ldr	r2, [pc, #380]	; (800d09c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800cf1e:	4860      	ldr	r0, [pc, #384]	; (800d0a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800cf20:	21c0      	movs	r1, #192	; 0xc0
 800cf22:	f00c fdbd 	bl	8019aa0 <__assert_func>
 800cf26:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800cf28:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800cf2c:	8b59      	ldrh	r1, [r3, #26]
 800cf2e:	f640 6333 	movw	r3, #3635	; 0xe33
 800cf32:	4299      	cmp	r1, r3
 800cf34:	d110      	bne.n	800cf58 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800cf36:	6803      	ldr	r3, [r0, #0]
 800cf38:	68db      	ldr	r3, [r3, #12]
 800cf3a:	4798      	blx	r3
 800cf3c:	7b41      	ldrb	r1, [r0, #13]
 800cf3e:	00cb      	lsls	r3, r1, #3
 800cf40:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800cf44:	7a03      	ldrb	r3, [r0, #8]
 800cf46:	0648      	lsls	r0, r1, #25
 800cf48:	ea43 0302 	orr.w	r3, r3, r2
 800cf4c:	bf44      	itt	mi
 800cf4e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800cf52:	b21b      	sxthmi	r3, r3
 800cf54:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800cf58:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 800cf5c:	443b      	add	r3, r7
 800cf5e:	4433      	add	r3, r6
 800cf60:	b29b      	uxth	r3, r3
 800cf62:	f104 0640 	add.w	r6, r4, #64	; 0x40
 800cf66:	462a      	mov	r2, r5
 800cf68:	f105 0c08 	add.w	ip, r5, #8
 800cf6c:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800cf70:	4635      	mov	r5, r6
 800cf72:	6810      	ldr	r0, [r2, #0]
 800cf74:	6851      	ldr	r1, [r2, #4]
 800cf76:	4637      	mov	r7, r6
 800cf78:	c703      	stmia	r7!, {r0, r1}
 800cf7a:	3208      	adds	r2, #8
 800cf7c:	4562      	cmp	r2, ip
 800cf7e:	463e      	mov	r6, r7
 800cf80:	d1f7      	bne.n	800cf72 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800cf82:	6810      	ldr	r0, [r2, #0]
 800cf84:	6038      	str	r0, [r7, #0]
 800cf86:	8892      	ldrh	r2, [r2, #4]
 800cf88:	80ba      	strh	r2, [r7, #4]
 800cf8a:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800cf8e:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800cf92:	10db      	asrs	r3, r3, #3
 800cf94:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800cf98:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800cf9c:	4313      	orrs	r3, r2
 800cf9e:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800cfa2:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800cfa6:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800cfaa:	1a9b      	subs	r3, r3, r2
 800cfac:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800cfb0:	e769      	b.n	800ce86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800cfb2:	f023 0204 	bic.w	r2, r3, #4
 800cfb6:	f640 611b 	movw	r1, #3611	; 0xe1b
 800cfba:	428a      	cmp	r2, r1
 800cfbc:	d003      	beq.n	800cfc6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800cfbe:	f640 621d 	movw	r2, #3613	; 0xe1d
 800cfc2:	4293      	cmp	r3, r2
 800cfc4:	d120      	bne.n	800d008 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800cfc6:	3b01      	subs	r3, #1
 800cfc8:	4602      	mov	r2, r0
 800cfca:	b29b      	uxth	r3, r3
 800cfcc:	4629      	mov	r1, r5
 800cfce:	4620      	mov	r0, r4
 800cfd0:	f7ff ff43 	bl	800ce5a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800cfd4:	7b41      	ldrb	r1, [r0, #13]
 800cfd6:	00cb      	lsls	r3, r1, #3
 800cfd8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800cfdc:	7a03      	ldrb	r3, [r0, #8]
 800cfde:	0649      	lsls	r1, r1, #25
 800cfe0:	ea43 0302 	orr.w	r3, r3, r2
 800cfe4:	bf44      	itt	mi
 800cfe6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800cfea:	b21b      	sxthmi	r3, r3
 800cfec:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800cff0:	7b6b      	ldrb	r3, [r5, #13]
 800cff2:	7aaa      	ldrb	r2, [r5, #10]
 800cff4:	005b      	lsls	r3, r3, #1
 800cff6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800cffa:	4313      	orrs	r3, r2
 800cffc:	115a      	asrs	r2, r3, #5
 800cffe:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800d002:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800d006:	e036      	b.n	800d076 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800d008:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800d00c:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800d010:	7a2a      	ldrb	r2, [r5, #8]
 800d012:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800d016:	ea42 0201 	orr.w	r2, r2, r1
 800d01a:	bf1c      	itt	ne
 800d01c:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800d020:	b212      	sxthne	r2, r2
 800d022:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800d026:	f640 6109 	movw	r1, #3593	; 0xe09
 800d02a:	f023 0210 	bic.w	r2, r3, #16
 800d02e:	428a      	cmp	r2, r1
 800d030:	d003      	beq.n	800d03a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800d032:	f640 6213 	movw	r2, #3603	; 0xe13
 800d036:	4293      	cmp	r3, r2
 800d038:	d12a      	bne.n	800d090 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800d03a:	7b6e      	ldrb	r6, [r5, #13]
 800d03c:	0076      	lsls	r6, r6, #1
 800d03e:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800d042:	7aae      	ldrb	r6, [r5, #10]
 800d044:	4316      	orrs	r6, r2
 800d046:	f640 6213 	movw	r2, #3603	; 0xe13
 800d04a:	4293      	cmp	r3, r2
 800d04c:	bf18      	it	ne
 800d04e:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 800d052:	4602      	mov	r2, r0
 800d054:	bf14      	ite	ne
 800d056:	b29b      	uxthne	r3, r3
 800d058:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800d05c:	4629      	mov	r1, r5
 800d05e:	4620      	mov	r0, r4
 800d060:	f7ff fefb 	bl	800ce5a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800d064:	7b43      	ldrb	r3, [r0, #13]
 800d066:	7a82      	ldrb	r2, [r0, #10]
 800d068:	005b      	lsls	r3, r3, #1
 800d06a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d06e:	4313      	orrs	r3, r2
 800d070:	1af6      	subs	r6, r6, r3
 800d072:	f8a4 6052 	strh.w	r6, [r4, #82]	; 0x52
 800d076:	7b69      	ldrb	r1, [r5, #13]
 800d078:	00cb      	lsls	r3, r1, #3
 800d07a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d07e:	7a2b      	ldrb	r3, [r5, #8]
 800d080:	4313      	orrs	r3, r2
 800d082:	064a      	lsls	r2, r1, #25
 800d084:	bf44      	itt	mi
 800d086:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d08a:	b21b      	sxthmi	r3, r3
 800d08c:	1bdb      	subs	r3, r3, r7
 800d08e:	e73f      	b.n	800cf10 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800d090:	2300      	movs	r3, #0
 800d092:	e7b6      	b.n	800d002 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800d094:	3fc00079 	.word	0x3fc00079
 800d098:	0801b884 	.word	0x0801b884
 800d09c:	0801ce63 	.word	0x0801ce63
 800d0a0:	0801b8ab 	.word	0x0801b8ab

0800d0a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800d0a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d0a8:	4604      	mov	r4, r0
 800d0aa:	b942      	cbnz	r2, 800d0be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800d0ac:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800d0b0:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800d0b4:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800d0b8:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800d0bc:	e046      	b.n	800d14c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800d0be:	7b51      	ldrb	r1, [r2, #13]
 800d0c0:	8893      	ldrh	r3, [r2, #4]
 800d0c2:	010f      	lsls	r7, r1, #4
 800d0c4:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800d0c8:	79d7      	ldrb	r7, [r2, #7]
 800d0ca:	4307      	orrs	r7, r0
 800d0cc:	2f04      	cmp	r7, #4
 800d0ce:	b2bd      	uxth	r5, r7
 800d0d0:	bfcc      	ite	gt
 800d0d2:	08bf      	lsrgt	r7, r7, #2
 800d0d4:	2701      	movle	r7, #1
 800d0d6:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800d0da:	f200 80ab 	bhi.w	800d234 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800d0de:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800d0e2:	4283      	cmp	r3, r0
 800d0e4:	d216      	bcs.n	800d114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d0e6:	f240 605b 	movw	r0, #1627	; 0x65b
 800d0ea:	4283      	cmp	r3, r0
 800d0ec:	d859      	bhi.n	800d1a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800d0ee:	f240 6057 	movw	r0, #1623	; 0x657
 800d0f2:	4283      	cmp	r3, r0
 800d0f4:	d20e      	bcs.n	800d114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d0f6:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800d0fa:	d24a      	bcs.n	800d192 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800d0fc:	f240 604e 	movw	r0, #1614	; 0x64e
 800d100:	4283      	cmp	r3, r0
 800d102:	d207      	bcs.n	800d114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d104:	f240 601a 	movw	r0, #1562	; 0x61a
 800d108:	4283      	cmp	r3, r0
 800d10a:	d02a      	beq.n	800d162 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d10c:	d821      	bhi.n	800d152 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800d10e:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800d112:	d35b      	bcc.n	800d1cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d114:	f9b4 304e 	ldrsh.w	r3, [r4, #78]	; 0x4e
 800d118:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d11c:	f040 80d0 	bne.w	800d2c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800d120:	f9b4 0050 	ldrsh.w	r0, [r4, #80]	; 0x50
 800d124:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d128:	f040 80ca 	bne.w	800d2c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800d12c:	00cb      	lsls	r3, r1, #3
 800d12e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d132:	7a13      	ldrb	r3, [r2, #8]
 800d134:	0649      	lsls	r1, r1, #25
 800d136:	ea43 0300 	orr.w	r3, r3, r0
 800d13a:	bf44      	itt	mi
 800d13c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d140:	b21b      	sxthmi	r3, r3
 800d142:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d146:	1b5d      	subs	r5, r3, r5
 800d148:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800d14c:	4610      	mov	r0, r2
 800d14e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d152:	f240 604b 	movw	r0, #1611	; 0x64b
 800d156:	4283      	cmp	r3, r0
 800d158:	d338      	bcc.n	800d1cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d15a:	f240 604c 	movw	r0, #1612	; 0x64c
 800d15e:	4283      	cmp	r3, r0
 800d160:	d9d8      	bls.n	800d114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d162:	f9b4 004e 	ldrsh.w	r0, [r4, #78]	; 0x4e
 800d166:	f9b4 3050 	ldrsh.w	r3, [r4, #80]	; 0x50
 800d16a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d16e:	f040 80f1 	bne.w	800d354 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800d172:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d176:	f040 80ed 	bne.w	800d354 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800d17a:	00cb      	lsls	r3, r1, #3
 800d17c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d180:	7a13      	ldrb	r3, [r2, #8]
 800d182:	064e      	lsls	r6, r1, #25
 800d184:	ea43 0300 	orr.w	r3, r3, r0
 800d188:	bf44      	itt	mi
 800d18a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d18e:	b21b      	sxthmi	r3, r3
 800d190:	e7d9      	b.n	800d146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800d192:	f240 6054 	movw	r0, #1620	; 0x654
 800d196:	4283      	cmp	r3, r0
 800d198:	d8e3      	bhi.n	800d162 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d19a:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800d19e:	d9e0      	bls.n	800d162 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d1a0:	e7b8      	b.n	800d114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d1a2:	f240 6074 	movw	r0, #1652	; 0x674
 800d1a6:	4283      	cmp	r3, r0
 800d1a8:	d0b4      	beq.n	800d114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d1aa:	d82d      	bhi.n	800d208 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800d1ac:	f240 605e 	movw	r0, #1630	; 0x65e
 800d1b0:	4283      	cmp	r3, r0
 800d1b2:	d804      	bhi.n	800d1be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800d1b4:	f240 605d 	movw	r0, #1629	; 0x65d
 800d1b8:	4283      	cmp	r3, r0
 800d1ba:	d3d2      	bcc.n	800d162 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d1bc:	e7aa      	b.n	800d114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d1be:	f240 605f 	movw	r0, #1631	; 0x65f
 800d1c2:	4283      	cmp	r3, r0
 800d1c4:	d0cd      	beq.n	800d162 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d1c6:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800d1ca:	d0a3      	beq.n	800d114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d1cc:	00cb      	lsls	r3, r1, #3
 800d1ce:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800d1d2:	7a13      	ldrb	r3, [r2, #8]
 800d1d4:	0649      	lsls	r1, r1, #25
 800d1d6:	ea43 0300 	orr.w	r3, r3, r0
 800d1da:	bf44      	itt	mi
 800d1dc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d1e0:	b21b      	sxthmi	r3, r3
 800d1e2:	1b5d      	subs	r5, r3, r5
 800d1e4:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d1e8:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800d1ec:	7b53      	ldrb	r3, [r2, #13]
 800d1ee:	015b      	lsls	r3, r3, #5
 800d1f0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800d1f4:	7993      	ldrb	r3, [r2, #6]
 800d1f6:	430b      	orrs	r3, r1
 800d1f8:	005b      	lsls	r3, r3, #1
 800d1fa:	2105      	movs	r1, #5
 800d1fc:	fb93 f3f1 	sdiv	r3, r3, r1
 800d200:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800d204:	440b      	add	r3, r1
 800d206:	e757      	b.n	800d0b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800d208:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800d20c:	4283      	cmp	r3, r0
 800d20e:	d809      	bhi.n	800d224 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800d210:	f240 60df 	movw	r0, #1759	; 0x6df
 800d214:	4283      	cmp	r3, r0
 800d216:	f4bf af7d 	bcs.w	800d114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d21a:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800d21e:	2b05      	cmp	r3, #5
 800d220:	d8d4      	bhi.n	800d1cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d222:	e777      	b.n	800d114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d224:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800d228:	4283      	cmp	r3, r0
 800d22a:	d09a      	beq.n	800d162 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d22c:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800d230:	4283      	cmp	r3, r0
 800d232:	e7ca      	b.n	800d1ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800d234:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800d238:	d22b      	bcs.n	800d292 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800d23a:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800d23e:	4283      	cmp	r3, r0
 800d240:	d28f      	bcs.n	800d162 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d242:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800d246:	4283      	cmp	r3, r0
 800d248:	d816      	bhi.n	800d278 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800d24a:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800d24e:	4283      	cmp	r3, r0
 800d250:	f4bf af60 	bcs.w	800d114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d254:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800d258:	4283      	cmp	r3, r0
 800d25a:	d80a      	bhi.n	800d272 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800d25c:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800d260:	4283      	cmp	r3, r0
 800d262:	f4bf af57 	bcs.w	800d114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d266:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800d26a:	4283      	cmp	r3, r0
 800d26c:	f43f af79 	beq.w	800d162 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d270:	e7ac      	b.n	800d1cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800d272:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800d276:	e7f8      	b.n	800d26a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800d278:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800d27c:	4283      	cmp	r3, r0
 800d27e:	d802      	bhi.n	800d286 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800d280:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800d284:	e798      	b.n	800d1b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800d286:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800d28a:	4283      	cmp	r3, r0
 800d28c:	f47f af42 	bne.w	800d114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d290:	e767      	b.n	800d162 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d292:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800d296:	4283      	cmp	r3, r0
 800d298:	f43f af63 	beq.w	800d162 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d29c:	d802      	bhi.n	800d2a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800d29e:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800d2a2:	e7f2      	b.n	800d28a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800d2a4:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800d2a8:	4283      	cmp	r3, r0
 800d2aa:	d805      	bhi.n	800d2b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800d2ac:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800d2b0:	4283      	cmp	r3, r0
 800d2b2:	f4ff af2f 	bcc.w	800d114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800d2b6:	e754      	b.n	800d162 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800d2b8:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800d2bc:	4283      	cmp	r3, r0
 800d2be:	e7af      	b.n	800d220 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800d2c0:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 800d2c4:	4617      	mov	r7, r2
 800d2c6:	f102 0808 	add.w	r8, r2, #8
 800d2ca:	4666      	mov	r6, ip
 800d2cc:	6838      	ldr	r0, [r7, #0]
 800d2ce:	6879      	ldr	r1, [r7, #4]
 800d2d0:	46e6      	mov	lr, ip
 800d2d2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800d2d6:	3708      	adds	r7, #8
 800d2d8:	4547      	cmp	r7, r8
 800d2da:	46f4      	mov	ip, lr
 800d2dc:	d1f6      	bne.n	800d2cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800d2de:	6838      	ldr	r0, [r7, #0]
 800d2e0:	f8ce 0000 	str.w	r0, [lr]
 800d2e4:	88b9      	ldrh	r1, [r7, #4]
 800d2e6:	f8ae 1004 	strh.w	r1, [lr, #4]
 800d2ea:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800d2ee:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d2f2:	d009      	beq.n	800d308 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800d2f4:	7b51      	ldrb	r1, [r2, #13]
 800d2f6:	7992      	ldrb	r2, [r2, #6]
 800d2f8:	0149      	lsls	r1, r1, #5
 800d2fa:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d2fe:	4311      	orrs	r1, r2
 800d300:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800d304:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800d308:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d30c:	d00d      	beq.n	800d32a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800d30e:	442b      	add	r3, r5
 800d310:	b29b      	uxth	r3, r3
 800d312:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800d316:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800d31a:	10db      	asrs	r3, r3, #3
 800d31c:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800d320:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d324:	4313      	orrs	r3, r2
 800d326:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800d32a:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800d32e:	00cb      	lsls	r3, r1, #3
 800d330:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d334:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800d338:	064f      	lsls	r7, r1, #25
 800d33a:	ea43 0302 	orr.w	r3, r3, r2
 800d33e:	bf44      	itt	mi
 800d340:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d344:	b21b      	sxthmi	r3, r3
 800d346:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800d34a:	1b5d      	subs	r5, r3, r5
 800d34c:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 800d350:	4632      	mov	r2, r6
 800d352:	e6fb      	b.n	800d14c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800d354:	f104 0e40 	add.w	lr, r4, #64	; 0x40
 800d358:	4694      	mov	ip, r2
 800d35a:	f102 0908 	add.w	r9, r2, #8
 800d35e:	4676      	mov	r6, lr
 800d360:	f8dc 0000 	ldr.w	r0, [ip]
 800d364:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800d368:	46f0      	mov	r8, lr
 800d36a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800d36e:	f10c 0c08 	add.w	ip, ip, #8
 800d372:	45cc      	cmp	ip, r9
 800d374:	46c6      	mov	lr, r8
 800d376:	d1f3      	bne.n	800d360 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800d378:	f8dc 0000 	ldr.w	r0, [ip]
 800d37c:	f8c8 0000 	str.w	r0, [r8]
 800d380:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800d384:	f8a8 1004 	strh.w	r1, [r8, #4]
 800d388:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800d38c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800d390:	d009      	beq.n	800d3a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800d392:	7b51      	ldrb	r1, [r2, #13]
 800d394:	7992      	ldrb	r2, [r2, #6]
 800d396:	0149      	lsls	r1, r1, #5
 800d398:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800d39c:	4311      	orrs	r1, r2
 800d39e:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800d3a2:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 800d3a6:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800d3aa:	d00d      	beq.n	800d3c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800d3ac:	1bdb      	subs	r3, r3, r7
 800d3ae:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 800d3b2:	b29b      	uxth	r3, r3
 800d3b4:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 800d3b8:	10db      	asrs	r3, r3, #3
 800d3ba:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d3be:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800d3c2:	4313      	orrs	r3, r2
 800d3c4:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800d3c8:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800d3cc:	00cb      	lsls	r3, r1, #3
 800d3ce:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d3d2:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 800d3d6:	0648      	lsls	r0, r1, #25
 800d3d8:	ea43 0302 	orr.w	r3, r3, r2
 800d3dc:	bf44      	itt	mi
 800d3de:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800d3e2:	b21b      	sxthmi	r3, r3
 800d3e4:	e7b1      	b.n	800d34a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800d3e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800d3e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d3ec:	461e      	mov	r6, r3
 800d3ee:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d3f0:	4604      	mov	r4, r0
 800d3f2:	4617      	mov	r7, r2
 800d3f4:	b92b      	cbnz	r3, 800d402 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800d3f6:	4b25      	ldr	r3, [pc, #148]	; (800d48c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800d3f8:	4a25      	ldr	r2, [pc, #148]	; (800d490 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800d3fa:	4826      	ldr	r0, [pc, #152]	; (800d494 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800d3fc:	21c0      	movs	r1, #192	; 0xc0
 800d3fe:	f00c fb4f 	bl	8019aa0 <__assert_func>
 800d402:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d404:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800d408:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800d40c:	f7f5 fbd2 	bl	8002bb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d410:	4605      	mov	r5, r0
 800d412:	b918      	cbnz	r0, 800d41c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800d414:	6030      	str	r0, [r6, #0]
 800d416:	4628      	mov	r0, r5
 800d418:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d41c:	683b      	ldr	r3, [r7, #0]
 800d41e:	4601      	mov	r1, r0
 800d420:	68db      	ldr	r3, [r3, #12]
 800d422:	4638      	mov	r0, r7
 800d424:	4798      	blx	r3
 800d426:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800d42a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800d42e:	4602      	mov	r2, r0
 800d430:	6030      	str	r0, [r6, #0]
 800d432:	d213      	bcs.n	800d45c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800d434:	4643      	mov	r3, r8
 800d436:	4639      	mov	r1, r7
 800d438:	4620      	mov	r0, r4
 800d43a:	f7ff fe33 	bl	800d0a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800d43e:	6030      	str	r0, [r6, #0]
 800d440:	6833      	ldr	r3, [r6, #0]
 800d442:	b143      	cbz	r3, 800d456 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800d444:	7b5a      	ldrb	r2, [r3, #13]
 800d446:	7a9b      	ldrb	r3, [r3, #10]
 800d448:	0052      	lsls	r2, r2, #1
 800d44a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d44e:	4313      	orrs	r3, r2
 800d450:	bf0c      	ite	eq
 800d452:	2301      	moveq	r3, #1
 800d454:	2300      	movne	r3, #0
 800d456:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800d45a:	e7dc      	b.n	800d416 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800d45c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800d460:	b29b      	uxth	r3, r3
 800d462:	2b7f      	cmp	r3, #127	; 0x7f
 800d464:	d804      	bhi.n	800d470 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800d466:	4639      	mov	r1, r7
 800d468:	4620      	mov	r0, r4
 800d46a:	f7ff fd01 	bl	800ce70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800d46e:	e7e6      	b.n	800d43e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800d470:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800d474:	2b00      	cmp	r3, #0
 800d476:	d0e3      	beq.n	800d440 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800d478:	f640 1302 	movw	r3, #2306	; 0x902
 800d47c:	429d      	cmp	r5, r3
 800d47e:	d1df      	bne.n	800d440 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800d480:	4601      	mov	r1, r0
 800d482:	4620      	mov	r0, r4
 800d484:	f7ff fcc6 	bl	800ce14 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800d488:	e7d9      	b.n	800d43e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800d48a:	bf00      	nop
 800d48c:	0801b884 	.word	0x0801b884
 800d490:	0801ce63 	.word	0x0801ce63
 800d494:	0801b8ab 	.word	0x0801b8ab

0800d498 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800d498:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d49c:	461e      	mov	r6, r3
 800d49e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800d4a0:	4604      	mov	r4, r0
 800d4a2:	4617      	mov	r7, r2
 800d4a4:	b92b      	cbnz	r3, 800d4b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 800d4a6:	4b26      	ldr	r3, [pc, #152]	; (800d540 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 800d4a8:	4a26      	ldr	r2, [pc, #152]	; (800d544 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 800d4aa:	4827      	ldr	r0, [pc, #156]	; (800d548 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 800d4ac:	21c0      	movs	r1, #192	; 0xc0
 800d4ae:	f00c faf7 	bl	8019aa0 <__assert_func>
 800d4b2:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d4b4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800d4b8:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800d4bc:	f7f5 fb7a 	bl	8002bb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d4c0:	4605      	mov	r5, r0
 800d4c2:	b918      	cbnz	r0, 800d4cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 800d4c4:	6030      	str	r0, [r6, #0]
 800d4c6:	4628      	mov	r0, r5
 800d4c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800d4cc:	683b      	ldr	r3, [r7, #0]
 800d4ce:	4601      	mov	r1, r0
 800d4d0:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800d4d4:	4638      	mov	r0, r7
 800d4d6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d4da:	47c8      	blx	r9
 800d4dc:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800d4e0:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800d4e4:	4602      	mov	r2, r0
 800d4e6:	6030      	str	r0, [r6, #0]
 800d4e8:	d213      	bcs.n	800d512 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 800d4ea:	4643      	mov	r3, r8
 800d4ec:	4639      	mov	r1, r7
 800d4ee:	4620      	mov	r0, r4
 800d4f0:	f7ff fdd8 	bl	800d0a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800d4f4:	6030      	str	r0, [r6, #0]
 800d4f6:	6833      	ldr	r3, [r6, #0]
 800d4f8:	b143      	cbz	r3, 800d50c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 800d4fa:	7b5a      	ldrb	r2, [r3, #13]
 800d4fc:	7a9b      	ldrb	r3, [r3, #10]
 800d4fe:	0052      	lsls	r2, r2, #1
 800d500:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d504:	4313      	orrs	r3, r2
 800d506:	bf0c      	ite	eq
 800d508:	2301      	moveq	r3, #1
 800d50a:	2300      	movne	r3, #0
 800d50c:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800d510:	e7d9      	b.n	800d4c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 800d512:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800d516:	b29b      	uxth	r3, r3
 800d518:	2b7f      	cmp	r3, #127	; 0x7f
 800d51a:	d804      	bhi.n	800d526 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 800d51c:	4639      	mov	r1, r7
 800d51e:	4620      	mov	r0, r4
 800d520:	f7ff fca6 	bl	800ce70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800d524:	e7e6      	b.n	800d4f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800d526:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800d52a:	2b00      	cmp	r3, #0
 800d52c:	d0e3      	beq.n	800d4f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800d52e:	f640 1302 	movw	r3, #2306	; 0x902
 800d532:	429d      	cmp	r5, r3
 800d534:	d1df      	bne.n	800d4f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 800d536:	4601      	mov	r1, r0
 800d538:	4620      	mov	r0, r4
 800d53a:	f7ff fc6b 	bl	800ce14 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800d53e:	e7d9      	b.n	800d4f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 800d540:	0801b884 	.word	0x0801b884
 800d544:	0801ce63 	.word	0x0801ce63
 800d548:	0801b8ab 	.word	0x0801b8ab

0800d54c <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800d54c:	b510      	push	{r4, lr}
 800d54e:	4604      	mov	r4, r0
 800d550:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800d552:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d554:	b9d9      	cbnz	r1, 800d58e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 800d556:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d558:	2b0a      	cmp	r3, #10
 800d55a:	d036      	beq.n	800d5ca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800d55c:	4620      	mov	r0, r4
 800d55e:	f7ff fc22 	bl	800cda6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800d562:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d564:	2b09      	cmp	r3, #9
 800d566:	d906      	bls.n	800d576 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 800d568:	4b18      	ldr	r3, [pc, #96]	; (800d5cc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 800d56a:	4a19      	ldr	r2, [pc, #100]	; (800d5d0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800d56c:	4819      	ldr	r0, [pc, #100]	; (800d5d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800d56e:	f44f 7182 	mov.w	r1, #260	; 0x104
 800d572:	f00c fa95 	bl	8019aa0 <__assert_func>
 800d576:	1c5a      	adds	r2, r3, #1
 800d578:	8622      	strh	r2, [r4, #48]	; 0x30
 800d57a:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800d57c:	4413      	add	r3, r2
 800d57e:	b29b      	uxth	r3, r3
 800d580:	2b09      	cmp	r3, #9
 800d582:	bf88      	it	hi
 800d584:	3b0a      	subhi	r3, #10
 800d586:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d58a:	8358      	strh	r0, [r3, #26]
 800d58c:	e7e3      	b.n	800d556 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 800d58e:	2b0a      	cmp	r3, #10
 800d590:	d01b      	beq.n	800d5ca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800d592:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800d594:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800d598:	3901      	subs	r1, #1
 800d59a:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 800d59c:	8721      	strh	r1, [r4, #56]	; 0x38
 800d59e:	1c51      	adds	r1, r2, #1
 800d5a0:	b289      	uxth	r1, r1
 800d5a2:	2901      	cmp	r1, #1
 800d5a4:	bf8a      	itet	hi
 800d5a6:	f102 32ff 	addhi.w	r2, r2, #4294967295	; 0xffffffff
 800d5aa:	86e1      	strhls	r1, [r4, #54]	; 0x36
 800d5ac:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 800d5ae:	2b09      	cmp	r3, #9
 800d5b0:	d8da      	bhi.n	800d568 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 800d5b2:	1c5a      	adds	r2, r3, #1
 800d5b4:	8622      	strh	r2, [r4, #48]	; 0x30
 800d5b6:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800d5b8:	4413      	add	r3, r2
 800d5ba:	b29b      	uxth	r3, r3
 800d5bc:	2b09      	cmp	r3, #9
 800d5be:	bf88      	it	hi
 800d5c0:	3b0a      	subhi	r3, #10
 800d5c2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d5c6:	8358      	strh	r0, [r3, #26]
 800d5c8:	e7c2      	b.n	800d550 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800d5ca:	bd10      	pop	{r4, pc}
 800d5cc:	0801cc34 	.word	0x0801cc34
 800d5d0:	0801cfb9 	.word	0x0801cfb9
 800d5d4:	0801b8ab 	.word	0x0801b8ab

0800d5d8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800d5d8:	b538      	push	{r3, r4, r5, lr}
 800d5da:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800d5dc:	4604      	mov	r4, r0
 800d5de:	b92a      	cbnz	r2, 800d5ec <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800d5e0:	4b13      	ldr	r3, [pc, #76]	; (800d630 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800d5e2:	4a14      	ldr	r2, [pc, #80]	; (800d634 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800d5e4:	4814      	ldr	r0, [pc, #80]	; (800d638 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800d5e6:	21d5      	movs	r1, #213	; 0xd5
 800d5e8:	f00c fa5a 	bl	8019aa0 <__assert_func>
 800d5ec:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800d5ee:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800d5f2:	3a01      	subs	r2, #1
 800d5f4:	8b4d      	ldrh	r5, [r1, #26]
 800d5f6:	8602      	strh	r2, [r0, #48]	; 0x30
 800d5f8:	1c5a      	adds	r2, r3, #1
 800d5fa:	b292      	uxth	r2, r2
 800d5fc:	2a09      	cmp	r2, #9
 800d5fe:	bf86      	itte	hi
 800d600:	3b09      	subhi	r3, #9
 800d602:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 800d604:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 800d606:	f7ff ffa1 	bl	800d54c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800d60a:	8b23      	ldrh	r3, [r4, #24]
 800d60c:	2b01      	cmp	r3, #1
 800d60e:	bf9c      	itt	ls
 800d610:	3301      	addls	r3, #1
 800d612:	8323      	strhls	r3, [r4, #24]
 800d614:	8ae3      	ldrh	r3, [r4, #22]
 800d616:	b90b      	cbnz	r3, 800d61c <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800d618:	2302      	movs	r3, #2
 800d61a:	82e3      	strh	r3, [r4, #22]
 800d61c:	8ae3      	ldrh	r3, [r4, #22]
 800d61e:	3b01      	subs	r3, #1
 800d620:	b29b      	uxth	r3, r3
 800d622:	82e3      	strh	r3, [r4, #22]
 800d624:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800d628:	4628      	mov	r0, r5
 800d62a:	8265      	strh	r5, [r4, #18]
 800d62c:	bd38      	pop	{r3, r4, r5, pc}
 800d62e:	bf00      	nop
 800d630:	0801b884 	.word	0x0801b884
 800d634:	0801cf0e 	.word	0x0801cf0e
 800d638:	0801b8ab 	.word	0x0801b8ab

0800d63c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800d63c:	b538      	push	{r3, r4, r5, lr}
 800d63e:	428a      	cmp	r2, r1
 800d640:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 800d642:	d90c      	bls.n	800d65e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800d644:	b92c      	cbnz	r4, 800d652 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800d646:	4b1c      	ldr	r3, [pc, #112]	; (800d6b8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800d648:	4a1c      	ldr	r2, [pc, #112]	; (800d6bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800d64a:	21e1      	movs	r1, #225	; 0xe1
 800d64c:	481c      	ldr	r0, [pc, #112]	; (800d6c0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800d64e:	f00c fa27 	bl	8019aa0 <__assert_func>
 800d652:	3c01      	subs	r4, #1
 800d654:	8604      	strh	r4, [r0, #48]	; 0x30
 800d656:	4b1b      	ldr	r3, [pc, #108]	; (800d6c4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800d658:	4a1b      	ldr	r2, [pc, #108]	; (800d6c8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800d65a:	21c5      	movs	r1, #197	; 0xc5
 800d65c:	e7f6      	b.n	800d64c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800d65e:	428c      	cmp	r4, r1
 800d660:	d203      	bcs.n	800d66a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800d662:	4b1a      	ldr	r3, [pc, #104]	; (800d6cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800d664:	4a1a      	ldr	r2, [pc, #104]	; (800d6d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800d666:	21cb      	movs	r1, #203	; 0xcb
 800d668:	e7f0      	b.n	800d64c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800d66a:	1a64      	subs	r4, r4, r1
 800d66c:	8604      	strh	r4, [r0, #48]	; 0x30
 800d66e:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 800d670:	4421      	add	r1, r4
 800d672:	b289      	uxth	r1, r1
 800d674:	2909      	cmp	r1, #9
 800d676:	bf88      	it	hi
 800d678:	390a      	subhi	r1, #10
 800d67a:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800d67c:	250a      	movs	r5, #10
 800d67e:	b1ba      	cbz	r2, 800d6b0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800d680:	3a01      	subs	r2, #1
 800d682:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 800d684:	b292      	uxth	r2, r2
 800d686:	2909      	cmp	r1, #9
 800d688:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800d68c:	d903      	bls.n	800d696 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800d68e:	4b11      	ldr	r3, [pc, #68]	; (800d6d4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800d690:	4a11      	ldr	r2, [pc, #68]	; (800d6d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800d692:	21e6      	movs	r1, #230	; 0xe6
 800d694:	e7da      	b.n	800d64c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800d696:	3101      	adds	r1, #1
 800d698:	8601      	strh	r1, [r0, #48]	; 0x30
 800d69a:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800d69c:	b901      	cbnz	r1, 800d6a0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800d69e:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800d6a0:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800d6a2:	3901      	subs	r1, #1
 800d6a4:	b289      	uxth	r1, r1
 800d6a6:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800d6a8:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800d6ac:	834c      	strh	r4, [r1, #26]
 800d6ae:	e7e6      	b.n	800d67e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800d6b0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d6b4:	f7ff bf4a 	b.w	800d54c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800d6b8:	0801b884 	.word	0x0801b884
 800d6bc:	0801cce7 	.word	0x0801cce7
 800d6c0:	0801b8ab 	.word	0x0801b8ab
 800d6c4:	0801b8d7 	.word	0x0801b8d7
 800d6c8:	0801cd91 	.word	0x0801cd91
 800d6cc:	0801cc40 	.word	0x0801cc40
 800d6d0:	0801d068 	.word	0x0801d068
 800d6d4:	0801cc4c 	.word	0x0801cc4c
 800d6d8:	0801cc5f 	.word	0x0801cc5f

0800d6dc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800d6dc:	3a01      	subs	r2, #1
 800d6de:	b570      	push	{r4, r5, r6, lr}
 800d6e0:	b292      	uxth	r2, r2
 800d6e2:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800d6e6:	42b2      	cmp	r2, r6
 800d6e8:	d019      	beq.n	800d71e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800d6ea:	8b04      	ldrh	r4, [r0, #24]
 800d6ec:	f831 5b02 	ldrh.w	r5, [r1], #2
 800d6f0:	4294      	cmp	r4, r2
 800d6f2:	d805      	bhi.n	800d700 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800d6f4:	4b19      	ldr	r3, [pc, #100]	; (800d75c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800d6f6:	4a1a      	ldr	r2, [pc, #104]	; (800d760 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800d6f8:	481a      	ldr	r0, [pc, #104]	; (800d764 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800d6fa:	21c5      	movs	r1, #197	; 0xc5
 800d6fc:	f00c f9d0 	bl	8019aa0 <__assert_func>
 800d700:	8ac4      	ldrh	r4, [r0, #22]
 800d702:	4414      	add	r4, r2
 800d704:	b2a4      	uxth	r4, r4
 800d706:	2c01      	cmp	r4, #1
 800d708:	bf88      	it	hi
 800d70a:	3c02      	subhi	r4, #2
 800d70c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800d710:	3a01      	subs	r2, #1
 800d712:	8a64      	ldrh	r4, [r4, #18]
 800d714:	42ac      	cmp	r4, r5
 800d716:	b292      	uxth	r2, r2
 800d718:	d0e5      	beq.n	800d6e6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800d71a:	2000      	movs	r0, #0
 800d71c:	bd70      	pop	{r4, r5, r6, pc}
 800d71e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800d722:	2400      	movs	r4, #0
 800d724:	4413      	add	r3, r2
 800d726:	b2a2      	uxth	r2, r4
 800d728:	429a      	cmp	r2, r3
 800d72a:	da14      	bge.n	800d756 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800d72c:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800d72e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800d732:	4296      	cmp	r6, r2
 800d734:	d802      	bhi.n	800d73c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800d736:	4b09      	ldr	r3, [pc, #36]	; (800d75c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800d738:	4a0b      	ldr	r2, [pc, #44]	; (800d768 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800d73a:	e7dd      	b.n	800d6f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800d73c:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 800d73e:	4432      	add	r2, r6
 800d740:	b292      	uxth	r2, r2
 800d742:	2a09      	cmp	r2, #9
 800d744:	bf88      	it	hi
 800d746:	3a0a      	subhi	r2, #10
 800d748:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800d74c:	3401      	adds	r4, #1
 800d74e:	8b52      	ldrh	r2, [r2, #26]
 800d750:	42aa      	cmp	r2, r5
 800d752:	d0e8      	beq.n	800d726 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800d754:	e7e1      	b.n	800d71a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800d756:	2001      	movs	r0, #1
 800d758:	e7e0      	b.n	800d71c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800d75a:	bf00      	nop
 800d75c:	0801b8d7 	.word	0x0801b8d7
 800d760:	0801d0ec 	.word	0x0801d0ec
 800d764:	0801b8ab 	.word	0x0801b8ab
 800d768:	0801cd91 	.word	0x0801cd91

0800d76c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800d76c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d770:	4605      	mov	r5, r0
 800d772:	4616      	mov	r6, r2
 800d774:	1c8c      	adds	r4, r1, #2
 800d776:	8809      	ldrh	r1, [r1, #0]
 800d778:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800d77c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800d780:	42b3      	cmp	r3, r6
 800d782:	d124      	bne.n	800d7ce <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800d784:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800d788:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800d78c:	f001 070f 	and.w	r7, r1, #15
 800d790:	f8cd 8000 	str.w	r8, [sp]
 800d794:	464b      	mov	r3, r9
 800d796:	4652      	mov	r2, sl
 800d798:	4621      	mov	r1, r4
 800d79a:	4628      	mov	r0, r5
 800d79c:	f7ff ff9e 	bl	800d6dc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800d7a0:	4683      	mov	fp, r0
 800d7a2:	b168      	cbz	r0, 800d7c0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800d7a4:	eb0a 0109 	add.w	r1, sl, r9
 800d7a8:	4441      	add	r1, r8
 800d7aa:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800d7ae:	463a      	mov	r2, r7
 800d7b0:	4649      	mov	r1, r9
 800d7b2:	4628      	mov	r0, r5
 800d7b4:	f7ff ff42 	bl	800d63c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800d7b8:	4658      	mov	r0, fp
 800d7ba:	b003      	add	sp, #12
 800d7bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d7c0:	eb07 010a 	add.w	r1, r7, sl
 800d7c4:	4449      	add	r1, r9
 800d7c6:	4441      	add	r1, r8
 800d7c8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800d7cc:	e7d2      	b.n	800d774 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800d7ce:	f04f 0b00 	mov.w	fp, #0
 800d7d2:	e7f1      	b.n	800d7b8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800d7d4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800d7d4:	b570      	push	{r4, r5, r6, lr}
 800d7d6:	8810      	ldrh	r0, [r2, #0]
 800d7d8:	4298      	cmp	r0, r3
 800d7da:	d817      	bhi.n	800d80c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d7dc:	1e48      	subs	r0, r1, #1
 800d7de:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800d7e2:	4298      	cmp	r0, r3
 800d7e4:	d312      	bcc.n	800d80c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d7e6:	2400      	movs	r4, #0
 800d7e8:	428c      	cmp	r4, r1
 800d7ea:	d20f      	bcs.n	800d80c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d7ec:	1860      	adds	r0, r4, r1
 800d7ee:	1040      	asrs	r0, r0, #1
 800d7f0:	0085      	lsls	r5, r0, #2
 800d7f2:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800d7f6:	42b3      	cmp	r3, r6
 800d7f8:	d902      	bls.n	800d800 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800d7fa:	3001      	adds	r0, #1
 800d7fc:	b284      	uxth	r4, r0
 800d7fe:	e7f3      	b.n	800d7e8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800d800:	d201      	bcs.n	800d806 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800d802:	b281      	uxth	r1, r0
 800d804:	e7f0      	b.n	800d7e8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800d806:	442a      	add	r2, r5
 800d808:	8850      	ldrh	r0, [r2, #2]
 800d80a:	bd70      	pop	{r4, r5, r6, pc}
 800d80c:	2000      	movs	r0, #0
 800d80e:	e7fc      	b.n	800d80a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800d810 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800d810:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d814:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800d816:	886f      	ldrh	r7, [r5, #2]
 800d818:	4604      	mov	r4, r0
 800d81a:	087f      	lsrs	r7, r7, #1
 800d81c:	260b      	movs	r6, #11
 800d81e:	3e01      	subs	r6, #1
 800d820:	d01b      	beq.n	800d85a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800d822:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d824:	b92b      	cbnz	r3, 800d832 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800d826:	4b0e      	ldr	r3, [pc, #56]	; (800d860 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800d828:	4a0e      	ldr	r2, [pc, #56]	; (800d864 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800d82a:	480f      	ldr	r0, [pc, #60]	; (800d868 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800d82c:	21c0      	movs	r1, #192	; 0xc0
 800d82e:	f00c f937 	bl	8019aa0 <__assert_func>
 800d832:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800d834:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d838:	462a      	mov	r2, r5
 800d83a:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800d83e:	4639      	mov	r1, r7
 800d840:	4643      	mov	r3, r8
 800d842:	4620      	mov	r0, r4
 800d844:	f7ff ffc6 	bl	800d7d4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800d848:	b138      	cbz	r0, 800d85a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800d84a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800d84e:	4642      	mov	r2, r8
 800d850:	4620      	mov	r0, r4
 800d852:	f7ff ff8b 	bl	800d76c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800d856:	2800      	cmp	r0, #0
 800d858:	d1e1      	bne.n	800d81e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800d85a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d85e:	bf00      	nop
 800d860:	0801b884 	.word	0x0801b884
 800d864:	0801ce63 	.word	0x0801ce63
 800d868:	0801b8ab 	.word	0x0801b8ab

0800d86c <_ZN8touchgfx7Unicode6strlenEPKt>:
 800d86c:	4602      	mov	r2, r0
 800d86e:	b148      	cbz	r0, 800d884 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 800d870:	2300      	movs	r3, #0
 800d872:	b298      	uxth	r0, r3
 800d874:	3301      	adds	r3, #1
 800d876:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800d87a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 800d87e:	2900      	cmp	r1, #0
 800d880:	d1f7      	bne.n	800d872 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 800d882:	4770      	bx	lr
 800d884:	4770      	bx	lr

0800d886 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 800d886:	b530      	push	{r4, r5, lr}
 800d888:	4604      	mov	r4, r0
 800d88a:	b159      	cbz	r1, 800d8a4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 800d88c:	b148      	cbz	r0, 800d8a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800d88e:	2300      	movs	r3, #0
 800d890:	b298      	uxth	r0, r3
 800d892:	4282      	cmp	r2, r0
 800d894:	d905      	bls.n	800d8a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800d896:	5ccd      	ldrb	r5, [r1, r3]
 800d898:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 800d89c:	3301      	adds	r3, #1
 800d89e:	2d00      	cmp	r5, #0
 800d8a0:	d1f6      	bne.n	800d890 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 800d8a2:	bd30      	pop	{r4, r5, pc}
 800d8a4:	4608      	mov	r0, r1
 800d8a6:	e7fc      	b.n	800d8a2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0800d8a8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 800d8a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d8aa:	b08b      	sub	sp, #44	; 0x2c
 800d8ac:	468c      	mov	ip, r1
 800d8ae:	2100      	movs	r1, #0
 800d8b0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800d8b4:	ae01      	add	r6, sp, #4
 800d8b6:	211f      	movs	r1, #31
 800d8b8:	fbb0 f7f3 	udiv	r7, r0, r3
 800d8bc:	fb03 0517 	mls	r5, r3, r7, r0
 800d8c0:	b2ec      	uxtb	r4, r5
 800d8c2:	2d09      	cmp	r5, #9
 800d8c4:	bfd4      	ite	le
 800d8c6:	3430      	addle	r4, #48	; 0x30
 800d8c8:	3457      	addgt	r4, #87	; 0x57
 800d8ca:	b2e4      	uxtb	r4, r4
 800d8cc:	558c      	strb	r4, [r1, r6]
 800d8ce:	4638      	mov	r0, r7
 800d8d0:	1e4c      	subs	r4, r1, #1
 800d8d2:	b92f      	cbnz	r7, 800d8e0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 800d8d4:	4431      	add	r1, r6
 800d8d6:	4660      	mov	r0, ip
 800d8d8:	f7ff ffd5 	bl	800d886 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800d8dc:	b00b      	add	sp, #44	; 0x2c
 800d8de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d8e0:	4621      	mov	r1, r4
 800d8e2:	e7e9      	b.n	800d8b8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0800d8e4 <_ZN8touchgfx7Unicode4itoaElPtti>:
 800d8e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d8e6:	4607      	mov	r7, r0
 800d8e8:	b08b      	sub	sp, #44	; 0x2c
 800d8ea:	4608      	mov	r0, r1
 800d8ec:	b341      	cbz	r1, 800d940 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800d8ee:	1e99      	subs	r1, r3, #2
 800d8f0:	290e      	cmp	r1, #14
 800d8f2:	d825      	bhi.n	800d940 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800d8f4:	2100      	movs	r1, #0
 800d8f6:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800d8fa:	463c      	mov	r4, r7
 800d8fc:	261f      	movs	r6, #31
 800d8fe:	f10d 0c04 	add.w	ip, sp, #4
 800d902:	fb94 fef3 	sdiv	lr, r4, r3
 800d906:	fb03 441e 	mls	r4, r3, lr, r4
 800d90a:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 800d90e:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 800d912:	b2ec      	uxtb	r4, r5
 800d914:	2d09      	cmp	r5, #9
 800d916:	bfd4      	ite	le
 800d918:	3430      	addle	r4, #48	; 0x30
 800d91a:	3457      	addgt	r4, #87	; 0x57
 800d91c:	b2e4      	uxtb	r4, r4
 800d91e:	f80c 4006 	strb.w	r4, [ip, r6]
 800d922:	4674      	mov	r4, lr
 800d924:	1e71      	subs	r1, r6, #1
 800d926:	b96c      	cbnz	r4, 800d944 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 800d928:	2f00      	cmp	r7, #0
 800d92a:	da05      	bge.n	800d938 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 800d92c:	ab0a      	add	r3, sp, #40	; 0x28
 800d92e:	4419      	add	r1, r3
 800d930:	232d      	movs	r3, #45	; 0x2d
 800d932:	f801 3c24 	strb.w	r3, [r1, #-36]
 800d936:	1eb1      	subs	r1, r6, #2
 800d938:	3101      	adds	r1, #1
 800d93a:	4461      	add	r1, ip
 800d93c:	f7ff ffa3 	bl	800d886 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800d940:	b00b      	add	sp, #44	; 0x2c
 800d942:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d944:	460e      	mov	r6, r1
 800d946:	e7dc      	b.n	800d902 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

0800d948 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 800d948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d94c:	4691      	mov	r9, r2
 800d94e:	b085      	sub	sp, #20
 800d950:	6802      	ldr	r2, [r0, #0]
 800d952:	9201      	str	r2, [sp, #4]
 800d954:	4688      	mov	r8, r1
 800d956:	4683      	mov	fp, r0
 800d958:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 800d95c:	9103      	str	r1, [sp, #12]
 800d95e:	4610      	mov	r0, r2
 800d960:	461c      	mov	r4, r3
 800d962:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800d966:	9302      	str	r3, [sp, #8]
 800d968:	f7ff ff80 	bl	800d86c <_ZN8touchgfx7Unicode6strlenEPKt>
 800d96c:	f1b8 0f00 	cmp.w	r8, #0
 800d970:	bf0c      	ite	eq
 800d972:	4684      	moveq	ip, r0
 800d974:	f100 0c01 	addne.w	ip, r0, #1
 800d978:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 800d97c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 800d980:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800d982:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800d984:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 800d988:	9903      	ldr	r1, [sp, #12]
 800d98a:	fa1f fc8c 	uxth.w	ip, ip
 800d98e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800d992:	d041      	beq.n	800da18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800d994:	d834      	bhi.n	800da00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 800d996:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 800d99a:	d059      	beq.n	800da50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 800d99c:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 800d9a0:	d03a      	beq.n	800da18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800d9a2:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 800d9a6:	d034      	beq.n	800da12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800d9a8:	2400      	movs	r4, #0
 800d9aa:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800d9ae:	3a01      	subs	r2, #1
 800d9b0:	b169      	cbz	r1, 800d9ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800d9b2:	9911      	ldr	r1, [sp, #68]	; 0x44
 800d9b4:	458c      	cmp	ip, r1
 800d9b6:	da09      	bge.n	800d9cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800d9b8:	eba1 010c 	sub.w	r1, r1, ip
 800d9bc:	b289      	uxth	r1, r1
 800d9be:	b933      	cbnz	r3, 800d9ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800d9c0:	2e00      	cmp	r6, #0
 800d9c2:	d051      	beq.n	800da68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800d9c4:	2800      	cmp	r0, #0
 800d9c6:	d04f      	beq.n	800da68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800d9c8:	440c      	add	r4, r1
 800d9ca:	b2a4      	uxth	r4, r4
 800d9cc:	2100      	movs	r1, #0
 800d9ce:	682b      	ldr	r3, [r5, #0]
 800d9d0:	4293      	cmp	r3, r2
 800d9d2:	da07      	bge.n	800d9e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800d9d4:	f1b8 0f00 	cmp.w	r8, #0
 800d9d8:	d004      	beq.n	800d9e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800d9da:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 800d9de:	682b      	ldr	r3, [r5, #0]
 800d9e0:	3301      	adds	r3, #1
 800d9e2:	602b      	str	r3, [r5, #0]
 800d9e4:	2730      	movs	r7, #48	; 0x30
 800d9e6:	2c00      	cmp	r4, #0
 800d9e8:	d04e      	beq.n	800da88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800d9ea:	682e      	ldr	r6, [r5, #0]
 800d9ec:	3c01      	subs	r4, #1
 800d9ee:	42b2      	cmp	r2, r6
 800d9f0:	b2a4      	uxth	r4, r4
 800d9f2:	dd49      	ble.n	800da88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800d9f4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800d9f8:	682b      	ldr	r3, [r5, #0]
 800d9fa:	3301      	adds	r3, #1
 800d9fc:	602b      	str	r3, [r5, #0]
 800d9fe:	e7f2      	b.n	800d9e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 800da00:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 800da04:	d01d      	beq.n	800da42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 800da06:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 800da0a:	d002      	beq.n	800da12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800da0c:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 800da10:	e7c9      	b.n	800d9a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 800da12:	4684      	mov	ip, r0
 800da14:	f04f 0800 	mov.w	r8, #0
 800da18:	2c00      	cmp	r4, #0
 800da1a:	d0c6      	beq.n	800d9aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800da1c:	b947      	cbnz	r7, 800da30 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800da1e:	2801      	cmp	r0, #1
 800da20:	d106      	bne.n	800da30 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800da22:	8814      	ldrh	r4, [r2, #0]
 800da24:	2c30      	cmp	r4, #48	; 0x30
 800da26:	bf02      	ittt	eq
 800da28:	3202      	addeq	r2, #2
 800da2a:	f8cb 2000 	streq.w	r2, [fp]
 800da2e:	4638      	moveq	r0, r7
 800da30:	45bc      	cmp	ip, r7
 800da32:	da14      	bge.n	800da5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 800da34:	b2bf      	uxth	r7, r7
 800da36:	eba7 040c 	sub.w	r4, r7, ip
 800da3a:	b2a4      	uxth	r4, r4
 800da3c:	46bc      	mov	ip, r7
 800da3e:	2600      	movs	r6, #0
 800da40:	e7b3      	b.n	800d9aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800da42:	4684      	mov	ip, r0
 800da44:	b16c      	cbz	r4, 800da62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 800da46:	42b8      	cmp	r0, r7
 800da48:	dd00      	ble.n	800da4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 800da4a:	b2b8      	uxth	r0, r7
 800da4c:	2400      	movs	r4, #0
 800da4e:	e003      	b.n	800da58 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 800da50:	f04f 0c01 	mov.w	ip, #1
 800da54:	2400      	movs	r4, #0
 800da56:	4660      	mov	r0, ip
 800da58:	4626      	mov	r6, r4
 800da5a:	46a0      	mov	r8, r4
 800da5c:	e7a5      	b.n	800d9aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800da5e:	2400      	movs	r4, #0
 800da60:	e7ed      	b.n	800da3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 800da62:	4626      	mov	r6, r4
 800da64:	46a0      	mov	r8, r4
 800da66:	e7a0      	b.n	800d9aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800da68:	2900      	cmp	r1, #0
 800da6a:	d0b0      	beq.n	800d9ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800da6c:	2720      	movs	r7, #32
 800da6e:	682e      	ldr	r6, [r5, #0]
 800da70:	2900      	cmp	r1, #0
 800da72:	d0ac      	beq.n	800d9ce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800da74:	3901      	subs	r1, #1
 800da76:	4296      	cmp	r6, r2
 800da78:	b289      	uxth	r1, r1
 800da7a:	daa7      	bge.n	800d9cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800da7c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800da80:	682b      	ldr	r3, [r5, #0]
 800da82:	3301      	adds	r3, #1
 800da84:	602b      	str	r3, [r5, #0]
 800da86:	e7f2      	b.n	800da6e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 800da88:	b188      	cbz	r0, 800daae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800da8a:	682b      	ldr	r3, [r5, #0]
 800da8c:	3801      	subs	r0, #1
 800da8e:	429a      	cmp	r2, r3
 800da90:	b280      	uxth	r0, r0
 800da92:	dd0c      	ble.n	800daae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800da94:	f8db 3000 	ldr.w	r3, [fp]
 800da98:	1c9c      	adds	r4, r3, #2
 800da9a:	f8cb 4000 	str.w	r4, [fp]
 800da9e:	881c      	ldrh	r4, [r3, #0]
 800daa0:	682b      	ldr	r3, [r5, #0]
 800daa2:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 800daa6:	682b      	ldr	r3, [r5, #0]
 800daa8:	3301      	adds	r3, #1
 800daaa:	602b      	str	r3, [r5, #0]
 800daac:	e7ec      	b.n	800da88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800daae:	2620      	movs	r6, #32
 800dab0:	b151      	cbz	r1, 800dac8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800dab2:	6828      	ldr	r0, [r5, #0]
 800dab4:	3901      	subs	r1, #1
 800dab6:	4282      	cmp	r2, r0
 800dab8:	b289      	uxth	r1, r1
 800daba:	dd05      	ble.n	800dac8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800dabc:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 800dac0:	682b      	ldr	r3, [r5, #0]
 800dac2:	3301      	adds	r3, #1
 800dac4:	602b      	str	r3, [r5, #0]
 800dac6:	e7f3      	b.n	800dab0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 800dac8:	b005      	add	sp, #20
 800daca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800dace <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 800dace:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dad2:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 800dad6:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 800dada:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 800dade:	2400      	movs	r4, #0
 800dae0:	8014      	strh	r4, [r2, #0]
 800dae2:	701c      	strb	r4, [r3, #0]
 800dae4:	f888 4000 	strb.w	r4, [r8]
 800dae8:	f88c 4000 	strb.w	r4, [ip]
 800daec:	f88e 4000 	strb.w	r4, [lr]
 800daf0:	703c      	strb	r4, [r7, #0]
 800daf2:	6804      	ldr	r4, [r0, #0]
 800daf4:	b1a4      	cbz	r4, 800db20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 800daf6:	8824      	ldrh	r4, [r4, #0]
 800daf8:	f04f 0901 	mov.w	r9, #1
 800dafc:	b314      	cbz	r4, 800db44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800dafe:	2c2b      	cmp	r4, #43	; 0x2b
 800db00:	d001      	beq.n	800db06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 800db02:	2c20      	cmp	r4, #32
 800db04:	d110      	bne.n	800db28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 800db06:	8014      	strh	r4, [r2, #0]
 800db08:	6804      	ldr	r4, [r0, #0]
 800db0a:	b10c      	cbz	r4, 800db10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 800db0c:	3402      	adds	r4, #2
 800db0e:	6004      	str	r4, [r0, #0]
 800db10:	680c      	ldr	r4, [r1, #0]
 800db12:	b10c      	cbz	r4, 800db18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 800db14:	3401      	adds	r4, #1
 800db16:	600c      	str	r4, [r1, #0]
 800db18:	6804      	ldr	r4, [r0, #0]
 800db1a:	b17c      	cbz	r4, 800db3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 800db1c:	8824      	ldrh	r4, [r4, #0]
 800db1e:	e7ed      	b.n	800dafc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800db20:	680c      	ldr	r4, [r1, #0]
 800db22:	b17c      	cbz	r4, 800db44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800db24:	7824      	ldrb	r4, [r4, #0]
 800db26:	e7e7      	b.n	800daf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 800db28:	2c2d      	cmp	r4, #45	; 0x2d
 800db2a:	d102      	bne.n	800db32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 800db2c:	f883 9000 	strb.w	r9, [r3]
 800db30:	e7ea      	b.n	800db08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800db32:	2c23      	cmp	r4, #35	; 0x23
 800db34:	d107      	bne.n	800db46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 800db36:	f888 9000 	strb.w	r9, [r8]
 800db3a:	e7e5      	b.n	800db08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800db3c:	680c      	ldr	r4, [r1, #0]
 800db3e:	b10c      	cbz	r4, 800db44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800db40:	7824      	ldrb	r4, [r4, #0]
 800db42:	e7db      	b.n	800dafc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800db44:	2400      	movs	r4, #0
 800db46:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800db4a:	2b09      	cmp	r3, #9
 800db4c:	d901      	bls.n	800db52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 800db4e:	2c2a      	cmp	r4, #42	; 0x2a
 800db50:	d122      	bne.n	800db98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800db52:	2301      	movs	r3, #1
 800db54:	2c30      	cmp	r4, #48	; 0x30
 800db56:	f88e 3000 	strb.w	r3, [lr]
 800db5a:	d10d      	bne.n	800db78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800db5c:	f88c 3000 	strb.w	r3, [ip]
 800db60:	6803      	ldr	r3, [r0, #0]
 800db62:	b10b      	cbz	r3, 800db68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 800db64:	3302      	adds	r3, #2
 800db66:	6003      	str	r3, [r0, #0]
 800db68:	680b      	ldr	r3, [r1, #0]
 800db6a:	b10b      	cbz	r3, 800db70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 800db6c:	3301      	adds	r3, #1
 800db6e:	600b      	str	r3, [r1, #0]
 800db70:	6803      	ldr	r3, [r0, #0]
 800db72:	2b00      	cmp	r3, #0
 800db74:	d02f      	beq.n	800dbd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 800db76:	881c      	ldrh	r4, [r3, #0]
 800db78:	2c2a      	cmp	r4, #42	; 0x2a
 800db7a:	d135      	bne.n	800dbe8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800db7c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800db80:	6033      	str	r3, [r6, #0]
 800db82:	6803      	ldr	r3, [r0, #0]
 800db84:	b10b      	cbz	r3, 800db8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 800db86:	3302      	adds	r3, #2
 800db88:	6003      	str	r3, [r0, #0]
 800db8a:	680b      	ldr	r3, [r1, #0]
 800db8c:	b10b      	cbz	r3, 800db92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 800db8e:	3301      	adds	r3, #1
 800db90:	600b      	str	r3, [r1, #0]
 800db92:	6803      	ldr	r3, [r0, #0]
 800db94:	b31b      	cbz	r3, 800dbde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 800db96:	881c      	ldrh	r4, [r3, #0]
 800db98:	2c2e      	cmp	r4, #46	; 0x2e
 800db9a:	d11a      	bne.n	800dbd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800db9c:	2301      	movs	r3, #1
 800db9e:	703b      	strb	r3, [r7, #0]
 800dba0:	6803      	ldr	r3, [r0, #0]
 800dba2:	b10b      	cbz	r3, 800dba8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 800dba4:	3302      	adds	r3, #2
 800dba6:	6003      	str	r3, [r0, #0]
 800dba8:	680b      	ldr	r3, [r1, #0]
 800dbaa:	b10b      	cbz	r3, 800dbb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 800dbac:	3301      	adds	r3, #1
 800dbae:	600b      	str	r3, [r1, #0]
 800dbb0:	6803      	ldr	r3, [r0, #0]
 800dbb2:	2b00      	cmp	r3, #0
 800dbb4:	d036      	beq.n	800dc24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 800dbb6:	881b      	ldrh	r3, [r3, #0]
 800dbb8:	2b2a      	cmp	r3, #42	; 0x2a
 800dbba:	d137      	bne.n	800dc2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800dbbc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800dbc0:	602b      	str	r3, [r5, #0]
 800dbc2:	6803      	ldr	r3, [r0, #0]
 800dbc4:	b10b      	cbz	r3, 800dbca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 800dbc6:	3302      	adds	r3, #2
 800dbc8:	6003      	str	r3, [r0, #0]
 800dbca:	680b      	ldr	r3, [r1, #0]
 800dbcc:	b10b      	cbz	r3, 800dbd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800dbce:	3301      	adds	r3, #1
 800dbd0:	600b      	str	r3, [r1, #0]
 800dbd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dbd6:	680c      	ldr	r4, [r1, #0]
 800dbd8:	b134      	cbz	r4, 800dbe8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800dbda:	7824      	ldrb	r4, [r4, #0]
 800dbdc:	e7cc      	b.n	800db78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800dbde:	680b      	ldr	r3, [r1, #0]
 800dbe0:	2b00      	cmp	r3, #0
 800dbe2:	d0f6      	beq.n	800dbd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800dbe4:	781c      	ldrb	r4, [r3, #0]
 800dbe6:	e7d7      	b.n	800db98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800dbe8:	2300      	movs	r3, #0
 800dbea:	6033      	str	r3, [r6, #0]
 800dbec:	220a      	movs	r2, #10
 800dbee:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800dbf2:	fa1f f38c 	uxth.w	r3, ip
 800dbf6:	2b09      	cmp	r3, #9
 800dbf8:	d8ce      	bhi.n	800db98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800dbfa:	6833      	ldr	r3, [r6, #0]
 800dbfc:	fb02 c303 	mla	r3, r2, r3, ip
 800dc00:	6033      	str	r3, [r6, #0]
 800dc02:	6803      	ldr	r3, [r0, #0]
 800dc04:	b10b      	cbz	r3, 800dc0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 800dc06:	3302      	adds	r3, #2
 800dc08:	6003      	str	r3, [r0, #0]
 800dc0a:	680b      	ldr	r3, [r1, #0]
 800dc0c:	b10b      	cbz	r3, 800dc12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 800dc0e:	3301      	adds	r3, #1
 800dc10:	600b      	str	r3, [r1, #0]
 800dc12:	6803      	ldr	r3, [r0, #0]
 800dc14:	b10b      	cbz	r3, 800dc1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 800dc16:	881c      	ldrh	r4, [r3, #0]
 800dc18:	e7e9      	b.n	800dbee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800dc1a:	680c      	ldr	r4, [r1, #0]
 800dc1c:	2c00      	cmp	r4, #0
 800dc1e:	d0e6      	beq.n	800dbee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800dc20:	7824      	ldrb	r4, [r4, #0]
 800dc22:	e7e4      	b.n	800dbee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800dc24:	680b      	ldr	r3, [r1, #0]
 800dc26:	b10b      	cbz	r3, 800dc2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800dc28:	781b      	ldrb	r3, [r3, #0]
 800dc2a:	e7c5      	b.n	800dbb8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 800dc2c:	2200      	movs	r2, #0
 800dc2e:	602a      	str	r2, [r5, #0]
 800dc30:	240a      	movs	r4, #10
 800dc32:	3b30      	subs	r3, #48	; 0x30
 800dc34:	b29e      	uxth	r6, r3
 800dc36:	2e09      	cmp	r6, #9
 800dc38:	682a      	ldr	r2, [r5, #0]
 800dc3a:	d813      	bhi.n	800dc64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 800dc3c:	fb04 3302 	mla	r3, r4, r2, r3
 800dc40:	602b      	str	r3, [r5, #0]
 800dc42:	6803      	ldr	r3, [r0, #0]
 800dc44:	b10b      	cbz	r3, 800dc4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 800dc46:	3302      	adds	r3, #2
 800dc48:	6003      	str	r3, [r0, #0]
 800dc4a:	680b      	ldr	r3, [r1, #0]
 800dc4c:	b10b      	cbz	r3, 800dc52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 800dc4e:	3301      	adds	r3, #1
 800dc50:	600b      	str	r3, [r1, #0]
 800dc52:	6803      	ldr	r3, [r0, #0]
 800dc54:	b10b      	cbz	r3, 800dc5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 800dc56:	881b      	ldrh	r3, [r3, #0]
 800dc58:	e7eb      	b.n	800dc32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800dc5a:	680b      	ldr	r3, [r1, #0]
 800dc5c:	2b00      	cmp	r3, #0
 800dc5e:	d0e8      	beq.n	800dc32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800dc60:	781b      	ldrb	r3, [r3, #0]
 800dc62:	e7e6      	b.n	800dc32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800dc64:	2a06      	cmp	r2, #6
 800dc66:	bfa8      	it	ge
 800dc68:	2206      	movge	r2, #6
 800dc6a:	602a      	str	r2, [r5, #0]
 800dc6c:	e7b1      	b.n	800dbd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0800dc6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 800dc6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc72:	b0a3      	sub	sp, #140	; 0x8c
 800dc74:	2600      	movs	r6, #0
 800dc76:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 800dc7a:	4607      	mov	r7, r0
 800dc7c:	4688      	mov	r8, r1
 800dc7e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 800dc82:	4631      	mov	r1, r6
 800dc84:	2242      	movs	r2, #66	; 0x42
 800dc86:	4648      	mov	r0, r9
 800dc88:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 800dc8a:	960d      	str	r6, [sp, #52]	; 0x34
 800dc8c:	f7fe fcf1 	bl	800c672 <_ZN8touchgfx6memsetEPvhm>
 800dc90:	b15f      	cbz	r7, 800dcaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 800dc92:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 800dc96:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800dc98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800dc9a:	b152      	cbz	r2, 800dcb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 800dc9c:	8812      	ldrh	r2, [r2, #0]
 800dc9e:	b10a      	cbz	r2, 800dca4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800dca0:	459a      	cmp	sl, r3
 800dca2:	dc2e      	bgt.n	800dd02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 800dca4:	2200      	movs	r2, #0
 800dca6:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800dcaa:	4638      	mov	r0, r7
 800dcac:	b023      	add	sp, #140	; 0x8c
 800dcae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dcb2:	9a08      	ldr	r2, [sp, #32]
 800dcb4:	2a00      	cmp	r2, #0
 800dcb6:	d0f5      	beq.n	800dca4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800dcb8:	7812      	ldrb	r2, [r2, #0]
 800dcba:	e7f0      	b.n	800dc9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 800dcbc:	2d00      	cmp	r5, #0
 800dcbe:	d0ea      	beq.n	800dc96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800dcc0:	782a      	ldrb	r2, [r5, #0]
 800dcc2:	b142      	cbz	r2, 800dcd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 800dcc4:	2a25      	cmp	r2, #37	; 0x25
 800dcc6:	d001      	beq.n	800dccc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 800dcc8:	459a      	cmp	sl, r3
 800dcca:	dc08      	bgt.n	800dcde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 800dccc:	f1bb 0f00 	cmp.w	fp, #0
 800dcd0:	d121      	bne.n	800dd16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 800dcd2:	2d00      	cmp	r5, #0
 800dcd4:	d0df      	beq.n	800dc96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800dcd6:	782a      	ldrb	r2, [r5, #0]
 800dcd8:	f04f 0b00 	mov.w	fp, #0
 800dcdc:	e01d      	b.n	800dd1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 800dcde:	f1bb 0f00 	cmp.w	fp, #0
 800dce2:	d078      	beq.n	800ddd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 800dce4:	f8bb 2000 	ldrh.w	r2, [fp]
 800dce8:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800dcec:	f1bb 0f00 	cmp.w	fp, #0
 800dcf0:	d002      	beq.n	800dcf8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 800dcf2:	f10b 0202 	add.w	r2, fp, #2
 800dcf6:	9209      	str	r2, [sp, #36]	; 0x24
 800dcf8:	b10d      	cbz	r5, 800dcfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 800dcfa:	3501      	adds	r5, #1
 800dcfc:	9508      	str	r5, [sp, #32]
 800dcfe:	3301      	adds	r3, #1
 800dd00:	930d      	str	r3, [sp, #52]	; 0x34
 800dd02:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 800dd06:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800dd08:	f1bb 0f00 	cmp.w	fp, #0
 800dd0c:	d0d6      	beq.n	800dcbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 800dd0e:	f8bb 2000 	ldrh.w	r2, [fp]
 800dd12:	2a00      	cmp	r2, #0
 800dd14:	d1d6      	bne.n	800dcc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 800dd16:	f8bb 2000 	ldrh.w	r2, [fp]
 800dd1a:	2a00      	cmp	r2, #0
 800dd1c:	d0bb      	beq.n	800dc96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800dd1e:	459a      	cmp	sl, r3
 800dd20:	ddb9      	ble.n	800dc96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800dd22:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 800dd26:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 800dd2a:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800dd2e:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 800dd32:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 800dd36:	960e      	str	r6, [sp, #56]	; 0x38
 800dd38:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 800dd3c:	960f      	str	r6, [sp, #60]	; 0x3c
 800dd3e:	f1bb 0f00 	cmp.w	fp, #0
 800dd42:	d002      	beq.n	800dd4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 800dd44:	f10b 0302 	add.w	r3, fp, #2
 800dd48:	9309      	str	r3, [sp, #36]	; 0x24
 800dd4a:	b10d      	cbz	r5, 800dd50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 800dd4c:	1c6b      	adds	r3, r5, #1
 800dd4e:	9308      	str	r3, [sp, #32]
 800dd50:	ab0f      	add	r3, sp, #60	; 0x3c
 800dd52:	9305      	str	r3, [sp, #20]
 800dd54:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 800dd58:	9304      	str	r3, [sp, #16]
 800dd5a:	ab0e      	add	r3, sp, #56	; 0x38
 800dd5c:	9303      	str	r3, [sp, #12]
 800dd5e:	ab0c      	add	r3, sp, #48	; 0x30
 800dd60:	9302      	str	r3, [sp, #8]
 800dd62:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 800dd66:	9301      	str	r3, [sp, #4]
 800dd68:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800dd6c:	9300      	str	r3, [sp, #0]
 800dd6e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 800dd72:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 800dd76:	a908      	add	r1, sp, #32
 800dd78:	a809      	add	r0, sp, #36	; 0x24
 800dd7a:	f7ff fea8 	bl	800dace <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 800dd7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800dd80:	2b00      	cmp	r3, #0
 800dd82:	bfbe      	ittt	lt
 800dd84:	6823      	ldrlt	r3, [r4, #0]
 800dd86:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800dd8a:	930e      	strlt	r3, [sp, #56]	; 0x38
 800dd8c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800dd8e:	bfb8      	it	lt
 800dd90:	3404      	addlt	r4, #4
 800dd92:	2b00      	cmp	r3, #0
 800dd94:	bfb8      	it	lt
 800dd96:	6823      	ldrlt	r3, [r4, #0]
 800dd98:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 800dd9c:	bfbe      	ittt	lt
 800dd9e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800dda2:	930f      	strlt	r3, [sp, #60]	; 0x3c
 800dda4:	3404      	addlt	r4, #4
 800dda6:	b1d9      	cbz	r1, 800dde0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 800dda8:	880b      	ldrh	r3, [r1, #0]
 800ddaa:	2b69      	cmp	r3, #105	; 0x69
 800ddac:	d01f      	beq.n	800ddee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800ddae:	d82f      	bhi.n	800de10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 800ddb0:	2b58      	cmp	r3, #88	; 0x58
 800ddb2:	d01c      	beq.n	800ddee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800ddb4:	d818      	bhi.n	800dde8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 800ddb6:	2b25      	cmp	r3, #37	; 0x25
 800ddb8:	d034      	beq.n	800de24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 800ddba:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 800ddbe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ddc0:	f1bb 0f00 	cmp.w	fp, #0
 800ddc4:	f000 80b8 	beq.w	800df38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 800ddc8:	f8bb 5000 	ldrh.w	r5, [fp]
 800ddcc:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 800ddd0:	3301      	adds	r3, #1
 800ddd2:	930d      	str	r3, [sp, #52]	; 0x34
 800ddd4:	e029      	b.n	800de2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800ddd6:	b10d      	cbz	r5, 800dddc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 800ddd8:	782a      	ldrb	r2, [r5, #0]
 800ddda:	e785      	b.n	800dce8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800dddc:	462a      	mov	r2, r5
 800ddde:	e783      	b.n	800dce8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800dde0:	2a00      	cmp	r2, #0
 800dde2:	d0ea      	beq.n	800ddba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800dde4:	7813      	ldrb	r3, [r2, #0]
 800dde6:	e7e0      	b.n	800ddaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 800dde8:	3b63      	subs	r3, #99	; 0x63
 800ddea:	2b01      	cmp	r3, #1
 800ddec:	d8e5      	bhi.n	800ddba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800ddee:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 800ddf2:	b329      	cbz	r1, 800de40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 800ddf4:	880b      	ldrh	r3, [r1, #0]
 800ddf6:	2b69      	cmp	r3, #105	; 0x69
 800ddf8:	d063      	beq.n	800dec2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800ddfa:	d825      	bhi.n	800de48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 800ddfc:	2b63      	cmp	r3, #99	; 0x63
 800ddfe:	d038      	beq.n	800de72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 800de00:	2b64      	cmp	r3, #100	; 0x64
 800de02:	d05e      	beq.n	800dec2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800de04:	2b58      	cmp	r3, #88	; 0x58
 800de06:	d07b      	beq.n	800df00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 800de08:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 800de0c:	4625      	mov	r5, r4
 800de0e:	e036      	b.n	800de7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800de10:	2b73      	cmp	r3, #115	; 0x73
 800de12:	d0ec      	beq.n	800ddee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800de14:	d802      	bhi.n	800de1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 800de16:	2b6f      	cmp	r3, #111	; 0x6f
 800de18:	d1cf      	bne.n	800ddba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800de1a:	e7e8      	b.n	800ddee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800de1c:	2b75      	cmp	r3, #117	; 0x75
 800de1e:	d0e6      	beq.n	800ddee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800de20:	2b78      	cmp	r3, #120	; 0x78
 800de22:	e7f9      	b.n	800de18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 800de24:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800de26:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 800de2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800de2c:	b10b      	cbz	r3, 800de32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 800de2e:	3302      	adds	r3, #2
 800de30:	9309      	str	r3, [sp, #36]	; 0x24
 800de32:	9b08      	ldr	r3, [sp, #32]
 800de34:	2b00      	cmp	r3, #0
 800de36:	f43f af2e 	beq.w	800dc96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800de3a:	3301      	adds	r3, #1
 800de3c:	9308      	str	r3, [sp, #32]
 800de3e:	e72a      	b.n	800dc96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800de40:	2a00      	cmp	r2, #0
 800de42:	d0e1      	beq.n	800de08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800de44:	7813      	ldrb	r3, [r2, #0]
 800de46:	e7d6      	b.n	800ddf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 800de48:	2b73      	cmp	r3, #115	; 0x73
 800de4a:	d036      	beq.n	800deba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 800de4c:	d807      	bhi.n	800de5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 800de4e:	2b6f      	cmp	r3, #111	; 0x6f
 800de50:	d1da      	bne.n	800de08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800de52:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800de54:	1d25      	adds	r5, r4, #4
 800de56:	eba8 0202 	sub.w	r2, r8, r2
 800de5a:	2308      	movs	r3, #8
 800de5c:	e04a      	b.n	800def4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800de5e:	2b75      	cmp	r3, #117	; 0x75
 800de60:	d043      	beq.n	800deea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 800de62:	2b78      	cmp	r3, #120	; 0x78
 800de64:	d1d0      	bne.n	800de08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800de66:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800de68:	1d25      	adds	r5, r4, #4
 800de6a:	eba8 0202 	sub.w	r2, r8, r2
 800de6e:	2310      	movs	r3, #16
 800de70:	e040      	b.n	800def4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800de72:	7823      	ldrb	r3, [r4, #0]
 800de74:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 800de78:	1d25      	adds	r5, r4, #4
 800de7a:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 800de7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800de80:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800de84:	2b00      	cmp	r3, #0
 800de86:	d052      	beq.n	800df2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 800de88:	881a      	ldrh	r2, [r3, #0]
 800de8a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 800de8e:	a80d      	add	r0, sp, #52	; 0x34
 800de90:	9005      	str	r0, [sp, #20]
 800de92:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 800de96:	9004      	str	r0, [sp, #16]
 800de98:	980e      	ldr	r0, [sp, #56]	; 0x38
 800de9a:	9003      	str	r0, [sp, #12]
 800de9c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 800dea0:	9002      	str	r0, [sp, #8]
 800dea2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800dea4:	9001      	str	r0, [sp, #4]
 800dea6:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 800deaa:	9000      	str	r0, [sp, #0]
 800deac:	e9cd 8706 	strd	r8, r7, [sp, #24]
 800deb0:	a810      	add	r0, sp, #64	; 0x40
 800deb2:	f7ff fd49 	bl	800d948 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 800deb6:	462c      	mov	r4, r5
 800deb8:	e7b7      	b.n	800de2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800deba:	6823      	ldr	r3, [r4, #0]
 800debc:	1d25      	adds	r5, r4, #4
 800debe:	9310      	str	r3, [sp, #64]	; 0x40
 800dec0:	e7dd      	b.n	800de7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800dec2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800dec4:	6820      	ldr	r0, [r4, #0]
 800dec6:	eba8 0202 	sub.w	r2, r8, r2
 800deca:	230a      	movs	r3, #10
 800decc:	b292      	uxth	r2, r2
 800dece:	4649      	mov	r1, r9
 800ded0:	f7ff fd08 	bl	800d8e4 <_ZN8touchgfx7Unicode4itoaElPtti>
 800ded4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ded8:	2b2d      	cmp	r3, #45	; 0x2d
 800deda:	f104 0504 	add.w	r5, r4, #4
 800dede:	d1ce      	bne.n	800de7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800dee0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800dee4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800dee6:	3302      	adds	r3, #2
 800dee8:	e7e9      	b.n	800debe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 800deea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800deec:	1d25      	adds	r5, r4, #4
 800deee:	eba8 0202 	sub.w	r2, r8, r2
 800def2:	230a      	movs	r3, #10
 800def4:	b292      	uxth	r2, r2
 800def6:	4649      	mov	r1, r9
 800def8:	6820      	ldr	r0, [r4, #0]
 800defa:	f7ff fcd5 	bl	800d8a8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800defe:	e7be      	b.n	800de7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800df00:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800df02:	6820      	ldr	r0, [r4, #0]
 800df04:	eba8 0202 	sub.w	r2, r8, r2
 800df08:	b292      	uxth	r2, r2
 800df0a:	2310      	movs	r3, #16
 800df0c:	4649      	mov	r1, r9
 800df0e:	f7ff fccb 	bl	800d8a8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800df12:	1d25      	adds	r5, r4, #4
 800df14:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 800df18:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 800df1c:	2b00      	cmp	r3, #0
 800df1e:	d0ae      	beq.n	800de7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800df20:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 800df24:	2919      	cmp	r1, #25
 800df26:	d8f7      	bhi.n	800df18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800df28:	3b20      	subs	r3, #32
 800df2a:	8013      	strh	r3, [r2, #0]
 800df2c:	e7f4      	b.n	800df18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800df2e:	9a08      	ldr	r2, [sp, #32]
 800df30:	2a00      	cmp	r2, #0
 800df32:	d0aa      	beq.n	800de8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800df34:	7812      	ldrb	r2, [r2, #0]
 800df36:	e7a8      	b.n	800de8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800df38:	2d00      	cmp	r5, #0
 800df3a:	f43f af47 	beq.w	800ddcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 800df3e:	782d      	ldrb	r5, [r5, #0]
 800df40:	e744      	b.n	800ddcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0800df42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 800df42:	b507      	push	{r0, r1, r2, lr}
 800df44:	9300      	str	r3, [sp, #0]
 800df46:	4613      	mov	r3, r2
 800df48:	2200      	movs	r2, #0
 800df4a:	f7ff fe90 	bl	800dc6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 800df4e:	b003      	add	sp, #12
 800df50:	f85d fb04 	ldr.w	pc, [sp], #4

0800df54 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 800df54:	b40c      	push	{r2, r3}
 800df56:	b507      	push	{r0, r1, r2, lr}
 800df58:	ab04      	add	r3, sp, #16
 800df5a:	f853 2b04 	ldr.w	r2, [r3], #4
 800df5e:	9301      	str	r3, [sp, #4]
 800df60:	f7ff ffef 	bl	800df42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 800df64:	b003      	add	sp, #12
 800df66:	f85d eb04 	ldr.w	lr, [sp], #4
 800df6a:	b002      	add	sp, #8
 800df6c:	4770      	bx	lr
	...

0800df70 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800df70:	4b01      	ldr	r3, [pc, #4]	; (800df78 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800df72:	6018      	str	r0, [r3, #0]
 800df74:	4770      	bx	lr
 800df76:	bf00      	nop
 800df78:	200121fc 	.word	0x200121fc

0800df7c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800df7c:	4b07      	ldr	r3, [pc, #28]	; (800df9c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x20>)
 800df7e:	881a      	ldrh	r2, [r3, #0]
 800df80:	4282      	cmp	r2, r0
 800df82:	d809      	bhi.n	800df98 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800df84:	4b06      	ldr	r3, [pc, #24]	; (800dfa0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x24>)
 800df86:	881b      	ldrh	r3, [r3, #0]
 800df88:	4413      	add	r3, r2
 800df8a:	4298      	cmp	r0, r3
 800df8c:	da04      	bge.n	800df98 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800df8e:	4b05      	ldr	r3, [pc, #20]	; (800dfa4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x28>)
 800df90:	681b      	ldr	r3, [r3, #0]
 800df92:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800df96:	4770      	bx	lr
 800df98:	2000      	movs	r0, #0
 800df9a:	4770      	bx	lr
 800df9c:	2001221c 	.word	0x2001221c
 800dfa0:	20012220 	.word	0x20012220
 800dfa4:	20012200 	.word	0x20012200

0800dfa8 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800dfa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dfac:	4d28      	ldr	r5, [pc, #160]	; (800e050 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800dfae:	682b      	ldr	r3, [r5, #0]
 800dfb0:	2b00      	cmp	r3, #0
 800dfb2:	d04a      	beq.n	800e04a <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800dfb4:	4a27      	ldr	r2, [pc, #156]	; (800e054 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800dfb6:	4e28      	ldr	r6, [pc, #160]	; (800e058 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800dfb8:	8810      	ldrh	r0, [r2, #0]
 800dfba:	f8b6 8000 	ldrh.w	r8, [r6]
 800dfbe:	4c27      	ldr	r4, [pc, #156]	; (800e05c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800dfc0:	4f27      	ldr	r7, [pc, #156]	; (800e060 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800dfc2:	4440      	add	r0, r8
 800dfc4:	1c41      	adds	r1, r0, #1
 800dfc6:	f021 0101 	bic.w	r1, r1, #1
 800dfca:	0409      	lsls	r1, r1, #16
 800dfcc:	0c09      	lsrs	r1, r1, #16
 800dfce:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 800dfd2:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800dfd6:	eb03 020e 	add.w	r2, r3, lr
 800dfda:	eb0e 010c 	add.w	r1, lr, ip
 800dfde:	6022      	str	r2, [r4, #0]
 800dfe0:	185a      	adds	r2, r3, r1
 800dfe2:	603a      	str	r2, [r7, #0]
 800dfe4:	220e      	movs	r2, #14
 800dfe6:	fb02 f208 	mul.w	r2, r2, r8
 800dfea:	3203      	adds	r2, #3
 800dfec:	f022 0203 	bic.w	r2, r2, #3
 800dff0:	4411      	add	r1, r2
 800dff2:	440b      	add	r3, r1
 800dff4:	491b      	ldr	r1, [pc, #108]	; (800e064 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800dff6:	600b      	str	r3, [r1, #0]
 800dff8:	491b      	ldr	r1, [pc, #108]	; (800e068 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800dffa:	2300      	movs	r3, #0
 800dffc:	800b      	strh	r3, [r1, #0]
 800dffe:	491b      	ldr	r1, [pc, #108]	; (800e06c <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800e000:	6809      	ldr	r1, [r1, #0]
 800e002:	eba1 010e 	sub.w	r1, r1, lr
 800e006:	eba1 010c 	sub.w	r1, r1, ip
 800e00a:	1a8a      	subs	r2, r1, r2
 800e00c:	4918      	ldr	r1, [pc, #96]	; (800e070 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 800e00e:	600a      	str	r2, [r1, #0]
 800e010:	4a18      	ldr	r2, [pc, #96]	; (800e074 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 800e012:	469c      	mov	ip, r3
 800e014:	8013      	strh	r3, [r2, #0]
 800e016:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e01a:	4283      	cmp	r3, r0
 800e01c:	d10d      	bne.n	800e03a <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 800e01e:	8835      	ldrh	r5, [r6, #0]
 800e020:	6838      	ldr	r0, [r7, #0]
 800e022:	2300      	movs	r3, #0
 800e024:	240e      	movs	r4, #14
 800e026:	429d      	cmp	r5, r3
 800e028:	d90f      	bls.n	800e04a <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800e02a:	fb04 0203 	mla	r2, r4, r3, r0
 800e02e:	3301      	adds	r3, #1
 800e030:	7b11      	ldrb	r1, [r2, #12]
 800e032:	f36f 1145 	bfc	r1, #5, #1
 800e036:	7311      	strb	r1, [r2, #12]
 800e038:	e7f5      	b.n	800e026 <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 800e03a:	682a      	ldr	r2, [r5, #0]
 800e03c:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800e040:	6822      	ldr	r2, [r4, #0]
 800e042:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800e046:	3301      	adds	r3, #1
 800e048:	e7e7      	b.n	800e01a <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 800e04a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e04e:	bf00      	nop
 800e050:	20012200 	.word	0x20012200
 800e054:	2001221c 	.word	0x2001221c
 800e058:	20012220 	.word	0x20012220
 800e05c:	20012214 	.word	0x20012214
 800e060:	20012204 	.word	0x20012204
 800e064:	2001220c 	.word	0x2001220c
 800e068:	2001221e 	.word	0x2001221e
 800e06c:	20012208 	.word	0x20012208
 800e070:	20012218 	.word	0x20012218
 800e074:	20012210 	.word	0x20012210

0800e078 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800e078:	b510      	push	{r4, lr}
 800e07a:	4b10      	ldr	r3, [pc, #64]	; (800e0bc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800e07c:	681b      	ldr	r3, [r3, #0]
 800e07e:	b9db      	cbnz	r3, 800e0b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800e080:	b1d1      	cbz	r1, 800e0b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800e082:	4b0f      	ldr	r3, [pc, #60]	; (800e0c0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800e084:	801a      	strh	r2, [r3, #0]
 800e086:	4b0f      	ldr	r3, [pc, #60]	; (800e0c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800e088:	881b      	ldrh	r3, [r3, #0]
 800e08a:	b292      	uxth	r2, r2
 800e08c:	240e      	movs	r4, #14
 800e08e:	4413      	add	r3, r2
 800e090:	4362      	muls	r2, r4
 800e092:	2406      	movs	r4, #6
 800e094:	fb04 2203 	mla	r2, r4, r3, r2
 800e098:	428a      	cmp	r2, r1
 800e09a:	d305      	bcc.n	800e0a8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800e09c:	4b0a      	ldr	r3, [pc, #40]	; (800e0c8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800e09e:	4a0b      	ldr	r2, [pc, #44]	; (800e0cc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800e0a0:	480b      	ldr	r0, [pc, #44]	; (800e0d0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800e0a2:	2137      	movs	r1, #55	; 0x37
 800e0a4:	f00b fcfc 	bl	8019aa0 <__assert_func>
 800e0a8:	4b0a      	ldr	r3, [pc, #40]	; (800e0d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800e0aa:	6019      	str	r1, [r3, #0]
 800e0ac:	4b0a      	ldr	r3, [pc, #40]	; (800e0d8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800e0ae:	6018      	str	r0, [r3, #0]
 800e0b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e0b4:	f7ff bf78 	b.w	800dfa8 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800e0b8:	bd10      	pop	{r4, pc}
 800e0ba:	bf00      	nop
 800e0bc:	2001220c 	.word	0x2001220c
 800e0c0:	20012220 	.word	0x20012220
 800e0c4:	2001221c 	.word	0x2001221c
 800e0c8:	0801d21a 	.word	0x0801d21a
 800e0cc:	0801d273 	.word	0x0801d273
 800e0d0:	0801d1f5 	.word	0x0801d1f5
 800e0d4:	20012208 	.word	0x20012208
 800e0d8:	20012200 	.word	0x20012200

0800e0dc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800e0dc:	b470      	push	{r4, r5, r6}
 800e0de:	4c07      	ldr	r4, [pc, #28]	; (800e0fc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800e0e0:	6826      	ldr	r6, [r4, #0]
 800e0e2:	4605      	mov	r5, r0
 800e0e4:	4610      	mov	r0, r2
 800e0e6:	9a03      	ldr	r2, [sp, #12]
 800e0e8:	b936      	cbnz	r6, 800e0f8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800e0ea:	6025      	str	r5, [r4, #0]
 800e0ec:	4c04      	ldr	r4, [pc, #16]	; (800e100 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800e0ee:	8021      	strh	r1, [r4, #0]
 800e0f0:	bc70      	pop	{r4, r5, r6}
 800e0f2:	4619      	mov	r1, r3
 800e0f4:	f7ff bfc0 	b.w	800e078 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800e0f8:	bc70      	pop	{r4, r5, r6}
 800e0fa:	4770      	bx	lr
 800e0fc:	20012224 	.word	0x20012224
 800e100:	2001221c 	.word	0x2001221c

0800e104 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800e104:	b508      	push	{r3, lr}
 800e106:	4b14      	ldr	r3, [pc, #80]	; (800e158 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800e108:	6819      	ldr	r1, [r3, #0]
 800e10a:	b931      	cbnz	r1, 800e11a <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800e10c:	4b13      	ldr	r3, [pc, #76]	; (800e15c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800e10e:	4a14      	ldr	r2, [pc, #80]	; (800e160 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800e110:	4814      	ldr	r0, [pc, #80]	; (800e164 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800e112:	f44f 713e 	mov.w	r1, #760	; 0x2f8
 800e116:	f00b fcc3 	bl	8019aa0 <__assert_func>
 800e11a:	4a13      	ldr	r2, [pc, #76]	; (800e168 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800e11c:	8803      	ldrh	r3, [r0, #0]
 800e11e:	8812      	ldrh	r2, [r2, #0]
 800e120:	4293      	cmp	r3, r2
 800e122:	d204      	bcs.n	800e12e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800e124:	2214      	movs	r2, #20
 800e126:	fb02 1303 	mla	r3, r2, r3, r1
 800e12a:	8918      	ldrh	r0, [r3, #8]
 800e12c:	bd08      	pop	{r3, pc}
 800e12e:	490f      	ldr	r1, [pc, #60]	; (800e16c <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800e130:	8809      	ldrh	r1, [r1, #0]
 800e132:	4411      	add	r1, r2
 800e134:	428b      	cmp	r3, r1
 800e136:	da06      	bge.n	800e146 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800e138:	1a9b      	subs	r3, r3, r2
 800e13a:	4a0d      	ldr	r2, [pc, #52]	; (800e170 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800e13c:	6812      	ldr	r2, [r2, #0]
 800e13e:	210e      	movs	r1, #14
 800e140:	fb01 2303 	mla	r3, r1, r3, r2
 800e144:	e7f1      	b.n	800e12a <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800e146:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800e14a:	4293      	cmp	r3, r2
 800e14c:	bf0a      	itet	eq
 800e14e:	4b09      	ldreq	r3, [pc, #36]	; (800e174 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800e150:	2000      	movne	r0, #0
 800e152:	8818      	ldrheq	r0, [r3, #0]
 800e154:	e7ea      	b.n	800e12c <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800e156:	bf00      	nop
 800e158:	20012224 	.word	0x20012224
 800e15c:	0801baf3 	.word	0x0801baf3
 800e160:	0801d320 	.word	0x0801d320
 800e164:	0801d1f5 	.word	0x0801d1f5
 800e168:	2001221c 	.word	0x2001221c
 800e16c:	20012220 	.word	0x20012220
 800e170:	20012204 	.word	0x20012204
 800e174:	20012170 	.word	0x20012170

0800e178 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800e178:	b508      	push	{r3, lr}
 800e17a:	4b14      	ldr	r3, [pc, #80]	; (800e1cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800e17c:	6819      	ldr	r1, [r3, #0]
 800e17e:	b931      	cbnz	r1, 800e18e <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800e180:	4b13      	ldr	r3, [pc, #76]	; (800e1d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800e182:	4a14      	ldr	r2, [pc, #80]	; (800e1d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800e184:	4814      	ldr	r0, [pc, #80]	; (800e1d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800e186:	f44f 7143 	mov.w	r1, #780	; 0x30c
 800e18a:	f00b fc89 	bl	8019aa0 <__assert_func>
 800e18e:	4a13      	ldr	r2, [pc, #76]	; (800e1dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800e190:	8803      	ldrh	r3, [r0, #0]
 800e192:	8812      	ldrh	r2, [r2, #0]
 800e194:	4293      	cmp	r3, r2
 800e196:	d204      	bcs.n	800e1a2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800e198:	2214      	movs	r2, #20
 800e19a:	fb02 1303 	mla	r3, r2, r3, r1
 800e19e:	8958      	ldrh	r0, [r3, #10]
 800e1a0:	bd08      	pop	{r3, pc}
 800e1a2:	490f      	ldr	r1, [pc, #60]	; (800e1e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800e1a4:	8809      	ldrh	r1, [r1, #0]
 800e1a6:	4411      	add	r1, r2
 800e1a8:	428b      	cmp	r3, r1
 800e1aa:	da06      	bge.n	800e1ba <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800e1ac:	1a9b      	subs	r3, r3, r2
 800e1ae:	4a0d      	ldr	r2, [pc, #52]	; (800e1e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800e1b0:	6812      	ldr	r2, [r2, #0]
 800e1b2:	210e      	movs	r1, #14
 800e1b4:	fb01 2303 	mla	r3, r1, r3, r2
 800e1b8:	e7f1      	b.n	800e19e <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800e1ba:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800e1be:	4293      	cmp	r3, r2
 800e1c0:	bf0a      	itet	eq
 800e1c2:	4b09      	ldreq	r3, [pc, #36]	; (800e1e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800e1c4:	2000      	movne	r0, #0
 800e1c6:	8818      	ldrheq	r0, [r3, #0]
 800e1c8:	e7ea      	b.n	800e1a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800e1ca:	bf00      	nop
 800e1cc:	20012224 	.word	0x20012224
 800e1d0:	0801baf3 	.word	0x0801baf3
 800e1d4:	0801d34c 	.word	0x0801d34c
 800e1d8:	0801d1f5 	.word	0x0801d1f5
 800e1dc:	2001221c 	.word	0x2001221c
 800e1e0:	20012220 	.word	0x20012220
 800e1e4:	20012204 	.word	0x20012204
 800e1e8:	20012172 	.word	0x20012172

0800e1ec <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800e1ec:	b510      	push	{r4, lr}
 800e1ee:	4b23      	ldr	r3, [pc, #140]	; (800e27c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800e1f0:	681c      	ldr	r4, [r3, #0]
 800e1f2:	b934      	cbnz	r4, 800e202 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800e1f4:	4b22      	ldr	r3, [pc, #136]	; (800e280 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800e1f6:	4a23      	ldr	r2, [pc, #140]	; (800e284 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800e1f8:	4823      	ldr	r0, [pc, #140]	; (800e288 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800e1fa:	f44f 7148 	mov.w	r1, #800	; 0x320
 800e1fe:	f00b fc4f 	bl	8019aa0 <__assert_func>
 800e202:	4a22      	ldr	r2, [pc, #136]	; (800e28c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800e204:	880b      	ldrh	r3, [r1, #0]
 800e206:	8812      	ldrh	r2, [r2, #0]
 800e208:	4293      	cmp	r3, r2
 800e20a:	d211      	bcs.n	800e230 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800e20c:	2214      	movs	r2, #20
 800e20e:	fb02 4303 	mla	r3, r2, r3, r4
 800e212:	8a1a      	ldrh	r2, [r3, #16]
 800e214:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800e218:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800e21c:	8a5b      	ldrh	r3, [r3, #18]
 800e21e:	8004      	strh	r4, [r0, #0]
 800e220:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800e224:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800e228:	8041      	strh	r1, [r0, #2]
 800e22a:	8082      	strh	r2, [r0, #4]
 800e22c:	80c3      	strh	r3, [r0, #6]
 800e22e:	e00e      	b.n	800e24e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800e230:	4917      	ldr	r1, [pc, #92]	; (800e290 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800e232:	8809      	ldrh	r1, [r1, #0]
 800e234:	4411      	add	r1, r2
 800e236:	428b      	cmp	r3, r1
 800e238:	da0a      	bge.n	800e250 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800e23a:	1a9b      	subs	r3, r3, r2
 800e23c:	4a15      	ldr	r2, [pc, #84]	; (800e294 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800e23e:	6812      	ldr	r2, [r2, #0]
 800e240:	210e      	movs	r1, #14
 800e242:	fb01 2303 	mla	r3, r1, r3, r2
 800e246:	681a      	ldr	r2, [r3, #0]
 800e248:	6002      	str	r2, [r0, #0]
 800e24a:	685a      	ldr	r2, [r3, #4]
 800e24c:	6042      	str	r2, [r0, #4]
 800e24e:	bd10      	pop	{r4, pc}
 800e250:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800e254:	4293      	cmp	r3, r2
 800e256:	d10b      	bne.n	800e270 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800e258:	4b0f      	ldr	r3, [pc, #60]	; (800e298 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800e25a:	f9b3 1000 	ldrsh.w	r1, [r3]
 800e25e:	4b0f      	ldr	r3, [pc, #60]	; (800e29c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800e260:	8081      	strh	r1, [r0, #4]
 800e262:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e266:	80c2      	strh	r2, [r0, #6]
 800e268:	2300      	movs	r3, #0
 800e26a:	8003      	strh	r3, [r0, #0]
 800e26c:	8043      	strh	r3, [r0, #2]
 800e26e:	e7ee      	b.n	800e24e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800e270:	2300      	movs	r3, #0
 800e272:	8003      	strh	r3, [r0, #0]
 800e274:	8043      	strh	r3, [r0, #2]
 800e276:	8083      	strh	r3, [r0, #4]
 800e278:	e7d8      	b.n	800e22c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800e27a:	bf00      	nop
 800e27c:	20012224 	.word	0x20012224
 800e280:	0801baf3 	.word	0x0801baf3
 800e284:	0801d2b9 	.word	0x0801d2b9
 800e288:	0801d1f5 	.word	0x0801d1f5
 800e28c:	2001221c 	.word	0x2001221c
 800e290:	20012220 	.word	0x20012220
 800e294:	20012204 	.word	0x20012204
 800e298:	20012170 	.word	0x20012170
 800e29c:	20012172 	.word	0x20012172

0800e2a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800e2a0:	4b18      	ldr	r3, [pc, #96]	; (800e304 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800e2a2:	681b      	ldr	r3, [r3, #0]
 800e2a4:	b34b      	cbz	r3, 800e2fa <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800e2a6:	4a18      	ldr	r2, [pc, #96]	; (800e308 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800e2a8:	8800      	ldrh	r0, [r0, #0]
 800e2aa:	8812      	ldrh	r2, [r2, #0]
 800e2ac:	4290      	cmp	r0, r2
 800e2ae:	d211      	bcs.n	800e2d4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800e2b0:	2214      	movs	r2, #20
 800e2b2:	fb02 3300 	mla	r3, r2, r0, r3
 800e2b6:	8a1a      	ldrh	r2, [r3, #16]
 800e2b8:	8919      	ldrh	r1, [r3, #8]
 800e2ba:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800e2be:	428a      	cmp	r2, r1
 800e2c0:	db1d      	blt.n	800e2fe <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800e2c2:	8a58      	ldrh	r0, [r3, #18]
 800e2c4:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800e2c8:	895b      	ldrh	r3, [r3, #10]
 800e2ca:	4298      	cmp	r0, r3
 800e2cc:	bfac      	ite	ge
 800e2ce:	2000      	movge	r0, #0
 800e2d0:	2001      	movlt	r0, #1
 800e2d2:	4770      	bx	lr
 800e2d4:	4b0d      	ldr	r3, [pc, #52]	; (800e30c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800e2d6:	881b      	ldrh	r3, [r3, #0]
 800e2d8:	4413      	add	r3, r2
 800e2da:	4298      	cmp	r0, r3
 800e2dc:	da0d      	bge.n	800e2fa <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800e2de:	4b0c      	ldr	r3, [pc, #48]	; (800e310 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800e2e0:	681b      	ldr	r3, [r3, #0]
 800e2e2:	1a80      	subs	r0, r0, r2
 800e2e4:	220e      	movs	r2, #14
 800e2e6:	fb02 3300 	mla	r3, r2, r0, r3
 800e2ea:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800e2ee:	891a      	ldrh	r2, [r3, #8]
 800e2f0:	4291      	cmp	r1, r2
 800e2f2:	db04      	blt.n	800e2fe <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800e2f4:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800e2f8:	e7e6      	b.n	800e2c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800e2fa:	2000      	movs	r0, #0
 800e2fc:	4770      	bx	lr
 800e2fe:	2001      	movs	r0, #1
 800e300:	4770      	bx	lr
 800e302:	bf00      	nop
 800e304:	20012224 	.word	0x20012224
 800e308:	2001221c 	.word	0x2001221c
 800e30c:	20012220 	.word	0x20012220
 800e310:	20012204 	.word	0x20012204

0800e314 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800e314:	b508      	push	{r3, lr}
 800e316:	4b12      	ldr	r3, [pc, #72]	; (800e360 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800e318:	6819      	ldr	r1, [r3, #0]
 800e31a:	b931      	cbnz	r1, 800e32a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800e31c:	4b11      	ldr	r3, [pc, #68]	; (800e364 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800e31e:	4a12      	ldr	r2, [pc, #72]	; (800e368 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800e320:	4812      	ldr	r0, [pc, #72]	; (800e36c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800e322:	f44f 7151 	mov.w	r1, #836	; 0x344
 800e326:	f00b fbbb 	bl	8019aa0 <__assert_func>
 800e32a:	8803      	ldrh	r3, [r0, #0]
 800e32c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800e330:	4293      	cmp	r3, r2
 800e332:	d012      	beq.n	800e35a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800e334:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800e338:	4293      	cmp	r3, r2
 800e33a:	d103      	bne.n	800e344 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800e33c:	4b0c      	ldr	r3, [pc, #48]	; (800e370 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800e33e:	681b      	ldr	r3, [r3, #0]
 800e340:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800e342:	bd08      	pop	{r3, pc}
 800e344:	4a0b      	ldr	r2, [pc, #44]	; (800e374 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800e346:	6812      	ldr	r2, [r2, #0]
 800e348:	b11a      	cbz	r2, 800e352 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800e34a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800e34e:	2800      	cmp	r0, #0
 800e350:	d1f7      	bne.n	800e342 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800e352:	2214      	movs	r2, #20
 800e354:	4353      	muls	r3, r2
 800e356:	58c8      	ldr	r0, [r1, r3]
 800e358:	e7f3      	b.n	800e342 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800e35a:	2000      	movs	r0, #0
 800e35c:	e7f1      	b.n	800e342 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800e35e:	bf00      	nop
 800e360:	20012224 	.word	0x20012224
 800e364:	0801baf3 	.word	0x0801baf3
 800e368:	0801d2ef 	.word	0x0801d2ef
 800e36c:	0801d1f5 	.word	0x0801d1f5
 800e370:	2001217c 	.word	0x2001217c
 800e374:	20012200 	.word	0x20012200

0800e378 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800e378:	8802      	ldrh	r2, [r0, #0]
 800e37a:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800e37e:	429a      	cmp	r2, r3
 800e380:	d840      	bhi.n	800e404 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800e382:	4b21      	ldr	r3, [pc, #132]	; (800e408 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>)
 800e384:	881b      	ldrh	r3, [r3, #0]
 800e386:	429a      	cmp	r2, r3
 800e388:	d220      	bcs.n	800e3cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x54>
 800e38a:	4b20      	ldr	r3, [pc, #128]	; (800e40c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 800e38c:	6819      	ldr	r1, [r3, #0]
 800e38e:	2314      	movs	r3, #20
 800e390:	fb03 1302 	mla	r3, r3, r2, r1
 800e394:	6858      	ldr	r0, [r3, #4]
 800e396:	2800      	cmp	r0, #0
 800e398:	d035      	beq.n	800e406 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800e39a:	491d      	ldr	r1, [pc, #116]	; (800e410 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800e39c:	6809      	ldr	r1, [r1, #0]
 800e39e:	2900      	cmp	r1, #0
 800e3a0:	d031      	beq.n	800e406 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800e3a2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800e3a6:	b371      	cbz	r1, 800e406 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800e3a8:	895a      	ldrh	r2, [r3, #10]
 800e3aa:	8918      	ldrh	r0, [r3, #8]
 800e3ac:	4350      	muls	r0, r2
 800e3ae:	7c5a      	ldrb	r2, [r3, #17]
 800e3b0:	7cdb      	ldrb	r3, [r3, #19]
 800e3b2:	0952      	lsrs	r2, r2, #5
 800e3b4:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800e3b8:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800e3bc:	2b0b      	cmp	r3, #11
 800e3be:	bf18      	it	ne
 800e3c0:	0040      	lslne	r0, r0, #1
 800e3c2:	3003      	adds	r0, #3
 800e3c4:	f020 0003 	bic.w	r0, r0, #3
 800e3c8:	4408      	add	r0, r1
 800e3ca:	4770      	bx	lr
 800e3cc:	4911      	ldr	r1, [pc, #68]	; (800e414 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800e3ce:	8809      	ldrh	r1, [r1, #0]
 800e3d0:	4419      	add	r1, r3
 800e3d2:	428a      	cmp	r2, r1
 800e3d4:	da16      	bge.n	800e404 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800e3d6:	4910      	ldr	r1, [pc, #64]	; (800e418 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800e3d8:	6809      	ldr	r1, [r1, #0]
 800e3da:	1ad3      	subs	r3, r2, r3
 800e3dc:	200e      	movs	r0, #14
 800e3de:	fb00 1303 	mla	r3, r0, r3, r1
 800e3e2:	7b19      	ldrb	r1, [r3, #12]
 800e3e4:	f001 011f 	and.w	r1, r1, #31
 800e3e8:	290b      	cmp	r1, #11
 800e3ea:	d10b      	bne.n	800e404 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800e3ec:	8919      	ldrh	r1, [r3, #8]
 800e3ee:	8958      	ldrh	r0, [r3, #10]
 800e3f0:	4b07      	ldr	r3, [pc, #28]	; (800e410 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800e3f2:	4348      	muls	r0, r1
 800e3f4:	6819      	ldr	r1, [r3, #0]
 800e3f6:	3003      	adds	r0, #3
 800e3f8:	f020 0303 	bic.w	r3, r0, #3
 800e3fc:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800e400:	4418      	add	r0, r3
 800e402:	4770      	bx	lr
 800e404:	2000      	movs	r0, #0
 800e406:	4770      	bx	lr
 800e408:	2001221c 	.word	0x2001221c
 800e40c:	20012224 	.word	0x20012224
 800e410:	20012200 	.word	0x20012200
 800e414:	20012220 	.word	0x20012220
 800e418:	20012204 	.word	0x20012204

0800e41c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800e41c:	4b19      	ldr	r3, [pc, #100]	; (800e484 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800e41e:	6819      	ldr	r1, [r3, #0]
 800e420:	8803      	ldrh	r3, [r0, #0]
 800e422:	b1e9      	cbz	r1, 800e460 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800e424:	4a18      	ldr	r2, [pc, #96]	; (800e488 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800e426:	8812      	ldrh	r2, [r2, #0]
 800e428:	429a      	cmp	r2, r3
 800e42a:	d90a      	bls.n	800e442 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800e42c:	2214      	movs	r2, #20
 800e42e:	fb02 1303 	mla	r3, r2, r3, r1
 800e432:	7c58      	ldrb	r0, [r3, #17]
 800e434:	0942      	lsrs	r2, r0, #5
 800e436:	7cd8      	ldrb	r0, [r3, #19]
 800e438:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800e43c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800e440:	4770      	bx	lr
 800e442:	4912      	ldr	r1, [pc, #72]	; (800e48c <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 800e444:	8809      	ldrh	r1, [r1, #0]
 800e446:	4411      	add	r1, r2
 800e448:	428b      	cmp	r3, r1
 800e44a:	da09      	bge.n	800e460 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800e44c:	1a9b      	subs	r3, r3, r2
 800e44e:	4a10      	ldr	r2, [pc, #64]	; (800e490 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 800e450:	6812      	ldr	r2, [r2, #0]
 800e452:	210e      	movs	r1, #14
 800e454:	fb01 2303 	mla	r3, r1, r3, r2
 800e458:	7b18      	ldrb	r0, [r3, #12]
 800e45a:	f000 001f 	and.w	r0, r0, #31
 800e45e:	4770      	bx	lr
 800e460:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800e464:	4293      	cmp	r3, r2
 800e466:	d10a      	bne.n	800e47e <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 800e468:	4b0a      	ldr	r3, [pc, #40]	; (800e494 <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 800e46a:	681b      	ldr	r3, [r3, #0]
 800e46c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e470:	b10a      	cbz	r2, 800e476 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800e472:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e474:	b900      	cbnz	r0, 800e478 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800e476:	6898      	ldr	r0, [r3, #8]
 800e478:	6803      	ldr	r3, [r0, #0]
 800e47a:	6a1b      	ldr	r3, [r3, #32]
 800e47c:	4718      	bx	r3
 800e47e:	2000      	movs	r0, #0
 800e480:	4770      	bx	lr
 800e482:	bf00      	nop
 800e484:	20012224 	.word	0x20012224
 800e488:	2001221c 	.word	0x2001221c
 800e48c:	20012220 	.word	0x20012220
 800e490:	20012204 	.word	0x20012204
 800e494:	2001217c 	.word	0x2001217c

0800e498 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800e498:	2010      	movs	r0, #16
 800e49a:	4770      	bx	lr

0800e49c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800e49c:	2000      	movs	r0, #0
 800e49e:	4770      	bx	lr

0800e4a0 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 800e4a0:	00d2      	lsls	r2, r2, #3
 800e4a2:	0209      	lsls	r1, r1, #8
 800e4a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800e4a8:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 800e4ac:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 800e4b0:	4310      	orrs	r0, r2
 800e4b2:	4770      	bx	lr

0800e4b4 <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 800e4b4:	0a09      	lsrs	r1, r1, #8
 800e4b6:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800e4ba:	4770      	bx	lr

0800e4bc <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 800e4bc:	08c9      	lsrs	r1, r1, #3
 800e4be:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 800e4c2:	4770      	bx	lr

0800e4c4 <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 800e4c4:	00c9      	lsls	r1, r1, #3
 800e4c6:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800e4ca:	4770      	bx	lr

0800e4cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800e4cc:	2bff      	cmp	r3, #255	; 0xff
 800e4ce:	d050      	beq.n	800e572 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800e4d0:	2a0b      	cmp	r2, #11
 800e4d2:	d04a      	beq.n	800e56a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800e4d4:	d80e      	bhi.n	800e4f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800e4d6:	2a03      	cmp	r2, #3
 800e4d8:	d03f      	beq.n	800e55a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800e4da:	d804      	bhi.n	800e4e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800e4dc:	2a01      	cmp	r2, #1
 800e4de:	d03e      	beq.n	800e55e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800e4e0:	d93f      	bls.n	800e562 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800e4e2:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800e4e4:	4770      	bx	lr
 800e4e6:	2a09      	cmp	r2, #9
 800e4e8:	d03f      	beq.n	800e56a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800e4ea:	d83c      	bhi.n	800e566 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800e4ec:	2a08      	cmp	r2, #8
 800e4ee:	d03a      	beq.n	800e566 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800e4f0:	2000      	movs	r0, #0
 800e4f2:	4770      	bx	lr
 800e4f4:	2a2f      	cmp	r2, #47	; 0x2f
 800e4f6:	d024      	beq.n	800e542 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800e4f8:	d80d      	bhi.n	800e516 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800e4fa:	2a2d      	cmp	r2, #45	; 0x2d
 800e4fc:	d014      	beq.n	800e528 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800e4fe:	d826      	bhi.n	800e54e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800e500:	2a2c      	cmp	r2, #44	; 0x2c
 800e502:	d1f5      	bne.n	800e4f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e504:	684b      	ldr	r3, [r1, #4]
 800e506:	781b      	ldrb	r3, [r3, #0]
 800e508:	2b01      	cmp	r3, #1
 800e50a:	d018      	beq.n	800e53e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800e50c:	d323      	bcc.n	800e556 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800e50e:	2b02      	cmp	r3, #2
 800e510:	d1ee      	bne.n	800e4f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e512:	6880      	ldr	r0, [r0, #8]
 800e514:	4770      	bx	lr
 800e516:	2a31      	cmp	r2, #49	; 0x31
 800e518:	d004      	beq.n	800e524 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800e51a:	d328      	bcc.n	800e56e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800e51c:	2a32      	cmp	r2, #50	; 0x32
 800e51e:	d026      	beq.n	800e56e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800e520:	2a33      	cmp	r2, #51	; 0x33
 800e522:	d1e5      	bne.n	800e4f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e524:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800e526:	4770      	bx	lr
 800e528:	684b      	ldr	r3, [r1, #4]
 800e52a:	781b      	ldrb	r3, [r3, #0]
 800e52c:	2b01      	cmp	r3, #1
 800e52e:	d004      	beq.n	800e53a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800e530:	d30b      	bcc.n	800e54a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800e532:	2b02      	cmp	r3, #2
 800e534:	d1dc      	bne.n	800e4f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e536:	6900      	ldr	r0, [r0, #16]
 800e538:	4770      	bx	lr
 800e53a:	6a00      	ldr	r0, [r0, #32]
 800e53c:	4770      	bx	lr
 800e53e:	6980      	ldr	r0, [r0, #24]
 800e540:	4770      	bx	lr
 800e542:	684b      	ldr	r3, [r1, #4]
 800e544:	781b      	ldrb	r3, [r3, #0]
 800e546:	2b00      	cmp	r3, #0
 800e548:	d1d2      	bne.n	800e4f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e54a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800e54c:	4770      	bx	lr
 800e54e:	684b      	ldr	r3, [r1, #4]
 800e550:	781b      	ldrb	r3, [r3, #0]
 800e552:	2b00      	cmp	r3, #0
 800e554:	d1cc      	bne.n	800e4f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e556:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800e558:	4770      	bx	lr
 800e55a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800e55c:	4770      	bx	lr
 800e55e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800e560:	4770      	bx	lr
 800e562:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800e564:	4770      	bx	lr
 800e566:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800e568:	4770      	bx	lr
 800e56a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800e56c:	4770      	bx	lr
 800e56e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800e570:	4770      	bx	lr
 800e572:	2a0b      	cmp	r2, #11
 800e574:	d049      	beq.n	800e60a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800e576:	d80e      	bhi.n	800e596 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800e578:	2a03      	cmp	r2, #3
 800e57a:	d040      	beq.n	800e5fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800e57c:	d804      	bhi.n	800e588 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800e57e:	2a01      	cmp	r2, #1
 800e580:	d03f      	beq.n	800e602 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800e582:	d940      	bls.n	800e606 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800e584:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800e586:	4770      	bx	lr
 800e588:	2a09      	cmp	r2, #9
 800e58a:	d03e      	beq.n	800e60a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800e58c:	d801      	bhi.n	800e592 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800e58e:	2a08      	cmp	r2, #8
 800e590:	d1ae      	bne.n	800e4f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e592:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800e594:	4770      	bx	lr
 800e596:	2a2f      	cmp	r2, #47	; 0x2f
 800e598:	d024      	beq.n	800e5e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800e59a:	d80d      	bhi.n	800e5b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800e59c:	2a2d      	cmp	r2, #45	; 0x2d
 800e59e:	d014      	beq.n	800e5ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800e5a0:	d826      	bhi.n	800e5f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800e5a2:	2a2c      	cmp	r2, #44	; 0x2c
 800e5a4:	d1a4      	bne.n	800e4f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e5a6:	684b      	ldr	r3, [r1, #4]
 800e5a8:	781b      	ldrb	r3, [r3, #0]
 800e5aa:	2b01      	cmp	r3, #1
 800e5ac:	d018      	beq.n	800e5e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800e5ae:	d324      	bcc.n	800e5fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800e5b0:	2b02      	cmp	r3, #2
 800e5b2:	d19d      	bne.n	800e4f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e5b4:	68c0      	ldr	r0, [r0, #12]
 800e5b6:	4770      	bx	lr
 800e5b8:	2a31      	cmp	r2, #49	; 0x31
 800e5ba:	d004      	beq.n	800e5c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800e5bc:	d327      	bcc.n	800e60e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800e5be:	2a32      	cmp	r2, #50	; 0x32
 800e5c0:	d025      	beq.n	800e60e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800e5c2:	2a33      	cmp	r2, #51	; 0x33
 800e5c4:	d194      	bne.n	800e4f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e5c6:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800e5c8:	4770      	bx	lr
 800e5ca:	684b      	ldr	r3, [r1, #4]
 800e5cc:	781b      	ldrb	r3, [r3, #0]
 800e5ce:	2b01      	cmp	r3, #1
 800e5d0:	d004      	beq.n	800e5dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800e5d2:	d30b      	bcc.n	800e5ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800e5d4:	2b02      	cmp	r3, #2
 800e5d6:	d18b      	bne.n	800e4f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e5d8:	6940      	ldr	r0, [r0, #20]
 800e5da:	4770      	bx	lr
 800e5dc:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800e5de:	4770      	bx	lr
 800e5e0:	69c0      	ldr	r0, [r0, #28]
 800e5e2:	4770      	bx	lr
 800e5e4:	684b      	ldr	r3, [r1, #4]
 800e5e6:	781b      	ldrb	r3, [r3, #0]
 800e5e8:	2b00      	cmp	r3, #0
 800e5ea:	d181      	bne.n	800e4f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e5ec:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800e5ee:	4770      	bx	lr
 800e5f0:	684b      	ldr	r3, [r1, #4]
 800e5f2:	781b      	ldrb	r3, [r3, #0]
 800e5f4:	2b00      	cmp	r3, #0
 800e5f6:	f47f af7b 	bne.w	800e4f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800e5fa:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800e5fc:	4770      	bx	lr
 800e5fe:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800e600:	4770      	bx	lr
 800e602:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800e604:	4770      	bx	lr
 800e606:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800e608:	4770      	bx	lr
 800e60a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800e60c:	4770      	bx	lr
 800e60e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800e610:	4770      	bx	lr

0800e612 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e612:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e616:	b087      	sub	sp, #28
 800e618:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800e61a:	9205      	str	r2, [sp, #20]
 800e61c:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800e620:	9202      	str	r2, [sp, #8]
 800e622:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800e626:	9101      	str	r1, [sp, #4]
 800e628:	6871      	ldr	r1, [r6, #4]
 800e62a:	981a      	ldr	r0, [sp, #104]	; 0x68
 800e62c:	f89d 406c 	ldrb.w	r4, [sp, #108]	; 0x6c
 800e630:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800e634:	fb01 2505 	mla	r5, r1, r5, r2
 800e638:	6832      	ldr	r2, [r6, #0]
 800e63a:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800e63e:	6802      	ldr	r2, [r0, #0]
 800e640:	9203      	str	r2, [sp, #12]
 800e642:	6842      	ldr	r2, [r0, #4]
 800e644:	fa1f fe84 	uxth.w	lr, r4
 800e648:	3204      	adds	r2, #4
 800e64a:	43e4      	mvns	r4, r4
 800e64c:	9204      	str	r2, [sp, #16]
 800e64e:	b2e4      	uxtb	r4, r4
 800e650:	9a01      	ldr	r2, [sp, #4]
 800e652:	2a00      	cmp	r2, #0
 800e654:	dc03      	bgt.n	800e65e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800e656:	9a05      	ldr	r2, [sp, #20]
 800e658:	2a00      	cmp	r2, #0
 800e65a:	f340 8119 	ble.w	800e890 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800e65e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e660:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e664:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e666:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e66a:	2b00      	cmp	r3, #0
 800e66c:	dd0f      	ble.n	800e68e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800e66e:	1408      	asrs	r0, r1, #16
 800e670:	d406      	bmi.n	800e680 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800e672:	4540      	cmp	r0, r8
 800e674:	da04      	bge.n	800e680 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800e676:	1410      	asrs	r0, r2, #16
 800e678:	d402      	bmi.n	800e680 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800e67a:	9e02      	ldr	r6, [sp, #8]
 800e67c:	42b0      	cmp	r0, r6
 800e67e:	db07      	blt.n	800e690 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800e680:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e682:	4401      	add	r1, r0
 800e684:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e686:	3b01      	subs	r3, #1
 800e688:	4402      	add	r2, r0
 800e68a:	3502      	adds	r5, #2
 800e68c:	e7ed      	b.n	800e66a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800e68e:	d00f      	beq.n	800e6b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800e690:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800e692:	1e58      	subs	r0, r3, #1
 800e694:	fb06 1600 	mla	r6, r6, r0, r1
 800e698:	1436      	asrs	r6, r6, #16
 800e69a:	d547      	bpl.n	800e72c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800e69c:	469b      	mov	fp, r3
 800e69e:	46aa      	mov	sl, r5
 800e6a0:	f1bb 0f00 	cmp.w	fp, #0
 800e6a4:	f300 809e 	bgt.w	800e7e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 800e6a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e6ac:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800e6b0:	9b01      	ldr	r3, [sp, #4]
 800e6b2:	2b00      	cmp	r3, #0
 800e6b4:	f340 80ec 	ble.w	800e890 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800e6b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e6bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800e6c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800e6c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e6c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e6ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e6ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e6d2:	eef0 6a62 	vmov.f32	s13, s5
 800e6d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e6da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e6de:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e6e2:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800e6e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e6ea:	eef0 6a43 	vmov.f32	s13, s6
 800e6ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e6f2:	ee12 2a90 	vmov	r2, s5
 800e6f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e6fa:	fb92 f3f3 	sdiv	r3, r2, r3
 800e6fe:	ee13 2a10 	vmov	r2, s6
 800e702:	9313      	str	r3, [sp, #76]	; 0x4c
 800e704:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e706:	fb92 f3f3 	sdiv	r3, r2, r3
 800e70a:	9314      	str	r3, [sp, #80]	; 0x50
 800e70c:	9b01      	ldr	r3, [sp, #4]
 800e70e:	9a05      	ldr	r2, [sp, #20]
 800e710:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e714:	3b01      	subs	r3, #1
 800e716:	9301      	str	r3, [sp, #4]
 800e718:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800e71c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e71e:	eeb0 3a67 	vmov.f32	s6, s15
 800e722:	bf08      	it	eq
 800e724:	4613      	moveq	r3, r2
 800e726:	eef0 2a47 	vmov.f32	s5, s14
 800e72a:	e791      	b.n	800e650 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800e72c:	4546      	cmp	r6, r8
 800e72e:	dab5      	bge.n	800e69c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e730:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800e732:	fb06 2000 	mla	r0, r6, r0, r2
 800e736:	1400      	asrs	r0, r0, #16
 800e738:	d4b0      	bmi.n	800e69c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e73a:	9e02      	ldr	r6, [sp, #8]
 800e73c:	42b0      	cmp	r0, r6
 800e73e:	daad      	bge.n	800e69c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800e740:	469a      	mov	sl, r3
 800e742:	46ab      	mov	fp, r5
 800e744:	f1ba 0f00 	cmp.w	sl, #0
 800e748:	ddae      	ble.n	800e6a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800e74a:	9f03      	ldr	r7, [sp, #12]
 800e74c:	1410      	asrs	r0, r2, #16
 800e74e:	140e      	asrs	r6, r1, #16
 800e750:	fb08 7000 	mla	r0, r8, r0, r7
 800e754:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 800e758:	5d80      	ldrb	r0, [r0, r6]
 800e75a:	9e04      	ldr	r6, [sp, #16]
 800e75c:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800e760:	f8bb 6000 	ldrh.w	r6, [fp]
 800e764:	1237      	asrs	r7, r6, #8
 800e766:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800e76a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e76e:	fb17 f704 	smulbb	r7, r7, r4
 800e772:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800e776:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800e77a:	00f6      	lsls	r6, r6, #3
 800e77c:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800e780:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800e784:	10c7      	asrs	r7, r0, #3
 800e786:	b2f6      	uxtb	r6, r6
 800e788:	00c0      	lsls	r0, r0, #3
 800e78a:	fb19 f904 	smulbb	r9, r9, r4
 800e78e:	fb16 f604 	smulbb	r6, r6, r4
 800e792:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800e796:	b2c0      	uxtb	r0, r0
 800e798:	fa1f fc8c 	uxth.w	ip, ip
 800e79c:	fb07 970e 	mla	r7, r7, lr, r9
 800e7a0:	fb00 600e 	mla	r0, r0, lr, r6
 800e7a4:	b280      	uxth	r0, r0
 800e7a6:	b2bf      	uxth	r7, r7
 800e7a8:	f10c 0601 	add.w	r6, ip, #1
 800e7ac:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800e7b0:	f107 0901 	add.w	r9, r7, #1
 800e7b4:	1c46      	adds	r6, r0, #1
 800e7b6:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800e7ba:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800e7be:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e7c0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800e7c4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800e7c8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800e7cc:	ea4c 0c06 	orr.w	ip, ip, r6
 800e7d0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800e7d4:	4401      	add	r1, r0
 800e7d6:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e7d8:	ea4c 0c09 	orr.w	ip, ip, r9
 800e7dc:	f82b cb02 	strh.w	ip, [fp], #2
 800e7e0:	4402      	add	r2, r0
 800e7e2:	e7af      	b.n	800e744 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800e7e4:	140e      	asrs	r6, r1, #16
 800e7e6:	d44a      	bmi.n	800e87e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800e7e8:	4546      	cmp	r6, r8
 800e7ea:	da48      	bge.n	800e87e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800e7ec:	1410      	asrs	r0, r2, #16
 800e7ee:	d446      	bmi.n	800e87e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800e7f0:	9f02      	ldr	r7, [sp, #8]
 800e7f2:	42b8      	cmp	r0, r7
 800e7f4:	da43      	bge.n	800e87e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800e7f6:	9f03      	ldr	r7, [sp, #12]
 800e7f8:	fb08 7000 	mla	r0, r8, r0, r7
 800e7fc:	5d80      	ldrb	r0, [r0, r6]
 800e7fe:	9e04      	ldr	r6, [sp, #16]
 800e800:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800e804:	f8ba 6000 	ldrh.w	r6, [sl]
 800e808:	1237      	asrs	r7, r6, #8
 800e80a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800e80e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e812:	fb17 f704 	smulbb	r7, r7, r4
 800e816:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800e81a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800e81e:	00f6      	lsls	r6, r6, #3
 800e820:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800e824:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800e828:	10c7      	asrs	r7, r0, #3
 800e82a:	b2f6      	uxtb	r6, r6
 800e82c:	00c0      	lsls	r0, r0, #3
 800e82e:	fb19 f904 	smulbb	r9, r9, r4
 800e832:	fb16 f604 	smulbb	r6, r6, r4
 800e836:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800e83a:	b2c0      	uxtb	r0, r0
 800e83c:	fa1f fc8c 	uxth.w	ip, ip
 800e840:	fb07 970e 	mla	r7, r7, lr, r9
 800e844:	fb00 600e 	mla	r0, r0, lr, r6
 800e848:	b2bf      	uxth	r7, r7
 800e84a:	b280      	uxth	r0, r0
 800e84c:	f10c 0601 	add.w	r6, ip, #1
 800e850:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800e854:	f107 0901 	add.w	r9, r7, #1
 800e858:	1c46      	adds	r6, r0, #1
 800e85a:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800e85e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800e862:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800e866:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800e86a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800e86e:	ea4c 0c06 	orr.w	ip, ip, r6
 800e872:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800e876:	ea4c 0c09 	orr.w	ip, ip, r9
 800e87a:	f8aa c000 	strh.w	ip, [sl]
 800e87e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e880:	4401      	add	r1, r0
 800e882:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e884:	f10a 0a02 	add.w	sl, sl, #2
 800e888:	4402      	add	r2, r0
 800e88a:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 800e88e:	e707      	b.n	800e6a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800e890:	b007      	add	sp, #28
 800e892:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e896 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800e896:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e89a:	b085      	sub	sp, #20
 800e89c:	e9dd 7611 	ldrd	r7, r6, [sp, #68]	; 0x44
 800e8a0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e8a2:	9203      	str	r2, [sp, #12]
 800e8a4:	6842      	ldr	r2, [r0, #4]
 800e8a6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800e8a8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 800e8aa:	6800      	ldr	r0, [r0, #0]
 800e8ac:	f9bd c058 	ldrsh.w	ip, [sp, #88]	; 0x58
 800e8b0:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800e8b4:	4696      	mov	lr, r2
 800e8b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e8b8:	fb0e 2505 	mla	r5, lr, r5, r2
 800e8bc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800e8c0:	6860      	ldr	r0, [r4, #4]
 800e8c2:	6822      	ldr	r2, [r4, #0]
 800e8c4:	9201      	str	r2, [sp, #4]
 800e8c6:	1d02      	adds	r2, r0, #4
 800e8c8:	9202      	str	r2, [sp, #8]
 800e8ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e8ce:	2900      	cmp	r1, #0
 800e8d0:	dc03      	bgt.n	800e8da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800e8d2:	9a03      	ldr	r2, [sp, #12]
 800e8d4:	2a00      	cmp	r2, #0
 800e8d6:	f340 809b 	ble.w	800ea10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800e8da:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800e8dc:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800e8e0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e8e2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800e8e6:	2b00      	cmp	r3, #0
 800e8e8:	dd0e      	ble.n	800e908 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 800e8ea:	ea5f 4e24 	movs.w	lr, r4, asr #16
 800e8ee:	d406      	bmi.n	800e8fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800e8f0:	45e6      	cmp	lr, ip
 800e8f2:	da04      	bge.n	800e8fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800e8f4:	ea5f 4e20 	movs.w	lr, r0, asr #16
 800e8f8:	d401      	bmi.n	800e8fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800e8fa:	45c6      	cmp	lr, r8
 800e8fc:	db05      	blt.n	800e90a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800e8fe:	443c      	add	r4, r7
 800e900:	4430      	add	r0, r6
 800e902:	3b01      	subs	r3, #1
 800e904:	3502      	adds	r5, #2
 800e906:	e7ee      	b.n	800e8e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800e908:	d010      	beq.n	800e92c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800e90a:	f103 3eff 	add.w	lr, r3, #4294967295	; 0xffffffff
 800e90e:	fb07 490e 	mla	r9, r7, lr, r4
 800e912:	ea5f 4929 	movs.w	r9, r9, asr #16
 800e916:	d53d      	bpl.n	800e994 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 800e918:	469e      	mov	lr, r3
 800e91a:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 800e91e:	f1be 0f00 	cmp.w	lr, #0
 800e922:	dc58      	bgt.n	800e9d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x140>
 800e924:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e928:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800e92c:	2900      	cmp	r1, #0
 800e92e:	dd6f      	ble.n	800ea10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800e930:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e934:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e938:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e93c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e93e:	3901      	subs	r1, #1
 800e940:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e944:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e948:	eeb0 6a62 	vmov.f32	s12, s5
 800e94c:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e950:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e954:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e958:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800e95c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e960:	eeb0 6a43 	vmov.f32	s12, s6
 800e964:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e968:	ee12 2a90 	vmov	r2, s5
 800e96c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e970:	fb92 f7f3 	sdiv	r7, r2, r3
 800e974:	ee13 2a10 	vmov	r2, s6
 800e978:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e97c:	fb92 f6f3 	sdiv	r6, r2, r3
 800e980:	9a03      	ldr	r2, [sp, #12]
 800e982:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800e986:	bf08      	it	eq
 800e988:	4613      	moveq	r3, r2
 800e98a:	eeb0 3a67 	vmov.f32	s6, s15
 800e98e:	eef0 2a47 	vmov.f32	s5, s14
 800e992:	e79c      	b.n	800e8ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 800e994:	45e1      	cmp	r9, ip
 800e996:	dabf      	bge.n	800e918 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800e998:	fb06 0e0e 	mla	lr, r6, lr, r0
 800e99c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 800e9a0:	d4ba      	bmi.n	800e918 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800e9a2:	45c6      	cmp	lr, r8
 800e9a4:	dab8      	bge.n	800e918 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800e9a6:	469e      	mov	lr, r3
 800e9a8:	46aa      	mov	sl, r5
 800e9aa:	f1be 0f00 	cmp.w	lr, #0
 800e9ae:	ddb9      	ble.n	800e924 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800e9b0:	9a01      	ldr	r2, [sp, #4]
 800e9b2:	ea4f 4920 	mov.w	r9, r0, asr #16
 800e9b6:	ea4f 4b24 	mov.w	fp, r4, asr #16
 800e9ba:	fb0c 2909 	mla	r9, ip, r9, r2
 800e9be:	9a02      	ldr	r2, [sp, #8]
 800e9c0:	f819 900b 	ldrb.w	r9, [r9, fp]
 800e9c4:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 800e9c8:	f82a 9b02 	strh.w	r9, [sl], #2
 800e9cc:	443c      	add	r4, r7
 800e9ce:	4430      	add	r0, r6
 800e9d0:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
 800e9d4:	e7e9      	b.n	800e9aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800e9d6:	ea5f 4a24 	movs.w	sl, r4, asr #16
 800e9da:	d414      	bmi.n	800ea06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800e9dc:	45e2      	cmp	sl, ip
 800e9de:	da12      	bge.n	800ea06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800e9e0:	ea5f 4920 	movs.w	r9, r0, asr #16
 800e9e4:	d40f      	bmi.n	800ea06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800e9e6:	45c1      	cmp	r9, r8
 800e9e8:	da0d      	bge.n	800ea06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800e9ea:	9a01      	ldr	r2, [sp, #4]
 800e9ec:	fb0c 2909 	mla	r9, ip, r9, r2
 800e9f0:	9a02      	ldr	r2, [sp, #8]
 800e9f2:	f819 900a 	ldrb.w	r9, [r9, sl]
 800e9f6:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 800e9fa:	f06f 0201 	mvn.w	r2, #1
 800e9fe:	fb02 f90e 	mul.w	r9, r2, lr
 800ea02:	f82b a009 	strh.w	sl, [fp, r9]
 800ea06:	443c      	add	r4, r7
 800ea08:	4430      	add	r0, r6
 800ea0a:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
 800ea0e:	e786      	b.n	800e91e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800ea10:	b005      	add	sp, #20
 800ea12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ea16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800ea16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea1a:	b087      	sub	sp, #28
 800ea1c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800ea1e:	9205      	str	r2, [sp, #20]
 800ea20:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800ea24:	9202      	str	r2, [sp, #8]
 800ea26:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800ea2a:	9101      	str	r1, [sp, #4]
 800ea2c:	6871      	ldr	r1, [r6, #4]
 800ea2e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800ea30:	f89d 006c 	ldrb.w	r0, [sp, #108]	; 0x6c
 800ea34:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800ea38:	fb01 2404 	mla	r4, r1, r4, r2
 800ea3c:	6832      	ldr	r2, [r6, #0]
 800ea3e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ea42:	682a      	ldr	r2, [r5, #0]
 800ea44:	9203      	str	r2, [sp, #12]
 800ea46:	686a      	ldr	r2, [r5, #4]
 800ea48:	fa1f fc80 	uxth.w	ip, r0
 800ea4c:	3204      	adds	r2, #4
 800ea4e:	43c0      	mvns	r0, r0
 800ea50:	9200      	str	r2, [sp, #0]
 800ea52:	b2c0      	uxtb	r0, r0
 800ea54:	9a01      	ldr	r2, [sp, #4]
 800ea56:	2a00      	cmp	r2, #0
 800ea58:	dc03      	bgt.n	800ea62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800ea5a:	9a05      	ldr	r2, [sp, #20]
 800ea5c:	2a00      	cmp	r2, #0
 800ea5e:	f340 811b 	ble.w	800ec98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800ea62:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ea64:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ea68:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ea6a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ea6e:	2b00      	cmp	r3, #0
 800ea70:	dd0f      	ble.n	800ea92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800ea72:	140d      	asrs	r5, r1, #16
 800ea74:	d406      	bmi.n	800ea84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800ea76:	4575      	cmp	r5, lr
 800ea78:	da04      	bge.n	800ea84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800ea7a:	1415      	asrs	r5, r2, #16
 800ea7c:	d402      	bmi.n	800ea84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800ea7e:	9e02      	ldr	r6, [sp, #8]
 800ea80:	42b5      	cmp	r5, r6
 800ea82:	db07      	blt.n	800ea94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800ea84:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ea86:	4429      	add	r1, r5
 800ea88:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ea8a:	3b01      	subs	r3, #1
 800ea8c:	442a      	add	r2, r5
 800ea8e:	3402      	adds	r4, #2
 800ea90:	e7ed      	b.n	800ea6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800ea92:	d00f      	beq.n	800eab4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800ea94:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800ea96:	1e5d      	subs	r5, r3, #1
 800ea98:	fb06 1605 	mla	r6, r6, r5, r1
 800ea9c:	1436      	asrs	r6, r6, #16
 800ea9e:	d547      	bpl.n	800eb30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800eaa0:	469a      	mov	sl, r3
 800eaa2:	46a1      	mov	r9, r4
 800eaa4:	f1ba 0f00 	cmp.w	sl, #0
 800eaa8:	f300 809f 	bgt.w	800ebea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800eaac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800eab0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800eab4:	9b01      	ldr	r3, [sp, #4]
 800eab6:	2b00      	cmp	r3, #0
 800eab8:	f340 80ee 	ble.w	800ec98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800eabc:	ee30 0a04 	vadd.f32	s0, s0, s8
 800eac0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800eac4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800eac8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eaca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800eace:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ead2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ead6:	eef0 6a62 	vmov.f32	s13, s5
 800eada:	ee61 7a27 	vmul.f32	s15, s2, s15
 800eade:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800eae2:	ee77 2a62 	vsub.f32	s5, s14, s5
 800eae6:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800eaea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800eaee:	eef0 6a43 	vmov.f32	s13, s6
 800eaf2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800eaf6:	ee12 2a90 	vmov	r2, s5
 800eafa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800eafe:	fb92 f3f3 	sdiv	r3, r2, r3
 800eb02:	ee13 2a10 	vmov	r2, s6
 800eb06:	9313      	str	r3, [sp, #76]	; 0x4c
 800eb08:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eb0a:	fb92 f3f3 	sdiv	r3, r2, r3
 800eb0e:	9314      	str	r3, [sp, #80]	; 0x50
 800eb10:	9b01      	ldr	r3, [sp, #4]
 800eb12:	9a05      	ldr	r2, [sp, #20]
 800eb14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800eb18:	3b01      	subs	r3, #1
 800eb1a:	9301      	str	r3, [sp, #4]
 800eb1c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800eb20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eb22:	eeb0 3a67 	vmov.f32	s6, s15
 800eb26:	bf08      	it	eq
 800eb28:	4613      	moveq	r3, r2
 800eb2a:	eef0 2a47 	vmov.f32	s5, s14
 800eb2e:	e791      	b.n	800ea54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800eb30:	4576      	cmp	r6, lr
 800eb32:	dab5      	bge.n	800eaa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800eb34:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800eb36:	fb06 2505 	mla	r5, r6, r5, r2
 800eb3a:	142d      	asrs	r5, r5, #16
 800eb3c:	d4b0      	bmi.n	800eaa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800eb3e:	9e02      	ldr	r6, [sp, #8]
 800eb40:	42b5      	cmp	r5, r6
 800eb42:	daad      	bge.n	800eaa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800eb44:	4699      	mov	r9, r3
 800eb46:	46a2      	mov	sl, r4
 800eb48:	f1b9 0f00 	cmp.w	r9, #0
 800eb4c:	ddae      	ble.n	800eaac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800eb4e:	9f03      	ldr	r7, [sp, #12]
 800eb50:	1415      	asrs	r5, r2, #16
 800eb52:	140e      	asrs	r6, r1, #16
 800eb54:	fb0e 7505 	mla	r5, lr, r5, r7
 800eb58:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800eb5c:	f815 8006 	ldrb.w	r8, [r5, r6]
 800eb60:	9d00      	ldr	r5, [sp, #0]
 800eb62:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800eb66:	eb05 0b08 	add.w	fp, r5, r8
 800eb6a:	f8ba 5000 	ldrh.w	r5, [sl]
 800eb6e:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800eb72:	f89b b001 	ldrb.w	fp, [fp, #1]
 800eb76:	122f      	asrs	r7, r5, #8
 800eb78:	fb16 f60c 	smulbb	r6, r6, ip
 800eb7c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800eb80:	fb07 6700 	mla	r7, r7, r0, r6
 800eb84:	10ee      	asrs	r6, r5, #3
 800eb86:	fb1b fb0c 	smulbb	fp, fp, ip
 800eb8a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800eb8e:	fb06 b600 	mla	r6, r6, r0, fp
 800eb92:	b2b6      	uxth	r6, r6
 800eb94:	9604      	str	r6, [sp, #16]
 800eb96:	9e00      	ldr	r6, [sp, #0]
 800eb98:	00ed      	lsls	r5, r5, #3
 800eb9a:	f816 8008 	ldrb.w	r8, [r6, r8]
 800eb9e:	b2ed      	uxtb	r5, r5
 800eba0:	fb15 f500 	smulbb	r5, r5, r0
 800eba4:	b2bf      	uxth	r7, r7
 800eba6:	fb08 580c 	mla	r8, r8, ip, r5
 800ebaa:	fa1f f888 	uxth.w	r8, r8
 800ebae:	1c7d      	adds	r5, r7, #1
 800ebb0:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800ebb4:	f108 0501 	add.w	r5, r8, #1
 800ebb8:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800ebbc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800ebc0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800ebc4:	432f      	orrs	r7, r5
 800ebc6:	9d04      	ldr	r5, [sp, #16]
 800ebc8:	f105 0b01 	add.w	fp, r5, #1
 800ebcc:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800ebd0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ebd2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800ebd6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800ebda:	4429      	add	r1, r5
 800ebdc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ebde:	ea47 070b 	orr.w	r7, r7, fp
 800ebe2:	f82a 7b02 	strh.w	r7, [sl], #2
 800ebe6:	442a      	add	r2, r5
 800ebe8:	e7ae      	b.n	800eb48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800ebea:	140e      	asrs	r6, r1, #16
 800ebec:	d44b      	bmi.n	800ec86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800ebee:	4576      	cmp	r6, lr
 800ebf0:	da49      	bge.n	800ec86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800ebf2:	1415      	asrs	r5, r2, #16
 800ebf4:	d447      	bmi.n	800ec86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800ebf6:	9f02      	ldr	r7, [sp, #8]
 800ebf8:	42bd      	cmp	r5, r7
 800ebfa:	da44      	bge.n	800ec86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800ebfc:	9f03      	ldr	r7, [sp, #12]
 800ebfe:	fb0e 7505 	mla	r5, lr, r5, r7
 800ec02:	f815 8006 	ldrb.w	r8, [r5, r6]
 800ec06:	9d00      	ldr	r5, [sp, #0]
 800ec08:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800ec0c:	eb05 0b08 	add.w	fp, r5, r8
 800ec10:	f8b9 5000 	ldrh.w	r5, [r9]
 800ec14:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800ec18:	f89b b001 	ldrb.w	fp, [fp, #1]
 800ec1c:	122f      	asrs	r7, r5, #8
 800ec1e:	fb16 f60c 	smulbb	r6, r6, ip
 800ec22:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ec26:	fb07 6700 	mla	r7, r7, r0, r6
 800ec2a:	10ee      	asrs	r6, r5, #3
 800ec2c:	fb1b fb0c 	smulbb	fp, fp, ip
 800ec30:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ec34:	fb06 b600 	mla	r6, r6, r0, fp
 800ec38:	b2b6      	uxth	r6, r6
 800ec3a:	9604      	str	r6, [sp, #16]
 800ec3c:	9e00      	ldr	r6, [sp, #0]
 800ec3e:	00ed      	lsls	r5, r5, #3
 800ec40:	f816 8008 	ldrb.w	r8, [r6, r8]
 800ec44:	b2ed      	uxtb	r5, r5
 800ec46:	fb15 f500 	smulbb	r5, r5, r0
 800ec4a:	b2bf      	uxth	r7, r7
 800ec4c:	fb08 580c 	mla	r8, r8, ip, r5
 800ec50:	fa1f f888 	uxth.w	r8, r8
 800ec54:	1c7d      	adds	r5, r7, #1
 800ec56:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800ec5a:	f108 0501 	add.w	r5, r8, #1
 800ec5e:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800ec62:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800ec66:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800ec6a:	432f      	orrs	r7, r5
 800ec6c:	9d04      	ldr	r5, [sp, #16]
 800ec6e:	f105 0b01 	add.w	fp, r5, #1
 800ec72:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800ec76:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800ec7a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800ec7e:	ea47 070b 	orr.w	r7, r7, fp
 800ec82:	f8a9 7000 	strh.w	r7, [r9]
 800ec86:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ec88:	4429      	add	r1, r5
 800ec8a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ec8c:	f109 0902 	add.w	r9, r9, #2
 800ec90:	442a      	add	r2, r5
 800ec92:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 800ec96:	e705      	b.n	800eaa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800ec98:	b007      	add	sp, #28
 800ec9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800eca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800eca0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eca4:	b085      	sub	sp, #20
 800eca6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800ecaa:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800ecac:	9203      	str	r2, [sp, #12]
 800ecae:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800ecb2:	6870      	ldr	r0, [r6, #4]
 800ecb4:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800ecb6:	f9bd 7058 	ldrsh.w	r7, [sp, #88]	; 0x58
 800ecba:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800ecbe:	9101      	str	r1, [sp, #4]
 800ecc0:	fb00 2404 	mla	r4, r0, r4, r2
 800ecc4:	6832      	ldr	r2, [r6, #0]
 800ecc6:	686e      	ldr	r6, [r5, #4]
 800ecc8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800eccc:	682a      	ldr	r2, [r5, #0]
 800ecce:	9202      	str	r2, [sp, #8]
 800ecd0:	3604      	adds	r6, #4
 800ecd2:	9a01      	ldr	r2, [sp, #4]
 800ecd4:	2a00      	cmp	r2, #0
 800ecd6:	dc03      	bgt.n	800ece0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 800ecd8:	9a03      	ldr	r2, [sp, #12]
 800ecda:	2a00      	cmp	r2, #0
 800ecdc:	f340 80c7 	ble.w	800ee6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800ece0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800ece2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800ece6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ece8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ecec:	2b00      	cmp	r3, #0
 800ecee:	dd0e      	ble.n	800ed0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800ecf0:	1405      	asrs	r5, r0, #16
 800ecf2:	d405      	bmi.n	800ed00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800ecf4:	42bd      	cmp	r5, r7
 800ecf6:	da03      	bge.n	800ed00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800ecf8:	1415      	asrs	r5, r2, #16
 800ecfa:	d401      	bmi.n	800ed00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800ecfc:	4545      	cmp	r5, r8
 800ecfe:	db07      	blt.n	800ed10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800ed00:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800ed02:	4428      	add	r0, r5
 800ed04:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800ed06:	3b01      	subs	r3, #1
 800ed08:	442a      	add	r2, r5
 800ed0a:	3402      	adds	r4, #2
 800ed0c:	e7ee      	b.n	800ecec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800ed0e:	d010      	beq.n	800ed32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800ed10:	9911      	ldr	r1, [sp, #68]	; 0x44
 800ed12:	1e5d      	subs	r5, r3, #1
 800ed14:	fb01 0c05 	mla	ip, r1, r5, r0
 800ed18:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 800ed1c:	d545      	bpl.n	800edaa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 800ed1e:	469e      	mov	lr, r3
 800ed20:	eb04 0b43 	add.w	fp, r4, r3, lsl #1
 800ed24:	f1be 0f00 	cmp.w	lr, #0
 800ed28:	dc72      	bgt.n	800ee10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800ed2a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ed2e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ed32:	9b01      	ldr	r3, [sp, #4]
 800ed34:	2b00      	cmp	r3, #0
 800ed36:	f340 809a 	ble.w	800ee6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800ed3a:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ed3e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ed42:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ed46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ed48:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ed4c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ed50:	eeb0 6a62 	vmov.f32	s12, s5
 800ed54:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ed58:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ed5c:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ed60:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800ed64:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ed68:	eeb0 6a43 	vmov.f32	s12, s6
 800ed6c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ed70:	ee12 2a90 	vmov	r2, s5
 800ed74:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ed78:	fb92 f3f3 	sdiv	r3, r2, r3
 800ed7c:	ee13 2a10 	vmov	r2, s6
 800ed80:	9311      	str	r3, [sp, #68]	; 0x44
 800ed82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ed84:	fb92 f3f3 	sdiv	r3, r2, r3
 800ed88:	9312      	str	r3, [sp, #72]	; 0x48
 800ed8a:	9b01      	ldr	r3, [sp, #4]
 800ed8c:	9a03      	ldr	r2, [sp, #12]
 800ed8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ed92:	3b01      	subs	r3, #1
 800ed94:	9301      	str	r3, [sp, #4]
 800ed96:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800ed9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ed9c:	eeb0 3a67 	vmov.f32	s6, s15
 800eda0:	bf08      	it	eq
 800eda2:	4613      	moveq	r3, r2
 800eda4:	eef0 2a47 	vmov.f32	s5, s14
 800eda8:	e793      	b.n	800ecd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32>
 800edaa:	45bc      	cmp	ip, r7
 800edac:	dab7      	bge.n	800ed1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800edae:	9912      	ldr	r1, [sp, #72]	; 0x48
 800edb0:	fb01 2505 	mla	r5, r1, r5, r2
 800edb4:	142d      	asrs	r5, r5, #16
 800edb6:	d4b2      	bmi.n	800ed1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800edb8:	4545      	cmp	r5, r8
 800edba:	dab0      	bge.n	800ed1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800edbc:	469e      	mov	lr, r3
 800edbe:	46a2      	mov	sl, r4
 800edc0:	f1be 0f00 	cmp.w	lr, #0
 800edc4:	ddb1      	ble.n	800ed2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800edc6:	9902      	ldr	r1, [sp, #8]
 800edc8:	1415      	asrs	r5, r2, #16
 800edca:	fb07 1505 	mla	r5, r7, r5, r1
 800edce:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800edd2:	4928      	ldr	r1, [pc, #160]	; (800ee74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>)
 800edd4:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800edd8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800eddc:	eb06 0b0c 	add.w	fp, r6, ip
 800ede0:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
 800ede4:	f89b 5001 	ldrb.w	r5, [fp, #1]
 800ede8:	f89b 9002 	ldrb.w	r9, [fp, #2]
 800edec:	00ed      	lsls	r5, r5, #3
 800edee:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 800edf2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800edf6:	9911      	ldr	r1, [sp, #68]	; 0x44
 800edf8:	ea49 0505 	orr.w	r5, r9, r5
 800edfc:	f816 900c 	ldrb.w	r9, [r6, ip]
 800ee00:	4408      	add	r0, r1
 800ee02:	9912      	ldr	r1, [sp, #72]	; 0x48
 800ee04:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 800ee08:	f82a 5b02 	strh.w	r5, [sl], #2
 800ee0c:	440a      	add	r2, r1
 800ee0e:	e7d7      	b.n	800edc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x120>
 800ee10:	ea5f 4c20 	movs.w	ip, r0, asr #16
 800ee14:	d424      	bmi.n	800ee60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800ee16:	45bc      	cmp	ip, r7
 800ee18:	da22      	bge.n	800ee60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800ee1a:	1415      	asrs	r5, r2, #16
 800ee1c:	d420      	bmi.n	800ee60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800ee1e:	4545      	cmp	r5, r8
 800ee20:	da1e      	bge.n	800ee60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800ee22:	9902      	ldr	r1, [sp, #8]
 800ee24:	fb07 1505 	mla	r5, r7, r5, r1
 800ee28:	f06f 0101 	mvn.w	r1, #1
 800ee2c:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800ee30:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800ee34:	eb06 050c 	add.w	r5, r6, ip
 800ee38:	fb01 f90e 	mul.w	r9, r1, lr
 800ee3c:	f895 a002 	ldrb.w	sl, [r5, #2]
 800ee40:	786d      	ldrb	r5, [r5, #1]
 800ee42:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 800ee46:	00ed      	lsls	r5, r5, #3
 800ee48:	ea01 2a0a 	and.w	sl, r1, sl, lsl #8
 800ee4c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800ee50:	ea4a 0505 	orr.w	r5, sl, r5
 800ee54:	f816 a00c 	ldrb.w	sl, [r6, ip]
 800ee58:	ea45 05da 	orr.w	r5, r5, sl, lsr #3
 800ee5c:	f82b 5009 	strh.w	r5, [fp, r9]
 800ee60:	9911      	ldr	r1, [sp, #68]	; 0x44
 800ee62:	4408      	add	r0, r1
 800ee64:	9912      	ldr	r1, [sp, #72]	; 0x48
 800ee66:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
 800ee6a:	440a      	add	r2, r1
 800ee6c:	e75a      	b.n	800ed24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 800ee6e:	b005      	add	sp, #20
 800ee70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ee74:	fffff800 	.word	0xfffff800

0800ee78 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800ee78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ee7c:	b087      	sub	sp, #28
 800ee7e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800ee82:	9204      	str	r2, [sp, #16]
 800ee84:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800ee88:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800ee8a:	9201      	str	r2, [sp, #4]
 800ee8c:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800ee90:	9205      	str	r2, [sp, #20]
 800ee92:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800ee96:	9100      	str	r1, [sp, #0]
 800ee98:	6869      	ldr	r1, [r5, #4]
 800ee9a:	981a      	ldr	r0, [sp, #104]	; 0x68
 800ee9c:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800eea0:	fb01 2404 	mla	r4, r1, r4, r2
 800eea4:	682a      	ldr	r2, [r5, #0]
 800eea6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800eeaa:	6802      	ldr	r2, [r0, #0]
 800eeac:	9202      	str	r2, [sp, #8]
 800eeae:	6842      	ldr	r2, [r0, #4]
 800eeb0:	3204      	adds	r2, #4
 800eeb2:	9203      	str	r2, [sp, #12]
 800eeb4:	9a00      	ldr	r2, [sp, #0]
 800eeb6:	2a00      	cmp	r2, #0
 800eeb8:	dc03      	bgt.n	800eec2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 800eeba:	9a04      	ldr	r2, [sp, #16]
 800eebc:	2a00      	cmp	r2, #0
 800eebe:	f340 812c 	ble.w	800f11a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800eec2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800eec4:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800eec8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800eeca:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800eece:	2b00      	cmp	r3, #0
 800eed0:	dd0f      	ble.n	800eef2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800eed2:	1402      	asrs	r2, r0, #16
 800eed4:	d406      	bmi.n	800eee4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800eed6:	4572      	cmp	r2, lr
 800eed8:	da04      	bge.n	800eee4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800eeda:	140a      	asrs	r2, r1, #16
 800eedc:	d402      	bmi.n	800eee4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800eede:	9d01      	ldr	r5, [sp, #4]
 800eee0:	42aa      	cmp	r2, r5
 800eee2:	db07      	blt.n	800eef4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800eee4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800eee6:	4410      	add	r0, r2
 800eee8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800eeea:	3b01      	subs	r3, #1
 800eeec:	4411      	add	r1, r2
 800eeee:	3402      	adds	r4, #2
 800eef0:	e7ed      	b.n	800eece <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56>
 800eef2:	d00f      	beq.n	800ef14 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800eef4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800eef6:	1e5a      	subs	r2, r3, #1
 800eef8:	fb05 0502 	mla	r5, r5, r2, r0
 800eefc:	142d      	asrs	r5, r5, #16
 800eefe:	d545      	bpl.n	800ef8c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800ef00:	4699      	mov	r9, r3
 800ef02:	46a0      	mov	r8, r4
 800ef04:	f1b9 0f00 	cmp.w	r9, #0
 800ef08:	f300 80a7 	bgt.w	800f05a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800ef0c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ef10:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ef14:	9b00      	ldr	r3, [sp, #0]
 800ef16:	2b00      	cmp	r3, #0
 800ef18:	f340 80ff 	ble.w	800f11a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800ef1c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ef20:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ef24:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ef28:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ef2a:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ef2e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ef32:	eeb0 6a62 	vmov.f32	s12, s5
 800ef36:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ef3a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ef3e:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ef42:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800ef46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ef4a:	eeb0 6a43 	vmov.f32	s12, s6
 800ef4e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ef52:	ee12 2a90 	vmov	r2, s5
 800ef56:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ef5a:	fb92 f3f3 	sdiv	r3, r2, r3
 800ef5e:	ee13 2a10 	vmov	r2, s6
 800ef62:	9313      	str	r3, [sp, #76]	; 0x4c
 800ef64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ef66:	fb92 f3f3 	sdiv	r3, r2, r3
 800ef6a:	9314      	str	r3, [sp, #80]	; 0x50
 800ef6c:	9b00      	ldr	r3, [sp, #0]
 800ef6e:	9a04      	ldr	r2, [sp, #16]
 800ef70:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ef74:	3b01      	subs	r3, #1
 800ef76:	9300      	str	r3, [sp, #0]
 800ef78:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800ef7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ef7e:	eeb0 3a67 	vmov.f32	s6, s15
 800ef82:	bf08      	it	eq
 800ef84:	4613      	moveq	r3, r2
 800ef86:	eef0 2a47 	vmov.f32	s5, s14
 800ef8a:	e793      	b.n	800eeb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3c>
 800ef8c:	4575      	cmp	r5, lr
 800ef8e:	dab7      	bge.n	800ef00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800ef90:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ef92:	fb05 1202 	mla	r2, r5, r2, r1
 800ef96:	1412      	asrs	r2, r2, #16
 800ef98:	d4b2      	bmi.n	800ef00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800ef9a:	9d01      	ldr	r5, [sp, #4]
 800ef9c:	42aa      	cmp	r2, r5
 800ef9e:	daaf      	bge.n	800ef00 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800efa0:	f04f 0800 	mov.w	r8, #0
 800efa4:	eba3 0208 	sub.w	r2, r3, r8
 800efa8:	2a00      	cmp	r2, #0
 800efaa:	ddaf      	ble.n	800ef0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 800efac:	9e02      	ldr	r6, [sp, #8]
 800efae:	140a      	asrs	r2, r1, #16
 800efb0:	1405      	asrs	r5, r0, #16
 800efb2:	fb0e 6202 	mla	r2, lr, r2, r6
 800efb6:	5d52      	ldrb	r2, [r2, r5]
 800efb8:	9d03      	ldr	r5, [sp, #12]
 800efba:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800efbe:	0e2e      	lsrs	r6, r5, #24
 800efc0:	d044      	beq.n	800f04c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800efc2:	9a05      	ldr	r2, [sp, #20]
 800efc4:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 800efc8:	4356      	muls	r6, r2
 800efca:	1c72      	adds	r2, r6, #1
 800efcc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800efd0:	1212      	asrs	r2, r2, #8
 800efd2:	fa1f f982 	uxth.w	r9, r2
 800efd6:	ea4f 272c 	mov.w	r7, ip, asr #8
 800efda:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800efde:	43d2      	mvns	r2, r2
 800efe0:	b2d2      	uxtb	r2, r2
 800efe2:	fb16 f609 	smulbb	r6, r6, r9
 800efe6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800efea:	fb07 6702 	mla	r7, r7, r2, r6
 800efee:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800eff2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800eff6:	b2ed      	uxtb	r5, r5
 800eff8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800effc:	fa5f fc8c 	uxtb.w	ip, ip
 800f000:	fb15 f509 	smulbb	r5, r5, r9
 800f004:	fb0c 5502 	mla	r5, ip, r2, r5
 800f008:	b2bf      	uxth	r7, r7
 800f00a:	fb1a fa09 	smulbb	sl, sl, r9
 800f00e:	b2ad      	uxth	r5, r5
 800f010:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f014:	fb06 a602 	mla	r6, r6, r2, sl
 800f018:	1c7a      	adds	r2, r7, #1
 800f01a:	f105 0a01 	add.w	sl, r5, #1
 800f01e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800f022:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f026:	b2b6      	uxth	r6, r6
 800f028:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f02c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f030:	ea47 070a 	orr.w	r7, r7, sl
 800f034:	f106 0a01 	add.w	sl, r6, #1
 800f038:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f03c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f040:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f044:	ea47 070a 	orr.w	r7, r7, sl
 800f048:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800f04c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f04e:	4410      	add	r0, r2
 800f050:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f052:	f108 0801 	add.w	r8, r8, #1
 800f056:	4411      	add	r1, r2
 800f058:	e7a4      	b.n	800efa4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 800f05a:	1405      	asrs	r5, r0, #16
 800f05c:	d454      	bmi.n	800f108 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800f05e:	4575      	cmp	r5, lr
 800f060:	da52      	bge.n	800f108 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800f062:	140a      	asrs	r2, r1, #16
 800f064:	d450      	bmi.n	800f108 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800f066:	9e01      	ldr	r6, [sp, #4]
 800f068:	42b2      	cmp	r2, r6
 800f06a:	da4d      	bge.n	800f108 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800f06c:	9e02      	ldr	r6, [sp, #8]
 800f06e:	fb0e 6202 	mla	r2, lr, r2, r6
 800f072:	5d52      	ldrb	r2, [r2, r5]
 800f074:	9d03      	ldr	r5, [sp, #12]
 800f076:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800f07a:	0e2e      	lsrs	r6, r5, #24
 800f07c:	d044      	beq.n	800f108 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 800f07e:	9a05      	ldr	r2, [sp, #20]
 800f080:	f8b8 c000 	ldrh.w	ip, [r8]
 800f084:	4356      	muls	r6, r2
 800f086:	1c72      	adds	r2, r6, #1
 800f088:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800f08c:	1212      	asrs	r2, r2, #8
 800f08e:	fa1f fa82 	uxth.w	sl, r2
 800f092:	ea4f 272c 	mov.w	r7, ip, asr #8
 800f096:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800f09a:	43d2      	mvns	r2, r2
 800f09c:	b2d2      	uxtb	r2, r2
 800f09e:	fb16 f60a 	smulbb	r6, r6, sl
 800f0a2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f0a6:	fb07 6702 	mla	r7, r7, r2, r6
 800f0aa:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 800f0ae:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800f0b2:	b2ed      	uxtb	r5, r5
 800f0b4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800f0b8:	fa5f fc8c 	uxtb.w	ip, ip
 800f0bc:	fb15 f50a 	smulbb	r5, r5, sl
 800f0c0:	fb0c 5502 	mla	r5, ip, r2, r5
 800f0c4:	b2bf      	uxth	r7, r7
 800f0c6:	fb1b fb0a 	smulbb	fp, fp, sl
 800f0ca:	b2ad      	uxth	r5, r5
 800f0cc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f0d0:	fb06 b602 	mla	r6, r6, r2, fp
 800f0d4:	1c7a      	adds	r2, r7, #1
 800f0d6:	f105 0b01 	add.w	fp, r5, #1
 800f0da:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800f0de:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800f0e2:	b2b6      	uxth	r6, r6
 800f0e4:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 800f0e8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f0ec:	ea47 070b 	orr.w	r7, r7, fp
 800f0f0:	f106 0b01 	add.w	fp, r6, #1
 800f0f4:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800f0f8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800f0fc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800f100:	ea47 070b 	orr.w	r7, r7, fp
 800f104:	f8a8 7000 	strh.w	r7, [r8]
 800f108:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f10a:	4410      	add	r0, r2
 800f10c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f10e:	f108 0802 	add.w	r8, r8, #2
 800f112:	4411      	add	r1, r2
 800f114:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800f118:	e6f4      	b.n	800ef04 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800f11a:	b007      	add	sp, #28
 800f11c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f120 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f120:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f124:	b087      	sub	sp, #28
 800f126:	468b      	mov	fp, r1
 800f128:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800f12a:	9205      	str	r2, [sp, #20]
 800f12c:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f130:	9201      	str	r2, [sp, #4]
 800f132:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800f136:	6869      	ldr	r1, [r5, #4]
 800f138:	981a      	ldr	r0, [sp, #104]	; 0x68
 800f13a:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800f13e:	fb01 2404 	mla	r4, r1, r4, r2
 800f142:	682a      	ldr	r2, [r5, #0]
 800f144:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f148:	6802      	ldr	r2, [r0, #0]
 800f14a:	9203      	str	r2, [sp, #12]
 800f14c:	6842      	ldr	r2, [r0, #4]
 800f14e:	3204      	adds	r2, #4
 800f150:	9204      	str	r2, [sp, #16]
 800f152:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f156:	f1bb 0f00 	cmp.w	fp, #0
 800f15a:	dc03      	bgt.n	800f164 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800f15c:	9a05      	ldr	r2, [sp, #20]
 800f15e:	2a00      	cmp	r2, #0
 800f160:	f340 814a 	ble.w	800f3f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 800f164:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f166:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f16a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f16c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f170:	2b00      	cmp	r3, #0
 800f172:	dd0f      	ble.n	800f194 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800f174:	1408      	asrs	r0, r1, #16
 800f176:	d406      	bmi.n	800f186 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800f178:	4540      	cmp	r0, r8
 800f17a:	da04      	bge.n	800f186 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800f17c:	1410      	asrs	r0, r2, #16
 800f17e:	d402      	bmi.n	800f186 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800f180:	9d01      	ldr	r5, [sp, #4]
 800f182:	42a8      	cmp	r0, r5
 800f184:	db07      	blt.n	800f196 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 800f186:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f188:	4401      	add	r1, r0
 800f18a:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f18c:	3b01      	subs	r3, #1
 800f18e:	4402      	add	r2, r0
 800f190:	3402      	adds	r4, #2
 800f192:	e7ed      	b.n	800f170 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800f194:	d018      	beq.n	800f1c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa8>
 800f196:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f198:	1e58      	subs	r0, r3, #1
 800f19a:	fb05 1500 	mla	r5, r5, r0, r1
 800f19e:	142d      	asrs	r5, r5, #16
 800f1a0:	d40a      	bmi.n	800f1b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800f1a2:	4545      	cmp	r5, r8
 800f1a4:	da08      	bge.n	800f1b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800f1a6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f1a8:	fb05 2000 	mla	r0, r5, r0, r2
 800f1ac:	1400      	asrs	r0, r0, #16
 800f1ae:	d403      	bmi.n	800f1b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800f1b0:	9d01      	ldr	r5, [sp, #4]
 800f1b2:	42a8      	cmp	r0, r5
 800f1b4:	f2c0 80b7 	blt.w	800f326 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x206>
 800f1b8:	2600      	movs	r6, #0
 800f1ba:	1998      	adds	r0, r3, r6
 800f1bc:	2800      	cmp	r0, #0
 800f1be:	dc3e      	bgt.n	800f23e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11e>
 800f1c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f1c4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f1c8:	f1bb 0f00 	cmp.w	fp, #0
 800f1cc:	f340 8114 	ble.w	800f3f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 800f1d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f1d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f1d8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f1dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f1de:	f1bb 0b01 	subs.w	fp, fp, #1
 800f1e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f1e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f1ea:	eeb0 6a62 	vmov.f32	s12, s5
 800f1ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f1f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f1f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f1fa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800f1fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f202:	eeb0 6a43 	vmov.f32	s12, s6
 800f206:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f20a:	ee12 2a90 	vmov	r2, s5
 800f20e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f212:	fb92 f3f3 	sdiv	r3, r2, r3
 800f216:	ee13 2a10 	vmov	r2, s6
 800f21a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f21e:	9313      	str	r3, [sp, #76]	; 0x4c
 800f220:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f222:	fb92 f3f3 	sdiv	r3, r2, r3
 800f226:	9a05      	ldr	r2, [sp, #20]
 800f228:	9314      	str	r3, [sp, #80]	; 0x50
 800f22a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800f22e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f230:	eeb0 3a67 	vmov.f32	s6, s15
 800f234:	bf08      	it	eq
 800f236:	4613      	moveq	r3, r2
 800f238:	eef0 2a47 	vmov.f32	s5, s14
 800f23c:	e78b      	b.n	800f156 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 800f23e:	140d      	asrs	r5, r1, #16
 800f240:	d459      	bmi.n	800f2f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f242:	4545      	cmp	r5, r8
 800f244:	da57      	bge.n	800f2f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f246:	1410      	asrs	r0, r2, #16
 800f248:	d455      	bmi.n	800f2f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f24a:	9f01      	ldr	r7, [sp, #4]
 800f24c:	42b8      	cmp	r0, r7
 800f24e:	da52      	bge.n	800f2f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f250:	9f03      	ldr	r7, [sp, #12]
 800f252:	fb08 7000 	mla	r0, r8, r0, r7
 800f256:	5d40      	ldrb	r0, [r0, r5]
 800f258:	9d04      	ldr	r5, [sp, #16]
 800f25a:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800f25e:	0e07      	lsrs	r7, r0, #24
 800f260:	2fff      	cmp	r7, #255	; 0xff
 800f262:	d04e      	beq.n	800f302 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800f264:	b2fd      	uxtb	r5, r7
 800f266:	2f00      	cmp	r7, #0
 800f268:	d045      	beq.n	800f2f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f26a:	f06f 0701 	mvn.w	r7, #1
 800f26e:	4377      	muls	r7, r6
 800f270:	fa1f f985 	uxth.w	r9, r5
 800f274:	f834 e007 	ldrh.w	lr, [r4, r7]
 800f278:	9702      	str	r7, [sp, #8]
 800f27a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800f27e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 800f282:	43ed      	mvns	r5, r5
 800f284:	b2ed      	uxtb	r5, r5
 800f286:	fb17 f709 	smulbb	r7, r7, r9
 800f28a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f28e:	fb0c 7c05 	mla	ip, ip, r5, r7
 800f292:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800f296:	ea4f 07ee 	mov.w	r7, lr, asr #3
 800f29a:	b2c0      	uxtb	r0, r0
 800f29c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f2a0:	fa5f fe8e 	uxtb.w	lr, lr
 800f2a4:	fb10 f009 	smulbb	r0, r0, r9
 800f2a8:	fb0e 0005 	mla	r0, lr, r5, r0
 800f2ac:	b280      	uxth	r0, r0
 800f2ae:	fa1f fc8c 	uxth.w	ip, ip
 800f2b2:	fb1a fa09 	smulbb	sl, sl, r9
 800f2b6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f2ba:	fb07 a705 	mla	r7, r7, r5, sl
 800f2be:	f100 0a01 	add.w	sl, r0, #1
 800f2c2:	f10c 0501 	add.w	r5, ip, #1
 800f2c6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800f2ca:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800f2ce:	b2bf      	uxth	r7, r7
 800f2d0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f2d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f2d8:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f2dc:	f107 0a01 	add.w	sl, r7, #1
 800f2e0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800f2e4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f2e8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f2ec:	9802      	ldr	r0, [sp, #8]
 800f2ee:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f2f2:	f824 c000 	strh.w	ip, [r4, r0]
 800f2f6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f2f8:	4401      	add	r1, r0
 800f2fa:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f2fc:	3e01      	subs	r6, #1
 800f2fe:	4402      	add	r2, r0
 800f300:	e75b      	b.n	800f1ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 800f302:	f06f 0501 	mvn.w	r5, #1
 800f306:	fb05 f706 	mul.w	r7, r5, r6
 800f30a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 800f30e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 800f312:	0945      	lsrs	r5, r0, #5
 800f314:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800f318:	ea4c 0505 	orr.w	r5, ip, r5
 800f31c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800f320:	4305      	orrs	r5, r0
 800f322:	53e5      	strh	r5, [r4, r7]
 800f324:	e7e7      	b.n	800f2f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f326:	f04f 0e00 	mov.w	lr, #0
 800f32a:	eba3 000e 	sub.w	r0, r3, lr
 800f32e:	2800      	cmp	r0, #0
 800f330:	f77f af46 	ble.w	800f1c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 800f334:	9e03      	ldr	r6, [sp, #12]
 800f336:	1410      	asrs	r0, r2, #16
 800f338:	140d      	asrs	r5, r1, #16
 800f33a:	fb08 6000 	mla	r0, r8, r0, r6
 800f33e:	5d40      	ldrb	r0, [r0, r5]
 800f340:	9d04      	ldr	r5, [sp, #16]
 800f342:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800f346:	0e06      	lsrs	r6, r0, #24
 800f348:	2eff      	cmp	r6, #255	; 0xff
 800f34a:	d048      	beq.n	800f3de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 800f34c:	b2f5      	uxtb	r5, r6
 800f34e:	2e00      	cmp	r6, #0
 800f350:	d03e      	beq.n	800f3d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800f352:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 800f356:	fa1f f985 	uxth.w	r9, r5
 800f35a:	ea4f 272c 	mov.w	r7, ip, asr #8
 800f35e:	f3c0 4607 	ubfx	r6, r0, #16, #8
 800f362:	43ed      	mvns	r5, r5
 800f364:	b2ed      	uxtb	r5, r5
 800f366:	fb16 f609 	smulbb	r6, r6, r9
 800f36a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f36e:	fb07 6705 	mla	r7, r7, r5, r6
 800f372:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800f376:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800f37a:	b2c0      	uxtb	r0, r0
 800f37c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800f380:	fa5f fc8c 	uxtb.w	ip, ip
 800f384:	fb10 f009 	smulbb	r0, r0, r9
 800f388:	fb0c 0005 	mla	r0, ip, r5, r0
 800f38c:	b2bf      	uxth	r7, r7
 800f38e:	fb1a fa09 	smulbb	sl, sl, r9
 800f392:	b280      	uxth	r0, r0
 800f394:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f398:	fb06 a605 	mla	r6, r6, r5, sl
 800f39c:	1c7d      	adds	r5, r7, #1
 800f39e:	f100 0a01 	add.w	sl, r0, #1
 800f3a2:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800f3a6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800f3aa:	b2b6      	uxth	r6, r6
 800f3ac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f3b0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f3b4:	ea47 070a 	orr.w	r7, r7, sl
 800f3b8:	f106 0a01 	add.w	sl, r6, #1
 800f3bc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f3c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f3c4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f3c8:	ea47 070a 	orr.w	r7, r7, sl
 800f3cc:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 800f3d0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f3d2:	4401      	add	r1, r0
 800f3d4:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f3d6:	f10e 0e01 	add.w	lr, lr, #1
 800f3da:	4402      	add	r2, r0
 800f3dc:	e7a5      	b.n	800f32a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20a>
 800f3de:	4d08      	ldr	r5, [pc, #32]	; (800f400 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e0>)
 800f3e0:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 800f3e4:	0945      	lsrs	r5, r0, #5
 800f3e6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800f3ea:	4335      	orrs	r5, r6
 800f3ec:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800f3f0:	4305      	orrs	r5, r0
 800f3f2:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 800f3f6:	e7eb      	b.n	800f3d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800f3f8:	b007      	add	sp, #28
 800f3fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f3fe:	bf00      	nop
 800f400:	fffff800 	.word	0xfffff800

0800f404 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f408:	b087      	sub	sp, #28
 800f40a:	468b      	mov	fp, r1
 800f40c:	9204      	str	r2, [sp, #16]
 800f40e:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f412:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800f414:	9201      	str	r2, [sp, #4]
 800f416:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800f41a:	9205      	str	r2, [sp, #20]
 800f41c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800f420:	6869      	ldr	r1, [r5, #4]
 800f422:	981a      	ldr	r0, [sp, #104]	; 0x68
 800f424:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800f428:	fb01 2404 	mla	r4, r1, r4, r2
 800f42c:	682a      	ldr	r2, [r5, #0]
 800f42e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f432:	6802      	ldr	r2, [r0, #0]
 800f434:	9202      	str	r2, [sp, #8]
 800f436:	6842      	ldr	r2, [r0, #4]
 800f438:	9203      	str	r2, [sp, #12]
 800f43a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f43e:	f1bb 0f00 	cmp.w	fp, #0
 800f442:	dc03      	bgt.n	800f44c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 800f444:	9a04      	ldr	r2, [sp, #16]
 800f446:	2a00      	cmp	r2, #0
 800f448:	f340 8136 	ble.w	800f6b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 800f44c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f44e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f452:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f454:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f458:	2b00      	cmp	r3, #0
 800f45a:	dd0f      	ble.n	800f47c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800f45c:	1408      	asrs	r0, r1, #16
 800f45e:	d406      	bmi.n	800f46e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800f460:	4540      	cmp	r0, r8
 800f462:	da04      	bge.n	800f46e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800f464:	1410      	asrs	r0, r2, #16
 800f466:	d402      	bmi.n	800f46e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800f468:	9d01      	ldr	r5, [sp, #4]
 800f46a:	42a8      	cmp	r0, r5
 800f46c:	db07      	blt.n	800f47e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800f46e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f470:	4401      	add	r1, r0
 800f472:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f474:	3b01      	subs	r3, #1
 800f476:	4402      	add	r2, r0
 800f478:	3402      	adds	r4, #2
 800f47a:	e7ed      	b.n	800f458 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 800f47c:	d00f      	beq.n	800f49e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 800f47e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f480:	1e58      	subs	r0, r3, #1
 800f482:	fb05 1500 	mla	r5, r5, r0, r1
 800f486:	142d      	asrs	r5, r5, #16
 800f488:	d544      	bpl.n	800f514 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 800f48a:	9300      	str	r3, [sp, #0]
 800f48c:	46a2      	mov	sl, r4
 800f48e:	9800      	ldr	r0, [sp, #0]
 800f490:	2800      	cmp	r0, #0
 800f492:	f300 80ab 	bgt.w	800f5ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 800f496:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f49a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f49e:	f1bb 0f00 	cmp.w	fp, #0
 800f4a2:	f340 8109 	ble.w	800f6b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 800f4a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f4aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f4ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f4b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f4b4:	f1bb 0b01 	subs.w	fp, fp, #1
 800f4b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f4bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f4c0:	eeb0 6a62 	vmov.f32	s12, s5
 800f4c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f4c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f4cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f4d0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800f4d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f4d8:	eeb0 6a43 	vmov.f32	s12, s6
 800f4dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f4e0:	ee12 2a90 	vmov	r2, s5
 800f4e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f4e8:	fb92 f3f3 	sdiv	r3, r2, r3
 800f4ec:	ee13 2a10 	vmov	r2, s6
 800f4f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f4f4:	9313      	str	r3, [sp, #76]	; 0x4c
 800f4f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f4f8:	fb92 f3f3 	sdiv	r3, r2, r3
 800f4fc:	9a04      	ldr	r2, [sp, #16]
 800f4fe:	9314      	str	r3, [sp, #80]	; 0x50
 800f500:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800f504:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f506:	eeb0 3a67 	vmov.f32	s6, s15
 800f50a:	bf08      	it	eq
 800f50c:	4613      	moveq	r3, r2
 800f50e:	eef0 2a47 	vmov.f32	s5, s14
 800f512:	e794      	b.n	800f43e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 800f514:	4545      	cmp	r5, r8
 800f516:	dab8      	bge.n	800f48a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800f518:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f51a:	fb05 2000 	mla	r0, r5, r0, r2
 800f51e:	1400      	asrs	r0, r0, #16
 800f520:	d4b3      	bmi.n	800f48a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800f522:	9d01      	ldr	r5, [sp, #4]
 800f524:	42a8      	cmp	r0, r5
 800f526:	dab0      	bge.n	800f48a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 800f528:	f04f 0900 	mov.w	r9, #0
 800f52c:	eba3 0009 	sub.w	r0, r3, r9
 800f530:	2800      	cmp	r0, #0
 800f532:	ddb0      	ble.n	800f496 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800f534:	140d      	asrs	r5, r1, #16
 800f536:	1410      	asrs	r0, r2, #16
 800f538:	fb08 5000 	mla	r0, r8, r0, r5
 800f53c:	9d03      	ldr	r5, [sp, #12]
 800f53e:	5c2e      	ldrb	r6, [r5, r0]
 800f540:	2e00      	cmp	r6, #0
 800f542:	d04c      	beq.n	800f5de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1da>
 800f544:	9d02      	ldr	r5, [sp, #8]
 800f546:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 800f54a:	9805      	ldr	r0, [sp, #20]
 800f54c:	f834 5019 	ldrh.w	r5, [r4, r9, lsl #1]
 800f550:	4346      	muls	r6, r0
 800f552:	1c70      	adds	r0, r6, #1
 800f554:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 800f558:	1200      	asrs	r0, r0, #8
 800f55a:	b287      	uxth	r7, r0
 800f55c:	122e      	asrs	r6, r5, #8
 800f55e:	43c0      	mvns	r0, r0
 800f560:	b2c0      	uxtb	r0, r0
 800f562:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800f566:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800f56a:	fb16 f600 	smulbb	r6, r6, r0
 800f56e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f572:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f576:	00ed      	lsls	r5, r5, #3
 800f578:	fb0c 6c07 	mla	ip, ip, r7, r6
 800f57c:	b2ed      	uxtb	r5, r5
 800f57e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800f582:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f586:	fb15 f500 	smulbb	r5, r5, r0
 800f58a:	fa5f fe8e 	uxtb.w	lr, lr
 800f58e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800f592:	fb0e 5507 	mla	r5, lr, r7, r5
 800f596:	fb1a fa00 	smulbb	sl, sl, r0
 800f59a:	fa1f fc8c 	uxth.w	ip, ip
 800f59e:	b2ad      	uxth	r5, r5
 800f5a0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f5a4:	fb06 a607 	mla	r6, r6, r7, sl
 800f5a8:	f10c 0001 	add.w	r0, ip, #1
 800f5ac:	f105 0a01 	add.w	sl, r5, #1
 800f5b0:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 800f5b4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f5b8:	b2b6      	uxth	r6, r6
 800f5ba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f5be:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f5c2:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f5c6:	f106 0a01 	add.w	sl, r6, #1
 800f5ca:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f5ce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f5d2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f5d6:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f5da:	f824 c019 	strh.w	ip, [r4, r9, lsl #1]
 800f5de:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f5e0:	4401      	add	r1, r0
 800f5e2:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f5e4:	f109 0901 	add.w	r9, r9, #1
 800f5e8:	4402      	add	r2, r0
 800f5ea:	e79f      	b.n	800f52c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x128>
 800f5ec:	1408      	asrs	r0, r1, #16
 800f5ee:	d459      	bmi.n	800f6a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800f5f0:	4540      	cmp	r0, r8
 800f5f2:	da57      	bge.n	800f6a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800f5f4:	1415      	asrs	r5, r2, #16
 800f5f6:	d455      	bmi.n	800f6a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800f5f8:	9e01      	ldr	r6, [sp, #4]
 800f5fa:	42b5      	cmp	r5, r6
 800f5fc:	da52      	bge.n	800f6a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800f5fe:	fb08 0005 	mla	r0, r8, r5, r0
 800f602:	9d03      	ldr	r5, [sp, #12]
 800f604:	5c2e      	ldrb	r6, [r5, r0]
 800f606:	2e00      	cmp	r6, #0
 800f608:	d04c      	beq.n	800f6a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 800f60a:	9d02      	ldr	r5, [sp, #8]
 800f60c:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 800f610:	9805      	ldr	r0, [sp, #20]
 800f612:	f8ba 5000 	ldrh.w	r5, [sl]
 800f616:	4346      	muls	r6, r0
 800f618:	1c70      	adds	r0, r6, #1
 800f61a:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 800f61e:	1200      	asrs	r0, r0, #8
 800f620:	b287      	uxth	r7, r0
 800f622:	122e      	asrs	r6, r5, #8
 800f624:	43c0      	mvns	r0, r0
 800f626:	b2c0      	uxtb	r0, r0
 800f628:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800f62c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800f630:	fb16 f600 	smulbb	r6, r6, r0
 800f634:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800f638:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f63c:	00ed      	lsls	r5, r5, #3
 800f63e:	fb0c 6c07 	mla	ip, ip, r7, r6
 800f642:	b2ed      	uxtb	r5, r5
 800f644:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800f648:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f64c:	fb15 f500 	smulbb	r5, r5, r0
 800f650:	fa5f fe8e 	uxtb.w	lr, lr
 800f654:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f658:	fb0e 5507 	mla	r5, lr, r7, r5
 800f65c:	fb19 f900 	smulbb	r9, r9, r0
 800f660:	fa1f fc8c 	uxth.w	ip, ip
 800f664:	b2ad      	uxth	r5, r5
 800f666:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f66a:	fb06 9607 	mla	r6, r6, r7, r9
 800f66e:	f10c 0001 	add.w	r0, ip, #1
 800f672:	f105 0901 	add.w	r9, r5, #1
 800f676:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 800f67a:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 800f67e:	b2b6      	uxth	r6, r6
 800f680:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 800f684:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f688:	ea4c 0c09 	orr.w	ip, ip, r9
 800f68c:	f106 0901 	add.w	r9, r6, #1
 800f690:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 800f694:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f698:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f69c:	ea4c 0c09 	orr.w	ip, ip, r9
 800f6a0:	f8aa c000 	strh.w	ip, [sl]
 800f6a4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f6a6:	4401      	add	r1, r0
 800f6a8:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f6aa:	4402      	add	r2, r0
 800f6ac:	9800      	ldr	r0, [sp, #0]
 800f6ae:	3801      	subs	r0, #1
 800f6b0:	f10a 0a02 	add.w	sl, sl, #2
 800f6b4:	9000      	str	r0, [sp, #0]
 800f6b6:	e6ea      	b.n	800f48e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f6b8:	b007      	add	sp, #28
 800f6ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f6be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f6be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f6c2:	b087      	sub	sp, #28
 800f6c4:	468b      	mov	fp, r1
 800f6c6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800f6c8:	9205      	str	r2, [sp, #20]
 800f6ca:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f6ce:	9202      	str	r2, [sp, #8]
 800f6d0:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800f6d4:	6869      	ldr	r1, [r5, #4]
 800f6d6:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 800f6d8:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 800f6dc:	fb01 2000 	mla	r0, r1, r0, r2
 800f6e0:	682a      	ldr	r2, [r5, #0]
 800f6e2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800f6e6:	6822      	ldr	r2, [r4, #0]
 800f6e8:	9201      	str	r2, [sp, #4]
 800f6ea:	6862      	ldr	r2, [r4, #4]
 800f6ec:	9204      	str	r2, [sp, #16]
 800f6ee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f6f2:	f1bb 0f00 	cmp.w	fp, #0
 800f6f6:	dc03      	bgt.n	800f700 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 800f6f8:	9a05      	ldr	r2, [sp, #20]
 800f6fa:	2a00      	cmp	r2, #0
 800f6fc:	f340 813d 	ble.w	800f97a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 800f700:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f702:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f706:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f708:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f70c:	2b00      	cmp	r3, #0
 800f70e:	dd0f      	ble.n	800f730 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 800f710:	140c      	asrs	r4, r1, #16
 800f712:	d406      	bmi.n	800f722 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800f714:	454c      	cmp	r4, r9
 800f716:	da04      	bge.n	800f722 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800f718:	1414      	asrs	r4, r2, #16
 800f71a:	d402      	bmi.n	800f722 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 800f71c:	9d02      	ldr	r5, [sp, #8]
 800f71e:	42ac      	cmp	r4, r5
 800f720:	db07      	blt.n	800f732 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800f722:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f724:	4421      	add	r1, r4
 800f726:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f728:	3b01      	subs	r3, #1
 800f72a:	4422      	add	r2, r4
 800f72c:	3002      	adds	r0, #2
 800f72e:	e7ed      	b.n	800f70c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e>
 800f730:	d018      	beq.n	800f764 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa6>
 800f732:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f734:	1e5c      	subs	r4, r3, #1
 800f736:	fb05 1504 	mla	r5, r5, r4, r1
 800f73a:	142d      	asrs	r5, r5, #16
 800f73c:	d40a      	bmi.n	800f754 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f73e:	454d      	cmp	r5, r9
 800f740:	da08      	bge.n	800f754 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f742:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f744:	fb05 2404 	mla	r4, r5, r4, r2
 800f748:	1424      	asrs	r4, r4, #16
 800f74a:	d403      	bmi.n	800f754 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f74c:	9d02      	ldr	r5, [sp, #8]
 800f74e:	42ac      	cmp	r4, r5
 800f750:	f2c0 80ae 	blt.w	800f8b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f2>
 800f754:	2600      	movs	r6, #0
 800f756:	199c      	adds	r4, r3, r6
 800f758:	2c00      	cmp	r4, #0
 800f75a:	dc3e      	bgt.n	800f7da <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 800f75c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f760:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f764:	f1bb 0f00 	cmp.w	fp, #0
 800f768:	f340 8107 	ble.w	800f97a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 800f76c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f770:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f774:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f778:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f77a:	f1bb 0b01 	subs.w	fp, fp, #1
 800f77e:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f782:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f786:	eeb0 6a62 	vmov.f32	s12, s5
 800f78a:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f78e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f792:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f796:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800f79a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f79e:	eeb0 6a43 	vmov.f32	s12, s6
 800f7a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f7a6:	ee12 2a90 	vmov	r2, s5
 800f7aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f7ae:	fb92 f3f3 	sdiv	r3, r2, r3
 800f7b2:	ee13 2a10 	vmov	r2, s6
 800f7b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f7ba:	9313      	str	r3, [sp, #76]	; 0x4c
 800f7bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f7be:	fb92 f3f3 	sdiv	r3, r2, r3
 800f7c2:	9a05      	ldr	r2, [sp, #20]
 800f7c4:	9314      	str	r3, [sp, #80]	; 0x50
 800f7c6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800f7ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f7cc:	eeb0 3a67 	vmov.f32	s6, s15
 800f7d0:	bf08      	it	eq
 800f7d2:	4613      	moveq	r3, r2
 800f7d4:	eef0 2a47 	vmov.f32	s5, s14
 800f7d8:	e78b      	b.n	800f6f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34>
 800f7da:	140c      	asrs	r4, r1, #16
 800f7dc:	d45a      	bmi.n	800f894 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f7de:	454c      	cmp	r4, r9
 800f7e0:	da58      	bge.n	800f894 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f7e2:	1415      	asrs	r5, r2, #16
 800f7e4:	d456      	bmi.n	800f894 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f7e6:	9f02      	ldr	r7, [sp, #8]
 800f7e8:	42bd      	cmp	r5, r7
 800f7ea:	da53      	bge.n	800f894 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f7ec:	fb09 4505 	mla	r5, r9, r5, r4
 800f7f0:	9c04      	ldr	r4, [sp, #16]
 800f7f2:	5d64      	ldrb	r4, [r4, r5]
 800f7f4:	2cff      	cmp	r4, #255	; 0xff
 800f7f6:	d053      	beq.n	800f8a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800f7f8:	2c00      	cmp	r4, #0
 800f7fa:	d04b      	beq.n	800f894 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f7fc:	9f01      	ldr	r7, [sp, #4]
 800f7fe:	f837 8015 	ldrh.w	r8, [r7, r5, lsl #1]
 800f802:	f06f 0501 	mvn.w	r5, #1
 800f806:	4375      	muls	r5, r6
 800f808:	9503      	str	r5, [sp, #12]
 800f80a:	5b45      	ldrh	r5, [r0, r5]
 800f80c:	fa1f fc84 	uxth.w	ip, r4
 800f810:	122f      	asrs	r7, r5, #8
 800f812:	43e4      	mvns	r4, r4
 800f814:	b2e4      	uxtb	r4, r4
 800f816:	ea4f 2e28 	mov.w	lr, r8, asr #8
 800f81a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f81e:	fb17 f704 	smulbb	r7, r7, r4
 800f822:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f826:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 800f82a:	00ed      	lsls	r5, r5, #3
 800f82c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 800f830:	b2ed      	uxtb	r5, r5
 800f832:	ea4f 07e8 	mov.w	r7, r8, asr #3
 800f836:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800f83a:	fb15 f504 	smulbb	r5, r5, r4
 800f83e:	fa5f f888 	uxtb.w	r8, r8
 800f842:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800f846:	fb08 550c 	mla	r5, r8, ip, r5
 800f84a:	fb1a fa04 	smulbb	sl, sl, r4
 800f84e:	fa1f fe8e 	uxth.w	lr, lr
 800f852:	b2ad      	uxth	r5, r5
 800f854:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f858:	fb07 a70c 	mla	r7, r7, ip, sl
 800f85c:	f10e 0401 	add.w	r4, lr, #1
 800f860:	f105 0a01 	add.w	sl, r5, #1
 800f864:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 800f868:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f86c:	b2bf      	uxth	r7, r7
 800f86e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f872:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 800f876:	ea4e 0e0a 	orr.w	lr, lr, sl
 800f87a:	f107 0a01 	add.w	sl, r7, #1
 800f87e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800f882:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f886:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f88a:	9c03      	ldr	r4, [sp, #12]
 800f88c:	ea4e 0e0a 	orr.w	lr, lr, sl
 800f890:	f820 e004 	strh.w	lr, [r0, r4]
 800f894:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f896:	4421      	add	r1, r4
 800f898:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f89a:	3e01      	subs	r6, #1
 800f89c:	4422      	add	r2, r4
 800f89e:	e75a      	b.n	800f756 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800f8a0:	9c01      	ldr	r4, [sp, #4]
 800f8a2:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 800f8a6:	f06f 0401 	mvn.w	r4, #1
 800f8aa:	4374      	muls	r4, r6
 800f8ac:	5305      	strh	r5, [r0, r4]
 800f8ae:	e7f1      	b.n	800f894 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800f8b0:	f04f 0800 	mov.w	r8, #0
 800f8b4:	eba3 0408 	sub.w	r4, r3, r8
 800f8b8:	2c00      	cmp	r4, #0
 800f8ba:	f77f af4f 	ble.w	800f75c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800f8be:	140c      	asrs	r4, r1, #16
 800f8c0:	1415      	asrs	r5, r2, #16
 800f8c2:	fb09 4505 	mla	r5, r9, r5, r4
 800f8c6:	9c04      	ldr	r4, [sp, #16]
 800f8c8:	5d64      	ldrb	r4, [r4, r5]
 800f8ca:	2cff      	cmp	r4, #255	; 0xff
 800f8cc:	d04f      	beq.n	800f96e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 800f8ce:	2c00      	cmp	r4, #0
 800f8d0:	d046      	beq.n	800f960 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800f8d2:	9e01      	ldr	r6, [sp, #4]
 800f8d4:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 800f8d8:	f830 5018 	ldrh.w	r5, [r0, r8, lsl #1]
 800f8dc:	b2a7      	uxth	r7, r4
 800f8de:	122e      	asrs	r6, r5, #8
 800f8e0:	43e4      	mvns	r4, r4
 800f8e2:	b2e4      	uxtb	r4, r4
 800f8e4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800f8e8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800f8ec:	fb16 f604 	smulbb	r6, r6, r4
 800f8f0:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800f8f4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f8f8:	00ed      	lsls	r5, r5, #3
 800f8fa:	fb0c 6c07 	mla	ip, ip, r7, r6
 800f8fe:	b2ed      	uxtb	r5, r5
 800f900:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800f904:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f908:	fb15 f504 	smulbb	r5, r5, r4
 800f90c:	fa5f fe8e 	uxtb.w	lr, lr
 800f910:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800f914:	fb0e 5507 	mla	r5, lr, r7, r5
 800f918:	fb1a fa04 	smulbb	sl, sl, r4
 800f91c:	fa1f fc8c 	uxth.w	ip, ip
 800f920:	b2ad      	uxth	r5, r5
 800f922:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f926:	fb06 a607 	mla	r6, r6, r7, sl
 800f92a:	f10c 0401 	add.w	r4, ip, #1
 800f92e:	f105 0a01 	add.w	sl, r5, #1
 800f932:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800f936:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f93a:	b2b6      	uxth	r6, r6
 800f93c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f940:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f944:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f948:	f106 0a01 	add.w	sl, r6, #1
 800f94c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f950:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f954:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f958:	ea4c 0c0a 	orr.w	ip, ip, sl
 800f95c:	f820 c018 	strh.w	ip, [r0, r8, lsl #1]
 800f960:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f962:	4421      	add	r1, r4
 800f964:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800f966:	f108 0801 	add.w	r8, r8, #1
 800f96a:	4422      	add	r2, r4
 800f96c:	e7a2      	b.n	800f8b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 800f96e:	9c01      	ldr	r4, [sp, #4]
 800f970:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 800f974:	f820 4018 	strh.w	r4, [r0, r8, lsl #1]
 800f978:	e7f2      	b.n	800f960 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800f97a:	b007      	add	sp, #28
 800f97c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f980 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f984:	b085      	sub	sp, #20
 800f986:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f988:	9203      	str	r2, [sp, #12]
 800f98a:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 800f98e:	9201      	str	r2, [sp, #4]
 800f990:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800f994:	9100      	str	r1, [sp, #0]
 800f996:	6841      	ldr	r1, [r0, #4]
 800f998:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 800f99c:	f9bd 8058 	ldrsh.w	r8, [sp, #88]	; 0x58
 800f9a0:	fb01 2404 	mla	r4, r1, r4, r2
 800f9a4:	6802      	ldr	r2, [r0, #0]
 800f9a6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f9aa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800f9ac:	fa1f fe85 	uxth.w	lr, r5
 800f9b0:	6812      	ldr	r2, [r2, #0]
 800f9b2:	9202      	str	r2, [sp, #8]
 800f9b4:	43ed      	mvns	r5, r5
 800f9b6:	b2ed      	uxtb	r5, r5
 800f9b8:	9a00      	ldr	r2, [sp, #0]
 800f9ba:	2a00      	cmp	r2, #0
 800f9bc:	dc03      	bgt.n	800f9c6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 800f9be:	9a03      	ldr	r2, [sp, #12]
 800f9c0:	2a00      	cmp	r2, #0
 800f9c2:	f340 8117 	ble.w	800fbf4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 800f9c6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f9c8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f9cc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f9ce:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f9d2:	2b00      	cmp	r3, #0
 800f9d4:	dd0f      	ble.n	800f9f6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 800f9d6:	1408      	asrs	r0, r1, #16
 800f9d8:	d406      	bmi.n	800f9e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f9da:	4540      	cmp	r0, r8
 800f9dc:	da04      	bge.n	800f9e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f9de:	1410      	asrs	r0, r2, #16
 800f9e0:	d402      	bmi.n	800f9e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f9e2:	9e01      	ldr	r6, [sp, #4]
 800f9e4:	42b0      	cmp	r0, r6
 800f9e6:	db07      	blt.n	800f9f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800f9e8:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f9ea:	4401      	add	r1, r0
 800f9ec:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f9ee:	3b01      	subs	r3, #1
 800f9f0:	4402      	add	r2, r0
 800f9f2:	3402      	adds	r4, #2
 800f9f4:	e7ed      	b.n	800f9d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52>
 800f9f6:	d069      	beq.n	800facc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x14c>
 800f9f8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800f9fa:	1e58      	subs	r0, r3, #1
 800f9fc:	fb06 1600 	mla	r6, r6, r0, r1
 800fa00:	1436      	asrs	r6, r6, #16
 800fa02:	d459      	bmi.n	800fab8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800fa04:	4546      	cmp	r6, r8
 800fa06:	da57      	bge.n	800fab8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800fa08:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800fa0a:	fb06 2000 	mla	r0, r6, r0, r2
 800fa0e:	1400      	asrs	r0, r0, #16
 800fa10:	d452      	bmi.n	800fab8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800fa12:	9e01      	ldr	r6, [sp, #4]
 800fa14:	42b0      	cmp	r0, r6
 800fa16:	da4f      	bge.n	800fab8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 800fa18:	469a      	mov	sl, r3
 800fa1a:	46a3      	mov	fp, r4
 800fa1c:	f1ba 0f00 	cmp.w	sl, #0
 800fa20:	dd50      	ble.n	800fac4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x144>
 800fa22:	140e      	asrs	r6, r1, #16
 800fa24:	1410      	asrs	r0, r2, #16
 800fa26:	fb08 6000 	mla	r0, r8, r0, r6
 800fa2a:	9e02      	ldr	r6, [sp, #8]
 800fa2c:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800fa30:	f8bb 6000 	ldrh.w	r6, [fp]
 800fa34:	1237      	asrs	r7, r6, #8
 800fa36:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800fa3a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fa3e:	fb17 f705 	smulbb	r7, r7, r5
 800fa42:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800fa46:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fa4a:	00f6      	lsls	r6, r6, #3
 800fa4c:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800fa50:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800fa54:	10c7      	asrs	r7, r0, #3
 800fa56:	b2f6      	uxtb	r6, r6
 800fa58:	00c0      	lsls	r0, r0, #3
 800fa5a:	fb19 f905 	smulbb	r9, r9, r5
 800fa5e:	fb16 f605 	smulbb	r6, r6, r5
 800fa62:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800fa66:	b2c0      	uxtb	r0, r0
 800fa68:	fa1f fc8c 	uxth.w	ip, ip
 800fa6c:	fb07 970e 	mla	r7, r7, lr, r9
 800fa70:	fb00 600e 	mla	r0, r0, lr, r6
 800fa74:	b280      	uxth	r0, r0
 800fa76:	b2bf      	uxth	r7, r7
 800fa78:	f10c 0601 	add.w	r6, ip, #1
 800fa7c:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800fa80:	f107 0901 	add.w	r9, r7, #1
 800fa84:	1c46      	adds	r6, r0, #1
 800fa86:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800fa8a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800fa8e:	9811      	ldr	r0, [sp, #68]	; 0x44
 800fa90:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fa94:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800fa98:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800fa9c:	ea4c 0c06 	orr.w	ip, ip, r6
 800faa0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800faa4:	4401      	add	r1, r0
 800faa6:	9812      	ldr	r0, [sp, #72]	; 0x48
 800faa8:	ea4c 0c09 	orr.w	ip, ip, r9
 800faac:	f82b cb02 	strh.w	ip, [fp], #2
 800fab0:	4402      	add	r2, r0
 800fab2:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 800fab6:	e7b1      	b.n	800fa1c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800fab8:	f04f 0900 	mov.w	r9, #0
 800fabc:	eb03 0009 	add.w	r0, r3, r9
 800fac0:	2800      	cmp	r0, #0
 800fac2:	dc41      	bgt.n	800fb48 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c8>
 800fac4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fac8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800facc:	9b00      	ldr	r3, [sp, #0]
 800face:	2b00      	cmp	r3, #0
 800fad0:	f340 8090 	ble.w	800fbf4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 800fad4:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fad8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800fadc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800fae0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fae2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fae6:	ee31 1a05 	vadd.f32	s2, s2, s10
 800faea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800faee:	eef0 6a62 	vmov.f32	s13, s5
 800faf2:	ee61 7a27 	vmul.f32	s15, s2, s15
 800faf6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fafa:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fafe:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 800fb02:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fb06:	eef0 6a43 	vmov.f32	s13, s6
 800fb0a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fb0e:	ee12 2a90 	vmov	r2, s5
 800fb12:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fb16:	fb92 f3f3 	sdiv	r3, r2, r3
 800fb1a:	ee13 2a10 	vmov	r2, s6
 800fb1e:	9311      	str	r3, [sp, #68]	; 0x44
 800fb20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fb22:	fb92 f3f3 	sdiv	r3, r2, r3
 800fb26:	9312      	str	r3, [sp, #72]	; 0x48
 800fb28:	9b00      	ldr	r3, [sp, #0]
 800fb2a:	9a03      	ldr	r2, [sp, #12]
 800fb2c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fb30:	3b01      	subs	r3, #1
 800fb32:	9300      	str	r3, [sp, #0]
 800fb34:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 800fb38:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fb3a:	eeb0 3a67 	vmov.f32	s6, s15
 800fb3e:	bf08      	it	eq
 800fb40:	4613      	moveq	r3, r2
 800fb42:	eef0 2a47 	vmov.f32	s5, s14
 800fb46:	e737      	b.n	800f9b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 800fb48:	140e      	asrs	r6, r1, #16
 800fb4a:	d44c      	bmi.n	800fbe6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800fb4c:	4546      	cmp	r6, r8
 800fb4e:	da4a      	bge.n	800fbe6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800fb50:	1410      	asrs	r0, r2, #16
 800fb52:	d448      	bmi.n	800fbe6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800fb54:	9f01      	ldr	r7, [sp, #4]
 800fb56:	42b8      	cmp	r0, r7
 800fb58:	da45      	bge.n	800fbe6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 800fb5a:	fb08 6000 	mla	r0, r8, r0, r6
 800fb5e:	9e02      	ldr	r6, [sp, #8]
 800fb60:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800fb64:	f06f 0601 	mvn.w	r6, #1
 800fb68:	fb06 fb09 	mul.w	fp, r6, r9
 800fb6c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800fb70:	f834 600b 	ldrh.w	r6, [r4, fp]
 800fb74:	1237      	asrs	r7, r6, #8
 800fb76:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fb7a:	fb17 f705 	smulbb	r7, r7, r5
 800fb7e:	ea4f 0ae6 	mov.w	sl, r6, asr #3
 800fb82:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fb86:	00f6      	lsls	r6, r6, #3
 800fb88:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800fb8c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800fb90:	10c7      	asrs	r7, r0, #3
 800fb92:	b2f6      	uxtb	r6, r6
 800fb94:	00c0      	lsls	r0, r0, #3
 800fb96:	fb1a fa05 	smulbb	sl, sl, r5
 800fb9a:	fb16 f605 	smulbb	r6, r6, r5
 800fb9e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800fba2:	b2c0      	uxtb	r0, r0
 800fba4:	fa1f fc8c 	uxth.w	ip, ip
 800fba8:	fb07 a70e 	mla	r7, r7, lr, sl
 800fbac:	fb00 600e 	mla	r0, r0, lr, r6
 800fbb0:	b2bf      	uxth	r7, r7
 800fbb2:	b280      	uxth	r0, r0
 800fbb4:	f10c 0601 	add.w	r6, ip, #1
 800fbb8:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800fbbc:	f107 0a01 	add.w	sl, r7, #1
 800fbc0:	1c46      	adds	r6, r0, #1
 800fbc2:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800fbc6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800fbca:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fbce:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800fbd2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fbd6:	ea4c 0c06 	orr.w	ip, ip, r6
 800fbda:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fbde:	ea4c 0c0a 	orr.w	ip, ip, sl
 800fbe2:	f824 c00b 	strh.w	ip, [r4, fp]
 800fbe6:	9811      	ldr	r0, [sp, #68]	; 0x44
 800fbe8:	4401      	add	r1, r0
 800fbea:	9812      	ldr	r0, [sp, #72]	; 0x48
 800fbec:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800fbf0:	4402      	add	r2, r0
 800fbf2:	e763      	b.n	800fabc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x13c>
 800fbf4:	b005      	add	sp, #20
 800fbf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fbfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800fbfa:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fbfe:	9811      	ldr	r0, [sp, #68]	; 0x44
 800fc00:	9201      	str	r2, [sp, #4]
 800fc02:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 800fc06:	6844      	ldr	r4, [r0, #4]
 800fc08:	6800      	ldr	r0, [r0, #0]
 800fc0a:	f9bd c050 	ldrsh.w	ip, [sp, #80]	; 0x50
 800fc0e:	f9bd e054 	ldrsh.w	lr, [sp, #84]	; 0x54
 800fc12:	fb04 2505 	mla	r5, r4, r5, r2
 800fc16:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800fc1a:	9816      	ldr	r0, [sp, #88]	; 0x58
 800fc1c:	e9dd 760f 	ldrd	r7, r6, [sp, #60]	; 0x3c
 800fc20:	6802      	ldr	r2, [r0, #0]
 800fc22:	9200      	str	r2, [sp, #0]
 800fc24:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fc28:	2900      	cmp	r1, #0
 800fc2a:	dc03      	bgt.n	800fc34 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 800fc2c:	9a01      	ldr	r2, [sp, #4]
 800fc2e:	2a00      	cmp	r2, #0
 800fc30:	f340 8095 	ble.w	800fd5e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 800fc34:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fc36:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800fc3a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800fc3c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800fc40:	2b00      	cmp	r3, #0
 800fc42:	dd0e      	ble.n	800fc62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800fc44:	ea5f 4824 	movs.w	r8, r4, asr #16
 800fc48:	d406      	bmi.n	800fc58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 800fc4a:	45e0      	cmp	r8, ip
 800fc4c:	da04      	bge.n	800fc58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 800fc4e:	ea5f 4820 	movs.w	r8, r0, asr #16
 800fc52:	d401      	bmi.n	800fc58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 800fc54:	45f0      	cmp	r8, lr
 800fc56:	db05      	blt.n	800fc64 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 800fc58:	443c      	add	r4, r7
 800fc5a:	4430      	add	r0, r6
 800fc5c:	3b01      	subs	r3, #1
 800fc5e:	3502      	adds	r5, #2
 800fc60:	e7ee      	b.n	800fc40 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 800fc62:	d010      	beq.n	800fc86 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 800fc64:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 800fc68:	fb07 4908 	mla	r9, r7, r8, r4
 800fc6c:	ea5f 4929 	movs.w	r9, r9, asr #16
 800fc70:	d53d      	bpl.n	800fcee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 800fc72:	4698      	mov	r8, r3
 800fc74:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 800fc78:	f1b8 0f00 	cmp.w	r8, #0
 800fc7c:	dc55      	bgt.n	800fd2a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x130>
 800fc7e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fc82:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800fc86:	2900      	cmp	r1, #0
 800fc88:	dd69      	ble.n	800fd5e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 800fc8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fc8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fc92:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fc96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fc98:	3901      	subs	r1, #1
 800fc9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fc9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fca2:	eeb0 6a62 	vmov.f32	s12, s5
 800fca6:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fcaa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fcae:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fcb2:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 800fcb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fcba:	eeb0 6a43 	vmov.f32	s12, s6
 800fcbe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fcc2:	ee12 2a90 	vmov	r2, s5
 800fcc6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fcca:	fb92 f7f3 	sdiv	r7, r2, r3
 800fcce:	ee13 2a10 	vmov	r2, s6
 800fcd2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fcd6:	fb92 f6f3 	sdiv	r6, r2, r3
 800fcda:	9a01      	ldr	r2, [sp, #4]
 800fcdc:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 800fce0:	bf08      	it	eq
 800fce2:	4613      	moveq	r3, r2
 800fce4:	eeb0 3a67 	vmov.f32	s6, s15
 800fce8:	eef0 2a47 	vmov.f32	s5, s14
 800fcec:	e79c      	b.n	800fc28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e>
 800fcee:	45e1      	cmp	r9, ip
 800fcf0:	dabf      	bge.n	800fc72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800fcf2:	fb06 0808 	mla	r8, r6, r8, r0
 800fcf6:	ea5f 4828 	movs.w	r8, r8, asr #16
 800fcfa:	d4ba      	bmi.n	800fc72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800fcfc:	45f0      	cmp	r8, lr
 800fcfe:	dab8      	bge.n	800fc72 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 800fd00:	4698      	mov	r8, r3
 800fd02:	46aa      	mov	sl, r5
 800fd04:	f1b8 0f00 	cmp.w	r8, #0
 800fd08:	ddb9      	ble.n	800fc7e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 800fd0a:	ea4f 4920 	mov.w	r9, r0, asr #16
 800fd0e:	ea4f 4b24 	mov.w	fp, r4, asr #16
 800fd12:	fb0c b909 	mla	r9, ip, r9, fp
 800fd16:	9a00      	ldr	r2, [sp, #0]
 800fd18:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 800fd1c:	f82a 9b02 	strh.w	r9, [sl], #2
 800fd20:	443c      	add	r4, r7
 800fd22:	4430      	add	r0, r6
 800fd24:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 800fd28:	e7ec      	b.n	800fd04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 800fd2a:	ea5f 4a24 	movs.w	sl, r4, asr #16
 800fd2e:	d411      	bmi.n	800fd54 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800fd30:	45e2      	cmp	sl, ip
 800fd32:	da0f      	bge.n	800fd54 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800fd34:	ea5f 4920 	movs.w	r9, r0, asr #16
 800fd38:	d40c      	bmi.n	800fd54 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800fd3a:	45f1      	cmp	r9, lr
 800fd3c:	da0a      	bge.n	800fd54 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 800fd3e:	fb0c a909 	mla	r9, ip, r9, sl
 800fd42:	9a00      	ldr	r2, [sp, #0]
 800fd44:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 800fd48:	f06f 0201 	mvn.w	r2, #1
 800fd4c:	fb02 f908 	mul.w	r9, r2, r8
 800fd50:	f82b a009 	strh.w	sl, [fp, r9]
 800fd54:	443c      	add	r4, r7
 800fd56:	4430      	add	r0, r6
 800fd58:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 800fd5c:	e78c      	b.n	800fc78 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800fd5e:	b003      	add	sp, #12
 800fd60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fd64 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800fd64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd68:	b087      	sub	sp, #28
 800fd6a:	468b      	mov	fp, r1
 800fd6c:	9204      	str	r2, [sp, #16]
 800fd6e:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800fd72:	9815      	ldr	r0, [sp, #84]	; 0x54
 800fd74:	9201      	str	r2, [sp, #4]
 800fd76:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800fd7a:	9205      	str	r2, [sp, #20]
 800fd7c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800fd80:	6841      	ldr	r1, [r0, #4]
 800fd82:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800fd86:	fb01 2404 	mla	r4, r1, r4, r2
 800fd8a:	6802      	ldr	r2, [r0, #0]
 800fd8c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fd90:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800fd92:	6812      	ldr	r2, [r2, #0]
 800fd94:	9203      	str	r2, [sp, #12]
 800fd96:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fd9a:	f1bb 0f00 	cmp.w	fp, #0
 800fd9e:	dc03      	bgt.n	800fda8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800fda0:	9a04      	ldr	r2, [sp, #16]
 800fda2:	2a00      	cmp	r2, #0
 800fda4:	f340 812c 	ble.w	8010000 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 800fda8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fdaa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800fdae:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fdb0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fdb4:	2b00      	cmp	r3, #0
 800fdb6:	dd0f      	ble.n	800fdd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800fdb8:	1402      	asrs	r2, r0, #16
 800fdba:	d406      	bmi.n	800fdca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800fdbc:	4542      	cmp	r2, r8
 800fdbe:	da04      	bge.n	800fdca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800fdc0:	140a      	asrs	r2, r1, #16
 800fdc2:	d402      	bmi.n	800fdca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 800fdc4:	9d01      	ldr	r5, [sp, #4]
 800fdc6:	42aa      	cmp	r2, r5
 800fdc8:	db07      	blt.n	800fdda <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 800fdca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fdcc:	4410      	add	r0, r2
 800fdce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fdd0:	3b01      	subs	r3, #1
 800fdd2:	4411      	add	r1, r2
 800fdd4:	3402      	adds	r4, #2
 800fdd6:	e7ed      	b.n	800fdb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800fdd8:	d01a      	beq.n	800fe10 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 800fdda:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fddc:	1e5a      	subs	r2, r3, #1
 800fdde:	fb05 0502 	mla	r5, r5, r2, r0
 800fde2:	142d      	asrs	r5, r5, #16
 800fde4:	d40a      	bmi.n	800fdfc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800fde6:	4545      	cmp	r5, r8
 800fde8:	da08      	bge.n	800fdfc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800fdea:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fdec:	fb05 1202 	mla	r2, r5, r2, r1
 800fdf0:	1412      	asrs	r2, r2, #16
 800fdf2:	d403      	bmi.n	800fdfc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 800fdf4:	9d01      	ldr	r5, [sp, #4]
 800fdf6:	42aa      	cmp	r2, r5
 800fdf8:	f2c0 80a6 	blt.w	800ff48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 800fdfc:	f04f 0c00 	mov.w	ip, #0
 800fe00:	eb03 020c 	add.w	r2, r3, ip
 800fe04:	2a00      	cmp	r2, #0
 800fe06:	dc3e      	bgt.n	800fe86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x122>
 800fe08:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fe0c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fe10:	f1bb 0f00 	cmp.w	fp, #0
 800fe14:	f340 80f4 	ble.w	8010000 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 800fe18:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fe1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fe20:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fe24:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe26:	f1bb 0b01 	subs.w	fp, fp, #1
 800fe2a:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fe2e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fe32:	eeb0 6a62 	vmov.f32	s12, s5
 800fe36:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fe3a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fe3e:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fe42:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800fe46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fe4a:	eeb0 6a43 	vmov.f32	s12, s6
 800fe4e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fe52:	ee12 2a90 	vmov	r2, s5
 800fe56:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fe5a:	fb92 f3f3 	sdiv	r3, r2, r3
 800fe5e:	ee13 2a10 	vmov	r2, s6
 800fe62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fe66:	9313      	str	r3, [sp, #76]	; 0x4c
 800fe68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe6a:	fb92 f3f3 	sdiv	r3, r2, r3
 800fe6e:	9a04      	ldr	r2, [sp, #16]
 800fe70:	9314      	str	r3, [sp, #80]	; 0x50
 800fe72:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800fe76:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe78:	eeb0 3a67 	vmov.f32	s6, s15
 800fe7c:	bf08      	it	eq
 800fe7e:	4613      	moveq	r3, r2
 800fe80:	eef0 2a47 	vmov.f32	s5, s14
 800fe84:	e789      	b.n	800fd9a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 800fe86:	1405      	asrs	r5, r0, #16
 800fe88:	d457      	bmi.n	800ff3a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fe8a:	4545      	cmp	r5, r8
 800fe8c:	da55      	bge.n	800ff3a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fe8e:	140a      	asrs	r2, r1, #16
 800fe90:	d453      	bmi.n	800ff3a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fe92:	9e01      	ldr	r6, [sp, #4]
 800fe94:	42b2      	cmp	r2, r6
 800fe96:	da50      	bge.n	800ff3a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fe98:	fb08 5202 	mla	r2, r8, r2, r5
 800fe9c:	9d03      	ldr	r5, [sp, #12]
 800fe9e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800fea2:	0e2e      	lsrs	r6, r5, #24
 800fea4:	d049      	beq.n	800ff3a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 800fea6:	f06f 0201 	mvn.w	r2, #1
 800feaa:	fb02 f20c 	mul.w	r2, r2, ip
 800feae:	9202      	str	r2, [sp, #8]
 800feb0:	f834 e002 	ldrh.w	lr, [r4, r2]
 800feb4:	9a05      	ldr	r2, [sp, #20]
 800feb6:	4356      	muls	r6, r2
 800feb8:	1c72      	adds	r2, r6, #1
 800feba:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800febe:	1212      	asrs	r2, r2, #8
 800fec0:	fa1f f982 	uxth.w	r9, r2
 800fec4:	ea4f 272e 	mov.w	r7, lr, asr #8
 800fec8:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800fecc:	43d2      	mvns	r2, r2
 800fece:	b2d2      	uxtb	r2, r2
 800fed0:	fb16 f609 	smulbb	r6, r6, r9
 800fed4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fed8:	fb07 6702 	mla	r7, r7, r2, r6
 800fedc:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800fee0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800fee4:	b2ed      	uxtb	r5, r5
 800fee6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800feea:	fa5f fe8e 	uxtb.w	lr, lr
 800feee:	fb15 f509 	smulbb	r5, r5, r9
 800fef2:	fb0e 5502 	mla	r5, lr, r2, r5
 800fef6:	b2bf      	uxth	r7, r7
 800fef8:	fb1a fa09 	smulbb	sl, sl, r9
 800fefc:	b2ad      	uxth	r5, r5
 800fefe:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ff02:	fb06 a602 	mla	r6, r6, r2, sl
 800ff06:	1c7a      	adds	r2, r7, #1
 800ff08:	f105 0a01 	add.w	sl, r5, #1
 800ff0c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800ff10:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800ff14:	b2b6      	uxth	r6, r6
 800ff16:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ff1a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800ff1e:	ea47 070a 	orr.w	r7, r7, sl
 800ff22:	f106 0a01 	add.w	sl, r6, #1
 800ff26:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800ff2a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800ff2e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800ff32:	9a02      	ldr	r2, [sp, #8]
 800ff34:	ea47 070a 	orr.w	r7, r7, sl
 800ff38:	52a7      	strh	r7, [r4, r2]
 800ff3a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ff3c:	4410      	add	r0, r2
 800ff3e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ff40:	f10c 3cff 	add.w	ip, ip, #4294967295	; 0xffffffff
 800ff44:	4411      	add	r1, r2
 800ff46:	e75b      	b.n	800fe00 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800ff48:	f04f 0e00 	mov.w	lr, #0
 800ff4c:	eba3 020e 	sub.w	r2, r3, lr
 800ff50:	2a00      	cmp	r2, #0
 800ff52:	f77f af59 	ble.w	800fe08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 800ff56:	1405      	asrs	r5, r0, #16
 800ff58:	140a      	asrs	r2, r1, #16
 800ff5a:	fb08 5202 	mla	r2, r8, r2, r5
 800ff5e:	9d03      	ldr	r5, [sp, #12]
 800ff60:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800ff64:	0e2e      	lsrs	r6, r5, #24
 800ff66:	d044      	beq.n	800fff2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28e>
 800ff68:	9a05      	ldr	r2, [sp, #20]
 800ff6a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 800ff6e:	4356      	muls	r6, r2
 800ff70:	1c72      	adds	r2, r6, #1
 800ff72:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800ff76:	1212      	asrs	r2, r2, #8
 800ff78:	fa1f f982 	uxth.w	r9, r2
 800ff7c:	ea4f 272c 	mov.w	r7, ip, asr #8
 800ff80:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800ff84:	43d2      	mvns	r2, r2
 800ff86:	b2d2      	uxtb	r2, r2
 800ff88:	fb16 f609 	smulbb	r6, r6, r9
 800ff8c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ff90:	fb07 6702 	mla	r7, r7, r2, r6
 800ff94:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800ff98:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800ff9c:	b2ed      	uxtb	r5, r5
 800ff9e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800ffa2:	fa5f fc8c 	uxtb.w	ip, ip
 800ffa6:	fb15 f509 	smulbb	r5, r5, r9
 800ffaa:	fb0c 5502 	mla	r5, ip, r2, r5
 800ffae:	b2bf      	uxth	r7, r7
 800ffb0:	fb1a fa09 	smulbb	sl, sl, r9
 800ffb4:	b2ad      	uxth	r5, r5
 800ffb6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ffba:	fb06 a602 	mla	r6, r6, r2, sl
 800ffbe:	1c7a      	adds	r2, r7, #1
 800ffc0:	f105 0a01 	add.w	sl, r5, #1
 800ffc4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800ffc8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800ffcc:	b2b6      	uxth	r6, r6
 800ffce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ffd2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800ffd6:	ea47 070a 	orr.w	r7, r7, sl
 800ffda:	f106 0a01 	add.w	sl, r6, #1
 800ffde:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800ffe2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800ffe6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800ffea:	ea47 070a 	orr.w	r7, r7, sl
 800ffee:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 800fff2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fff4:	4410      	add	r0, r2
 800fff6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fff8:	f10e 0e01 	add.w	lr, lr, #1
 800fffc:	4411      	add	r1, r2
 800fffe:	e7a5      	b.n	800ff4c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8010000:	b007      	add	sp, #28
 8010002:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08010008 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801000c:	b087      	sub	sp, #28
 801000e:	468b      	mov	fp, r1
 8010010:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010012:	9205      	str	r2, [sp, #20]
 8010014:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010018:	9201      	str	r2, [sp, #4]
 801001a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801001e:	6861      	ldr	r1, [r4, #4]
 8010020:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 8010024:	fb01 2000 	mla	r0, r1, r0, r2
 8010028:	6822      	ldr	r2, [r4, #0]
 801002a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801002e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8010030:	6812      	ldr	r2, [r2, #0]
 8010032:	9203      	str	r2, [sp, #12]
 8010034:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010038:	f1bb 0f00 	cmp.w	fp, #0
 801003c:	dc03      	bgt.n	8010046 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 801003e:	9a05      	ldr	r2, [sp, #20]
 8010040:	2a00      	cmp	r2, #0
 8010042:	f340 814b 	ble.w	80102dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 8010046:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010048:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801004c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801004e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010052:	2b00      	cmp	r3, #0
 8010054:	dd0f      	ble.n	8010076 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8010056:	140c      	asrs	r4, r1, #16
 8010058:	d406      	bmi.n	8010068 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 801005a:	454c      	cmp	r4, r9
 801005c:	da04      	bge.n	8010068 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 801005e:	1414      	asrs	r4, r2, #16
 8010060:	d402      	bmi.n	8010068 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010062:	9d01      	ldr	r5, [sp, #4]
 8010064:	42ac      	cmp	r4, r5
 8010066:	db07      	blt.n	8010078 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8010068:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801006a:	4421      	add	r1, r4
 801006c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801006e:	3b01      	subs	r3, #1
 8010070:	4422      	add	r2, r4
 8010072:	3002      	adds	r0, #2
 8010074:	e7ed      	b.n	8010052 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 8010076:	d018      	beq.n	80100aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa2>
 8010078:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801007a:	1e5c      	subs	r4, r3, #1
 801007c:	fb05 1504 	mla	r5, r5, r4, r1
 8010080:	142d      	asrs	r5, r5, #16
 8010082:	d40a      	bmi.n	801009a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010084:	454d      	cmp	r5, r9
 8010086:	da08      	bge.n	801009a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010088:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801008a:	fb05 2404 	mla	r4, r5, r4, r2
 801008e:	1424      	asrs	r4, r4, #16
 8010090:	d403      	bmi.n	801009a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010092:	9d01      	ldr	r5, [sp, #4]
 8010094:	42ac      	cmp	r4, r5
 8010096:	f2c0 80bb 	blt.w	8010210 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x208>
 801009a:	2700      	movs	r7, #0
 801009c:	19dc      	adds	r4, r3, r7
 801009e:	2c00      	cmp	r4, #0
 80100a0:	dc3e      	bgt.n	8010120 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x118>
 80100a2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80100a6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80100aa:	f1bb 0f00 	cmp.w	fp, #0
 80100ae:	f340 8115 	ble.w	80102dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 80100b2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80100b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80100ba:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80100be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80100c0:	f1bb 0b01 	subs.w	fp, fp, #1
 80100c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80100c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80100cc:	eeb0 6a62 	vmov.f32	s12, s5
 80100d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80100d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80100d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80100dc:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80100e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80100e4:	eeb0 6a43 	vmov.f32	s12, s6
 80100e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80100ec:	ee12 2a90 	vmov	r2, s5
 80100f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80100f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80100f8:	ee13 2a10 	vmov	r2, s6
 80100fc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010100:	9313      	str	r3, [sp, #76]	; 0x4c
 8010102:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010104:	fb92 f3f3 	sdiv	r3, r2, r3
 8010108:	9a05      	ldr	r2, [sp, #20]
 801010a:	9314      	str	r3, [sp, #80]	; 0x50
 801010c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010110:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010112:	eeb0 3a67 	vmov.f32	s6, s15
 8010116:	bf08      	it	eq
 8010118:	4613      	moveq	r3, r2
 801011a:	eef0 2a47 	vmov.f32	s5, s14
 801011e:	e78b      	b.n	8010038 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30>
 8010120:	140d      	asrs	r5, r1, #16
 8010122:	d45c      	bmi.n	80101de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010124:	454d      	cmp	r5, r9
 8010126:	da5a      	bge.n	80101de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010128:	1414      	asrs	r4, r2, #16
 801012a:	d458      	bmi.n	80101de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801012c:	9e01      	ldr	r6, [sp, #4]
 801012e:	42b4      	cmp	r4, r6
 8010130:	da55      	bge.n	80101de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010132:	fb09 5404 	mla	r4, r9, r4, r5
 8010136:	9d03      	ldr	r5, [sp, #12]
 8010138:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 801013c:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 8010140:	d04d      	beq.n	80101de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010142:	0a26      	lsrs	r6, r4, #8
 8010144:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8010148:	fa5f f58e 	uxtb.w	r5, lr
 801014c:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8010150:	9604      	str	r6, [sp, #16]
 8010152:	d04a      	beq.n	80101ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8010154:	f06f 0601 	mvn.w	r6, #1
 8010158:	437e      	muls	r6, r7
 801015a:	fa1f fa85 	uxth.w	sl, r5
 801015e:	f830 8006 	ldrh.w	r8, [r0, r6]
 8010162:	9602      	str	r6, [sp, #8]
 8010164:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8010168:	43ed      	mvns	r5, r5
 801016a:	fa5f fc8c 	uxtb.w	ip, ip
 801016e:	b2ed      	uxtb	r5, r5
 8010170:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8010174:	fb1c fc0a 	smulbb	ip, ip, sl
 8010178:	fb0e cc05 	mla	ip, lr, r5, ip
 801017c:	b2e4      	uxtb	r4, r4
 801017e:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 8010182:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010186:	f89d 6010 	ldrb.w	r6, [sp, #16]
 801018a:	fa5f f888 	uxtb.w	r8, r8
 801018e:	fb14 f40a 	smulbb	r4, r4, sl
 8010192:	fb08 4405 	mla	r4, r8, r5, r4
 8010196:	b2a4      	uxth	r4, r4
 8010198:	fa1f fc8c 	uxth.w	ip, ip
 801019c:	fb16 f60a 	smulbb	r6, r6, sl
 80101a0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80101a4:	fb0e 6e05 	mla	lr, lr, r5, r6
 80101a8:	1c66      	adds	r6, r4, #1
 80101aa:	f10c 0501 	add.w	r5, ip, #1
 80101ae:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80101b2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80101b6:	fa1f fe8e 	uxth.w	lr, lr
 80101ba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80101be:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80101c2:	ea4c 0c06 	orr.w	ip, ip, r6
 80101c6:	f10e 0601 	add.w	r6, lr, #1
 80101ca:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 80101ce:	0976      	lsrs	r6, r6, #5
 80101d0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80101d4:	9c02      	ldr	r4, [sp, #8]
 80101d6:	ea4c 0c06 	orr.w	ip, ip, r6
 80101da:	f820 c004 	strh.w	ip, [r0, r4]
 80101de:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80101e0:	4421      	add	r1, r4
 80101e2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80101e4:	3f01      	subs	r7, #1
 80101e6:	4422      	add	r2, r4
 80101e8:	e758      	b.n	801009c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 80101ea:	4e3e      	ldr	r6, [pc, #248]	; (80102e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 80101ec:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80101f0:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 80101f4:	ea4c 0c04 	orr.w	ip, ip, r4
 80101f8:	9c04      	ldr	r4, [sp, #16]
 80101fa:	f06f 0501 	mvn.w	r5, #1
 80101fe:	00e6      	lsls	r6, r4, #3
 8010200:	437d      	muls	r5, r7
 8010202:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8010206:	ea4c 0c04 	orr.w	ip, ip, r4
 801020a:	f820 c005 	strh.w	ip, [r0, r5]
 801020e:	e7e6      	b.n	80101de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010210:	f04f 0800 	mov.w	r8, #0
 8010214:	eba3 0408 	sub.w	r4, r3, r8
 8010218:	2c00      	cmp	r4, #0
 801021a:	f77f af42 	ble.w	80100a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 801021e:	140d      	asrs	r5, r1, #16
 8010220:	1414      	asrs	r4, r2, #16
 8010222:	fb09 5404 	mla	r4, r9, r4, r5
 8010226:	9d03      	ldr	r5, [sp, #12]
 8010228:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 801022c:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8010230:	d042      	beq.n	80102b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8010232:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8010236:	fa5f f58c 	uxtb.w	r5, ip
 801023a:	ea4f 4714 	mov.w	r7, r4, lsr #16
 801023e:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8010242:	d040      	beq.n	80102c6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8010244:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 8010248:	fa1f fa85 	uxth.w	sl, r5
 801024c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010250:	43ed      	mvns	r5, r5
 8010252:	b2ff      	uxtb	r7, r7
 8010254:	b2ed      	uxtb	r5, r5
 8010256:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801025a:	fb17 f70a 	smulbb	r7, r7, sl
 801025e:	fb0c 7705 	mla	r7, ip, r5, r7
 8010262:	b2e4      	uxtb	r4, r4
 8010264:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8010268:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801026c:	fa5f fe8e 	uxtb.w	lr, lr
 8010270:	fb14 f40a 	smulbb	r4, r4, sl
 8010274:	fb0e 4405 	mla	r4, lr, r5, r4
 8010278:	b2f6      	uxtb	r6, r6
 801027a:	b2bf      	uxth	r7, r7
 801027c:	fb16 f60a 	smulbb	r6, r6, sl
 8010280:	b2a4      	uxth	r4, r4
 8010282:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8010286:	fb0c 6c05 	mla	ip, ip, r5, r6
 801028a:	1c7d      	adds	r5, r7, #1
 801028c:	1c66      	adds	r6, r4, #1
 801028e:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8010292:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8010296:	fa1f fc8c 	uxth.w	ip, ip
 801029a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801029e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80102a2:	4337      	orrs	r7, r6
 80102a4:	f10c 0601 	add.w	r6, ip, #1
 80102a8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80102ac:	0976      	lsrs	r6, r6, #5
 80102ae:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80102b2:	4337      	orrs	r7, r6
 80102b4:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 80102b8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80102ba:	4421      	add	r1, r4
 80102bc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80102be:	f108 0801 	add.w	r8, r8, #1
 80102c2:	4422      	add	r2, r4
 80102c4:	e7a6      	b.n	8010214 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20c>
 80102c6:	4d07      	ldr	r5, [pc, #28]	; (80102e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 80102c8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80102cc:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 80102d0:	00f6      	lsls	r6, r6, #3
 80102d2:	4327      	orrs	r7, r4
 80102d4:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 80102d8:	4327      	orrs	r7, r4
 80102da:	e7eb      	b.n	80102b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ac>
 80102dc:	b007      	add	sp, #28
 80102de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80102e2:	bf00      	nop
 80102e4:	fffff800 	.word	0xfffff800

080102e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80102e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102ec:	b087      	sub	sp, #28
 80102ee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80102f2:	9204      	str	r2, [sp, #16]
 80102f4:	f9bd 2060 	ldrsh.w	r2, [sp, #96]	; 0x60
 80102f8:	9200      	str	r2, [sp, #0]
 80102fa:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80102fe:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010300:	9201      	str	r2, [sp, #4]
 8010302:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8010306:	9205      	str	r2, [sp, #20]
 8010308:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801030c:	6860      	ldr	r0, [r4, #4]
 801030e:	fb00 2505 	mla	r5, r0, r5, r2
 8010312:	6822      	ldr	r2, [r4, #0]
 8010314:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8010318:	9a00      	ldr	r2, [sp, #0]
 801031a:	3201      	adds	r2, #1
 801031c:	f022 0201 	bic.w	r2, r2, #1
 8010320:	9202      	str	r2, [sp, #8]
 8010322:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8010324:	6812      	ldr	r2, [r2, #0]
 8010326:	9203      	str	r2, [sp, #12]
 8010328:	2900      	cmp	r1, #0
 801032a:	dc03      	bgt.n	8010334 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 801032c:	9a04      	ldr	r2, [sp, #16]
 801032e:	2a00      	cmp	r2, #0
 8010330:	f340 814c 	ble.w	80105cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8010334:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010336:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 801033a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801033c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010340:	2b00      	cmp	r3, #0
 8010342:	dd10      	ble.n	8010366 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8010344:	1422      	asrs	r2, r4, #16
 8010346:	d407      	bmi.n	8010358 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8010348:	9e00      	ldr	r6, [sp, #0]
 801034a:	4296      	cmp	r6, r2
 801034c:	dd04      	ble.n	8010358 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801034e:	1402      	asrs	r2, r0, #16
 8010350:	d402      	bmi.n	8010358 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8010352:	9e01      	ldr	r6, [sp, #4]
 8010354:	42b2      	cmp	r2, r6
 8010356:	db07      	blt.n	8010368 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x80>
 8010358:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801035a:	4414      	add	r4, r2
 801035c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801035e:	3b01      	subs	r3, #1
 8010360:	4410      	add	r0, r2
 8010362:	3502      	adds	r5, #2
 8010364:	e7ec      	b.n	8010340 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 8010366:	d00f      	beq.n	8010388 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 8010368:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801036a:	1e5a      	subs	r2, r3, #1
 801036c:	fb06 4602 	mla	r6, r6, r2, r4
 8010370:	1436      	asrs	r6, r6, #16
 8010372:	d542      	bpl.n	80103fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x112>
 8010374:	469a      	mov	sl, r3
 8010376:	46a9      	mov	r9, r5
 8010378:	f1ba 0f00 	cmp.w	sl, #0
 801037c:	f300 80b5 	bgt.w	80104ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8010380:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010384:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8010388:	2900      	cmp	r1, #0
 801038a:	f340 811f 	ble.w	80105cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 801038e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010392:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010396:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801039a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801039c:	3901      	subs	r1, #1
 801039e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80103a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80103a6:	eeb0 6a62 	vmov.f32	s12, s5
 80103aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80103ae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80103b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80103b6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80103ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80103be:	eeb0 6a43 	vmov.f32	s12, s6
 80103c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80103c6:	ee12 2a90 	vmov	r2, s5
 80103ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80103ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80103d2:	ee13 2a10 	vmov	r2, s6
 80103d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80103da:	9313      	str	r3, [sp, #76]	; 0x4c
 80103dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80103de:	fb92 f3f3 	sdiv	r3, r2, r3
 80103e2:	9a04      	ldr	r2, [sp, #16]
 80103e4:	9314      	str	r3, [sp, #80]	; 0x50
 80103e6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80103ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80103ec:	eeb0 3a67 	vmov.f32	s6, s15
 80103f0:	bf08      	it	eq
 80103f2:	4613      	moveq	r3, r2
 80103f4:	eef0 2a47 	vmov.f32	s5, s14
 80103f8:	e796      	b.n	8010328 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 80103fa:	9f00      	ldr	r7, [sp, #0]
 80103fc:	42b7      	cmp	r7, r6
 80103fe:	ddb9      	ble.n	8010374 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8010400:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8010402:	fb06 0202 	mla	r2, r6, r2, r0
 8010406:	1412      	asrs	r2, r2, #16
 8010408:	d4b4      	bmi.n	8010374 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 801040a:	9e01      	ldr	r6, [sp, #4]
 801040c:	42b2      	cmp	r2, r6
 801040e:	dab1      	bge.n	8010374 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8010410:	f04f 0800 	mov.w	r8, #0
 8010414:	eba3 0208 	sub.w	r2, r3, r8
 8010418:	2a00      	cmp	r2, #0
 801041a:	ddb1      	ble.n	8010380 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 801041c:	9f02      	ldr	r7, [sp, #8]
 801041e:	1422      	asrs	r2, r4, #16
 8010420:	1406      	asrs	r6, r0, #16
 8010422:	fb07 2606 	mla	r6, r7, r6, r2
 8010426:	0872      	lsrs	r2, r6, #1
 8010428:	9f03      	ldr	r7, [sp, #12]
 801042a:	5cba      	ldrb	r2, [r7, r2]
 801042c:	07f6      	lsls	r6, r6, #31
 801042e:	bf54      	ite	pl
 8010430:	f002 020f 	andpl.w	r2, r2, #15
 8010434:	1112      	asrmi	r2, r2, #4
 8010436:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801043a:	b2d2      	uxtb	r2, r2
 801043c:	2a00      	cmp	r2, #0
 801043e:	d04d      	beq.n	80104dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 8010440:	9f05      	ldr	r7, [sp, #20]
 8010442:	4e64      	ldr	r6, [pc, #400]	; (80105d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ec>)
 8010444:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8010448:	6836      	ldr	r6, [r6, #0]
 801044a:	437a      	muls	r2, r7
 801044c:	1c57      	adds	r7, r2, #1
 801044e:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8010452:	1212      	asrs	r2, r2, #8
 8010454:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 8010458:	fa1f fa82 	uxth.w	sl, r2
 801045c:	ea4f 272e 	mov.w	r7, lr, asr #8
 8010460:	43d2      	mvns	r2, r2
 8010462:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010466:	b2d2      	uxtb	r2, r2
 8010468:	fb1c fc0a 	smulbb	ip, ip, sl
 801046c:	ea4f 09d6 	mov.w	r9, r6, lsr #3
 8010470:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010474:	fb07 c702 	mla	r7, r7, r2, ip
 8010478:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801047c:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8010480:	fb19 f90a 	smulbb	r9, r9, sl
 8010484:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8010488:	00f6      	lsls	r6, r6, #3
 801048a:	fb0c 9c02 	mla	ip, ip, r2, r9
 801048e:	b2f6      	uxtb	r6, r6
 8010490:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010494:	fa1f fc8c 	uxth.w	ip, ip
 8010498:	fa5f fe8e 	uxtb.w	lr, lr
 801049c:	fb16 f60a 	smulbb	r6, r6, sl
 80104a0:	b2bf      	uxth	r7, r7
 80104a2:	fb0e 6602 	mla	r6, lr, r2, r6
 80104a6:	f10c 0901 	add.w	r9, ip, #1
 80104aa:	b2b6      	uxth	r6, r6
 80104ac:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80104b0:	f107 0b01 	add.w	fp, r7, #1
 80104b4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80104b8:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 80104bc:	f106 0e01 	add.w	lr, r6, #1
 80104c0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80104c4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80104c8:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 80104cc:	ea4c 0c07 	orr.w	ip, ip, r7
 80104d0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80104d4:	ea4c 0c0e 	orr.w	ip, ip, lr
 80104d8:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80104dc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80104de:	4414      	add	r4, r2
 80104e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80104e2:	f108 0801 	add.w	r8, r8, #1
 80104e6:	4410      	add	r0, r2
 80104e8:	e794      	b.n	8010414 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 80104ea:	1422      	asrs	r2, r4, #16
 80104ec:	d465      	bmi.n	80105ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 80104ee:	9e00      	ldr	r6, [sp, #0]
 80104f0:	4296      	cmp	r6, r2
 80104f2:	dd62      	ble.n	80105ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 80104f4:	1406      	asrs	r6, r0, #16
 80104f6:	d460      	bmi.n	80105ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 80104f8:	9f01      	ldr	r7, [sp, #4]
 80104fa:	42be      	cmp	r6, r7
 80104fc:	da5d      	bge.n	80105ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 80104fe:	9f02      	ldr	r7, [sp, #8]
 8010500:	fb06 2607 	mla	r6, r6, r7, r2
 8010504:	0872      	lsrs	r2, r6, #1
 8010506:	9f03      	ldr	r7, [sp, #12]
 8010508:	5cba      	ldrb	r2, [r7, r2]
 801050a:	07f7      	lsls	r7, r6, #31
 801050c:	bf54      	ite	pl
 801050e:	f002 020f 	andpl.w	r2, r2, #15
 8010512:	1112      	asrmi	r2, r2, #4
 8010514:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8010518:	b2d2      	uxtb	r2, r2
 801051a:	2a00      	cmp	r2, #0
 801051c:	d04d      	beq.n	80105ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 801051e:	9f05      	ldr	r7, [sp, #20]
 8010520:	4e2c      	ldr	r6, [pc, #176]	; (80105d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ec>)
 8010522:	f8b9 e000 	ldrh.w	lr, [r9]
 8010526:	6836      	ldr	r6, [r6, #0]
 8010528:	437a      	muls	r2, r7
 801052a:	1c57      	adds	r7, r2, #1
 801052c:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8010530:	1212      	asrs	r2, r2, #8
 8010532:	ea4f 2c16 	mov.w	ip, r6, lsr #8
 8010536:	fa1f fb82 	uxth.w	fp, r2
 801053a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801053e:	43d2      	mvns	r2, r2
 8010540:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010544:	b2d2      	uxtb	r2, r2
 8010546:	fb1c fc0b 	smulbb	ip, ip, fp
 801054a:	ea4f 08d6 	mov.w	r8, r6, lsr #3
 801054e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010552:	fb07 c702 	mla	r7, r7, r2, ip
 8010556:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801055a:	ea4f 0cee 	mov.w	ip, lr, asr #3
 801055e:	fb18 f80b 	smulbb	r8, r8, fp
 8010562:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8010566:	00f6      	lsls	r6, r6, #3
 8010568:	fb0c 8c02 	mla	ip, ip, r2, r8
 801056c:	b2f6      	uxtb	r6, r6
 801056e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010572:	fa1f fc8c 	uxth.w	ip, ip
 8010576:	fa5f fe8e 	uxtb.w	lr, lr
 801057a:	fb16 f60b 	smulbb	r6, r6, fp
 801057e:	b2bf      	uxth	r7, r7
 8010580:	fb0e 6602 	mla	r6, lr, r2, r6
 8010584:	f10c 0801 	add.w	r8, ip, #1
 8010588:	b2b6      	uxth	r6, r6
 801058a:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 801058e:	f107 0801 	add.w	r8, r7, #1
 8010592:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8010596:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 801059a:	f106 0e01 	add.w	lr, r6, #1
 801059e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80105a2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80105a6:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 80105aa:	ea4c 0c07 	orr.w	ip, ip, r7
 80105ae:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80105b2:	ea4c 0c0e 	orr.w	ip, ip, lr
 80105b6:	f8a9 c000 	strh.w	ip, [r9]
 80105ba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80105bc:	4414      	add	r4, r2
 80105be:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80105c0:	f109 0902 	add.w	r9, r9, #2
 80105c4:	4410      	add	r0, r2
 80105c6:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 80105ca:	e6d5      	b.n	8010378 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 80105cc:	b007      	add	sp, #28
 80105ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80105d2:	bf00      	nop
 80105d4:	20012184 	.word	0x20012184

080105d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80105d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105dc:	b087      	sub	sp, #28
 80105de:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80105e2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80105e4:	9205      	str	r2, [sp, #20]
 80105e6:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80105ea:	9201      	str	r2, [sp, #4]
 80105ec:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 80105f0:	6860      	ldr	r0, [r4, #4]
 80105f2:	f9bd b060 	ldrsh.w	fp, [sp, #96]	; 0x60
 80105f6:	9100      	str	r1, [sp, #0]
 80105f8:	fb00 2505 	mla	r5, r0, r5, r2
 80105fc:	6822      	ldr	r2, [r4, #0]
 80105fe:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8010602:	f10b 0201 	add.w	r2, fp, #1
 8010606:	f022 0201 	bic.w	r2, r2, #1
 801060a:	9203      	str	r2, [sp, #12]
 801060c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 801060e:	6812      	ldr	r2, [r2, #0]
 8010610:	9204      	str	r2, [sp, #16]
 8010612:	9a00      	ldr	r2, [sp, #0]
 8010614:	2a00      	cmp	r2, #0
 8010616:	dc03      	bgt.n	8010620 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 8010618:	9a05      	ldr	r2, [sp, #20]
 801061a:	2a00      	cmp	r2, #0
 801061c:	f340 8157 	ble.w	80108ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8010620:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010622:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8010626:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010628:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801062c:	2b00      	cmp	r3, #0
 801062e:	dd0f      	ble.n	8010650 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010630:	1422      	asrs	r2, r4, #16
 8010632:	d406      	bmi.n	8010642 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010634:	4593      	cmp	fp, r2
 8010636:	dd04      	ble.n	8010642 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010638:	1402      	asrs	r2, r0, #16
 801063a:	d402      	bmi.n	8010642 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801063c:	9e01      	ldr	r6, [sp, #4]
 801063e:	42b2      	cmp	r2, r6
 8010640:	db07      	blt.n	8010652 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 8010642:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010644:	4414      	add	r4, r2
 8010646:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010648:	3b01      	subs	r3, #1
 801064a:	4410      	add	r0, r2
 801064c:	3502      	adds	r5, #2
 801064e:	e7ed      	b.n	801062c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 8010650:	d018      	beq.n	8010684 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 8010652:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010654:	1e5a      	subs	r2, r3, #1
 8010656:	fb06 4602 	mla	r6, r6, r2, r4
 801065a:	1436      	asrs	r6, r6, #16
 801065c:	d40a      	bmi.n	8010674 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801065e:	45b3      	cmp	fp, r6
 8010660:	dd08      	ble.n	8010674 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8010662:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8010664:	fb06 0202 	mla	r2, r6, r2, r0
 8010668:	1412      	asrs	r2, r2, #16
 801066a:	d403      	bmi.n	8010674 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801066c:	9e01      	ldr	r6, [sp, #4]
 801066e:	42b2      	cmp	r2, r6
 8010670:	f2c0 80bf 	blt.w	80107f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21a>
 8010674:	2700      	movs	r7, #0
 8010676:	19da      	adds	r2, r3, r7
 8010678:	2a00      	cmp	r2, #0
 801067a:	dc3f      	bgt.n	80106fc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x124>
 801067c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010680:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8010684:	9b00      	ldr	r3, [sp, #0]
 8010686:	2b00      	cmp	r3, #0
 8010688:	f340 8121 	ble.w	80108ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 801068c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010690:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010694:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010698:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801069a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801069e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80106a2:	eeb0 6a62 	vmov.f32	s12, s5
 80106a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80106aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80106ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 80106b2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80106b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80106ba:	eeb0 6a43 	vmov.f32	s12, s6
 80106be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80106c2:	ee12 2a90 	vmov	r2, s5
 80106c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80106ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80106ce:	ee13 2a10 	vmov	r2, s6
 80106d2:	9313      	str	r3, [sp, #76]	; 0x4c
 80106d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80106d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80106da:	9314      	str	r3, [sp, #80]	; 0x50
 80106dc:	9b00      	ldr	r3, [sp, #0]
 80106de:	9a05      	ldr	r2, [sp, #20]
 80106e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80106e4:	3b01      	subs	r3, #1
 80106e6:	9300      	str	r3, [sp, #0]
 80106e8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80106ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80106ee:	eeb0 3a67 	vmov.f32	s6, s15
 80106f2:	bf08      	it	eq
 80106f4:	4613      	moveq	r3, r2
 80106f6:	eef0 2a47 	vmov.f32	s5, s14
 80106fa:	e78a      	b.n	8010612 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 80106fc:	1422      	asrs	r2, r4, #16
 80106fe:	d466      	bmi.n	80107ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8010700:	4593      	cmp	fp, r2
 8010702:	dd64      	ble.n	80107ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8010704:	1406      	asrs	r6, r0, #16
 8010706:	d462      	bmi.n	80107ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8010708:	9901      	ldr	r1, [sp, #4]
 801070a:	428e      	cmp	r6, r1
 801070c:	da5f      	bge.n	80107ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801070e:	9903      	ldr	r1, [sp, #12]
 8010710:	fb06 2601 	mla	r6, r6, r1, r2
 8010714:	0872      	lsrs	r2, r6, #1
 8010716:	9904      	ldr	r1, [sp, #16]
 8010718:	5c8a      	ldrb	r2, [r1, r2]
 801071a:	07f6      	lsls	r6, r6, #31
 801071c:	bf54      	ite	pl
 801071e:	f002 020f 	andpl.w	r2, r2, #15
 8010722:	1112      	asrmi	r2, r2, #4
 8010724:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8010728:	b2d2      	uxtb	r2, r2
 801072a:	2a00      	cmp	r2, #0
 801072c:	d04f      	beq.n	80107ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 801072e:	4969      	ldr	r1, [pc, #420]	; (80108d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 8010730:	f8d1 c000 	ldr.w	ip, [r1]
 8010734:	2aff      	cmp	r2, #255	; 0xff
 8010736:	ea4f 291c 	mov.w	r9, ip, lsr #8
 801073a:	ea4f 06dc 	mov.w	r6, ip, lsr #3
 801073e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010742:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8010746:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801074a:	fa5f fc8c 	uxtb.w	ip, ip
 801074e:	d044      	beq.n	80107da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8010750:	f06f 0101 	mvn.w	r1, #1
 8010754:	4379      	muls	r1, r7
 8010756:	fa1f fa82 	uxth.w	sl, r2
 801075a:	f835 8001 	ldrh.w	r8, [r5, r1]
 801075e:	9102      	str	r1, [sp, #8]
 8010760:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8010764:	43d2      	mvns	r2, r2
 8010766:	b2d2      	uxtb	r2, r2
 8010768:	fb19 f90a 	smulbb	r9, r9, sl
 801076c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8010770:	fb0e 9e02 	mla	lr, lr, r2, r9
 8010774:	ea4f 09e8 	mov.w	r9, r8, asr #3
 8010778:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801077c:	fb16 f60a 	smulbb	r6, r6, sl
 8010780:	fb09 6602 	mla	r6, r9, r2, r6
 8010784:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010788:	b2b6      	uxth	r6, r6
 801078a:	fa5f f888 	uxtb.w	r8, r8
 801078e:	fb1c fc0a 	smulbb	ip, ip, sl
 8010792:	fa1f fe8e 	uxth.w	lr, lr
 8010796:	fb08 cc02 	mla	ip, r8, r2, ip
 801079a:	f106 0901 	add.w	r9, r6, #1
 801079e:	fa1f fc8c 	uxth.w	ip, ip
 80107a2:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80107a6:	f10e 0901 	add.w	r9, lr, #1
 80107aa:	0976      	lsrs	r6, r6, #5
 80107ac:	eb09 2e1e 	add.w	lr, r9, lr, lsr #8
 80107b0:	f10c 0201 	add.w	r2, ip, #1
 80107b4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80107b8:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80107bc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80107c0:	ea46 060e 	orr.w	r6, r6, lr
 80107c4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80107c8:	ea46 060c 	orr.w	r6, r6, ip
 80107cc:	526e      	strh	r6, [r5, r1]
 80107ce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80107d0:	4414      	add	r4, r2
 80107d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80107d4:	3f01      	subs	r7, #1
 80107d6:	4410      	add	r0, r2
 80107d8:	e74d      	b.n	8010676 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 80107da:	f06f 0201 	mvn.w	r2, #1
 80107de:	00f6      	lsls	r6, r6, #3
 80107e0:	fb02 f807 	mul.w	r8, r2, r7
 80107e4:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 80107e8:	ea46 06dc 	orr.w	r6, r6, ip, lsr #3
 80107ec:	f825 6008 	strh.w	r6, [r5, r8]
 80107f0:	e7ed      	b.n	80107ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80107f2:	f04f 0800 	mov.w	r8, #0
 80107f6:	eba3 0208 	sub.w	r2, r3, r8
 80107fa:	2a00      	cmp	r2, #0
 80107fc:	f77f af3e 	ble.w	801067c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8010800:	9903      	ldr	r1, [sp, #12]
 8010802:	1422      	asrs	r2, r4, #16
 8010804:	1406      	asrs	r6, r0, #16
 8010806:	fb01 2606 	mla	r6, r1, r6, r2
 801080a:	0872      	lsrs	r2, r6, #1
 801080c:	9904      	ldr	r1, [sp, #16]
 801080e:	5c8a      	ldrb	r2, [r1, r2]
 8010810:	07f1      	lsls	r1, r6, #31
 8010812:	bf54      	ite	pl
 8010814:	f002 020f 	andpl.w	r2, r2, #15
 8010818:	1112      	asrmi	r2, r2, #4
 801081a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801081e:	b2d2      	uxtb	r2, r2
 8010820:	2a00      	cmp	r2, #0
 8010822:	d047      	beq.n	80108b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>
 8010824:	492b      	ldr	r1, [pc, #172]	; (80108d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 8010826:	680f      	ldr	r7, [r1, #0]
 8010828:	2aff      	cmp	r2, #255	; 0xff
 801082a:	ea4f 2917 	mov.w	r9, r7, lsr #8
 801082e:	ea4f 06d7 	mov.w	r6, r7, lsr #3
 8010832:	ea4f 07c7 	mov.w	r7, r7, lsl #3
 8010836:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 801083a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801083e:	b2ff      	uxtb	r7, r7
 8010840:	d03f      	beq.n	80108c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ea>
 8010842:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8010846:	fa1f fa82 	uxth.w	sl, r2
 801084a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801084e:	43d2      	mvns	r2, r2
 8010850:	b2d2      	uxtb	r2, r2
 8010852:	fb19 f90a 	smulbb	r9, r9, sl
 8010856:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801085a:	fb0c 9c02 	mla	ip, ip, r2, r9
 801085e:	ea4f 09ee 	mov.w	r9, lr, asr #3
 8010862:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010866:	fb16 f60a 	smulbb	r6, r6, sl
 801086a:	fb09 6602 	mla	r6, r9, r2, r6
 801086e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010872:	b2b6      	uxth	r6, r6
 8010874:	fa5f fe8e 	uxtb.w	lr, lr
 8010878:	fb17 f70a 	smulbb	r7, r7, sl
 801087c:	fa1f fc8c 	uxth.w	ip, ip
 8010880:	fb0e 7702 	mla	r7, lr, r2, r7
 8010884:	f106 0901 	add.w	r9, r6, #1
 8010888:	b2bf      	uxth	r7, r7
 801088a:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 801088e:	f10c 0901 	add.w	r9, ip, #1
 8010892:	0976      	lsrs	r6, r6, #5
 8010894:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8010898:	1c7a      	adds	r2, r7, #1
 801089a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801089e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80108a2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80108a6:	ea46 060c 	orr.w	r6, r6, ip
 80108aa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80108ae:	433e      	orrs	r6, r7
 80108b0:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80108b4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80108b6:	4414      	add	r4, r2
 80108b8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80108ba:	f108 0801 	add.w	r8, r8, #1
 80108be:	4410      	add	r0, r2
 80108c0:	e799      	b.n	80107f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21e>
 80108c2:	00f6      	lsls	r6, r6, #3
 80108c4:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 80108c8:	ea46 06d7 	orr.w	r6, r6, r7, lsr #3
 80108cc:	e7f0      	b.n	80108b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 80108ce:	b007      	add	sp, #28
 80108d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80108d4:	20012184 	.word	0x20012184

080108d8 <_ZN8touchgfx8LCD16bppD1Ev>:
 80108d8:	4770      	bx	lr

080108da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80108da:	4770      	bx	lr

080108dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80108dc:	4770      	bx	lr

080108de <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80108de:	4770      	bx	lr

080108e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80108e0:	4770      	bx	lr

080108e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80108e2:	4770      	bx	lr

080108e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80108e4:	4770      	bx	lr

080108e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80108e6:	4770      	bx	lr

080108e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80108e8:	4770      	bx	lr

080108ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80108ea:	4770      	bx	lr

080108ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80108ec:	4770      	bx	lr

080108ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80108ee:	4770      	bx	lr

080108f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80108f0:	4770      	bx	lr

080108f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80108f2:	4770      	bx	lr

080108f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80108f4:	4770      	bx	lr

080108f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80108f6:	4770      	bx	lr

080108f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80108f8:	4770      	bx	lr

080108fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80108fa:	4770      	bx	lr

080108fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80108fc:	4770      	bx	lr

080108fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80108fe:	4770      	bx	lr

08010900 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8010900:	4770      	bx	lr

08010902 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8010902:	4770      	bx	lr

08010904 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8010904:	4770      	bx	lr

08010906 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8010906:	4770      	bx	lr

08010908 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8010908:	4770      	bx	lr

0801090a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801090a:	4770      	bx	lr

0801090c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801090c:	4770      	bx	lr

0801090e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801090e:	4770      	bx	lr

08010910 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8010910:	4770      	bx	lr
	...

08010914 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8010914:	b508      	push	{r3, lr}
 8010916:	4b06      	ldr	r3, [pc, #24]	; (8010930 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8010918:	8818      	ldrh	r0, [r3, #0]
 801091a:	b928      	cbnz	r0, 8010928 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 801091c:	4b05      	ldr	r3, [pc, #20]	; (8010934 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 801091e:	4a06      	ldr	r2, [pc, #24]	; (8010938 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8010920:	4806      	ldr	r0, [pc, #24]	; (801093c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 8010922:	2154      	movs	r1, #84	; 0x54
 8010924:	f009 f8bc 	bl	8019aa0 <__assert_func>
 8010928:	0040      	lsls	r0, r0, #1
 801092a:	b280      	uxth	r0, r0
 801092c:	bd08      	pop	{r3, pc}
 801092e:	bf00      	nop
 8010930:	20012176 	.word	0x20012176
 8010934:	0801d717 	.word	0x0801d717
 8010938:	0801dc97 	.word	0x0801dc97
 801093c:	0801d759 	.word	0x0801d759

08010940 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8010940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010944:	b08d      	sub	sp, #52	; 0x34
 8010946:	460f      	mov	r7, r1
 8010948:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 801094c:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8010950:	4616      	mov	r6, r2
 8010952:	f1b9 0f00 	cmp.w	r9, #0
 8010956:	d046      	beq.n	80109e6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8010958:	6810      	ldr	r0, [r2, #0]
 801095a:	6851      	ldr	r1, [r2, #4]
 801095c:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8010b24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>
 8010960:	ad08      	add	r5, sp, #32
 8010962:	c503      	stmia	r5!, {r0, r1}
 8010964:	6818      	ldr	r0, [r3, #0]
 8010966:	6859      	ldr	r1, [r3, #4]
 8010968:	ad0a      	add	r5, sp, #40	; 0x28
 801096a:	c503      	stmia	r5!, {r0, r1}
 801096c:	a808      	add	r0, sp, #32
 801096e:	f7fa fed7 	bl	800b720 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010972:	4631      	mov	r1, r6
 8010974:	a80a      	add	r0, sp, #40	; 0x28
 8010976:	f7fa febb 	bl	800b6f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801097a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801097e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8010982:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 8010986:	f8d8 0000 	ldr.w	r0, [r8]
 801098a:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 801098e:	fb16 2103 	smlabb	r1, r6, r3, r2
 8010992:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8010996:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801099a:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 801099e:	440a      	add	r2, r1
 80109a0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80109a4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80109a8:	4413      	add	r3, r2
 80109aa:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80109ae:	6803      	ldr	r3, [r0, #0]
 80109b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80109b2:	4798      	blx	r3
 80109b4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80109b8:	d018      	beq.n	80109ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80109ba:	f010 0f04 	tst.w	r0, #4
 80109be:	d019      	beq.n	80109f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80109c0:	f8d8 0000 	ldr.w	r0, [r8]
 80109c4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80109c8:	6801      	ldr	r1, [r0, #0]
 80109ca:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80109ce:	e9cd 9403 	strd	r9, r4, [sp, #12]
 80109d2:	b2bf      	uxth	r7, r7
 80109d4:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 80109d8:	9402      	str	r4, [sp, #8]
 80109da:	b2ad      	uxth	r5, r5
 80109dc:	9701      	str	r7, [sp, #4]
 80109de:	9500      	str	r5, [sp, #0]
 80109e0:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 80109e2:	4631      	mov	r1, r6
 80109e4:	47a0      	blx	r4
 80109e6:	b00d      	add	sp, #52	; 0x34
 80109e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80109ec:	b914      	cbnz	r4, 80109f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80109ee:	f010 0f01 	tst.w	r0, #1
 80109f2:	e7e4      	b.n	80109be <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80109f4:	f8d8 0000 	ldr.w	r0, [r8]
 80109f8:	6803      	ldr	r3, [r0, #0]
 80109fa:	6a1b      	ldr	r3, [r3, #32]
 80109fc:	4798      	blx	r3
 80109fe:	4a48      	ldr	r2, [pc, #288]	; (8010b20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e0>)
 8010a00:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8010a04:	8814      	ldrh	r4, [r2, #0]
 8010a06:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8010a0a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010a0e:	fb01 3404 	mla	r4, r1, r4, r3
 8010a12:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8010a16:	4692      	mov	sl, r2
 8010a18:	d118      	bne.n	8010a4c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x10c>
 8010a1a:	ea4f 0b45 	mov.w	fp, r5, lsl #1
 8010a1e:	f04f 0900 	mov.w	r9, #0
 8010a22:	f8d8 0000 	ldr.w	r0, [r8]
 8010a26:	45b9      	cmp	r9, r7
 8010a28:	6803      	ldr	r3, [r0, #0]
 8010a2a:	da73      	bge.n	8010b14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 8010a2c:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8010a2e:	4632      	mov	r2, r6
 8010a30:	465b      	mov	r3, fp
 8010a32:	4621      	mov	r1, r4
 8010a34:	47a8      	blx	r5
 8010a36:	f8ba 3000 	ldrh.w	r3, [sl]
 8010a3a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010a3e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8010a42:	f109 0901 	add.w	r9, r9, #1
 8010a46:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8010a4a:	e7ea      	b.n	8010a22 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xe2>
 8010a4c:	f1c9 08ff 	rsb	r8, r9, #255	; 0xff
 8010a50:	ea25 7ae5 	bic.w	sl, r5, r5, asr #31
 8010a54:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8010a58:	f04f 0b00 	mov.w	fp, #0
 8010a5c:	fa1f f389 	uxth.w	r3, r9
 8010a60:	fa1f f888 	uxth.w	r8, r8
 8010a64:	9207      	str	r2, [sp, #28]
 8010a66:	45bb      	cmp	fp, r7
 8010a68:	da54      	bge.n	8010b14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 8010a6a:	f04f 0e00 	mov.w	lr, #0
 8010a6e:	45ae      	cmp	lr, r5
 8010a70:	da41      	bge.n	8010af6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1b6>
 8010a72:	f834 101e 	ldrh.w	r1, [r4, lr, lsl #1]
 8010a76:	f836 201e 	ldrh.w	r2, [r6, lr, lsl #1]
 8010a7a:	1208      	asrs	r0, r1, #8
 8010a7c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8010a80:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8010a84:	fb10 f008 	smulbb	r0, r0, r8
 8010a88:	ea4f 09e1 	mov.w	r9, r1, asr #3
 8010a8c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010a90:	00c9      	lsls	r1, r1, #3
 8010a92:	fb0c 0c03 	mla	ip, ip, r3, r0
 8010a96:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010a9a:	10d0      	asrs	r0, r2, #3
 8010a9c:	b2c9      	uxtb	r1, r1
 8010a9e:	00d2      	lsls	r2, r2, #3
 8010aa0:	fa1f fc8c 	uxth.w	ip, ip
 8010aa4:	fb19 f908 	smulbb	r9, r9, r8
 8010aa8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8010aac:	b2d2      	uxtb	r2, r2
 8010aae:	fb11 f108 	smulbb	r1, r1, r8
 8010ab2:	fb00 9003 	mla	r0, r0, r3, r9
 8010ab6:	fb02 1203 	mla	r2, r2, r3, r1
 8010aba:	f10c 0901 	add.w	r9, ip, #1
 8010abe:	b292      	uxth	r2, r2
 8010ac0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8010ac4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8010ac8:	f102 0c01 	add.w	ip, r2, #1
 8010acc:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8010ad0:	b280      	uxth	r0, r0
 8010ad2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8010ad6:	ea49 0c02 	orr.w	ip, r9, r2
 8010ada:	f100 0901 	add.w	r9, r0, #1
 8010ade:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 8010ae2:	0940      	lsrs	r0, r0, #5
 8010ae4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8010ae8:	ea4c 0c00 	orr.w	ip, ip, r0
 8010aec:	f824 c01e 	strh.w	ip, [r4, lr, lsl #1]
 8010af0:	f10e 0e01 	add.w	lr, lr, #1
 8010af4:	e7bb      	b.n	8010a6e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x12e>
 8010af6:	9a07      	ldr	r2, [sp, #28]
 8010af8:	8812      	ldrh	r2, [r2, #0]
 8010afa:	1b52      	subs	r2, r2, r5
 8010afc:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 8010b00:	4414      	add	r4, r2
 8010b02:	f9bd 2024 	ldrsh.w	r2, [sp, #36]	; 0x24
 8010b06:	1b52      	subs	r2, r2, r5
 8010b08:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 8010b0c:	4416      	add	r6, r2
 8010b0e:	f10b 0b01 	add.w	fp, fp, #1
 8010b12:	e7a8      	b.n	8010a66 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x126>
 8010b14:	4b03      	ldr	r3, [pc, #12]	; (8010b24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>)
 8010b16:	6818      	ldr	r0, [r3, #0]
 8010b18:	6803      	ldr	r3, [r0, #0]
 8010b1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010b1c:	4798      	blx	r3
 8010b1e:	e762      	b.n	80109e6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8010b20:	20012176 	.word	0x20012176
 8010b24:	2001217c 	.word	0x2001217c

08010b28 <_ZN8touchgfx8LCD16bppD0Ev>:
 8010b28:	b510      	push	{r4, lr}
 8010b2a:	2178      	movs	r1, #120	; 0x78
 8010b2c:	4604      	mov	r4, r0
 8010b2e:	f008 ff8b 	bl	8019a48 <_ZdlPvj>
 8010b32:	4620      	mov	r0, r4
 8010b34:	bd10      	pop	{r4, pc}

08010b36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8010b36:	b510      	push	{r4, lr}
 8010b38:	2104      	movs	r1, #4
 8010b3a:	4604      	mov	r4, r0
 8010b3c:	f008 ff84 	bl	8019a48 <_ZdlPvj>
 8010b40:	4620      	mov	r0, r4
 8010b42:	bd10      	pop	{r4, pc}

08010b44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8010b44:	b510      	push	{r4, lr}
 8010b46:	2104      	movs	r1, #4
 8010b48:	4604      	mov	r4, r0
 8010b4a:	f008 ff7d 	bl	8019a48 <_ZdlPvj>
 8010b4e:	4620      	mov	r0, r4
 8010b50:	bd10      	pop	{r4, pc}

08010b52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8010b52:	b510      	push	{r4, lr}
 8010b54:	2104      	movs	r1, #4
 8010b56:	4604      	mov	r4, r0
 8010b58:	f008 ff76 	bl	8019a48 <_ZdlPvj>
 8010b5c:	4620      	mov	r0, r4
 8010b5e:	bd10      	pop	{r4, pc}

08010b60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8010b60:	b510      	push	{r4, lr}
 8010b62:	2104      	movs	r1, #4
 8010b64:	4604      	mov	r4, r0
 8010b66:	f008 ff6f 	bl	8019a48 <_ZdlPvj>
 8010b6a:	4620      	mov	r0, r4
 8010b6c:	bd10      	pop	{r4, pc}

08010b6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8010b6e:	b510      	push	{r4, lr}
 8010b70:	2104      	movs	r1, #4
 8010b72:	4604      	mov	r4, r0
 8010b74:	f008 ff68 	bl	8019a48 <_ZdlPvj>
 8010b78:	4620      	mov	r0, r4
 8010b7a:	bd10      	pop	{r4, pc}

08010b7c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8010b7c:	b510      	push	{r4, lr}
 8010b7e:	2104      	movs	r1, #4
 8010b80:	4604      	mov	r4, r0
 8010b82:	f008 ff61 	bl	8019a48 <_ZdlPvj>
 8010b86:	4620      	mov	r0, r4
 8010b88:	bd10      	pop	{r4, pc}

08010b8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8010b8a:	b510      	push	{r4, lr}
 8010b8c:	2104      	movs	r1, #4
 8010b8e:	4604      	mov	r4, r0
 8010b90:	f008 ff5a 	bl	8019a48 <_ZdlPvj>
 8010b94:	4620      	mov	r0, r4
 8010b96:	bd10      	pop	{r4, pc}

08010b98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8010b98:	b510      	push	{r4, lr}
 8010b9a:	2104      	movs	r1, #4
 8010b9c:	4604      	mov	r4, r0
 8010b9e:	f008 ff53 	bl	8019a48 <_ZdlPvj>
 8010ba2:	4620      	mov	r0, r4
 8010ba4:	bd10      	pop	{r4, pc}

08010ba6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8010ba6:	b510      	push	{r4, lr}
 8010ba8:	2104      	movs	r1, #4
 8010baa:	4604      	mov	r4, r0
 8010bac:	f008 ff4c 	bl	8019a48 <_ZdlPvj>
 8010bb0:	4620      	mov	r0, r4
 8010bb2:	bd10      	pop	{r4, pc}

08010bb4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8010bb4:	b510      	push	{r4, lr}
 8010bb6:	2104      	movs	r1, #4
 8010bb8:	4604      	mov	r4, r0
 8010bba:	f008 ff45 	bl	8019a48 <_ZdlPvj>
 8010bbe:	4620      	mov	r0, r4
 8010bc0:	bd10      	pop	{r4, pc}

08010bc2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8010bc2:	b510      	push	{r4, lr}
 8010bc4:	2104      	movs	r1, #4
 8010bc6:	4604      	mov	r4, r0
 8010bc8:	f008 ff3e 	bl	8019a48 <_ZdlPvj>
 8010bcc:	4620      	mov	r0, r4
 8010bce:	bd10      	pop	{r4, pc}

08010bd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8010bd0:	b510      	push	{r4, lr}
 8010bd2:	2104      	movs	r1, #4
 8010bd4:	4604      	mov	r4, r0
 8010bd6:	f008 ff37 	bl	8019a48 <_ZdlPvj>
 8010bda:	4620      	mov	r0, r4
 8010bdc:	bd10      	pop	{r4, pc}

08010bde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8010bde:	b510      	push	{r4, lr}
 8010be0:	2104      	movs	r1, #4
 8010be2:	4604      	mov	r4, r0
 8010be4:	f008 ff30 	bl	8019a48 <_ZdlPvj>
 8010be8:	4620      	mov	r0, r4
 8010bea:	bd10      	pop	{r4, pc}

08010bec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8010bec:	b510      	push	{r4, lr}
 8010bee:	2104      	movs	r1, #4
 8010bf0:	4604      	mov	r4, r0
 8010bf2:	f008 ff29 	bl	8019a48 <_ZdlPvj>
 8010bf6:	4620      	mov	r0, r4
 8010bf8:	bd10      	pop	{r4, pc}

08010bfa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8010bfa:	b510      	push	{r4, lr}
 8010bfc:	2104      	movs	r1, #4
 8010bfe:	4604      	mov	r4, r0
 8010c00:	f008 ff22 	bl	8019a48 <_ZdlPvj>
 8010c04:	4620      	mov	r0, r4
 8010c06:	bd10      	pop	{r4, pc}

08010c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8010c08:	b510      	push	{r4, lr}
 8010c0a:	2104      	movs	r1, #4
 8010c0c:	4604      	mov	r4, r0
 8010c0e:	f008 ff1b 	bl	8019a48 <_ZdlPvj>
 8010c12:	4620      	mov	r0, r4
 8010c14:	bd10      	pop	{r4, pc}

08010c16 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8010c16:	b510      	push	{r4, lr}
 8010c18:	2104      	movs	r1, #4
 8010c1a:	4604      	mov	r4, r0
 8010c1c:	f008 ff14 	bl	8019a48 <_ZdlPvj>
 8010c20:	4620      	mov	r0, r4
 8010c22:	bd10      	pop	{r4, pc}

08010c24 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8010c24:	b510      	push	{r4, lr}
 8010c26:	2104      	movs	r1, #4
 8010c28:	4604      	mov	r4, r0
 8010c2a:	f008 ff0d 	bl	8019a48 <_ZdlPvj>
 8010c2e:	4620      	mov	r0, r4
 8010c30:	bd10      	pop	{r4, pc}

08010c32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8010c32:	b510      	push	{r4, lr}
 8010c34:	2104      	movs	r1, #4
 8010c36:	4604      	mov	r4, r0
 8010c38:	f008 ff06 	bl	8019a48 <_ZdlPvj>
 8010c3c:	4620      	mov	r0, r4
 8010c3e:	bd10      	pop	{r4, pc}

08010c40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8010c40:	b510      	push	{r4, lr}
 8010c42:	2104      	movs	r1, #4
 8010c44:	4604      	mov	r4, r0
 8010c46:	f008 feff 	bl	8019a48 <_ZdlPvj>
 8010c4a:	4620      	mov	r0, r4
 8010c4c:	bd10      	pop	{r4, pc}

08010c4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8010c4e:	b510      	push	{r4, lr}
 8010c50:	2104      	movs	r1, #4
 8010c52:	4604      	mov	r4, r0
 8010c54:	f008 fef8 	bl	8019a48 <_ZdlPvj>
 8010c58:	4620      	mov	r0, r4
 8010c5a:	bd10      	pop	{r4, pc}

08010c5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8010c5c:	b510      	push	{r4, lr}
 8010c5e:	2104      	movs	r1, #4
 8010c60:	4604      	mov	r4, r0
 8010c62:	f008 fef1 	bl	8019a48 <_ZdlPvj>
 8010c66:	4620      	mov	r0, r4
 8010c68:	bd10      	pop	{r4, pc}

08010c6a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8010c6a:	b510      	push	{r4, lr}
 8010c6c:	2104      	movs	r1, #4
 8010c6e:	4604      	mov	r4, r0
 8010c70:	f008 feea 	bl	8019a48 <_ZdlPvj>
 8010c74:	4620      	mov	r0, r4
 8010c76:	bd10      	pop	{r4, pc}

08010c78 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8010c78:	b510      	push	{r4, lr}
 8010c7a:	2104      	movs	r1, #4
 8010c7c:	4604      	mov	r4, r0
 8010c7e:	f008 fee3 	bl	8019a48 <_ZdlPvj>
 8010c82:	4620      	mov	r0, r4
 8010c84:	bd10      	pop	{r4, pc}

08010c86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8010c86:	b510      	push	{r4, lr}
 8010c88:	2104      	movs	r1, #4
 8010c8a:	4604      	mov	r4, r0
 8010c8c:	f008 fedc 	bl	8019a48 <_ZdlPvj>
 8010c90:	4620      	mov	r0, r4
 8010c92:	bd10      	pop	{r4, pc}

08010c94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8010c94:	b510      	push	{r4, lr}
 8010c96:	2104      	movs	r1, #4
 8010c98:	4604      	mov	r4, r0
 8010c9a:	f008 fed5 	bl	8019a48 <_ZdlPvj>
 8010c9e:	4620      	mov	r0, r4
 8010ca0:	bd10      	pop	{r4, pc}

08010ca2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8010ca2:	b510      	push	{r4, lr}
 8010ca4:	2104      	movs	r1, #4
 8010ca6:	4604      	mov	r4, r0
 8010ca8:	f008 fece 	bl	8019a48 <_ZdlPvj>
 8010cac:	4620      	mov	r0, r4
 8010cae:	bd10      	pop	{r4, pc}

08010cb0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8010cb0:	b510      	push	{r4, lr}
 8010cb2:	2104      	movs	r1, #4
 8010cb4:	4604      	mov	r4, r0
 8010cb6:	f008 fec7 	bl	8019a48 <_ZdlPvj>
 8010cba:	4620      	mov	r0, r4
 8010cbc:	bd10      	pop	{r4, pc}
	...

08010cc0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8010cc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cc4:	460e      	mov	r6, r1
 8010cc6:	b08b      	sub	sp, #44	; 0x2c
 8010cc8:	4615      	mov	r5, r2
 8010cca:	461c      	mov	r4, r3
 8010ccc:	b323      	cbz	r3, 8010d18 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8010cce:	4608      	mov	r0, r1
 8010cd0:	f7f8 fac1 	bl	8009256 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010cd4:	bb00      	cbnz	r0, 8010d18 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8010cd6:	6830      	ldr	r0, [r6, #0]
 8010cd8:	6871      	ldr	r1, [r6, #4]
 8010cda:	4e55      	ldr	r6, [pc, #340]	; (8010e30 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8010cdc:	ab08      	add	r3, sp, #32
 8010cde:	c303      	stmia	r3!, {r0, r1}
 8010ce0:	a808      	add	r0, sp, #32
 8010ce2:	f7fa fd1d 	bl	800b720 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010ce6:	6830      	ldr	r0, [r6, #0]
 8010ce8:	6803      	ldr	r3, [r0, #0]
 8010cea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010cec:	4798      	blx	r3
 8010cee:	2cff      	cmp	r4, #255	; 0xff
 8010cf0:	d015      	beq.n	8010d1e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5e>
 8010cf2:	f010 0f08 	tst.w	r0, #8
 8010cf6:	d015      	beq.n	8010d24 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x64>
 8010cf8:	6830      	ldr	r0, [r6, #0]
 8010cfa:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8010cfe:	6801      	ldr	r1, [r0, #0]
 8010d00:	9402      	str	r4, [sp, #8]
 8010d02:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 8010d06:	9401      	str	r4, [sp, #4]
 8010d08:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8010d0c:	9400      	str	r4, [sp, #0]
 8010d0e:	6c8c      	ldr	r4, [r1, #72]	; 0x48
 8010d10:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8010d14:	4629      	mov	r1, r5
 8010d16:	47a0      	blx	r4
 8010d18:	b00b      	add	sp, #44	; 0x2c
 8010d1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d1e:	f010 0f02 	tst.w	r0, #2
 8010d22:	e7e8      	b.n	8010cf6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8010d24:	6830      	ldr	r0, [r6, #0]
 8010d26:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8010d2a:	6803      	ldr	r3, [r0, #0]
 8010d2c:	f9bd 9026 	ldrsh.w	r9, [sp, #38]	; 0x26
 8010d30:	6a1b      	ldr	r3, [r3, #32]
 8010d32:	4798      	blx	r3
 8010d34:	4a3f      	ldr	r2, [pc, #252]	; (8010e34 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x174>)
 8010d36:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8010d3a:	8816      	ldrh	r6, [r2, #0]
 8010d3c:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8010d40:	2cff      	cmp	r4, #255	; 0xff
 8010d42:	fb06 1303 	mla	r3, r6, r3, r1
 8010d46:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010d4a:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 8010d4e:	4616      	mov	r6, r2
 8010d50:	ea28 71e8 	bic.w	r1, r8, r8, asr #31
 8010d54:	d10a      	bne.n	8010d6c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xac>
 8010d56:	0049      	lsls	r1, r1, #1
 8010d58:	2200      	movs	r2, #0
 8010d5a:	454a      	cmp	r2, r9
 8010d5c:	da61      	bge.n	8010e22 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x162>
 8010d5e:	2300      	movs	r3, #0
 8010d60:	4543      	cmp	r3, r8
 8010d62:	da57      	bge.n	8010e14 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x154>
 8010d64:	f820 5013 	strh.w	r5, [r0, r3, lsl #1]
 8010d68:	3301      	adds	r3, #1
 8010d6a:	e7f9      	b.n	8010d60 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>
 8010d6c:	0a2b      	lsrs	r3, r5, #8
 8010d6e:	f1c4 07ff 	rsb	r7, r4, #255	; 0xff
 8010d72:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8010d76:	b2a4      	uxth	r4, r4
 8010d78:	4363      	muls	r3, r4
 8010d7a:	9305      	str	r3, [sp, #20]
 8010d7c:	08ee      	lsrs	r6, r5, #3
 8010d7e:	00eb      	lsls	r3, r5, #3
 8010d80:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010d84:	b2db      	uxtb	r3, r3
 8010d86:	0049      	lsls	r1, r1, #1
 8010d88:	4366      	muls	r6, r4
 8010d8a:	4363      	muls	r3, r4
 8010d8c:	9106      	str	r1, [sp, #24]
 8010d8e:	f04f 0c00 	mov.w	ip, #0
 8010d92:	b2bf      	uxth	r7, r7
 8010d94:	9207      	str	r2, [sp, #28]
 8010d96:	45cc      	cmp	ip, r9
 8010d98:	da43      	bge.n	8010e22 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x162>
 8010d9a:	4682      	mov	sl, r0
 8010d9c:	f04f 0e00 	mov.w	lr, #0
 8010da0:	45c6      	cmp	lr, r8
 8010da2:	da2d      	bge.n	8010e00 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x140>
 8010da4:	f8ba 2000 	ldrh.w	r2, [sl]
 8010da8:	9905      	ldr	r1, [sp, #20]
 8010daa:	1214      	asrs	r4, r2, #8
 8010dac:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8010db0:	fb14 f407 	smulbb	r4, r4, r7
 8010db4:	440c      	add	r4, r1
 8010db6:	10d1      	asrs	r1, r2, #3
 8010db8:	00d2      	lsls	r2, r2, #3
 8010dba:	b2d2      	uxtb	r2, r2
 8010dbc:	fb12 f207 	smulbb	r2, r2, r7
 8010dc0:	b2a4      	uxth	r4, r4
 8010dc2:	441a      	add	r2, r3
 8010dc4:	b292      	uxth	r2, r2
 8010dc6:	1c65      	adds	r5, r4, #1
 8010dc8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8010dcc:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8010dd0:	fb11 f107 	smulbb	r1, r1, r7
 8010dd4:	1c55      	adds	r5, r2, #1
 8010dd6:	4431      	add	r1, r6
 8010dd8:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 8010ddc:	b289      	uxth	r1, r1
 8010dde:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8010de2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8010de6:	4314      	orrs	r4, r2
 8010de8:	1c4a      	adds	r2, r1, #1
 8010dea:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8010dee:	0949      	lsrs	r1, r1, #5
 8010df0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8010df4:	430c      	orrs	r4, r1
 8010df6:	f82a 4b02 	strh.w	r4, [sl], #2
 8010dfa:	f10e 0e01 	add.w	lr, lr, #1
 8010dfe:	e7cf      	b.n	8010da0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xe0>
 8010e00:	9a07      	ldr	r2, [sp, #28]
 8010e02:	9906      	ldr	r1, [sp, #24]
 8010e04:	8812      	ldrh	r2, [r2, #0]
 8010e06:	ebcb 0242 	rsb	r2, fp, r2, lsl #1
 8010e0a:	440a      	add	r2, r1
 8010e0c:	4410      	add	r0, r2
 8010e0e:	f10c 0c01 	add.w	ip, ip, #1
 8010e12:	e7c0      	b.n	8010d96 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd6>
 8010e14:	8833      	ldrh	r3, [r6, #0]
 8010e16:	ebcb 0343 	rsb	r3, fp, r3, lsl #1
 8010e1a:	440b      	add	r3, r1
 8010e1c:	4418      	add	r0, r3
 8010e1e:	3201      	adds	r2, #1
 8010e20:	e79b      	b.n	8010d5a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9a>
 8010e22:	4b03      	ldr	r3, [pc, #12]	; (8010e30 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8010e24:	6818      	ldr	r0, [r3, #0]
 8010e26:	6803      	ldr	r3, [r0, #0]
 8010e28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010e2a:	4798      	blx	r3
 8010e2c:	e774      	b.n	8010d18 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8010e2e:	bf00      	nop
 8010e30:	2001217c 	.word	0x2001217c
 8010e34:	20012176 	.word	0x20012176

08010e38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8010e38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e3c:	4d9b      	ldr	r5, [pc, #620]	; (80110ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 8010e3e:	4690      	mov	r8, r2
 8010e40:	682a      	ldr	r2, [r5, #0]
 8010e42:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8010e46:	2a02      	cmp	r2, #2
 8010e48:	b08f      	sub	sp, #60	; 0x3c
 8010e4a:	4604      	mov	r4, r0
 8010e4c:	4689      	mov	r9, r1
 8010e4e:	d106      	bne.n	8010e5e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8010e50:	4b97      	ldr	r3, [pc, #604]	; (80110b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8010e52:	4a98      	ldr	r2, [pc, #608]	; (80110b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8010e54:	f240 21be 	movw	r1, #702	; 0x2be
 8010e58:	4897      	ldr	r0, [pc, #604]	; (80110b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8010e5a:	f008 fe21 	bl	8019aa0 <__assert_func>
 8010e5e:	ae0e      	add	r6, sp, #56	; 0x38
 8010e60:	f826 3d24 	strh.w	r3, [r6, #-36]!
 8010e64:	4630      	mov	r0, r6
 8010e66:	f7fd fad9 	bl	800e41c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010e6a:	6823      	ldr	r3, [r4, #0]
 8010e6c:	4607      	mov	r7, r0
 8010e6e:	6a1b      	ldr	r3, [r3, #32]
 8010e70:	4620      	mov	r0, r4
 8010e72:	4798      	blx	r3
 8010e74:	4287      	cmp	r7, r0
 8010e76:	d004      	beq.n	8010e82 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8010e78:	4b90      	ldr	r3, [pc, #576]	; (80110bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8010e7a:	4a8e      	ldr	r2, [pc, #568]	; (80110b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8010e7c:	f44f 7130 	mov.w	r1, #704	; 0x2c0
 8010e80:	e7ea      	b.n	8010e58 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8010e82:	4630      	mov	r0, r6
 8010e84:	f7fd fa46 	bl	800e314 <_ZNK8touchgfx6Bitmap7getDataEv>
 8010e88:	4607      	mov	r7, r0
 8010e8a:	b920      	cbnz	r0, 8010e96 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8010e8c:	4b8c      	ldr	r3, [pc, #560]	; (80110c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x288>)
 8010e8e:	4a89      	ldr	r2, [pc, #548]	; (80110b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8010e90:	f240 21c2 	movw	r1, #706	; 0x2c2
 8010e94:	e7e0      	b.n	8010e58 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8010e96:	f8d8 0000 	ldr.w	r0, [r8]
 8010e9a:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8010e9e:	f9b8 a000 	ldrsh.w	sl, [r8]
 8010ea2:	ab06      	add	r3, sp, #24
 8010ea4:	c303      	stmia	r3!, {r0, r1}
 8010ea6:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8010eaa:	f8d9 0000 	ldr.w	r0, [r9]
 8010eae:	f9b8 9002 	ldrsh.w	r9, [r8, #2]
 8010eb2:	ab08      	add	r3, sp, #32
 8010eb4:	c303      	stmia	r3!, {r0, r1}
 8010eb6:	4630      	mov	r0, r6
 8010eb8:	f7fd f924 	bl	800e104 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010ebc:	4680      	mov	r8, r0
 8010ebe:	4630      	mov	r0, r6
 8010ec0:	f7fd f95a 	bl	800e178 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010ec4:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8010ec8:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8010ecc:	f10d 0920 	add.w	r9, sp, #32
 8010ed0:	a806      	add	r0, sp, #24
 8010ed2:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8010ed6:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 8010eda:	f7fa fc21 	bl	800b720 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010ede:	4648      	mov	r0, r9
 8010ee0:	f7fa fc1e 	bl	800b720 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010ee4:	a80a      	add	r0, sp, #40	; 0x28
 8010ee6:	f7fa fc1b 	bl	800b720 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010eea:	4e76      	ldr	r6, [pc, #472]	; (80110c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x28c>)
 8010eec:	4b76      	ldr	r3, [pc, #472]	; (80110c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8010eee:	f9b6 2000 	ldrsh.w	r2, [r6]
 8010ef2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010ef6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8010efa:	2100      	movs	r1, #0
 8010efc:	910c      	str	r1, [sp, #48]	; 0x30
 8010efe:	4648      	mov	r0, r9
 8010f00:	a90c      	add	r1, sp, #48	; 0x30
 8010f02:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8010f06:	f7f8 f963 	bl	80091d0 <_ZN8touchgfx4RectaNERKS0_>
 8010f0a:	4648      	mov	r0, r9
 8010f0c:	f7f8 f9a3 	bl	8009256 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010f10:	2800      	cmp	r0, #0
 8010f12:	f040 80bd 	bne.w	8011090 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8010f16:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 8010f1a:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8010f1e:	4288      	cmp	r0, r1
 8010f20:	db37      	blt.n	8010f92 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8010f22:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 8010f26:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8010f2a:	429a      	cmp	r2, r3
 8010f2c:	db31      	blt.n	8010f92 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8010f2e:	f8bd c024 	ldrh.w	ip, [sp, #36]	; 0x24
 8010f32:	4460      	add	r0, ip
 8010f34:	f8bd c01c 	ldrh.w	ip, [sp, #28]
 8010f38:	4461      	add	r1, ip
 8010f3a:	b200      	sxth	r0, r0
 8010f3c:	b209      	sxth	r1, r1
 8010f3e:	4288      	cmp	r0, r1
 8010f40:	dc27      	bgt.n	8010f92 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8010f42:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 8010f46:	440a      	add	r2, r1
 8010f48:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8010f4c:	440b      	add	r3, r1
 8010f4e:	b212      	sxth	r2, r2
 8010f50:	b21b      	sxth	r3, r3
 8010f52:	429a      	cmp	r2, r3
 8010f54:	dc1d      	bgt.n	8010f92 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8010f56:	6823      	ldr	r3, [r4, #0]
 8010f58:	4620      	mov	r0, r4
 8010f5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010f5c:	4798      	blx	r3
 8010f5e:	4682      	mov	sl, r0
 8010f60:	6828      	ldr	r0, [r5, #0]
 8010f62:	6803      	ldr	r3, [r0, #0]
 8010f64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010f66:	4798      	blx	r3
 8010f68:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8010f6c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8010f70:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8010f74:	1a9b      	subs	r3, r3, r2
 8010f76:	b29b      	uxth	r3, r3
 8010f78:	b21c      	sxth	r4, r3
 8010f7a:	2c00      	cmp	r4, #0
 8010f7c:	dc0e      	bgt.n	8010f9c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x164>
 8010f7e:	bf1f      	itttt	ne
 8010f80:	f8ad 2020 	strhne.w	r2, [sp, #32]
 8010f84:	f8bd 2024 	ldrhne.w	r2, [sp, #36]	; 0x24
 8010f88:	189b      	addne	r3, r3, r2
 8010f8a:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 8010f8e:	463c      	mov	r4, r7
 8010f90:	e00a      	b.n	8010fa8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x170>
 8010f92:	4b4e      	ldr	r3, [pc, #312]	; (80110cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x294>)
 8010f94:	4a47      	ldr	r2, [pc, #284]	; (80110b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8010f96:	f44f 7134 	mov.w	r1, #720	; 0x2d0
 8010f9a:	e75d      	b.n	8010e58 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8010f9c:	ebab 0303 	sub.w	r3, fp, r3
 8010fa0:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 8010fa4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8010fa8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8010fac:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8010fb0:	1a5b      	subs	r3, r3, r1
 8010fb2:	b29b      	uxth	r3, r3
 8010fb4:	b21a      	sxth	r2, r3
 8010fb6:	2a00      	cmp	r2, #0
 8010fb8:	dd4a      	ble.n	8011050 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x218>
 8010fba:	fb02 f20b 	mul.w	r2, r2, fp
 8010fbe:	eb04 0442 	add.w	r4, r4, r2, lsl #1
 8010fc2:	f8bd 202e 	ldrh.w	r2, [sp, #46]	; 0x2e
 8010fc6:	1ad3      	subs	r3, r2, r3
 8010fc8:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8010fcc:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8010fd0:	2b00      	cmp	r3, #0
 8010fd2:	dd5d      	ble.n	8011090 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8010fd4:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8010fd8:	f1bc 0f00 	cmp.w	ip, #0
 8010fdc:	dd58      	ble.n	8011090 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8010fde:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 8010fe2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8010fe6:	fb0a f801 	mul.w	r8, sl, r1
 8010fea:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8010fee:	4480      	add	r8, r0
 8010ff0:	8830      	ldrh	r0, [r6, #0]
 8010ff2:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 8010ff6:	42b3      	cmp	r3, r6
 8010ff8:	bfa8      	it	ge
 8010ffa:	4633      	movge	r3, r6
 8010ffc:	1a82      	subs	r2, r0, r2
 8010ffe:	4293      	cmp	r3, r2
 8011000:	bfa8      	it	ge
 8011002:	4613      	movge	r3, r2
 8011004:	4a30      	ldr	r2, [pc, #192]	; (80110c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8011006:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 801100a:	8812      	ldrh	r2, [r2, #0]
 801100c:	4566      	cmp	r6, ip
 801100e:	eba2 0101 	sub.w	r1, r2, r1
 8011012:	bfa8      	it	ge
 8011014:	4666      	movge	r6, ip
 8011016:	428e      	cmp	r6, r1
 8011018:	4632      	mov	r2, r6
 801101a:	bfa8      	it	ge
 801101c:	460a      	movge	r2, r1
 801101e:	4298      	cmp	r0, r3
 8011020:	9202      	str	r2, [sp, #8]
 8011022:	d01e      	beq.n	8011062 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22a>
 8011024:	005b      	lsls	r3, r3, #1
 8011026:	9303      	str	r3, [sp, #12]
 8011028:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 801102c:	f04f 0900 	mov.w	r9, #0
 8011030:	9b02      	ldr	r3, [sp, #8]
 8011032:	454b      	cmp	r3, r9
 8011034:	dd2c      	ble.n	8011090 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8011036:	6828      	ldr	r0, [r5, #0]
 8011038:	6803      	ldr	r3, [r0, #0]
 801103a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801103c:	4642      	mov	r2, r8
 801103e:	461e      	mov	r6, r3
 8011040:	4621      	mov	r1, r4
 8011042:	9b03      	ldr	r3, [sp, #12]
 8011044:	47b0      	blx	r6
 8011046:	44d0      	add	r8, sl
 8011048:	445c      	add	r4, fp
 801104a:	f109 0901 	add.w	r9, r9, #1
 801104e:	e7ef      	b.n	8011030 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f8>
 8011050:	bf1f      	itttt	ne
 8011052:	f8bd 2026 	ldrhne.w	r2, [sp, #38]	; 0x26
 8011056:	f8ad 1022 	strhne.w	r1, [sp, #34]	; 0x22
 801105a:	189b      	addne	r3, r3, r2
 801105c:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 8011060:	e7b4      	b.n	8010fcc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x194>
 8011062:	4558      	cmp	r0, fp
 8011064:	d1de      	bne.n	8011024 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ec>
 8011066:	6828      	ldr	r0, [r5, #0]
 8011068:	6803      	ldr	r3, [r0, #0]
 801106a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801106c:	4798      	blx	r3
 801106e:	07c3      	lsls	r3, r0, #31
 8011070:	d512      	bpl.n	8011098 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 8011072:	6828      	ldr	r0, [r5, #0]
 8011074:	9b02      	ldr	r3, [sp, #8]
 8011076:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 801107a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801107e:	6803      	ldr	r3, [r0, #0]
 8011080:	f8cd b000 	str.w	fp, [sp]
 8011084:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 8011086:	e899 0006 	ldmia.w	r9, {r1, r2}
 801108a:	4623      	mov	r3, r4
 801108c:	47a8      	blx	r5
 801108e:	4607      	mov	r7, r0
 8011090:	4638      	mov	r0, r7
 8011092:	b00f      	add	sp, #60	; 0x3c
 8011094:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011098:	6828      	ldr	r0, [r5, #0]
 801109a:	6803      	ldr	r3, [r0, #0]
 801109c:	6add      	ldr	r5, [r3, #44]	; 0x2c
 801109e:	9b02      	ldr	r3, [sp, #8]
 80110a0:	4642      	mov	r2, r8
 80110a2:	fb03 f30a 	mul.w	r3, r3, sl
 80110a6:	4621      	mov	r1, r4
 80110a8:	47a8      	blx	r5
 80110aa:	e7f1      	b.n	8011090 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 80110ac:	2001217c 	.word	0x2001217c
 80110b0:	0801d50b 	.word	0x0801d50b
 80110b4:	0801dd47 	.word	0x0801dd47
 80110b8:	0801d5bd 	.word	0x0801d5bd
 80110bc:	0801d5ef 	.word	0x0801d5ef
 80110c0:	0801d644 	.word	0x0801d644
 80110c4:	20012176 	.word	0x20012176
 80110c8:	20012178 	.word	0x20012178
 80110cc:	0801d682 	.word	0x0801d682

080110d0 <_ZN8touchgfx8LCD16bppC1Ev>:
 80110d0:	2200      	movs	r2, #0
 80110d2:	4910      	ldr	r1, [pc, #64]	; (8011114 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 80110d4:	6042      	str	r2, [r0, #4]
 80110d6:	6001      	str	r1, [r0, #0]
 80110d8:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80110dc:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80110e0:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80110e4:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80110e8:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80110ec:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80110f0:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80110f4:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80110f8:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80110fc:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8011100:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8011104:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8011108:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801110c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8011110:	4770      	bx	lr
 8011112:	bf00      	nop
 8011114:	0801d9c4 	.word	0x0801d9c4

08011118 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8011118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801111c:	460c      	mov	r4, r1
 801111e:	b08d      	sub	sp, #52	; 0x34
 8011120:	4682      	mov	sl, r0
 8011122:	6808      	ldr	r0, [r1, #0]
 8011124:	6849      	ldr	r1, [r1, #4]
 8011126:	469b      	mov	fp, r3
 8011128:	ab08      	add	r3, sp, #32
 801112a:	c303      	stmia	r3!, {r0, r1}
 801112c:	6810      	ldr	r0, [r2, #0]
 801112e:	6851      	ldr	r1, [r2, #4]
 8011130:	ab0a      	add	r3, sp, #40	; 0x28
 8011132:	c303      	stmia	r3!, {r0, r1}
 8011134:	a808      	add	r0, sp, #32
 8011136:	f7fa faf3 	bl	800b720 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801113a:	4621      	mov	r1, r4
 801113c:	a80a      	add	r0, sp, #40	; 0x28
 801113e:	f7fa fad7 	bl	800b6f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011142:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8011146:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801114a:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801114e:	4c60      	ldr	r4, [pc, #384]	; (80112d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8011150:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8011154:	6820      	ldr	r0, [r4, #0]
 8011156:	f9bd 902e 	ldrsh.w	r9, [sp, #46]	; 0x2e
 801115a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801115e:	eb0a 0a81 	add.w	sl, sl, r1, lsl #2
 8011162:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8011166:	440a      	add	r2, r1
 8011168:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801116c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8011170:	4413      	add	r3, r2
 8011172:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011176:	6803      	ldr	r3, [r0, #0]
 8011178:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801117a:	4798      	blx	r3
 801117c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8011180:	d119      	bne.n	80111b6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8011182:	f010 0f20 	tst.w	r0, #32
 8011186:	6820      	ldr	r0, [r4, #0]
 8011188:	d018      	beq.n	80111bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801118a:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 801118e:	6801      	ldr	r1, [r0, #0]
 8011190:	9402      	str	r4, [sp, #8]
 8011192:	fa1f f489 	uxth.w	r4, r9
 8011196:	9401      	str	r4, [sp, #4]
 8011198:	fa1f f488 	uxth.w	r4, r8
 801119c:	f8cd b00c 	str.w	fp, [sp, #12]
 80111a0:	9400      	str	r4, [sp, #0]
 80111a2:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 80111a4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80111a8:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80111ac:	4651      	mov	r1, sl
 80111ae:	47a0      	blx	r4
 80111b0:	b00d      	add	sp, #52	; 0x34
 80111b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80111b6:	f010 0f40 	tst.w	r0, #64	; 0x40
 80111ba:	e7e4      	b.n	8011186 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80111bc:	6803      	ldr	r3, [r0, #0]
 80111be:	6a1b      	ldr	r3, [r3, #32]
 80111c0:	4798      	blx	r3
 80111c2:	4a44      	ldr	r2, [pc, #272]	; (80112d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1bc>)
 80111c4:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80111c8:	8813      	ldrh	r3, [r2, #0]
 80111ca:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80111ce:	9207      	str	r2, [sp, #28]
 80111d0:	fb04 1303 	mla	r3, r4, r3, r1
 80111d4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80111d8:	ea28 73e8 	bic.w	r3, r8, r8, asr #31
 80111dc:	0099      	lsls	r1, r3, #2
 80111de:	005b      	lsls	r3, r3, #1
 80111e0:	9106      	str	r1, [sp, #24]
 80111e2:	9305      	str	r3, [sp, #20]
 80111e4:	f04f 0c00 	mov.w	ip, #0
 80111e8:	45cc      	cmp	ip, r9
 80111ea:	da6b      	bge.n	80112c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1ac>
 80111ec:	2300      	movs	r3, #0
 80111ee:	4543      	cmp	r3, r8
 80111f0:	da55      	bge.n	801129e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x186>
 80111f2:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
 80111f6:	0e25      	lsrs	r5, r4, #24
 80111f8:	d013      	beq.n	8011222 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 80111fa:	2dff      	cmp	r5, #255	; 0xff
 80111fc:	ea4f 2714 	mov.w	r7, r4, lsr #8
 8011200:	d111      	bne.n	8011226 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8011202:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8011206:	d10e      	bne.n	8011226 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8011208:	0962      	lsrs	r2, r4, #5
 801120a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801120e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011212:	f027 0707 	bic.w	r7, r7, #7
 8011216:	4317      	orrs	r7, r2
 8011218:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801121c:	433c      	orrs	r4, r7
 801121e:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
 8011222:	3301      	adds	r3, #1
 8011224:	e7e3      	b.n	80111ee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd6>
 8011226:	fb0b f505 	mul.w	r5, fp, r5
 801122a:	1c6a      	adds	r2, r5, #1
 801122c:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 8011230:	eb02 2225 	add.w	r2, r2, r5, asr #8
 8011234:	1212      	asrs	r2, r2, #8
 8011236:	fa1f fe82 	uxth.w	lr, r2
 801123a:	120e      	asrs	r6, r1, #8
 801123c:	f3c4 4507 	ubfx	r5, r4, #16, #8
 8011240:	43d2      	mvns	r2, r2
 8011242:	b2d2      	uxtb	r2, r2
 8011244:	fb15 f50e 	smulbb	r5, r5, lr
 8011248:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801124c:	fb06 5602 	mla	r6, r6, r2, r5
 8011250:	b2e4      	uxtb	r4, r4
 8011252:	10cd      	asrs	r5, r1, #3
 8011254:	00c9      	lsls	r1, r1, #3
 8011256:	b2c9      	uxtb	r1, r1
 8011258:	fb14 f40e 	smulbb	r4, r4, lr
 801125c:	fb01 4402 	mla	r4, r1, r2, r4
 8011260:	b2ff      	uxtb	r7, r7
 8011262:	b2b6      	uxth	r6, r6
 8011264:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8011268:	b2a4      	uxth	r4, r4
 801126a:	fb17 f70e 	smulbb	r7, r7, lr
 801126e:	fb05 7702 	mla	r7, r5, r2, r7
 8011272:	1c72      	adds	r2, r6, #1
 8011274:	1c65      	adds	r5, r4, #1
 8011276:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801127a:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 801127e:	b2bf      	uxth	r7, r7
 8011280:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011284:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8011288:	432e      	orrs	r6, r5
 801128a:	1c7d      	adds	r5, r7, #1
 801128c:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8011290:	097f      	lsrs	r7, r7, #5
 8011292:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8011296:	433e      	orrs	r6, r7
 8011298:	f820 6013 	strh.w	r6, [r0, r3, lsl #1]
 801129c:	e7c1      	b.n	8011222 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 801129e:	9b07      	ldr	r3, [sp, #28]
 80112a0:	9a05      	ldr	r2, [sp, #20]
 80112a2:	881b      	ldrh	r3, [r3, #0]
 80112a4:	eba3 0308 	sub.w	r3, r3, r8
 80112a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80112ac:	4418      	add	r0, r3
 80112ae:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80112b2:	9a06      	ldr	r2, [sp, #24]
 80112b4:	eba3 0308 	sub.w	r3, r3, r8
 80112b8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80112bc:	449a      	add	sl, r3
 80112be:	f10c 0c01 	add.w	ip, ip, #1
 80112c2:	e791      	b.n	80111e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd0>
 80112c4:	4b02      	ldr	r3, [pc, #8]	; (80112d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 80112c6:	6818      	ldr	r0, [r3, #0]
 80112c8:	6803      	ldr	r3, [r0, #0]
 80112ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80112cc:	4798      	blx	r3
 80112ce:	e76f      	b.n	80111b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80112d0:	2001217c 	.word	0x2001217c
 80112d4:	20012176 	.word	0x20012176

080112d8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80112d8:	b570      	push	{r4, r5, r6, lr}
 80112da:	9d04      	ldr	r5, [sp, #16]
 80112dc:	f89d 6018 	ldrb.w	r6, [sp, #24]
 80112e0:	460c      	mov	r4, r1
 80112e2:	4619      	mov	r1, r3
 80112e4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80112e8:	2a0c      	cmp	r2, #12
 80112ea:	d820      	bhi.n	801132e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 80112ec:	e8df f002 	tbb	[pc, r2]
 80112f0:	18121807 	.word	0x18121807
 80112f4:	18181818 	.word	0x18181818
 80112f8:	18181818 	.word	0x18181818
 80112fc:	18          	.byte	0x18
 80112fd:	00          	.byte	0x00
 80112fe:	6802      	ldr	r2, [r0, #0]
 8011300:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8011304:	68d6      	ldr	r6, [r2, #12]
 8011306:	462b      	mov	r3, r5
 8011308:	460a      	mov	r2, r1
 801130a:	46b4      	mov	ip, r6
 801130c:	4621      	mov	r1, r4
 801130e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011312:	4760      	bx	ip
 8011314:	462a      	mov	r2, r5
 8011316:	4620      	mov	r0, r4
 8011318:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801131c:	f7ff befc 	b.w	8011118 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8011320:	4b03      	ldr	r3, [pc, #12]	; (8011330 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 8011322:	4a04      	ldr	r2, [pc, #16]	; (8011334 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8011324:	4804      	ldr	r0, [pc, #16]	; (8011338 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8011326:	f240 21b7 	movw	r1, #695	; 0x2b7
 801132a:	f008 fbb9 	bl	8019aa0 <__assert_func>
 801132e:	bd70      	pop	{r4, r5, r6, pc}
 8011330:	0801d6e2 	.word	0x0801d6e2
 8011334:	0801ddcd 	.word	0x0801ddcd
 8011338:	0801d5bd 	.word	0x0801d5bd

0801133c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801133c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011340:	b093      	sub	sp, #76	; 0x4c
 8011342:	880f      	ldrh	r7, [r1, #0]
 8011344:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8011348:	4681      	mov	r9, r0
 801134a:	4688      	mov	r8, r1
 801134c:	4615      	mov	r5, r2
 801134e:	b12f      	cbz	r7, 801135c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 8011350:	4b71      	ldr	r3, [pc, #452]	; (8011518 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8011352:	4a72      	ldr	r2, [pc, #456]	; (801151c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8011354:	4872      	ldr	r0, [pc, #456]	; (8011520 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8011356:	21e8      	movs	r1, #232	; 0xe8
 8011358:	f008 fba2 	bl	8019aa0 <__assert_func>
 801135c:	6810      	ldr	r0, [r2, #0]
 801135e:	6851      	ldr	r1, [r2, #4]
 8011360:	ac0e      	add	r4, sp, #56	; 0x38
 8011362:	c403      	stmia	r4!, {r0, r1}
 8011364:	6818      	ldr	r0, [r3, #0]
 8011366:	6859      	ldr	r1, [r3, #4]
 8011368:	ac10      	add	r4, sp, #64	; 0x40
 801136a:	c403      	stmia	r4!, {r0, r1}
 801136c:	a80e      	add	r0, sp, #56	; 0x38
 801136e:	f7fa f9d7 	bl	800b720 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011372:	4629      	mov	r1, r5
 8011374:	a810      	add	r0, sp, #64	; 0x40
 8011376:	f7fa f9bb 	bl	800b6f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801137a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801137e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8011382:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8011386:	4d67      	ldr	r5, [pc, #412]	; (8011524 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8011388:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801138c:	6828      	ldr	r0, [r5, #0]
 801138e:	4c66      	ldr	r4, [pc, #408]	; (8011528 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ec>)
 8011390:	fb11 2103 	smlabb	r1, r1, r3, r2
 8011394:	4489      	add	r9, r1
 8011396:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801139a:	440a      	add	r2, r1
 801139c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80113a0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80113a4:	4413      	add	r3, r2
 80113a6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80113aa:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 80113ae:	930a      	str	r3, [sp, #40]	; 0x28
 80113b0:	6803      	ldr	r3, [r0, #0]
 80113b2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80113b6:	4798      	blx	r3
 80113b8:	2801      	cmp	r0, #1
 80113ba:	d11d      	bne.n	80113f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbc>
 80113bc:	220b      	movs	r2, #11
 80113be:	9708      	str	r7, [sp, #32]
 80113c0:	9207      	str	r2, [sp, #28]
 80113c2:	8822      	ldrh	r2, [r4, #0]
 80113c4:	f8cd a010 	str.w	sl, [sp, #16]
 80113c8:	e9cd 0205 	strd	r0, r2, [sp, #20]
 80113cc:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80113d0:	9203      	str	r2, [sp, #12]
 80113d2:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80113d6:	9202      	str	r2, [sp, #8]
 80113d8:	fa1f f28b 	uxth.w	r2, fp
 80113dc:	9201      	str	r2, [sp, #4]
 80113de:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80113e2:	9200      	str	r2, [sp, #0]
 80113e4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80113e8:	6828      	ldr	r0, [r5, #0]
 80113ea:	4642      	mov	r2, r8
 80113ec:	4649      	mov	r1, r9
 80113ee:	f7f8 fb2d 	bl	8009a4c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80113f2:	b013      	add	sp, #76	; 0x4c
 80113f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80113f8:	6828      	ldr	r0, [r5, #0]
 80113fa:	6803      	ldr	r3, [r0, #0]
 80113fc:	6a1b      	ldr	r3, [r3, #32]
 80113fe:	4798      	blx	r3
 8011400:	8823      	ldrh	r3, [r4, #0]
 8011402:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8011406:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801140a:	fb01 2303 	mla	r3, r1, r3, r2
 801140e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011412:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
 8011416:	930b      	str	r3, [sp, #44]	; 0x2c
 8011418:	005b      	lsls	r3, r3, #1
 801141a:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 801141e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011420:	429f      	cmp	r7, r3
 8011422:	da72      	bge.n	801150a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ce>
 8011424:	2100      	movs	r1, #0
 8011426:	4559      	cmp	r1, fp
 8011428:	da5e      	bge.n	80114e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801142a:	f819 3001 	ldrb.w	r3, [r9, r1]
 801142e:	2204      	movs	r2, #4
 8011430:	fb12 2303 	smlabb	r3, r2, r3, r2
 8011434:	f858 2003 	ldr.w	r2, [r8, r3]
 8011438:	0e15      	lsrs	r5, r2, #24
 801143a:	d013      	beq.n	8011464 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801143c:	2dff      	cmp	r5, #255	; 0xff
 801143e:	ea4f 2412 	mov.w	r4, r2, lsr #8
 8011442:	d111      	bne.n	8011468 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8011444:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8011448:	d10e      	bne.n	8011468 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801144a:	0953      	lsrs	r3, r2, #5
 801144c:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8011450:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8011454:	f024 0407 	bic.w	r4, r4, #7
 8011458:	431c      	orrs	r4, r3
 801145a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801145e:	4314      	orrs	r4, r2
 8011460:	f820 4011 	strh.w	r4, [r0, r1, lsl #1]
 8011464:	3101      	adds	r1, #1
 8011466:	e7de      	b.n	8011426 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xea>
 8011468:	fb0a f505 	mul.w	r5, sl, r5
 801146c:	1c6b      	adds	r3, r5, #1
 801146e:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8011472:	eb03 2325 	add.w	r3, r3, r5, asr #8
 8011476:	121b      	asrs	r3, r3, #8
 8011478:	fa1f fe83 	uxth.w	lr, r3
 801147c:	ea4f 262c 	mov.w	r6, ip, asr #8
 8011480:	f3c2 4507 	ubfx	r5, r2, #16, #8
 8011484:	43db      	mvns	r3, r3
 8011486:	b2db      	uxtb	r3, r3
 8011488:	fb15 f50e 	smulbb	r5, r5, lr
 801148c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011490:	fb06 5603 	mla	r6, r6, r3, r5
 8011494:	b2d2      	uxtb	r2, r2
 8011496:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801149a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801149e:	fa5f fc8c 	uxtb.w	ip, ip
 80114a2:	fb12 f20e 	smulbb	r2, r2, lr
 80114a6:	fb0c 2203 	mla	r2, ip, r3, r2
 80114aa:	b2e4      	uxtb	r4, r4
 80114ac:	b2b6      	uxth	r6, r6
 80114ae:	fb14 f40e 	smulbb	r4, r4, lr
 80114b2:	b292      	uxth	r2, r2
 80114b4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80114b8:	fb05 4503 	mla	r5, r5, r3, r4
 80114bc:	1c73      	adds	r3, r6, #1
 80114be:	1c54      	adds	r4, r2, #1
 80114c0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80114c4:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 80114c8:	b2ad      	uxth	r5, r5
 80114ca:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80114ce:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80114d2:	4326      	orrs	r6, r4
 80114d4:	1c6c      	adds	r4, r5, #1
 80114d6:	eb04 2415 	add.w	r4, r4, r5, lsr #8
 80114da:	0964      	lsrs	r4, r4, #5
 80114dc:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80114e0:	4326      	orrs	r6, r4
 80114e2:	f820 6011 	strh.w	r6, [r0, r1, lsl #1]
 80114e6:	e7bd      	b.n	8011464 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80114e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80114ea:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80114ec:	881b      	ldrh	r3, [r3, #0]
 80114ee:	eba3 030b 	sub.w	r3, r3, fp
 80114f2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80114f6:	4418      	add	r0, r3
 80114f8:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80114fc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80114fe:	eba3 030b 	sub.w	r3, r3, fp
 8011502:	4413      	add	r3, r2
 8011504:	4499      	add	r9, r3
 8011506:	3701      	adds	r7, #1
 8011508:	e789      	b.n	801141e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801150a:	4b06      	ldr	r3, [pc, #24]	; (8011524 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 801150c:	6818      	ldr	r0, [r3, #0]
 801150e:	6803      	ldr	r3, [r0, #0]
 8011510:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011512:	4798      	blx	r3
 8011514:	e76d      	b.n	80113f2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb6>
 8011516:	bf00      	nop
 8011518:	0801d4bb 	.word	0x0801d4bb
 801151c:	0801db9e 	.word	0x0801db9e
 8011520:	0801d5bd 	.word	0x0801d5bd
 8011524:	2001217c 	.word	0x2001217c
 8011528:	20012176 	.word	0x20012176

0801152c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801152c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011530:	4614      	mov	r4, r2
 8011532:	880a      	ldrh	r2, [r1, #0]
 8011534:	b093      	sub	sp, #76	; 0x4c
 8011536:	2a02      	cmp	r2, #2
 8011538:	4606      	mov	r6, r0
 801153a:	4689      	mov	r9, r1
 801153c:	f89d 7070 	ldrb.w	r7, [sp, #112]	; 0x70
 8011540:	d006      	beq.n	8011550 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8011542:	4b7a      	ldr	r3, [pc, #488]	; (801172c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 8011544:	4a7a      	ldr	r2, [pc, #488]	; (8011730 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8011546:	487b      	ldr	r0, [pc, #492]	; (8011734 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x208>)
 8011548:	f44f 71a1 	mov.w	r1, #322	; 0x142
 801154c:	f008 faa8 	bl	8019aa0 <__assert_func>
 8011550:	2f00      	cmp	r7, #0
 8011552:	d04b      	beq.n	80115ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8011554:	6820      	ldr	r0, [r4, #0]
 8011556:	6861      	ldr	r1, [r4, #4]
 8011558:	f8df a1e0 	ldr.w	sl, [pc, #480]	; 801173c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>
 801155c:	ad0e      	add	r5, sp, #56	; 0x38
 801155e:	c503      	stmia	r5!, {r0, r1}
 8011560:	6818      	ldr	r0, [r3, #0]
 8011562:	6859      	ldr	r1, [r3, #4]
 8011564:	ad10      	add	r5, sp, #64	; 0x40
 8011566:	c503      	stmia	r5!, {r0, r1}
 8011568:	a80e      	add	r0, sp, #56	; 0x38
 801156a:	f7fa f8d9 	bl	800b720 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801156e:	4621      	mov	r1, r4
 8011570:	a810      	add	r0, sp, #64	; 0x40
 8011572:	f7fa f8bd 	bl	800b6f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011576:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801157a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801157e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8011582:	f8da 0000 	ldr.w	r0, [sl]
 8011586:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	; 0x44
 801158a:	f9bd 8046 	ldrsh.w	r8, [sp, #70]	; 0x46
 801158e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8011592:	1874      	adds	r4, r6, r1
 8011594:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8011598:	4e67      	ldr	r6, [pc, #412]	; (8011738 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x20c>)
 801159a:	440a      	add	r2, r1
 801159c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80115a0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80115a4:	4413      	add	r3, r2
 80115a6:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80115aa:	6803      	ldr	r3, [r0, #0]
 80115ac:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80115b0:	4798      	blx	r3
 80115b2:	2801      	cmp	r0, #1
 80115b4:	d11d      	bne.n	80115f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 80115b6:	2200      	movs	r2, #0
 80115b8:	210b      	movs	r1, #11
 80115ba:	e9cd 1207 	strd	r1, r2, [sp, #28]
 80115be:	8831      	ldrh	r1, [r6, #0]
 80115c0:	9704      	str	r7, [sp, #16]
 80115c2:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80115c6:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80115ca:	9203      	str	r2, [sp, #12]
 80115cc:	fa1f f288 	uxth.w	r2, r8
 80115d0:	9202      	str	r2, [sp, #8]
 80115d2:	b2ad      	uxth	r5, r5
 80115d4:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80115d8:	9200      	str	r2, [sp, #0]
 80115da:	9501      	str	r5, [sp, #4]
 80115dc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80115e0:	f8da 0000 	ldr.w	r0, [sl]
 80115e4:	464a      	mov	r2, r9
 80115e6:	4621      	mov	r1, r4
 80115e8:	f7f8 fa30 	bl	8009a4c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80115ec:	b013      	add	sp, #76	; 0x4c
 80115ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80115f2:	f8da 0000 	ldr.w	r0, [sl]
 80115f6:	6803      	ldr	r3, [r0, #0]
 80115f8:	6a1b      	ldr	r3, [r3, #32]
 80115fa:	4798      	blx	r3
 80115fc:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8011600:	8833      	ldrh	r3, [r6, #0]
 8011602:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8011606:	fb01 2303 	mla	r3, r1, r3, r2
 801160a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801160e:	2fff      	cmp	r7, #255	; 0xff
 8011610:	f109 0304 	add.w	r3, r9, #4
 8011614:	930a      	str	r3, [sp, #40]	; 0x28
 8011616:	ea25 72e5 	bic.w	r2, r5, r5, asr #31
 801161a:	d111      	bne.n	8011640 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x114>
 801161c:	b212      	sxth	r2, r2
 801161e:	ea4f 0e42 	mov.w	lr, r2, lsl #1
 8011622:	2100      	movs	r1, #0
 8011624:	4541      	cmp	r1, r8
 8011626:	da7a      	bge.n	801171e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8011628:	2300      	movs	r3, #0
 801162a:	42ab      	cmp	r3, r5
 801162c:	da6b      	bge.n	8011706 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1da>
 801162e:	f814 c003 	ldrb.w	ip, [r4, r3]
 8011632:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8011634:	f837 c01c 	ldrh.w	ip, [r7, ip, lsl #1]
 8011638:	f820 c013 	strh.w	ip, [r0, r3, lsl #1]
 801163c:	3301      	adds	r3, #1
 801163e:	e7f4      	b.n	801162a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xfe>
 8011640:	b213      	sxth	r3, r2
 8011642:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8011646:	930b      	str	r3, [sp, #44]	; 0x2c
 8011648:	005b      	lsls	r3, r3, #1
 801164a:	930c      	str	r3, [sp, #48]	; 0x30
 801164c:	f04f 0900 	mov.w	r9, #0
 8011650:	b2ba      	uxth	r2, r7
 8011652:	fa1f fc8c 	uxth.w	ip, ip
 8011656:	960d      	str	r6, [sp, #52]	; 0x34
 8011658:	45c1      	cmp	r9, r8
 801165a:	da60      	bge.n	801171e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 801165c:	46a3      	mov	fp, r4
 801165e:	4682      	mov	sl, r0
 8011660:	ebab 0304 	sub.w	r3, fp, r4
 8011664:	429d      	cmp	r5, r3
 8011666:	dd3e      	ble.n	80116e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ba>
 8011668:	f81b 3b01 	ldrb.w	r3, [fp], #1
 801166c:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 801166e:	f8ba 1000 	ldrh.w	r1, [sl]
 8011672:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8011676:	120e      	asrs	r6, r1, #8
 8011678:	121f      	asrs	r7, r3, #8
 801167a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801167e:	fb16 f60c 	smulbb	r6, r6, ip
 8011682:	ea4f 0ee1 	mov.w	lr, r1, asr #3
 8011686:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801168a:	00c9      	lsls	r1, r1, #3
 801168c:	fb07 6702 	mla	r7, r7, r2, r6
 8011690:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8011694:	10de      	asrs	r6, r3, #3
 8011696:	b2c9      	uxtb	r1, r1
 8011698:	00db      	lsls	r3, r3, #3
 801169a:	fb1e fe0c 	smulbb	lr, lr, ip
 801169e:	fb11 f10c 	smulbb	r1, r1, ip
 80116a2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80116a6:	b2db      	uxtb	r3, r3
 80116a8:	b2bf      	uxth	r7, r7
 80116aa:	fb06 e602 	mla	r6, r6, r2, lr
 80116ae:	fb03 1302 	mla	r3, r3, r2, r1
 80116b2:	b2b6      	uxth	r6, r6
 80116b4:	b29b      	uxth	r3, r3
 80116b6:	1c79      	adds	r1, r7, #1
 80116b8:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80116bc:	f106 0e01 	add.w	lr, r6, #1
 80116c0:	1c59      	adds	r1, r3, #1
 80116c2:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80116c6:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 80116ca:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80116ce:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80116d2:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80116d6:	430f      	orrs	r7, r1
 80116d8:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80116dc:	ea47 070e 	orr.w	r7, r7, lr
 80116e0:	f82a 7b02 	strh.w	r7, [sl], #2
 80116e4:	e7bc      	b.n	8011660 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x134>
 80116e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80116e8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80116ea:	881b      	ldrh	r3, [r3, #0]
 80116ec:	1b5b      	subs	r3, r3, r5
 80116ee:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80116f2:	4418      	add	r0, r3
 80116f4:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80116f8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80116fa:	1b5b      	subs	r3, r3, r5
 80116fc:	440b      	add	r3, r1
 80116fe:	441c      	add	r4, r3
 8011700:	f109 0901 	add.w	r9, r9, #1
 8011704:	e7a8      	b.n	8011658 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x12c>
 8011706:	8833      	ldrh	r3, [r6, #0]
 8011708:	1b5b      	subs	r3, r3, r5
 801170a:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 801170e:	4418      	add	r0, r3
 8011710:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8011714:	1b5b      	subs	r3, r3, r5
 8011716:	4413      	add	r3, r2
 8011718:	441c      	add	r4, r3
 801171a:	3101      	adds	r1, #1
 801171c:	e782      	b.n	8011624 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xf8>
 801171e:	4b07      	ldr	r3, [pc, #28]	; (801173c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>)
 8011720:	6818      	ldr	r0, [r3, #0]
 8011722:	6803      	ldr	r3, [r0, #0]
 8011724:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011726:	4798      	blx	r3
 8011728:	e760      	b.n	80115ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 801172a:	bf00      	nop
 801172c:	0801d379 	.word	0x0801d379
 8011730:	0801da08 	.word	0x0801da08
 8011734:	0801d5bd 	.word	0x0801d5bd
 8011738:	20012176 	.word	0x20012176
 801173c:	2001217c 	.word	0x2001217c

08011740 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8011740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011744:	4616      	mov	r6, r2
 8011746:	880a      	ldrh	r2, [r1, #0]
 8011748:	b093      	sub	sp, #76	; 0x4c
 801174a:	2a01      	cmp	r2, #1
 801174c:	4681      	mov	r9, r0
 801174e:	4688      	mov	r8, r1
 8011750:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8011754:	d006      	beq.n	8011764 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 8011756:	4b6c      	ldr	r3, [pc, #432]	; (8011908 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8011758:	4a6c      	ldr	r2, [pc, #432]	; (801190c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>)
 801175a:	486d      	ldr	r0, [pc, #436]	; (8011910 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>)
 801175c:	f240 119d 	movw	r1, #413	; 0x19d
 8011760:	f008 f99e 	bl	8019aa0 <__assert_func>
 8011764:	f1ba 0f00 	cmp.w	sl, #0
 8011768:	d04a      	beq.n	8011800 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 801176a:	6830      	ldr	r0, [r6, #0]
 801176c:	6871      	ldr	r1, [r6, #4]
 801176e:	4d69      	ldr	r5, [pc, #420]	; (8011914 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 8011770:	ac0e      	add	r4, sp, #56	; 0x38
 8011772:	c403      	stmia	r4!, {r0, r1}
 8011774:	6818      	ldr	r0, [r3, #0]
 8011776:	6859      	ldr	r1, [r3, #4]
 8011778:	ac10      	add	r4, sp, #64	; 0x40
 801177a:	c403      	stmia	r4!, {r0, r1}
 801177c:	a80e      	add	r0, sp, #56	; 0x38
 801177e:	f7f9 ffcf 	bl	800b720 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011782:	4631      	mov	r1, r6
 8011784:	a810      	add	r0, sp, #64	; 0x40
 8011786:	f7f9 ffb3 	bl	800b6f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801178a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801178e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8011792:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8011796:	6828      	ldr	r0, [r5, #0]
 8011798:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	; 0x44
 801179c:	4c5e      	ldr	r4, [pc, #376]	; (8011918 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 801179e:	fb11 2103 	smlabb	r1, r1, r3, r2
 80117a2:	4489      	add	r9, r1
 80117a4:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80117a8:	440a      	add	r2, r1
 80117aa:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80117ae:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80117b2:	4413      	add	r3, r2
 80117b4:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80117b8:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 80117bc:	930a      	str	r3, [sp, #40]	; 0x28
 80117be:	6803      	ldr	r3, [r0, #0]
 80117c0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80117c4:	4798      	blx	r3
 80117c6:	2801      	cmp	r0, #1
 80117c8:	d11d      	bne.n	8011806 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 80117ca:	220b      	movs	r2, #11
 80117cc:	2100      	movs	r1, #0
 80117ce:	e9cd 2107 	strd	r2, r1, [sp, #28]
 80117d2:	8822      	ldrh	r2, [r4, #0]
 80117d4:	f8cd a010 	str.w	sl, [sp, #16]
 80117d8:	e9cd 0205 	strd	r0, r2, [sp, #20]
 80117dc:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80117e0:	9203      	str	r2, [sp, #12]
 80117e2:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80117e6:	9202      	str	r2, [sp, #8]
 80117e8:	b2b6      	uxth	r6, r6
 80117ea:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80117ee:	9200      	str	r2, [sp, #0]
 80117f0:	9601      	str	r6, [sp, #4]
 80117f2:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80117f6:	6828      	ldr	r0, [r5, #0]
 80117f8:	4642      	mov	r2, r8
 80117fa:	4649      	mov	r1, r9
 80117fc:	f7f8 f926 	bl	8009a4c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8011800:	b013      	add	sp, #76	; 0x4c
 8011802:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011806:	6828      	ldr	r0, [r5, #0]
 8011808:	6803      	ldr	r3, [r0, #0]
 801180a:	6a1b      	ldr	r3, [r3, #32]
 801180c:	4798      	blx	r3
 801180e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8011812:	8823      	ldrh	r3, [r4, #0]
 8011814:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8011818:	940d      	str	r4, [sp, #52]	; 0x34
 801181a:	fb01 2303 	mla	r3, r1, r3, r2
 801181e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011822:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 8011826:	930b      	str	r3, [sp, #44]	; 0x2c
 8011828:	ea6f 010a 	mvn.w	r1, sl
 801182c:	005b      	lsls	r3, r3, #1
 801182e:	930c      	str	r3, [sp, #48]	; 0x30
 8011830:	f04f 0e00 	mov.w	lr, #0
 8011834:	b2c9      	uxtb	r1, r1
 8011836:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011838:	459e      	cmp	lr, r3
 801183a:	da5f      	bge.n	80118fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801183c:	2700      	movs	r7, #0
 801183e:	fa1f fb8a 	uxth.w	fp, sl
 8011842:	42b7      	cmp	r7, r6
 8011844:	da4a      	bge.n	80118dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 8011846:	f819 3007 	ldrb.w	r3, [r9, r7]
 801184a:	2203      	movs	r2, #3
 801184c:	2404      	movs	r4, #4
 801184e:	fb12 4303 	smlabb	r3, r2, r3, r4
 8011852:	eb08 0403 	add.w	r4, r8, r3
 8011856:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801185a:	78a2      	ldrb	r2, [r4, #2]
 801185c:	7865      	ldrb	r5, [r4, #1]
 801185e:	f818 c003 	ldrb.w	ip, [r8, r3]
 8011862:	d10c      	bne.n	801187e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x13e>
 8011864:	4b2d      	ldr	r3, [pc, #180]	; (801191c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8011866:	00ed      	lsls	r5, r5, #3
 8011868:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 801186c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011870:	432a      	orrs	r2, r5
 8011872:	ea42 02dc 	orr.w	r2, r2, ip, lsr #3
 8011876:	f820 2017 	strh.w	r2, [r0, r7, lsl #1]
 801187a:	3701      	adds	r7, #1
 801187c:	e7e1      	b.n	8011842 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x102>
 801187e:	f830 3017 	ldrh.w	r3, [r0, r7, lsl #1]
 8011882:	121c      	asrs	r4, r3, #8
 8011884:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8011888:	fb12 f20b 	smulbb	r2, r2, fp
 801188c:	fb04 2201 	mla	r2, r4, r1, r2
 8011890:	10dc      	asrs	r4, r3, #3
 8011892:	00db      	lsls	r3, r3, #3
 8011894:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8011898:	b2db      	uxtb	r3, r3
 801189a:	fb15 f50b 	smulbb	r5, r5, fp
 801189e:	fb1c fc0b 	smulbb	ip, ip, fp
 80118a2:	b292      	uxth	r2, r2
 80118a4:	fb04 5501 	mla	r5, r4, r1, r5
 80118a8:	fb03 cc01 	mla	ip, r3, r1, ip
 80118ac:	b2ad      	uxth	r5, r5
 80118ae:	fa1f fc8c 	uxth.w	ip, ip
 80118b2:	1c53      	adds	r3, r2, #1
 80118b4:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80118b8:	1c6c      	adds	r4, r5, #1
 80118ba:	f10c 0301 	add.w	r3, ip, #1
 80118be:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80118c2:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 80118c6:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80118ca:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80118ce:	096d      	lsrs	r5, r5, #5
 80118d0:	ea42 020c 	orr.w	r2, r2, ip
 80118d4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80118d8:	432a      	orrs	r2, r5
 80118da:	e7cc      	b.n	8011876 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x136>
 80118dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80118de:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80118e0:	881b      	ldrh	r3, [r3, #0]
 80118e2:	1b9b      	subs	r3, r3, r6
 80118e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80118e8:	4418      	add	r0, r3
 80118ea:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80118ee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80118f0:	1b9b      	subs	r3, r3, r6
 80118f2:	4413      	add	r3, r2
 80118f4:	4499      	add	r9, r3
 80118f6:	f10e 0e01 	add.w	lr, lr, #1
 80118fa:	e79c      	b.n	8011836 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf6>
 80118fc:	4b05      	ldr	r3, [pc, #20]	; (8011914 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 80118fe:	6818      	ldr	r0, [r3, #0]
 8011900:	6803      	ldr	r3, [r0, #0]
 8011902:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011904:	4798      	blx	r3
 8011906:	e77b      	b.n	8011800 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8011908:	0801d3c7 	.word	0x0801d3c7
 801190c:	0801da91 	.word	0x0801da91
 8011910:	0801d5bd 	.word	0x0801d5bd
 8011914:	2001217c 	.word	0x2001217c
 8011918:	20012176 	.word	0x20012176
 801191c:	fffff800 	.word	0xfffff800

08011920 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8011920:	b430      	push	{r4, r5}
 8011922:	780d      	ldrb	r5, [r1, #0]
 8011924:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8011928:	2d01      	cmp	r5, #1
 801192a:	d00a      	beq.n	8011942 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801192c:	d305      	bcc.n	801193a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801192e:	2d02      	cmp	r5, #2
 8011930:	d10b      	bne.n	801194a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8011932:	9402      	str	r4, [sp, #8]
 8011934:	bc30      	pop	{r4, r5}
 8011936:	f7ff bdf9 	b.w	801152c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801193a:	9402      	str	r4, [sp, #8]
 801193c:	bc30      	pop	{r4, r5}
 801193e:	f7ff bcfd 	b.w	801133c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8011942:	9402      	str	r4, [sp, #8]
 8011944:	bc30      	pop	{r4, r5}
 8011946:	f7ff befb 	b.w	8011740 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801194a:	bc30      	pop	{r4, r5}
 801194c:	4770      	bx	lr
	...

08011950 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8011950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011954:	4605      	mov	r5, r0
 8011956:	b089      	sub	sp, #36	; 0x24
 8011958:	6810      	ldr	r0, [r2, #0]
 801195a:	f89d 9048 	ldrb.w	r9, [sp, #72]	; 0x48
 801195e:	460c      	mov	r4, r1
 8011960:	6851      	ldr	r1, [r2, #4]
 8011962:	ae04      	add	r6, sp, #16
 8011964:	c603      	stmia	r6!, {r0, r1}
 8011966:	6818      	ldr	r0, [r3, #0]
 8011968:	6859      	ldr	r1, [r3, #4]
 801196a:	ae06      	add	r6, sp, #24
 801196c:	4617      	mov	r7, r2
 801196e:	c603      	stmia	r6!, {r0, r1}
 8011970:	a804      	add	r0, sp, #16
 8011972:	f7f9 fed5 	bl	800b720 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011976:	4639      	mov	r1, r7
 8011978:	a806      	add	r0, sp, #24
 801197a:	f7f9 feb9 	bl	800b6f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801197e:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8011982:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011986:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801198a:	f9bd 801c 	ldrsh.w	r8, [sp, #28]
 801198e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8011992:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 8011996:	440c      	add	r4, r1
 8011998:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 801199c:	440a      	add	r2, r1
 801199e:	f8ad 2018 	strh.w	r2, [sp, #24]
 80119a2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80119a6:	4413      	add	r3, r2
 80119a8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80119ac:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80119b0:	9300      	str	r3, [sp, #0]
 80119b2:	4b80      	ldr	r3, [pc, #512]	; (8011bb4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 80119b4:	6818      	ldr	r0, [r3, #0]
 80119b6:	6803      	ldr	r3, [r0, #0]
 80119b8:	6a1b      	ldr	r3, [r3, #32]
 80119ba:	4798      	blx	r3
 80119bc:	4b7e      	ldr	r3, [pc, #504]	; (8011bb8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x268>)
 80119be:	f9bd 601a 	ldrsh.w	r6, [sp, #26]
 80119c2:	881a      	ldrh	r2, [r3, #0]
 80119c4:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 80119c8:	fb06 1202 	mla	r2, r6, r2, r1
 80119cc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80119d0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80119d4:	ea28 72e8 	bic.w	r2, r8, r8, asr #31
 80119d8:	b212      	sxth	r2, r2
 80119da:	d117      	bne.n	8011a0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xbc>
 80119dc:	9201      	str	r2, [sp, #4]
 80119de:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 80119e2:	f04f 0a00 	mov.w	sl, #0
 80119e6:	9302      	str	r3, [sp, #8]
 80119e8:	9b00      	ldr	r3, [sp, #0]
 80119ea:	459a      	cmp	sl, r3
 80119ec:	f280 80d9 	bge.w	8011ba2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 80119f0:	2100      	movs	r1, #0
 80119f2:	4541      	cmp	r1, r8
 80119f4:	f280 80c1 	bge.w	8011b7a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x22a>
 80119f8:	5c63      	ldrb	r3, [r4, r1]
 80119fa:	b12b      	cbz	r3, 8011a08 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 80119fc:	2bff      	cmp	r3, #255	; 0xff
 80119fe:	f835 e011 	ldrh.w	lr, [r5, r1, lsl #1]
 8011a02:	d176      	bne.n	8011af2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x1a2>
 8011a04:	f820 e011 	strh.w	lr, [r0, r1, lsl #1]
 8011a08:	3101      	adds	r1, #1
 8011a0a:	e7f2      	b.n	80119f2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa2>
 8011a0c:	9202      	str	r2, [sp, #8]
 8011a0e:	0052      	lsls	r2, r2, #1
 8011a10:	9201      	str	r2, [sp, #4]
 8011a12:	f04f 0b00 	mov.w	fp, #0
 8011a16:	9303      	str	r3, [sp, #12]
 8011a18:	9b00      	ldr	r3, [sp, #0]
 8011a1a:	459b      	cmp	fp, r3
 8011a1c:	f280 80c1 	bge.w	8011ba2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 8011a20:	f04f 0c00 	mov.w	ip, #0
 8011a24:	45c4      	cmp	ip, r8
 8011a26:	da4f      	bge.n	8011ac8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x178>
 8011a28:	f814 300c 	ldrb.w	r3, [r4, ip]
 8011a2c:	2b00      	cmp	r3, #0
 8011a2e:	d048      	beq.n	8011ac2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 8011a30:	fb09 f303 	mul.w	r3, r9, r3
 8011a34:	1c5a      	adds	r2, r3, #1
 8011a36:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8011a3a:	121b      	asrs	r3, r3, #8
 8011a3c:	d041      	beq.n	8011ac2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 8011a3e:	f830 201c 	ldrh.w	r2, [r0, ip, lsl #1]
 8011a42:	f835 e01c 	ldrh.w	lr, [r5, ip, lsl #1]
 8011a46:	b29e      	uxth	r6, r3
 8011a48:	1211      	asrs	r1, r2, #8
 8011a4a:	43db      	mvns	r3, r3
 8011a4c:	b2db      	uxtb	r3, r3
 8011a4e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011a52:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8011a56:	fb11 f103 	smulbb	r1, r1, r3
 8011a5a:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8011a5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011a62:	00d2      	lsls	r2, r2, #3
 8011a64:	fb07 1706 	mla	r7, r7, r6, r1
 8011a68:	b2d2      	uxtb	r2, r2
 8011a6a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8011a6e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011a72:	fb12 f203 	smulbb	r2, r2, r3
 8011a76:	fa5f fe8e 	uxtb.w	lr, lr
 8011a7a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011a7e:	fb0e 2206 	mla	r2, lr, r6, r2
 8011a82:	fb1a fa03 	smulbb	sl, sl, r3
 8011a86:	b2bf      	uxth	r7, r7
 8011a88:	b292      	uxth	r2, r2
 8011a8a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8011a8e:	fb01 a106 	mla	r1, r1, r6, sl
 8011a92:	1c7b      	adds	r3, r7, #1
 8011a94:	f102 0a01 	add.w	sl, r2, #1
 8011a98:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8011a9c:	eb0a 2a12 	add.w	sl, sl, r2, lsr #8
 8011aa0:	b289      	uxth	r1, r1
 8011aa2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011aa6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011aaa:	ea47 070a 	orr.w	r7, r7, sl
 8011aae:	f101 0a01 	add.w	sl, r1, #1
 8011ab2:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 8011ab6:	0949      	lsrs	r1, r1, #5
 8011ab8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8011abc:	430f      	orrs	r7, r1
 8011abe:	f820 701c 	strh.w	r7, [r0, ip, lsl #1]
 8011ac2:	f10c 0c01 	add.w	ip, ip, #1
 8011ac6:	e7ad      	b.n	8011a24 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xd4>
 8011ac8:	9b03      	ldr	r3, [sp, #12]
 8011aca:	9a01      	ldr	r2, [sp, #4]
 8011acc:	881b      	ldrh	r3, [r3, #0]
 8011ace:	eba3 0308 	sub.w	r3, r3, r8
 8011ad2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8011ad6:	4418      	add	r0, r3
 8011ad8:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011adc:	eba3 0308 	sub.w	r3, r3, r8
 8011ae0:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8011ae4:	4415      	add	r5, r2
 8011ae6:	9a02      	ldr	r2, [sp, #8]
 8011ae8:	4413      	add	r3, r2
 8011aea:	441c      	add	r4, r3
 8011aec:	f10b 0b01 	add.w	fp, fp, #1
 8011af0:	e792      	b.n	8011a18 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xc8>
 8011af2:	f830 2011 	ldrh.w	r2, [r0, r1, lsl #1]
 8011af6:	b29f      	uxth	r7, r3
 8011af8:	1216      	asrs	r6, r2, #8
 8011afa:	43db      	mvns	r3, r3
 8011afc:	b2db      	uxtb	r3, r3
 8011afe:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011b02:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011b06:	fb16 f603 	smulbb	r6, r6, r3
 8011b0a:	ea4f 09e2 	mov.w	r9, r2, asr #3
 8011b0e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011b12:	00d2      	lsls	r2, r2, #3
 8011b14:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011b18:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011b1c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011b20:	b2d2      	uxtb	r2, r2
 8011b22:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011b26:	fa1f fc8c 	uxth.w	ip, ip
 8011b2a:	fb19 f903 	smulbb	r9, r9, r3
 8011b2e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011b32:	fa5f fe8e 	uxtb.w	lr, lr
 8011b36:	fb12 f203 	smulbb	r2, r2, r3
 8011b3a:	fb06 9607 	mla	r6, r6, r7, r9
 8011b3e:	fb0e 2207 	mla	r2, lr, r7, r2
 8011b42:	f10c 0901 	add.w	r9, ip, #1
 8011b46:	b292      	uxth	r2, r2
 8011b48:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8011b4c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8011b50:	f102 0c01 	add.w	ip, r2, #1
 8011b54:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8011b58:	b2b6      	uxth	r6, r6
 8011b5a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8011b5e:	ea49 0c02 	orr.w	ip, r9, r2
 8011b62:	f106 0901 	add.w	r9, r6, #1
 8011b66:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8011b6a:	0976      	lsrs	r6, r6, #5
 8011b6c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011b70:	ea4c 0c06 	orr.w	ip, ip, r6
 8011b74:	f820 c011 	strh.w	ip, [r0, r1, lsl #1]
 8011b78:	e746      	b.n	8011a08 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 8011b7a:	9b02      	ldr	r3, [sp, #8]
 8011b7c:	881b      	ldrh	r3, [r3, #0]
 8011b7e:	eba3 0308 	sub.w	r3, r3, r8
 8011b82:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
 8011b86:	4418      	add	r0, r3
 8011b88:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011b8c:	eba3 0308 	sub.w	r3, r3, r8
 8011b90:	eb0b 0243 	add.w	r2, fp, r3, lsl #1
 8011b94:	4415      	add	r5, r2
 8011b96:	9a01      	ldr	r2, [sp, #4]
 8011b98:	4413      	add	r3, r2
 8011b9a:	441c      	add	r4, r3
 8011b9c:	f10a 0a01 	add.w	sl, sl, #1
 8011ba0:	e722      	b.n	80119e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x98>
 8011ba2:	4b04      	ldr	r3, [pc, #16]	; (8011bb4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8011ba4:	6818      	ldr	r0, [r3, #0]
 8011ba6:	6803      	ldr	r3, [r0, #0]
 8011ba8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011baa:	4798      	blx	r3
 8011bac:	b009      	add	sp, #36	; 0x24
 8011bae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011bb2:	bf00      	nop
 8011bb4:	2001217c 	.word	0x2001217c
 8011bb8:	20012176 	.word	0x20012176

08011bbc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8011bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011bc0:	b089      	sub	sp, #36	; 0x24
 8011bc2:	4682      	mov	sl, r0
 8011bc4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8011bc8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011bca:	460d      	mov	r5, r1
 8011bcc:	4691      	mov	r9, r2
 8011bce:	4698      	mov	r8, r3
 8011bd0:	b3ae      	cbz	r6, 8011c3e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8011bd2:	4608      	mov	r0, r1
 8011bd4:	f7fc fa96 	bl	800e104 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011bd8:	4607      	mov	r7, r0
 8011bda:	4628      	mov	r0, r5
 8011bdc:	f7fc facc 	bl	800e178 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011be0:	f8ad 000e 	strh.w	r0, [sp, #14]
 8011be4:	4628      	mov	r0, r5
 8011be6:	f8ad 9008 	strh.w	r9, [sp, #8]
 8011bea:	f8ad 800a 	strh.w	r8, [sp, #10]
 8011bee:	f8ad 700c 	strh.w	r7, [sp, #12]
 8011bf2:	f7fc fc13 	bl	800e41c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011bf6:	b178      	cbz	r0, 8011c18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8011bf8:	4628      	mov	r0, r5
 8011bfa:	f7fc fc0f 	bl	800e41c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011bfe:	2802      	cmp	r0, #2
 8011c00:	d00a      	beq.n	8011c18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8011c02:	4628      	mov	r0, r5
 8011c04:	f7fc fc0a 	bl	800e41c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011c08:	280b      	cmp	r0, #11
 8011c0a:	d005      	beq.n	8011c18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8011c0c:	4b69      	ldr	r3, [pc, #420]	; (8011db4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 8011c0e:	4a6a      	ldr	r2, [pc, #424]	; (8011db8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 8011c10:	486a      	ldr	r0, [pc, #424]	; (8011dbc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 8011c12:	214b      	movs	r1, #75	; 0x4b
 8011c14:	f007 ff44 	bl	8019aa0 <__assert_func>
 8011c18:	4628      	mov	r0, r5
 8011c1a:	f7fc fb7b 	bl	800e314 <_ZNK8touchgfx6Bitmap7getDataEv>
 8011c1e:	4607      	mov	r7, r0
 8011c20:	4628      	mov	r0, r5
 8011c22:	f7fc fba9 	bl	800e378 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8011c26:	4681      	mov	r9, r0
 8011c28:	4628      	mov	r0, r5
 8011c2a:	f7fc fbf7 	bl	800e41c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011c2e:	2802      	cmp	r0, #2
 8011c30:	d108      	bne.n	8011c44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8011c32:	4633      	mov	r3, r6
 8011c34:	4622      	mov	r2, r4
 8011c36:	a902      	add	r1, sp, #8
 8011c38:	4638      	mov	r0, r7
 8011c3a:	f7ff fa6d 	bl	8011118 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8011c3e:	b009      	add	sp, #36	; 0x24
 8011c40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c44:	4628      	mov	r0, r5
 8011c46:	f7fc fbe9 	bl	800e41c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011c4a:	280b      	cmp	r0, #11
 8011c4c:	d107      	bne.n	8011c5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 8011c4e:	9600      	str	r6, [sp, #0]
 8011c50:	4623      	mov	r3, r4
 8011c52:	aa02      	add	r2, sp, #8
 8011c54:	4649      	mov	r1, r9
 8011c56:	4638      	mov	r0, r7
 8011c58:	f7ff fe62 	bl	8011920 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8011c5c:	e7ef      	b.n	8011c3e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8011c5e:	4628      	mov	r0, r5
 8011c60:	f7fc fb1e 	bl	800e2a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8011c64:	b950      	cbnz	r0, 8011c7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8011c66:	e9cd 6000 	strd	r6, r0, [sp]
 8011c6a:	f8da 3000 	ldr.w	r3, [sl]
 8011c6e:	aa02      	add	r2, sp, #8
 8011c70:	68dd      	ldr	r5, [r3, #12]
 8011c72:	4639      	mov	r1, r7
 8011c74:	4623      	mov	r3, r4
 8011c76:	4650      	mov	r0, sl
 8011c78:	47a8      	blx	r5
 8011c7a:	e7e0      	b.n	8011c3e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8011c7c:	f10d 0818 	add.w	r8, sp, #24
 8011c80:	4629      	mov	r1, r5
 8011c82:	4640      	mov	r0, r8
 8011c84:	f7fc fab2 	bl	800e1ec <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011c88:	e898 0003 	ldmia.w	r8, {r0, r1}
 8011c8c:	ad04      	add	r5, sp, #16
 8011c8e:	e885 0003 	stmia.w	r5, {r0, r1}
 8011c92:	4628      	mov	r0, r5
 8011c94:	4621      	mov	r1, r4
 8011c96:	f7f7 fa9b 	bl	80091d0 <_ZN8touchgfx4RectaNERKS0_>
 8011c9a:	4628      	mov	r0, r5
 8011c9c:	f7f7 fadb 	bl	8009256 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011ca0:	b138      	cbz	r0, 8011cb2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 8011ca2:	9600      	str	r6, [sp, #0]
 8011ca4:	4623      	mov	r3, r4
 8011ca6:	aa02      	add	r2, sp, #8
 8011ca8:	4649      	mov	r1, r9
 8011caa:	4638      	mov	r0, r7
 8011cac:	f7ff fe50 	bl	8011950 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8011cb0:	e7c5      	b.n	8011c3e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8011cb2:	e9cd 6000 	strd	r6, r0, [sp]
 8011cb6:	f8da 3000 	ldr.w	r3, [sl]
 8011cba:	aa02      	add	r2, sp, #8
 8011cbc:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8011cc0:	4639      	mov	r1, r7
 8011cc2:	462b      	mov	r3, r5
 8011cc4:	4650      	mov	r0, sl
 8011cc6:	47d8      	blx	fp
 8011cc8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011ccc:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011cd0:	4293      	cmp	r3, r2
 8011cd2:	dd13      	ble.n	8011cfc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 8011cd4:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011cd8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011cdc:	f8ad 0018 	strh.w	r0, [sp, #24]
 8011ce0:	1a9b      	subs	r3, r3, r2
 8011ce2:	f8ad 201a 	strh.w	r2, [sp, #26]
 8011ce6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011cea:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011cee:	9600      	str	r6, [sp, #0]
 8011cf0:	4643      	mov	r3, r8
 8011cf2:	aa02      	add	r2, sp, #8
 8011cf4:	4649      	mov	r1, r9
 8011cf6:	4638      	mov	r0, r7
 8011cf8:	f7ff fe2a 	bl	8011950 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8011cfc:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8011d00:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011d04:	4293      	cmp	r3, r2
 8011d06:	dd13      	ble.n	8011d30 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8011d08:	1a9b      	subs	r3, r3, r2
 8011d0a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8011d0e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8011d12:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011d16:	f8ad 001a 	strh.w	r0, [sp, #26]
 8011d1a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011d1e:	f8ad 101e 	strh.w	r1, [sp, #30]
 8011d22:	9600      	str	r6, [sp, #0]
 8011d24:	4643      	mov	r3, r8
 8011d26:	aa02      	add	r2, sp, #8
 8011d28:	4649      	mov	r1, r9
 8011d2a:	4638      	mov	r0, r7
 8011d2c:	f7ff fe10 	bl	8011950 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8011d30:	88a2      	ldrh	r2, [r4, #4]
 8011d32:	8823      	ldrh	r3, [r4, #0]
 8011d34:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8011d38:	4413      	add	r3, r2
 8011d3a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8011d3e:	440a      	add	r2, r1
 8011d40:	b29b      	uxth	r3, r3
 8011d42:	b292      	uxth	r2, r2
 8011d44:	b211      	sxth	r1, r2
 8011d46:	b218      	sxth	r0, r3
 8011d48:	4288      	cmp	r0, r1
 8011d4a:	dd13      	ble.n	8011d74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 8011d4c:	1a9b      	subs	r3, r3, r2
 8011d4e:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8011d52:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 8011d56:	f8ad 1018 	strh.w	r1, [sp, #24]
 8011d5a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011d5e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8011d62:	9600      	str	r6, [sp, #0]
 8011d64:	4643      	mov	r3, r8
 8011d66:	aa02      	add	r2, sp, #8
 8011d68:	4649      	mov	r1, r9
 8011d6a:	4638      	mov	r0, r7
 8011d6c:	f8ad 501a 	strh.w	r5, [sp, #26]
 8011d70:	f7ff fdee 	bl	8011950 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8011d74:	88e2      	ldrh	r2, [r4, #6]
 8011d76:	8863      	ldrh	r3, [r4, #2]
 8011d78:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8011d7c:	4413      	add	r3, r2
 8011d7e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011d82:	440a      	add	r2, r1
 8011d84:	b29b      	uxth	r3, r3
 8011d86:	b292      	uxth	r2, r2
 8011d88:	b211      	sxth	r1, r2
 8011d8a:	b218      	sxth	r0, r3
 8011d8c:	4288      	cmp	r0, r1
 8011d8e:	f77f af56 	ble.w	8011c3e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8011d92:	f9b4 5000 	ldrsh.w	r5, [r4]
 8011d96:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011d9a:	f8ad 5018 	strh.w	r5, [sp, #24]
 8011d9e:	1a9b      	subs	r3, r3, r2
 8011da0:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011da4:	f8ad 101a 	strh.w	r1, [sp, #26]
 8011da8:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011dac:	9600      	str	r6, [sp, #0]
 8011dae:	4643      	mov	r3, r8
 8011db0:	e779      	b.n	8011ca6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 8011db2:	bf00      	nop
 8011db4:	0801d415 	.word	0x0801d415
 8011db8:	0801db1a 	.word	0x0801db1a
 8011dbc:	0801d5bd 	.word	0x0801d5bd

08011dc0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8011dc0:	b508      	push	{r3, lr}
 8011dc2:	b180      	cbz	r0, 8011de6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8011dc4:	2902      	cmp	r1, #2
 8011dc6:	d014      	beq.n	8011df2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8011dc8:	2903      	cmp	r1, #3
 8011dca:	d01d      	beq.n	8011e08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8011dcc:	2901      	cmp	r1, #1
 8011dce:	d101      	bne.n	8011dd4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8011dd0:	2001      	movs	r0, #1
 8011dd2:	bd08      	pop	{r3, pc}
 8011dd4:	4b0e      	ldr	r3, [pc, #56]	; (8011e10 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8011dd6:	8818      	ldrh	r0, [r3, #0]
 8011dd8:	b990      	cbnz	r0, 8011e00 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8011dda:	4b0e      	ldr	r3, [pc, #56]	; (8011e14 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8011ddc:	4a0e      	ldr	r2, [pc, #56]	; (8011e18 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8011dde:	480f      	ldr	r0, [pc, #60]	; (8011e1c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8011de0:	2154      	movs	r1, #84	; 0x54
 8011de2:	f007 fe5d 	bl	8019aa0 <__assert_func>
 8011de6:	2902      	cmp	r1, #2
 8011de8:	d00e      	beq.n	8011e08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8011dea:	2903      	cmp	r1, #3
 8011dec:	d0f2      	beq.n	8011dd4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8011dee:	2901      	cmp	r1, #1
 8011df0:	d1ee      	bne.n	8011dd0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8011df2:	4b07      	ldr	r3, [pc, #28]	; (8011e10 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8011df4:	8818      	ldrh	r0, [r3, #0]
 8011df6:	2800      	cmp	r0, #0
 8011df8:	d0ef      	beq.n	8011dda <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8011dfa:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8011dfe:	e7e8      	b.n	8011dd2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8011e00:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8011e04:	4240      	negs	r0, r0
 8011e06:	e7e4      	b.n	8011dd2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8011e08:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011e0c:	e7e1      	b.n	8011dd2 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8011e0e:	bf00      	nop
 8011e10:	20012176 	.word	0x20012176
 8011e14:	0801d717 	.word	0x0801d717
 8011e18:	0801dc97 	.word	0x0801dc97
 8011e1c:	0801d759 	.word	0x0801d759

08011e20 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8011e20:	b508      	push	{r3, lr}
 8011e22:	b180      	cbz	r0, 8011e46 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8011e24:	2902      	cmp	r1, #2
 8011e26:	d014      	beq.n	8011e52 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8011e28:	2903      	cmp	r1, #3
 8011e2a:	d018      	beq.n	8011e5e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8011e2c:	2901      	cmp	r1, #1
 8011e2e:	d001      	beq.n	8011e34 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8011e30:	2001      	movs	r0, #1
 8011e32:	e013      	b.n	8011e5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8011e34:	4b0e      	ldr	r3, [pc, #56]	; (8011e70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8011e36:	8818      	ldrh	r0, [r3, #0]
 8011e38:	b970      	cbnz	r0, 8011e58 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8011e3a:	4b0e      	ldr	r3, [pc, #56]	; (8011e74 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8011e3c:	4a0e      	ldr	r2, [pc, #56]	; (8011e78 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8011e3e:	480f      	ldr	r0, [pc, #60]	; (8011e7c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8011e40:	2154      	movs	r1, #84	; 0x54
 8011e42:	f007 fe2d 	bl	8019aa0 <__assert_func>
 8011e46:	2902      	cmp	r1, #2
 8011e48:	d009      	beq.n	8011e5e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8011e4a:	2903      	cmp	r1, #3
 8011e4c:	d0f0      	beq.n	8011e30 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8011e4e:	2901      	cmp	r1, #1
 8011e50:	d1f0      	bne.n	8011e34 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8011e52:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011e56:	e001      	b.n	8011e5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8011e58:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8011e5c:	bd08      	pop	{r3, pc}
 8011e5e:	4b04      	ldr	r3, [pc, #16]	; (8011e70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8011e60:	8818      	ldrh	r0, [r3, #0]
 8011e62:	2800      	cmp	r0, #0
 8011e64:	d0e9      	beq.n	8011e3a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8011e66:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8011e6a:	4240      	negs	r0, r0
 8011e6c:	e7f6      	b.n	8011e5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8011e6e:	bf00      	nop
 8011e70:	20012176 	.word	0x20012176
 8011e74:	0801d717 	.word	0x0801d717
 8011e78:	0801dc97 	.word	0x0801dc97
 8011e7c:	0801d759 	.word	0x0801d759

08011e80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8011e80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e84:	b097      	sub	sp, #92	; 0x5c
 8011e86:	910a      	str	r1, [sp, #40]	; 0x28
 8011e88:	a912      	add	r1, sp, #72	; 0x48
 8011e8a:	e881 000c 	stmia.w	r1, {r2, r3}
 8011e8e:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 8011e92:	9307      	str	r3, [sp, #28]
 8011e94:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 8011e98:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8011e9c:	930f      	str	r3, [sp, #60]	; 0x3c
 8011e9e:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 8011ea2:	930b      	str	r3, [sp, #44]	; 0x2c
 8011ea4:	7b4b      	ldrb	r3, [r1, #13]
 8011ea6:	798d      	ldrb	r5, [r1, #6]
 8011ea8:	f9bd 6080 	ldrsh.w	r6, [sp, #128]	; 0x80
 8011eac:	f8bd 7088 	ldrh.w	r7, [sp, #136]	; 0x88
 8011eb0:	f8bd 408c 	ldrh.w	r4, [sp, #140]	; 0x8c
 8011eb4:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 8011eb8:	f89d 90ac 	ldrb.w	r9, [sp, #172]	; 0xac
 8011ebc:	0158      	lsls	r0, r3, #5
 8011ebe:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8011ec2:	4328      	orrs	r0, r5
 8011ec4:	9006      	str	r0, [sp, #24]
 8011ec6:	f000 8156 	beq.w	8012176 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8011eca:	011b      	lsls	r3, r3, #4
 8011ecc:	79c8      	ldrb	r0, [r1, #7]
 8011ece:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011ed2:	4303      	orrs	r3, r0
 8011ed4:	9308      	str	r3, [sp, #32]
 8011ed6:	f000 814e 	beq.w	8012176 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8011eda:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8011ede:	b29b      	uxth	r3, r3
 8011ee0:	2f00      	cmp	r7, #0
 8011ee2:	f000 80f2 	beq.w	80120ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x24a>
 8011ee6:	1aff      	subs	r7, r7, r3
 8011ee8:	b2bf      	uxth	r7, r7
 8011eea:	043b      	lsls	r3, r7, #16
 8011eec:	d502      	bpl.n	8011ef4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8011eee:	1bf6      	subs	r6, r6, r7
 8011ef0:	b236      	sxth	r6, r6
 8011ef2:	2700      	movs	r7, #0
 8011ef4:	f9b2 1000 	ldrsh.w	r1, [r2]
 8011ef8:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 8011efc:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 8011f00:	428e      	cmp	r6, r1
 8011f02:	b28b      	uxth	r3, r1
 8011f04:	bfbf      	itttt	lt
 8011f06:	18ff      	addlt	r7, r7, r3
 8011f08:	1bbe      	sublt	r6, r7, r6
 8011f0a:	b2b7      	uxthlt	r7, r6
 8011f0c:	460e      	movlt	r6, r1
 8011f0e:	8891      	ldrh	r1, [r2, #4]
 8011f10:	440b      	add	r3, r1
 8011f12:	b21b      	sxth	r3, r3
 8011f14:	930e      	str	r3, [sp, #56]	; 0x38
 8011f16:	88d3      	ldrh	r3, [r2, #6]
 8011f18:	9a07      	ldr	r2, [sp, #28]
 8011f1a:	449a      	add	sl, r3
 8011f1c:	fa0f f38a 	sxth.w	r3, sl
 8011f20:	930d      	str	r3, [sp, #52]	; 0x34
 8011f22:	4bbc      	ldr	r3, [pc, #752]	; (8012214 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x394>)
 8011f24:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8011f28:	f893 b000 	ldrb.w	fp, [r3]
 8011f2c:	f10b 3cff 	add.w	ip, fp, #4294967295	; 0xffffffff
 8011f30:	f1dc 0300 	rsbs	r3, ip, #0
 8011f34:	eb43 030c 	adc.w	r3, r3, ip
 8011f38:	930c      	str	r3, [sp, #48]	; 0x30
 8011f3a:	4631      	mov	r1, r6
 8011f3c:	464b      	mov	r3, r9
 8011f3e:	a812      	add	r0, sp, #72	; 0x48
 8011f40:	f7f9 fac6 	bl	800b4d0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8011f44:	4631      	mov	r1, r6
 8011f46:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 8011f4a:	464b      	mov	r3, r9
 8011f4c:	9a07      	ldr	r2, [sp, #28]
 8011f4e:	a812      	add	r0, sp, #72	; 0x48
 8011f50:	f7f9 fad6 	bl	800b500 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8011f54:	a916      	add	r1, sp, #88	; 0x58
 8011f56:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8011f5a:	a815      	add	r0, sp, #84	; 0x54
 8011f5c:	f7f9 fbb2 	bl	800b6c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8011f60:	f1b9 0f00 	cmp.w	r9, #0
 8011f64:	f040 80b4 	bne.w	80120d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x250>
 8011f68:	f1bb 0f01 	cmp.w	fp, #1
 8011f6c:	f040 80b8 	bne.w	80120e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x260>
 8011f70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011f72:	2b00      	cmp	r3, #0
 8011f74:	f040 8104 	bne.w	8012180 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x300>
 8011f78:	4ba7      	ldr	r3, [pc, #668]	; (8012218 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>)
 8011f7a:	6818      	ldr	r0, [r3, #0]
 8011f7c:	6803      	ldr	r3, [r0, #0]
 8011f7e:	6a1b      	ldr	r3, [r3, #32]
 8011f80:	4798      	blx	r3
 8011f82:	4aa6      	ldr	r2, [pc, #664]	; (801221c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8011f84:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8011f88:	8811      	ldrh	r1, [r2, #0]
 8011f8a:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8011f8e:	fb01 2303 	mla	r3, r1, r3, r2
 8011f92:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011f96:	9308      	str	r3, [sp, #32]
 8011f98:	2301      	movs	r3, #1
 8011f9a:	fa03 f308 	lsl.w	r3, r3, r8
 8011f9e:	3b01      	subs	r3, #1
 8011fa0:	b2db      	uxtb	r3, r3
 8011fa2:	f1b8 0f01 	cmp.w	r8, #1
 8011fa6:	9310      	str	r3, [sp, #64]	; 0x40
 8011fa8:	f000 80ec 	beq.w	8012184 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x304>
 8011fac:	f1b8 0f02 	cmp.w	r8, #2
 8011fb0:	f000 80ea 	beq.w	8012188 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x308>
 8011fb4:	f1b8 0f04 	cmp.w	r8, #4
 8011fb8:	bf14      	ite	ne
 8011fba:	2301      	movne	r3, #1
 8011fbc:	2311      	moveq	r3, #17
 8011fbe:	9309      	str	r3, [sp, #36]	; 0x24
 8011fc0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8011fc2:	b153      	cbz	r3, 8011fda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15a>
 8011fc4:	9a06      	ldr	r2, [sp, #24]
 8011fc6:	2508      	movs	r5, #8
 8011fc8:	fb95 f3f8 	sdiv	r3, r5, r8
 8011fcc:	1e5d      	subs	r5, r3, #1
 8011fce:	4415      	add	r5, r2
 8011fd0:	fb95 f5f3 	sdiv	r5, r5, r3
 8011fd4:	fb15 f503 	smulbb	r5, r5, r3
 8011fd8:	b2ad      	uxth	r5, r5
 8011fda:	b907      	cbnz	r7, 8011fde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15e>
 8011fdc:	b16c      	cbz	r4, 8011ffa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x17a>
 8011fde:	fb04 7305 	mla	r3, r4, r5, r7
 8011fe2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8011fe4:	fb08 f303 	mul.w	r3, r8, r3
 8011fe8:	ebaa 0a04 	sub.w	sl, sl, r4
 8011fec:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 8011ff0:	9226      	str	r2, [sp, #152]	; 0x98
 8011ff2:	fa1f fa8a 	uxth.w	sl, sl
 8011ff6:	f003 0407 	and.w	r4, r3, #7
 8011ffa:	4649      	mov	r1, r9
 8011ffc:	980c      	ldr	r0, [sp, #48]	; 0x30
 8011ffe:	f7ff fedf 	bl	8011dc0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8012002:	4649      	mov	r1, r9
 8012004:	4683      	mov	fp, r0
 8012006:	980c      	ldr	r0, [sp, #48]	; 0x30
 8012008:	f7ff ff0a 	bl	8011e20 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801200c:	9a07      	ldr	r2, [sp, #28]
 801200e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012010:	1a9b      	subs	r3, r3, r2
 8012012:	459a      	cmp	sl, r3
 8012014:	bfa8      	it	ge
 8012016:	469a      	movge	sl, r3
 8012018:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801201a:	1bf6      	subs	r6, r6, r7
 801201c:	1b9e      	subs	r6, r3, r6
 801201e:	9b06      	ldr	r3, [sp, #24]
 8012020:	429e      	cmp	r6, r3
 8012022:	bfd4      	ite	le
 8012024:	ebc7 0706 	rsble	r7, r7, r6
 8012028:	ebc7 0703 	rsbgt	r7, r7, r3
 801202c:	1bed      	subs	r5, r5, r7
 801202e:	fb08 f305 	mul.w	r3, r8, r5
 8012032:	9307      	str	r3, [sp, #28]
 8012034:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8012036:	781a      	ldrb	r2, [r3, #0]
 8012038:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801203a:	0a1b      	lsrs	r3, r3, #8
 801203c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8012040:	930d      	str	r3, [sp, #52]	; 0x34
 8012042:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012044:	08db      	lsrs	r3, r3, #3
 8012046:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801204a:	930e      	str	r3, [sp, #56]	; 0x38
 801204c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801204e:	00db      	lsls	r3, r3, #3
 8012050:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8012054:	930f      	str	r3, [sp, #60]	; 0x3c
 8012056:	ea4f 034b 	mov.w	r3, fp, lsl #1
 801205a:	fb0b 0b17 	mls	fp, fp, r7, r0
 801205e:	ea27 70e7 	bic.w	r0, r7, r7, asr #31
 8012062:	4358      	muls	r0, r3
 8012064:	9306      	str	r3, [sp, #24]
 8012066:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012068:	4122      	asrs	r2, r4
 801206a:	b29b      	uxth	r3, r3
 801206c:	b2d2      	uxtb	r2, r2
 801206e:	9311      	str	r3, [sp, #68]	; 0x44
 8012070:	eb00 0b4b 	add.w	fp, r0, fp, lsl #1
 8012074:	f1ba 0f00 	cmp.w	sl, #0
 8012078:	f340 80e5 	ble.w	8012246 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 801207c:	f8dd c020 	ldr.w	ip, [sp, #32]
 8012080:	46be      	mov	lr, r7
 8012082:	f1be 0f00 	cmp.w	lr, #0
 8012086:	f340 80cb 	ble.w	8012220 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801208a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801208c:	4013      	ands	r3, r2
 801208e:	d00a      	beq.n	80120a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x226>
 8012090:	9909      	ldr	r1, [sp, #36]	; 0x24
 8012092:	fb13 f301 	smulbb	r3, r3, r1
 8012096:	2bfe      	cmp	r3, #254	; 0xfe
 8012098:	dd78      	ble.n	801218c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x30c>
 801209a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801209c:	29ff      	cmp	r1, #255	; 0xff
 801209e:	d175      	bne.n	801218c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x30c>
 80120a0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80120a2:	f8ac 0000 	strh.w	r0, [ip]
 80120a6:	4444      	add	r4, r8
 80120a8:	b2a4      	uxth	r4, r4
 80120aa:	2c07      	cmp	r4, #7
 80120ac:	bf81      	itttt	hi
 80120ae:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 80120b0:	785a      	ldrbhi	r2, [r3, #1]
 80120b2:	3301      	addhi	r3, #1
 80120b4:	9326      	strhi	r3, [sp, #152]	; 0x98
 80120b6:	9b06      	ldr	r3, [sp, #24]
 80120b8:	bf9a      	itte	ls
 80120ba:	fa42 f208 	asrls.w	r2, r2, r8
 80120be:	b2d2      	uxtbls	r2, r2
 80120c0:	2400      	movhi	r4, #0
 80120c2:	449c      	add	ip, r3
 80120c4:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
 80120c8:	e7db      	b.n	8012082 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x202>
 80120ca:	441e      	add	r6, r3
 80120cc:	b236      	sxth	r6, r6
 80120ce:	e711      	b.n	8011ef4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 80120d0:	f1b9 0f01 	cmp.w	r9, #1
 80120d4:	f47f af4c 	bne.w	8011f70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80120d8:	f1bb 0f01 	cmp.w	fp, #1
 80120dc:	f47f af48 	bne.w	8011f70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80120e0:	f8df b134 	ldr.w	fp, [pc, #308]	; 8012218 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x398>
 80120e4:	f8db 0000 	ldr.w	r0, [fp]
 80120e8:	6803      	ldr	r3, [r0, #0]
 80120ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80120ec:	4798      	blx	r3
 80120ee:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 80120f2:	465a      	mov	r2, fp
 80120f4:	d006      	beq.n	8012104 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x284>
 80120f6:	f1b8 0f04 	cmp.w	r8, #4
 80120fa:	d13f      	bne.n	801217c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2fc>
 80120fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80120fe:	3300      	adds	r3, #0
 8012100:	bf18      	it	ne
 8012102:	2301      	movne	r3, #1
 8012104:	05c0      	lsls	r0, r0, #23
 8012106:	f140 80a7 	bpl.w	8012258 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d8>
 801210a:	f1b8 0f08 	cmp.w	r8, #8
 801210e:	f040 80a3 	bne.w	8012258 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d8>
 8012112:	2b00      	cmp	r3, #0
 8012114:	bf0c      	ite	eq
 8012116:	f44f 7180 	moveq.w	r1, #256	; 0x100
 801211a:	2180      	movne	r1, #128	; 0x80
 801211c:	2f00      	cmp	r7, #0
 801211e:	f47f af27 	bne.w	8011f70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012122:	2c00      	cmp	r4, #0
 8012124:	f47f af24 	bne.w	8011f70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012128:	9b06      	ldr	r3, [sp, #24]
 801212a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801212c:	18f3      	adds	r3, r6, r3
 801212e:	4283      	cmp	r3, r0
 8012130:	f73f af1e 	bgt.w	8011f70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012134:	e9dd 0307 	ldrd	r0, r3, [sp, #28]
 8012138:	4403      	add	r3, r0
 801213a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801213c:	4283      	cmp	r3, r0
 801213e:	f73f af17 	bgt.w	8011f70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8012142:	6810      	ldr	r0, [r2, #0]
 8012144:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8012148:	6804      	ldr	r4, [r0, #0]
 801214a:	9105      	str	r1, [sp, #20]
 801214c:	f1b8 0f08 	cmp.w	r8, #8
 8012150:	bf18      	it	ne
 8012152:	3501      	addne	r5, #1
 8012154:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012156:	9104      	str	r1, [sp, #16]
 8012158:	bf18      	it	ne
 801215a:	f025 0501 	bicne.w	r5, r5, #1
 801215e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8012160:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8012164:	bf18      	it	ne
 8012166:	b2ad      	uxthne	r5, r5
 8012168:	e9cd 5102 	strd	r5, r1, [sp, #8]
 801216c:	e9cd 5a00 	strd	r5, sl, [sp]
 8012170:	9926      	ldr	r1, [sp, #152]	; 0x98
 8012172:	6c24      	ldr	r4, [r4, #64]	; 0x40
 8012174:	47a0      	blx	r4
 8012176:	b017      	add	sp, #92	; 0x5c
 8012178:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801217c:	2300      	movs	r3, #0
 801217e:	e7c1      	b.n	8012104 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x284>
 8012180:	980a      	ldr	r0, [sp, #40]	; 0x28
 8012182:	e6fe      	b.n	8011f82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 8012184:	23ff      	movs	r3, #255	; 0xff
 8012186:	e71a      	b.n	8011fbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 8012188:	2355      	movs	r3, #85	; 0x55
 801218a:	e718      	b.n	8011fbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13e>
 801218c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801218e:	f8bc 5000 	ldrh.w	r5, [ip]
 8012192:	fb11 f303 	smulbb	r3, r1, r3
 8012196:	b29b      	uxth	r3, r3
 8012198:	1c59      	adds	r1, r3, #1
 801219a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801219e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80121a2:	990d      	ldr	r1, [sp, #52]	; 0x34
 80121a4:	b29e      	uxth	r6, r3
 80121a6:	1228      	asrs	r0, r5, #8
 80121a8:	43db      	mvns	r3, r3
 80121aa:	b2db      	uxtb	r3, r3
 80121ac:	fb11 f106 	smulbb	r1, r1, r6
 80121b0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80121b4:	fb00 1003 	mla	r0, r0, r3, r1
 80121b8:	b281      	uxth	r1, r0
 80121ba:	980e      	ldr	r0, [sp, #56]	; 0x38
 80121bc:	910c      	str	r1, [sp, #48]	; 0x30
 80121be:	fb16 f900 	smulbb	r9, r6, r0
 80121c2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80121c4:	10e9      	asrs	r1, r5, #3
 80121c6:	00ed      	lsls	r5, r5, #3
 80121c8:	fb16 f600 	smulbb	r6, r6, r0
 80121cc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80121d0:	b2ed      	uxtb	r5, r5
 80121d2:	fb01 9103 	mla	r1, r1, r3, r9
 80121d6:	fb05 6603 	mla	r6, r5, r3, r6
 80121da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80121dc:	980c      	ldr	r0, [sp, #48]	; 0x30
 80121de:	b2b6      	uxth	r6, r6
 80121e0:	3301      	adds	r3, #1
 80121e2:	f106 0901 	add.w	r9, r6, #1
 80121e6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80121ea:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 80121ee:	b289      	uxth	r1, r1
 80121f0:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80121f4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80121f8:	ea40 0009 	orr.w	r0, r0, r9
 80121fc:	f101 0901 	add.w	r9, r1, #1
 8012200:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8012204:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8012208:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801220c:	ea40 0009 	orr.w	r0, r0, r9
 8012210:	e747      	b.n	80120a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x222>
 8012212:	bf00      	nop
 8012214:	20012174 	.word	0x20012174
 8012218:	2001217c 	.word	0x2001217c
 801221c:	20012176 	.word	0x20012176
 8012220:	9b07      	ldr	r3, [sp, #28]
 8012222:	b153      	cbz	r3, 801223a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ba>
 8012224:	441c      	add	r4, r3
 8012226:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8012228:	b2a4      	uxth	r4, r4
 801222a:	eb03 03d4 	add.w	r3, r3, r4, lsr #3
 801222e:	f004 0407 	and.w	r4, r4, #7
 8012232:	781a      	ldrb	r2, [r3, #0]
 8012234:	9326      	str	r3, [sp, #152]	; 0x98
 8012236:	4122      	asrs	r2, r4
 8012238:	b2d2      	uxtb	r2, r2
 801223a:	9b08      	ldr	r3, [sp, #32]
 801223c:	445b      	add	r3, fp
 801223e:	9308      	str	r3, [sp, #32]
 8012240:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8012244:	e716      	b.n	8012074 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f4>
 8012246:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012248:	2b00      	cmp	r3, #0
 801224a:	d194      	bne.n	8012176 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 801224c:	4b05      	ldr	r3, [pc, #20]	; (8012264 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>)
 801224e:	6818      	ldr	r0, [r3, #0]
 8012250:	6803      	ldr	r3, [r0, #0]
 8012252:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012254:	4798      	blx	r3
 8012256:	e78e      	b.n	8012176 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f6>
 8012258:	2b00      	cmp	r3, #0
 801225a:	f43f ae89 	beq.w	8011f70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801225e:	2180      	movs	r1, #128	; 0x80
 8012260:	e75c      	b.n	801211c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x29c>
 8012262:	bf00      	nop
 8012264:	2001217c 	.word	0x2001217c

08012268 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8012268:	b538      	push	{r3, r4, r5, lr}
 801226a:	4c15      	ldr	r4, [pc, #84]	; (80122c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801226c:	7823      	ldrb	r3, [r4, #0]
 801226e:	f3bf 8f5b 	dmb	ish
 8012272:	07da      	lsls	r2, r3, #31
 8012274:	4605      	mov	r5, r0
 8012276:	d40b      	bmi.n	8012290 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8012278:	4620      	mov	r0, r4
 801227a:	f007 fbe7 	bl	8019a4c <__cxa_guard_acquire>
 801227e:	b138      	cbz	r0, 8012290 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8012280:	4620      	mov	r0, r4
 8012282:	f007 fbef 	bl	8019a64 <__cxa_guard_release>
 8012286:	4a0f      	ldr	r2, [pc, #60]	; (80122c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8012288:	490f      	ldr	r1, [pc, #60]	; (80122c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801228a:	4810      	ldr	r0, [pc, #64]	; (80122cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801228c:	f007 fbd4 	bl	8019a38 <__aeabi_atexit>
 8012290:	4c0f      	ldr	r4, [pc, #60]	; (80122d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8012292:	7823      	ldrb	r3, [r4, #0]
 8012294:	f3bf 8f5b 	dmb	ish
 8012298:	07db      	lsls	r3, r3, #31
 801229a:	d40b      	bmi.n	80122b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801229c:	4620      	mov	r0, r4
 801229e:	f007 fbd5 	bl	8019a4c <__cxa_guard_acquire>
 80122a2:	b138      	cbz	r0, 80122b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80122a4:	4620      	mov	r0, r4
 80122a6:	f007 fbdd 	bl	8019a64 <__cxa_guard_release>
 80122aa:	4a06      	ldr	r2, [pc, #24]	; (80122c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80122ac:	4909      	ldr	r1, [pc, #36]	; (80122d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80122ae:	480a      	ldr	r0, [pc, #40]	; (80122d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80122b0:	f007 fbc2 	bl	8019a38 <__aeabi_atexit>
 80122b4:	4b05      	ldr	r3, [pc, #20]	; (80122cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80122b6:	612b      	str	r3, [r5, #16]
 80122b8:	4b07      	ldr	r3, [pc, #28]	; (80122d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80122ba:	616b      	str	r3, [r5, #20]
 80122bc:	bd38      	pop	{r3, r4, r5, pc}
 80122be:	bf00      	nop
 80122c0:	20012268 	.word	0x20012268
 80122c4:	20000000 	.word	0x20000000
 80122c8:	0801090d 	.word	0x0801090d
 80122cc:	200000c8 	.word	0x200000c8
 80122d0:	2001226c 	.word	0x2001226c
 80122d4:	0801090b 	.word	0x0801090b
 80122d8:	200000cc 	.word	0x200000cc

080122dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80122dc:	b538      	push	{r3, r4, r5, lr}
 80122de:	4c15      	ldr	r4, [pc, #84]	; (8012334 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80122e0:	7823      	ldrb	r3, [r4, #0]
 80122e2:	f3bf 8f5b 	dmb	ish
 80122e6:	07da      	lsls	r2, r3, #31
 80122e8:	4605      	mov	r5, r0
 80122ea:	d40b      	bmi.n	8012304 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80122ec:	4620      	mov	r0, r4
 80122ee:	f007 fbad 	bl	8019a4c <__cxa_guard_acquire>
 80122f2:	b138      	cbz	r0, 8012304 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80122f4:	4620      	mov	r0, r4
 80122f6:	f007 fbb5 	bl	8019a64 <__cxa_guard_release>
 80122fa:	4a0f      	ldr	r2, [pc, #60]	; (8012338 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80122fc:	490f      	ldr	r1, [pc, #60]	; (801233c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80122fe:	4810      	ldr	r0, [pc, #64]	; (8012340 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8012300:	f007 fb9a 	bl	8019a38 <__aeabi_atexit>
 8012304:	4c0f      	ldr	r4, [pc, #60]	; (8012344 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8012306:	7823      	ldrb	r3, [r4, #0]
 8012308:	f3bf 8f5b 	dmb	ish
 801230c:	07db      	lsls	r3, r3, #31
 801230e:	d40b      	bmi.n	8012328 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8012310:	4620      	mov	r0, r4
 8012312:	f007 fb9b 	bl	8019a4c <__cxa_guard_acquire>
 8012316:	b138      	cbz	r0, 8012328 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8012318:	4620      	mov	r0, r4
 801231a:	f007 fba3 	bl	8019a64 <__cxa_guard_release>
 801231e:	4a06      	ldr	r2, [pc, #24]	; (8012338 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8012320:	4909      	ldr	r1, [pc, #36]	; (8012348 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8012322:	480a      	ldr	r0, [pc, #40]	; (801234c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8012324:	f007 fb88 	bl	8019a38 <__aeabi_atexit>
 8012328:	4b05      	ldr	r3, [pc, #20]	; (8012340 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801232a:	60ab      	str	r3, [r5, #8]
 801232c:	4b07      	ldr	r3, [pc, #28]	; (801234c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801232e:	60eb      	str	r3, [r5, #12]
 8012330:	bd38      	pop	{r3, r4, r5, pc}
 8012332:	bf00      	nop
 8012334:	20012240 	.word	0x20012240
 8012338:	20000000 	.word	0x20000000
 801233c:	08010911 	.word	0x08010911
 8012340:	200000a0 	.word	0x200000a0
 8012344:	20012244 	.word	0x20012244
 8012348:	0801090f 	.word	0x0801090f
 801234c:	200000a4 	.word	0x200000a4

08012350 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8012350:	b510      	push	{r4, lr}
 8012352:	4604      	mov	r4, r0
 8012354:	f7ff ff88 	bl	8012268 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8012358:	4620      	mov	r0, r4
 801235a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801235e:	f7ff bfbd 	b.w	80122dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08012364 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8012364:	b538      	push	{r3, r4, r5, lr}
 8012366:	4c15      	ldr	r4, [pc, #84]	; (80123bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8012368:	7823      	ldrb	r3, [r4, #0]
 801236a:	f3bf 8f5b 	dmb	ish
 801236e:	07da      	lsls	r2, r3, #31
 8012370:	4605      	mov	r5, r0
 8012372:	d40b      	bmi.n	801238c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8012374:	4620      	mov	r0, r4
 8012376:	f007 fb69 	bl	8019a4c <__cxa_guard_acquire>
 801237a:	b138      	cbz	r0, 801238c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801237c:	4620      	mov	r0, r4
 801237e:	f007 fb71 	bl	8019a64 <__cxa_guard_release>
 8012382:	4a0f      	ldr	r2, [pc, #60]	; (80123c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8012384:	490f      	ldr	r1, [pc, #60]	; (80123c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8012386:	4810      	ldr	r0, [pc, #64]	; (80123c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8012388:	f007 fb56 	bl	8019a38 <__aeabi_atexit>
 801238c:	4c0f      	ldr	r4, [pc, #60]	; (80123cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801238e:	7823      	ldrb	r3, [r4, #0]
 8012390:	f3bf 8f5b 	dmb	ish
 8012394:	07db      	lsls	r3, r3, #31
 8012396:	d40b      	bmi.n	80123b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8012398:	4620      	mov	r0, r4
 801239a:	f007 fb57 	bl	8019a4c <__cxa_guard_acquire>
 801239e:	b138      	cbz	r0, 80123b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80123a0:	4620      	mov	r0, r4
 80123a2:	f007 fb5f 	bl	8019a64 <__cxa_guard_release>
 80123a6:	4a06      	ldr	r2, [pc, #24]	; (80123c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80123a8:	4909      	ldr	r1, [pc, #36]	; (80123d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80123aa:	480a      	ldr	r0, [pc, #40]	; (80123d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80123ac:	f007 fb44 	bl	8019a38 <__aeabi_atexit>
 80123b0:	4b05      	ldr	r3, [pc, #20]	; (80123c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80123b2:	622b      	str	r3, [r5, #32]
 80123b4:	4b07      	ldr	r3, [pc, #28]	; (80123d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80123b6:	626b      	str	r3, [r5, #36]	; 0x24
 80123b8:	bd38      	pop	{r3, r4, r5, pc}
 80123ba:	bf00      	nop
 80123bc:	20012270 	.word	0x20012270
 80123c0:	20000000 	.word	0x20000000
 80123c4:	08010905 	.word	0x08010905
 80123c8:	200000d0 	.word	0x200000d0
 80123cc:	20012274 	.word	0x20012274
 80123d0:	08010903 	.word	0x08010903
 80123d4:	200000d4 	.word	0x200000d4

080123d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80123d8:	b538      	push	{r3, r4, r5, lr}
 80123da:	4c15      	ldr	r4, [pc, #84]	; (8012430 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80123dc:	7823      	ldrb	r3, [r4, #0]
 80123de:	f3bf 8f5b 	dmb	ish
 80123e2:	07da      	lsls	r2, r3, #31
 80123e4:	4605      	mov	r5, r0
 80123e6:	d40b      	bmi.n	8012400 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80123e8:	4620      	mov	r0, r4
 80123ea:	f007 fb2f 	bl	8019a4c <__cxa_guard_acquire>
 80123ee:	b138      	cbz	r0, 8012400 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80123f0:	4620      	mov	r0, r4
 80123f2:	f007 fb37 	bl	8019a64 <__cxa_guard_release>
 80123f6:	4a0f      	ldr	r2, [pc, #60]	; (8012434 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80123f8:	490f      	ldr	r1, [pc, #60]	; (8012438 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80123fa:	4810      	ldr	r0, [pc, #64]	; (801243c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80123fc:	f007 fb1c 	bl	8019a38 <__aeabi_atexit>
 8012400:	4c0f      	ldr	r4, [pc, #60]	; (8012440 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8012402:	7823      	ldrb	r3, [r4, #0]
 8012404:	f3bf 8f5b 	dmb	ish
 8012408:	07db      	lsls	r3, r3, #31
 801240a:	d40b      	bmi.n	8012424 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801240c:	4620      	mov	r0, r4
 801240e:	f007 fb1d 	bl	8019a4c <__cxa_guard_acquire>
 8012412:	b138      	cbz	r0, 8012424 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8012414:	4620      	mov	r0, r4
 8012416:	f007 fb25 	bl	8019a64 <__cxa_guard_release>
 801241a:	4a06      	ldr	r2, [pc, #24]	; (8012434 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801241c:	4909      	ldr	r1, [pc, #36]	; (8012444 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801241e:	480a      	ldr	r0, [pc, #40]	; (8012448 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8012420:	f007 fb0a 	bl	8019a38 <__aeabi_atexit>
 8012424:	4b05      	ldr	r3, [pc, #20]	; (801243c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8012426:	61ab      	str	r3, [r5, #24]
 8012428:	4b07      	ldr	r3, [pc, #28]	; (8012448 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801242a:	61eb      	str	r3, [r5, #28]
 801242c:	bd38      	pop	{r3, r4, r5, pc}
 801242e:	bf00      	nop
 8012430:	20012248 	.word	0x20012248
 8012434:	20000000 	.word	0x20000000
 8012438:	08010909 	.word	0x08010909
 801243c:	200000a8 	.word	0x200000a8
 8012440:	2001224c 	.word	0x2001224c
 8012444:	08010907 	.word	0x08010907
 8012448:	200000ac 	.word	0x200000ac

0801244c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801244c:	b510      	push	{r4, lr}
 801244e:	4604      	mov	r4, r0
 8012450:	f7ff ff88 	bl	8012364 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8012454:	4620      	mov	r0, r4
 8012456:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801245a:	f7ff bfbd 	b.w	80123d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08012460 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8012460:	b538      	push	{r3, r4, r5, lr}
 8012462:	4c15      	ldr	r4, [pc, #84]	; (80124b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8012464:	7823      	ldrb	r3, [r4, #0]
 8012466:	f3bf 8f5b 	dmb	ish
 801246a:	07da      	lsls	r2, r3, #31
 801246c:	4605      	mov	r5, r0
 801246e:	d40b      	bmi.n	8012488 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8012470:	4620      	mov	r0, r4
 8012472:	f007 faeb 	bl	8019a4c <__cxa_guard_acquire>
 8012476:	b138      	cbz	r0, 8012488 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8012478:	4620      	mov	r0, r4
 801247a:	f007 faf3 	bl	8019a64 <__cxa_guard_release>
 801247e:	4a0f      	ldr	r2, [pc, #60]	; (80124bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8012480:	490f      	ldr	r1, [pc, #60]	; (80124c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8012482:	4810      	ldr	r0, [pc, #64]	; (80124c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8012484:	f007 fad8 	bl	8019a38 <__aeabi_atexit>
 8012488:	4c0f      	ldr	r4, [pc, #60]	; (80124c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801248a:	7823      	ldrb	r3, [r4, #0]
 801248c:	f3bf 8f5b 	dmb	ish
 8012490:	07db      	lsls	r3, r3, #31
 8012492:	d40b      	bmi.n	80124ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8012494:	4620      	mov	r0, r4
 8012496:	f007 fad9 	bl	8019a4c <__cxa_guard_acquire>
 801249a:	b138      	cbz	r0, 80124ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801249c:	4620      	mov	r0, r4
 801249e:	f007 fae1 	bl	8019a64 <__cxa_guard_release>
 80124a2:	4a06      	ldr	r2, [pc, #24]	; (80124bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80124a4:	4909      	ldr	r1, [pc, #36]	; (80124cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80124a6:	480a      	ldr	r0, [pc, #40]	; (80124d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80124a8:	f007 fac6 	bl	8019a38 <__aeabi_atexit>
 80124ac:	4b05      	ldr	r3, [pc, #20]	; (80124c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80124ae:	632b      	str	r3, [r5, #48]	; 0x30
 80124b0:	4b07      	ldr	r3, [pc, #28]	; (80124d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80124b2:	636b      	str	r3, [r5, #52]	; 0x34
 80124b4:	bd38      	pop	{r3, r4, r5, pc}
 80124b6:	bf00      	nop
 80124b8:	20012280 	.word	0x20012280
 80124bc:	20000000 	.word	0x20000000
 80124c0:	080108fd 	.word	0x080108fd
 80124c4:	200000e0 	.word	0x200000e0
 80124c8:	20012284 	.word	0x20012284
 80124cc:	080108fb 	.word	0x080108fb
 80124d0:	200000e4 	.word	0x200000e4

080124d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80124d4:	b538      	push	{r3, r4, r5, lr}
 80124d6:	4c15      	ldr	r4, [pc, #84]	; (801252c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80124d8:	7823      	ldrb	r3, [r4, #0]
 80124da:	f3bf 8f5b 	dmb	ish
 80124de:	07da      	lsls	r2, r3, #31
 80124e0:	4605      	mov	r5, r0
 80124e2:	d40b      	bmi.n	80124fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80124e4:	4620      	mov	r0, r4
 80124e6:	f007 fab1 	bl	8019a4c <__cxa_guard_acquire>
 80124ea:	b138      	cbz	r0, 80124fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80124ec:	4620      	mov	r0, r4
 80124ee:	f007 fab9 	bl	8019a64 <__cxa_guard_release>
 80124f2:	4a0f      	ldr	r2, [pc, #60]	; (8012530 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80124f4:	490f      	ldr	r1, [pc, #60]	; (8012534 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80124f6:	4810      	ldr	r0, [pc, #64]	; (8012538 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80124f8:	f007 fa9e 	bl	8019a38 <__aeabi_atexit>
 80124fc:	4c0f      	ldr	r4, [pc, #60]	; (801253c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80124fe:	7823      	ldrb	r3, [r4, #0]
 8012500:	f3bf 8f5b 	dmb	ish
 8012504:	07db      	lsls	r3, r3, #31
 8012506:	d40b      	bmi.n	8012520 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8012508:	4620      	mov	r0, r4
 801250a:	f007 fa9f 	bl	8019a4c <__cxa_guard_acquire>
 801250e:	b138      	cbz	r0, 8012520 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8012510:	4620      	mov	r0, r4
 8012512:	f007 faa7 	bl	8019a64 <__cxa_guard_release>
 8012516:	4a06      	ldr	r2, [pc, #24]	; (8012530 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8012518:	4909      	ldr	r1, [pc, #36]	; (8012540 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801251a:	480a      	ldr	r0, [pc, #40]	; (8012544 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801251c:	f007 fa8c 	bl	8019a38 <__aeabi_atexit>
 8012520:	4b05      	ldr	r3, [pc, #20]	; (8012538 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8012522:	62ab      	str	r3, [r5, #40]	; 0x28
 8012524:	4b07      	ldr	r3, [pc, #28]	; (8012544 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8012526:	62eb      	str	r3, [r5, #44]	; 0x2c
 8012528:	bd38      	pop	{r3, r4, r5, pc}
 801252a:	bf00      	nop
 801252c:	20012250 	.word	0x20012250
 8012530:	20000000 	.word	0x20000000
 8012534:	08010901 	.word	0x08010901
 8012538:	200000b0 	.word	0x200000b0
 801253c:	20012254 	.word	0x20012254
 8012540:	080108ff 	.word	0x080108ff
 8012544:	200000b4 	.word	0x200000b4

08012548 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8012548:	b510      	push	{r4, lr}
 801254a:	4604      	mov	r4, r0
 801254c:	f7ff ff88 	bl	8012460 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8012550:	4620      	mov	r0, r4
 8012552:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012556:	f7ff bfbd 	b.w	80124d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801255c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801255c:	b538      	push	{r3, r4, r5, lr}
 801255e:	4c15      	ldr	r4, [pc, #84]	; (80125b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8012560:	7823      	ldrb	r3, [r4, #0]
 8012562:	f3bf 8f5b 	dmb	ish
 8012566:	07da      	lsls	r2, r3, #31
 8012568:	4605      	mov	r5, r0
 801256a:	d40b      	bmi.n	8012584 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801256c:	4620      	mov	r0, r4
 801256e:	f007 fa6d 	bl	8019a4c <__cxa_guard_acquire>
 8012572:	b138      	cbz	r0, 8012584 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8012574:	4620      	mov	r0, r4
 8012576:	f007 fa75 	bl	8019a64 <__cxa_guard_release>
 801257a:	4a0f      	ldr	r2, [pc, #60]	; (80125b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801257c:	490f      	ldr	r1, [pc, #60]	; (80125bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801257e:	4810      	ldr	r0, [pc, #64]	; (80125c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8012580:	f007 fa5a 	bl	8019a38 <__aeabi_atexit>
 8012584:	4c0f      	ldr	r4, [pc, #60]	; (80125c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8012586:	7823      	ldrb	r3, [r4, #0]
 8012588:	f3bf 8f5b 	dmb	ish
 801258c:	07db      	lsls	r3, r3, #31
 801258e:	d40b      	bmi.n	80125a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8012590:	4620      	mov	r0, r4
 8012592:	f007 fa5b 	bl	8019a4c <__cxa_guard_acquire>
 8012596:	b138      	cbz	r0, 80125a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8012598:	4620      	mov	r0, r4
 801259a:	f007 fa63 	bl	8019a64 <__cxa_guard_release>
 801259e:	4a06      	ldr	r2, [pc, #24]	; (80125b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80125a0:	4909      	ldr	r1, [pc, #36]	; (80125c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80125a2:	480a      	ldr	r0, [pc, #40]	; (80125cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80125a4:	f007 fa48 	bl	8019a38 <__aeabi_atexit>
 80125a8:	4b05      	ldr	r3, [pc, #20]	; (80125c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80125aa:	652b      	str	r3, [r5, #80]	; 0x50
 80125ac:	4b07      	ldr	r3, [pc, #28]	; (80125cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80125ae:	656b      	str	r3, [r5, #84]	; 0x54
 80125b0:	bd38      	pop	{r3, r4, r5, pc}
 80125b2:	bf00      	nop
 80125b4:	20012288 	.word	0x20012288
 80125b8:	20000000 	.word	0x20000000
 80125bc:	080108ed 	.word	0x080108ed
 80125c0:	200000e8 	.word	0x200000e8
 80125c4:	2001228c 	.word	0x2001228c
 80125c8:	080108eb 	.word	0x080108eb
 80125cc:	200000ec 	.word	0x200000ec

080125d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80125d0:	b538      	push	{r3, r4, r5, lr}
 80125d2:	4c15      	ldr	r4, [pc, #84]	; (8012628 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80125d4:	7823      	ldrb	r3, [r4, #0]
 80125d6:	f3bf 8f5b 	dmb	ish
 80125da:	07da      	lsls	r2, r3, #31
 80125dc:	4605      	mov	r5, r0
 80125de:	d40b      	bmi.n	80125f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80125e0:	4620      	mov	r0, r4
 80125e2:	f007 fa33 	bl	8019a4c <__cxa_guard_acquire>
 80125e6:	b138      	cbz	r0, 80125f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80125e8:	4620      	mov	r0, r4
 80125ea:	f007 fa3b 	bl	8019a64 <__cxa_guard_release>
 80125ee:	4a0f      	ldr	r2, [pc, #60]	; (801262c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80125f0:	490f      	ldr	r1, [pc, #60]	; (8012630 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80125f2:	4810      	ldr	r0, [pc, #64]	; (8012634 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80125f4:	f007 fa20 	bl	8019a38 <__aeabi_atexit>
 80125f8:	4c0f      	ldr	r4, [pc, #60]	; (8012638 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80125fa:	7823      	ldrb	r3, [r4, #0]
 80125fc:	f3bf 8f5b 	dmb	ish
 8012600:	07db      	lsls	r3, r3, #31
 8012602:	d40b      	bmi.n	801261c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8012604:	4620      	mov	r0, r4
 8012606:	f007 fa21 	bl	8019a4c <__cxa_guard_acquire>
 801260a:	b138      	cbz	r0, 801261c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801260c:	4620      	mov	r0, r4
 801260e:	f007 fa29 	bl	8019a64 <__cxa_guard_release>
 8012612:	4a06      	ldr	r2, [pc, #24]	; (801262c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8012614:	4909      	ldr	r1, [pc, #36]	; (801263c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8012616:	480a      	ldr	r0, [pc, #40]	; (8012640 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8012618:	f007 fa0e 	bl	8019a38 <__aeabi_atexit>
 801261c:	4b05      	ldr	r3, [pc, #20]	; (8012634 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801261e:	64ab      	str	r3, [r5, #72]	; 0x48
 8012620:	4b07      	ldr	r3, [pc, #28]	; (8012640 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8012622:	64eb      	str	r3, [r5, #76]	; 0x4c
 8012624:	bd38      	pop	{r3, r4, r5, pc}
 8012626:	bf00      	nop
 8012628:	20012290 	.word	0x20012290
 801262c:	20000000 	.word	0x20000000
 8012630:	080108f1 	.word	0x080108f1
 8012634:	200000f0 	.word	0x200000f0
 8012638:	20012294 	.word	0x20012294
 801263c:	080108ef 	.word	0x080108ef
 8012640:	200000f4 	.word	0x200000f4

08012644 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8012644:	b538      	push	{r3, r4, r5, lr}
 8012646:	4c15      	ldr	r4, [pc, #84]	; (801269c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8012648:	7823      	ldrb	r3, [r4, #0]
 801264a:	f3bf 8f5b 	dmb	ish
 801264e:	07da      	lsls	r2, r3, #31
 8012650:	4605      	mov	r5, r0
 8012652:	d40b      	bmi.n	801266c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8012654:	4620      	mov	r0, r4
 8012656:	f007 f9f9 	bl	8019a4c <__cxa_guard_acquire>
 801265a:	b138      	cbz	r0, 801266c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801265c:	4620      	mov	r0, r4
 801265e:	f007 fa01 	bl	8019a64 <__cxa_guard_release>
 8012662:	4a0f      	ldr	r2, [pc, #60]	; (80126a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8012664:	490f      	ldr	r1, [pc, #60]	; (80126a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8012666:	4810      	ldr	r0, [pc, #64]	; (80126a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8012668:	f007 f9e6 	bl	8019a38 <__aeabi_atexit>
 801266c:	4c0f      	ldr	r4, [pc, #60]	; (80126ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801266e:	7823      	ldrb	r3, [r4, #0]
 8012670:	f3bf 8f5b 	dmb	ish
 8012674:	07db      	lsls	r3, r3, #31
 8012676:	d40b      	bmi.n	8012690 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8012678:	4620      	mov	r0, r4
 801267a:	f007 f9e7 	bl	8019a4c <__cxa_guard_acquire>
 801267e:	b138      	cbz	r0, 8012690 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8012680:	4620      	mov	r0, r4
 8012682:	f007 f9ef 	bl	8019a64 <__cxa_guard_release>
 8012686:	4a06      	ldr	r2, [pc, #24]	; (80126a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8012688:	4909      	ldr	r1, [pc, #36]	; (80126b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801268a:	480a      	ldr	r0, [pc, #40]	; (80126b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801268c:	f007 f9d4 	bl	8019a38 <__aeabi_atexit>
 8012690:	4b05      	ldr	r3, [pc, #20]	; (80126a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8012692:	642b      	str	r3, [r5, #64]	; 0x40
 8012694:	4b07      	ldr	r3, [pc, #28]	; (80126b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8012696:	646b      	str	r3, [r5, #68]	; 0x44
 8012698:	bd38      	pop	{r3, r4, r5, pc}
 801269a:	bf00      	nop
 801269c:	20012258 	.word	0x20012258
 80126a0:	20000000 	.word	0x20000000
 80126a4:	080108f5 	.word	0x080108f5
 80126a8:	200000b8 	.word	0x200000b8
 80126ac:	2001225c 	.word	0x2001225c
 80126b0:	080108f3 	.word	0x080108f3
 80126b4:	200000bc 	.word	0x200000bc

080126b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80126b8:	b538      	push	{r3, r4, r5, lr}
 80126ba:	4c15      	ldr	r4, [pc, #84]	; (8012710 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80126bc:	7823      	ldrb	r3, [r4, #0]
 80126be:	f3bf 8f5b 	dmb	ish
 80126c2:	07da      	lsls	r2, r3, #31
 80126c4:	4605      	mov	r5, r0
 80126c6:	d40b      	bmi.n	80126e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80126c8:	4620      	mov	r0, r4
 80126ca:	f007 f9bf 	bl	8019a4c <__cxa_guard_acquire>
 80126ce:	b138      	cbz	r0, 80126e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80126d0:	4620      	mov	r0, r4
 80126d2:	f007 f9c7 	bl	8019a64 <__cxa_guard_release>
 80126d6:	4a0f      	ldr	r2, [pc, #60]	; (8012714 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80126d8:	490f      	ldr	r1, [pc, #60]	; (8012718 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80126da:	4810      	ldr	r0, [pc, #64]	; (801271c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80126dc:	f007 f9ac 	bl	8019a38 <__aeabi_atexit>
 80126e0:	4c0f      	ldr	r4, [pc, #60]	; (8012720 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80126e2:	7823      	ldrb	r3, [r4, #0]
 80126e4:	f3bf 8f5b 	dmb	ish
 80126e8:	07db      	lsls	r3, r3, #31
 80126ea:	d40b      	bmi.n	8012704 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80126ec:	4620      	mov	r0, r4
 80126ee:	f007 f9ad 	bl	8019a4c <__cxa_guard_acquire>
 80126f2:	b138      	cbz	r0, 8012704 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80126f4:	4620      	mov	r0, r4
 80126f6:	f007 f9b5 	bl	8019a64 <__cxa_guard_release>
 80126fa:	4a06      	ldr	r2, [pc, #24]	; (8012714 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80126fc:	4909      	ldr	r1, [pc, #36]	; (8012724 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80126fe:	480a      	ldr	r0, [pc, #40]	; (8012728 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8012700:	f007 f99a 	bl	8019a38 <__aeabi_atexit>
 8012704:	4b05      	ldr	r3, [pc, #20]	; (801271c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8012706:	63ab      	str	r3, [r5, #56]	; 0x38
 8012708:	4b07      	ldr	r3, [pc, #28]	; (8012728 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801270a:	63eb      	str	r3, [r5, #60]	; 0x3c
 801270c:	bd38      	pop	{r3, r4, r5, pc}
 801270e:	bf00      	nop
 8012710:	20012278 	.word	0x20012278
 8012714:	20000000 	.word	0x20000000
 8012718:	080108f9 	.word	0x080108f9
 801271c:	200000d8 	.word	0x200000d8
 8012720:	2001227c 	.word	0x2001227c
 8012724:	080108f7 	.word	0x080108f7
 8012728:	200000dc 	.word	0x200000dc

0801272c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801272c:	b510      	push	{r4, lr}
 801272e:	4604      	mov	r4, r0
 8012730:	f7ff ff14 	bl	801255c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8012734:	4620      	mov	r0, r4
 8012736:	f7ff ff85 	bl	8012644 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801273a:	4620      	mov	r0, r4
 801273c:	f7ff ff48 	bl	80125d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8012740:	4620      	mov	r0, r4
 8012742:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012746:	f7ff bfb7 	b.w	80126b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801274c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801274c:	b538      	push	{r3, r4, r5, lr}
 801274e:	4c15      	ldr	r4, [pc, #84]	; (80127a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8012750:	7823      	ldrb	r3, [r4, #0]
 8012752:	f3bf 8f5b 	dmb	ish
 8012756:	07da      	lsls	r2, r3, #31
 8012758:	4605      	mov	r5, r0
 801275a:	d40b      	bmi.n	8012774 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801275c:	4620      	mov	r0, r4
 801275e:	f007 f975 	bl	8019a4c <__cxa_guard_acquire>
 8012762:	b138      	cbz	r0, 8012774 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8012764:	4620      	mov	r0, r4
 8012766:	f007 f97d 	bl	8019a64 <__cxa_guard_release>
 801276a:	4a0f      	ldr	r2, [pc, #60]	; (80127a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801276c:	490f      	ldr	r1, [pc, #60]	; (80127ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801276e:	4810      	ldr	r0, [pc, #64]	; (80127b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8012770:	f007 f962 	bl	8019a38 <__aeabi_atexit>
 8012774:	4c0f      	ldr	r4, [pc, #60]	; (80127b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8012776:	7823      	ldrb	r3, [r4, #0]
 8012778:	f3bf 8f5b 	dmb	ish
 801277c:	07db      	lsls	r3, r3, #31
 801277e:	d40b      	bmi.n	8012798 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8012780:	4620      	mov	r0, r4
 8012782:	f007 f963 	bl	8019a4c <__cxa_guard_acquire>
 8012786:	b138      	cbz	r0, 8012798 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8012788:	4620      	mov	r0, r4
 801278a:	f007 f96b 	bl	8019a64 <__cxa_guard_release>
 801278e:	4a06      	ldr	r2, [pc, #24]	; (80127a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8012790:	4909      	ldr	r1, [pc, #36]	; (80127b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8012792:	480a      	ldr	r0, [pc, #40]	; (80127bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8012794:	f007 f950 	bl	8019a38 <__aeabi_atexit>
 8012798:	4b05      	ldr	r3, [pc, #20]	; (80127b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801279a:	662b      	str	r3, [r5, #96]	; 0x60
 801279c:	4b07      	ldr	r3, [pc, #28]	; (80127bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801279e:	666b      	str	r3, [r5, #100]	; 0x64
 80127a0:	bd38      	pop	{r3, r4, r5, pc}
 80127a2:	bf00      	nop
 80127a4:	20012260 	.word	0x20012260
 80127a8:	20000000 	.word	0x20000000
 80127ac:	080108e5 	.word	0x080108e5
 80127b0:	200000c0 	.word	0x200000c0
 80127b4:	20012264 	.word	0x20012264
 80127b8:	080108e3 	.word	0x080108e3
 80127bc:	200000c4 	.word	0x200000c4

080127c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80127c0:	b538      	push	{r3, r4, r5, lr}
 80127c2:	4c15      	ldr	r4, [pc, #84]	; (8012818 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80127c4:	7823      	ldrb	r3, [r4, #0]
 80127c6:	f3bf 8f5b 	dmb	ish
 80127ca:	07da      	lsls	r2, r3, #31
 80127cc:	4605      	mov	r5, r0
 80127ce:	d40b      	bmi.n	80127e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80127d0:	4620      	mov	r0, r4
 80127d2:	f007 f93b 	bl	8019a4c <__cxa_guard_acquire>
 80127d6:	b138      	cbz	r0, 80127e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80127d8:	4620      	mov	r0, r4
 80127da:	f007 f943 	bl	8019a64 <__cxa_guard_release>
 80127de:	4a0f      	ldr	r2, [pc, #60]	; (801281c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80127e0:	490f      	ldr	r1, [pc, #60]	; (8012820 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80127e2:	4810      	ldr	r0, [pc, #64]	; (8012824 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80127e4:	f007 f928 	bl	8019a38 <__aeabi_atexit>
 80127e8:	4c0f      	ldr	r4, [pc, #60]	; (8012828 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80127ea:	7823      	ldrb	r3, [r4, #0]
 80127ec:	f3bf 8f5b 	dmb	ish
 80127f0:	07db      	lsls	r3, r3, #31
 80127f2:	d40b      	bmi.n	801280c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80127f4:	4620      	mov	r0, r4
 80127f6:	f007 f929 	bl	8019a4c <__cxa_guard_acquire>
 80127fa:	b138      	cbz	r0, 801280c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80127fc:	4620      	mov	r0, r4
 80127fe:	f007 f931 	bl	8019a64 <__cxa_guard_release>
 8012802:	4a06      	ldr	r2, [pc, #24]	; (801281c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8012804:	4909      	ldr	r1, [pc, #36]	; (801282c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8012806:	480a      	ldr	r0, [pc, #40]	; (8012830 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8012808:	f007 f916 	bl	8019a38 <__aeabi_atexit>
 801280c:	4b05      	ldr	r3, [pc, #20]	; (8012824 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801280e:	65ab      	str	r3, [r5, #88]	; 0x58
 8012810:	4b07      	ldr	r3, [pc, #28]	; (8012830 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8012812:	65eb      	str	r3, [r5, #92]	; 0x5c
 8012814:	bd38      	pop	{r3, r4, r5, pc}
 8012816:	bf00      	nop
 8012818:	20012238 	.word	0x20012238
 801281c:	20000000 	.word	0x20000000
 8012820:	080108e9 	.word	0x080108e9
 8012824:	20000098 	.word	0x20000098
 8012828:	2001223c 	.word	0x2001223c
 801282c:	080108e7 	.word	0x080108e7
 8012830:	2000009c 	.word	0x2000009c

08012834 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8012834:	b510      	push	{r4, lr}
 8012836:	4604      	mov	r4, r0
 8012838:	f7ff ff88 	bl	801274c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801283c:	4620      	mov	r0, r4
 801283e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012842:	f7ff bfbd 	b.w	80127c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08012848 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8012848:	b538      	push	{r3, r4, r5, lr}
 801284a:	4c15      	ldr	r4, [pc, #84]	; (80128a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801284c:	7823      	ldrb	r3, [r4, #0]
 801284e:	f3bf 8f5b 	dmb	ish
 8012852:	07da      	lsls	r2, r3, #31
 8012854:	4605      	mov	r5, r0
 8012856:	d40b      	bmi.n	8012870 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8012858:	4620      	mov	r0, r4
 801285a:	f007 f8f7 	bl	8019a4c <__cxa_guard_acquire>
 801285e:	b138      	cbz	r0, 8012870 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8012860:	4620      	mov	r0, r4
 8012862:	f007 f8ff 	bl	8019a64 <__cxa_guard_release>
 8012866:	4a0f      	ldr	r2, [pc, #60]	; (80128a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8012868:	490f      	ldr	r1, [pc, #60]	; (80128a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801286a:	4810      	ldr	r0, [pc, #64]	; (80128ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801286c:	f007 f8e4 	bl	8019a38 <__aeabi_atexit>
 8012870:	4c0f      	ldr	r4, [pc, #60]	; (80128b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8012872:	7823      	ldrb	r3, [r4, #0]
 8012874:	f3bf 8f5b 	dmb	ish
 8012878:	07db      	lsls	r3, r3, #31
 801287a:	d40b      	bmi.n	8012894 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801287c:	4620      	mov	r0, r4
 801287e:	f007 f8e5 	bl	8019a4c <__cxa_guard_acquire>
 8012882:	b138      	cbz	r0, 8012894 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8012884:	4620      	mov	r0, r4
 8012886:	f007 f8ed 	bl	8019a64 <__cxa_guard_release>
 801288a:	4a06      	ldr	r2, [pc, #24]	; (80128a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801288c:	4909      	ldr	r1, [pc, #36]	; (80128b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801288e:	480a      	ldr	r0, [pc, #40]	; (80128b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8012890:	f007 f8d2 	bl	8019a38 <__aeabi_atexit>
 8012894:	4b05      	ldr	r3, [pc, #20]	; (80128ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8012896:	672b      	str	r3, [r5, #112]	; 0x70
 8012898:	4b07      	ldr	r3, [pc, #28]	; (80128b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801289a:	676b      	str	r3, [r5, #116]	; 0x74
 801289c:	bd38      	pop	{r3, r4, r5, pc}
 801289e:	bf00      	nop
 80128a0:	20012230 	.word	0x20012230
 80128a4:	20000000 	.word	0x20000000
 80128a8:	080108dd 	.word	0x080108dd
 80128ac:	20000090 	.word	0x20000090
 80128b0:	20012234 	.word	0x20012234
 80128b4:	080108db 	.word	0x080108db
 80128b8:	20000094 	.word	0x20000094

080128bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80128bc:	b538      	push	{r3, r4, r5, lr}
 80128be:	4c15      	ldr	r4, [pc, #84]	; (8012914 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80128c0:	7823      	ldrb	r3, [r4, #0]
 80128c2:	f3bf 8f5b 	dmb	ish
 80128c6:	07da      	lsls	r2, r3, #31
 80128c8:	4605      	mov	r5, r0
 80128ca:	d40b      	bmi.n	80128e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80128cc:	4620      	mov	r0, r4
 80128ce:	f007 f8bd 	bl	8019a4c <__cxa_guard_acquire>
 80128d2:	b138      	cbz	r0, 80128e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80128d4:	4620      	mov	r0, r4
 80128d6:	f007 f8c5 	bl	8019a64 <__cxa_guard_release>
 80128da:	4a0f      	ldr	r2, [pc, #60]	; (8012918 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80128dc:	490f      	ldr	r1, [pc, #60]	; (801291c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80128de:	4810      	ldr	r0, [pc, #64]	; (8012920 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80128e0:	f007 f8aa 	bl	8019a38 <__aeabi_atexit>
 80128e4:	4c0f      	ldr	r4, [pc, #60]	; (8012924 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80128e6:	7823      	ldrb	r3, [r4, #0]
 80128e8:	f3bf 8f5b 	dmb	ish
 80128ec:	07db      	lsls	r3, r3, #31
 80128ee:	d40b      	bmi.n	8012908 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80128f0:	4620      	mov	r0, r4
 80128f2:	f007 f8ab 	bl	8019a4c <__cxa_guard_acquire>
 80128f6:	b138      	cbz	r0, 8012908 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80128f8:	4620      	mov	r0, r4
 80128fa:	f007 f8b3 	bl	8019a64 <__cxa_guard_release>
 80128fe:	4a06      	ldr	r2, [pc, #24]	; (8012918 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8012900:	4909      	ldr	r1, [pc, #36]	; (8012928 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8012902:	480a      	ldr	r0, [pc, #40]	; (801292c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8012904:	f007 f898 	bl	8019a38 <__aeabi_atexit>
 8012908:	4b05      	ldr	r3, [pc, #20]	; (8012920 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801290a:	66ab      	str	r3, [r5, #104]	; 0x68
 801290c:	4b07      	ldr	r3, [pc, #28]	; (801292c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801290e:	66eb      	str	r3, [r5, #108]	; 0x6c
 8012910:	bd38      	pop	{r3, r4, r5, pc}
 8012912:	bf00      	nop
 8012914:	20012228 	.word	0x20012228
 8012918:	20000000 	.word	0x20000000
 801291c:	080108e1 	.word	0x080108e1
 8012920:	20000088 	.word	0x20000088
 8012924:	2001222c 	.word	0x2001222c
 8012928:	080108df 	.word	0x080108df
 801292c:	2000008c 	.word	0x2000008c

08012930 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8012930:	b510      	push	{r4, lr}
 8012932:	4604      	mov	r4, r0
 8012934:	f7ff ff88 	bl	8012848 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8012938:	4620      	mov	r0, r4
 801293a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801293e:	f7ff bfbd 	b.w	80128bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08012942 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8012942:	b510      	push	{r4, lr}
 8012944:	4604      	mov	r4, r0
 8012946:	f7ff fff3 	bl	8012930 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801294a:	4620      	mov	r0, r4
 801294c:	f7ff ff72 	bl	8012834 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8012950:	4620      	mov	r0, r4
 8012952:	f7ff fdf9 	bl	8012548 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8012956:	4620      	mov	r0, r4
 8012958:	f7ff fcfa 	bl	8012350 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801295c:	4620      	mov	r0, r4
 801295e:	f7ff fd75 	bl	801244c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8012962:	4620      	mov	r0, r4
 8012964:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012968:	f7ff bee0 	b.w	801272c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801296c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801296c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012970:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8012974:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8012978:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 801297c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8012980:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8012984:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8012988:	8808      	ldrh	r0, [r1, #0]
 801298a:	fb0e 4708 	mla	r7, lr, r8, r4
 801298e:	f1be 0f00 	cmp.w	lr, #0
 8012992:	eb02 0a07 	add.w	sl, r2, r7
 8012996:	db37      	blt.n	8012a08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8012998:	45f3      	cmp	fp, lr
 801299a:	dd35      	ble.n	8012a08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 801299c:	2c00      	cmp	r4, #0
 801299e:	db31      	blt.n	8012a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80129a0:	45a0      	cmp	r8, r4
 80129a2:	dd2f      	ble.n	8012a04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80129a4:	5dd2      	ldrb	r2, [r2, r7]
 80129a6:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 80129aa:	1c62      	adds	r2, r4, #1
 80129ac:	d42f      	bmi.n	8012a0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80129ae:	4590      	cmp	r8, r2
 80129b0:	dd2d      	ble.n	8012a0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80129b2:	b366      	cbz	r6, 8012a0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80129b4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80129b8:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80129bc:	f11e 0e01 	adds.w	lr, lr, #1
 80129c0:	d429      	bmi.n	8012a16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80129c2:	45f3      	cmp	fp, lr
 80129c4:	dd27      	ble.n	8012a16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80129c6:	f1bc 0f00 	cmp.w	ip, #0
 80129ca:	f000 80a0 	beq.w	8012b0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 80129ce:	2c00      	cmp	r4, #0
 80129d0:	db1f      	blt.n	8012a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80129d2:	45a0      	cmp	r8, r4
 80129d4:	dd1d      	ble.n	8012a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80129d6:	f81a 2008 	ldrb.w	r2, [sl, r8]
 80129da:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 80129de:	3401      	adds	r4, #1
 80129e0:	d41c      	bmi.n	8012a1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80129e2:	45a0      	cmp	r8, r4
 80129e4:	dd1a      	ble.n	8012a1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80129e6:	b1de      	cbz	r6, 8012a20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 80129e8:	44d0      	add	r8, sl
 80129ea:	f898 2001 	ldrb.w	r2, [r8, #1]
 80129ee:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80129f2:	2e0f      	cmp	r6, #15
 80129f4:	d915      	bls.n	8012a22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 80129f6:	4b49      	ldr	r3, [pc, #292]	; (8012b1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 80129f8:	4a49      	ldr	r2, [pc, #292]	; (8012b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 80129fa:	484a      	ldr	r0, [pc, #296]	; (8012b24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 80129fc:	f240 11ef 	movw	r1, #495	; 0x1ef
 8012a00:	f007 f84e 	bl	8019aa0 <__assert_func>
 8012a04:	4681      	mov	r9, r0
 8012a06:	e7d0      	b.n	80129aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8012a08:	4607      	mov	r7, r0
 8012a0a:	4681      	mov	r9, r0
 8012a0c:	e7d6      	b.n	80129bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8012a0e:	4607      	mov	r7, r0
 8012a10:	e7d4      	b.n	80129bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8012a12:	4686      	mov	lr, r0
 8012a14:	e7e3      	b.n	80129de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8012a16:	4603      	mov	r3, r0
 8012a18:	4686      	mov	lr, r0
 8012a1a:	e7ea      	b.n	80129f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8012a1c:	4603      	mov	r3, r0
 8012a1e:	e7e8      	b.n	80129f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8012a20:	4603      	mov	r3, r0
 8012a22:	f1bc 0f0f 	cmp.w	ip, #15
 8012a26:	d8e6      	bhi.n	80129f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8012a28:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8012a2c:	fb16 f80c 	smulbb	r8, r6, ip
 8012a30:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8012a34:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8012a38:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8012a3c:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8012a40:	ea44 0909 	orr.w	r9, r4, r9
 8012a44:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8012a48:	f1cc 0410 	rsb	r4, ip, #16
 8012a4c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8012a50:	1ba4      	subs	r4, r4, r6
 8012a52:	041a      	lsls	r2, r3, #16
 8012a54:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8012a58:	ea4a 0707 	orr.w	r7, sl, r7
 8012a5c:	4377      	muls	r7, r6
 8012a5e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8012a62:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8012a66:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012a6a:	fb04 7409 	mla	r4, r4, r9, r7
 8012a6e:	4313      	orrs	r3, r2
 8012a70:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8012a74:	fb08 4303 	mla	r3, r8, r3, r4
 8012a78:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8012a7c:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8012a80:	4322      	orrs	r2, r4
 8012a82:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8012a86:	fb0c 3202 	mla	r2, ip, r2, r3
 8012a8a:	0d53      	lsrs	r3, r2, #21
 8012a8c:	0952      	lsrs	r2, r2, #5
 8012a8e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012a92:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8012a96:	431a      	orrs	r2, r3
 8012a98:	b293      	uxth	r3, r2
 8012a9a:	b2af      	uxth	r7, r5
 8012a9c:	1202      	asrs	r2, r0, #8
 8012a9e:	43ed      	mvns	r5, r5
 8012aa0:	b2ed      	uxtb	r5, r5
 8012aa2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8012aa6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8012aaa:	fb12 f205 	smulbb	r2, r2, r5
 8012aae:	10c6      	asrs	r6, r0, #3
 8012ab0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012ab4:	fb0c 2c07 	mla	ip, ip, r7, r2
 8012ab8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012abc:	10da      	asrs	r2, r3, #3
 8012abe:	fb16 f605 	smulbb	r6, r6, r5
 8012ac2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8012ac6:	fb02 6207 	mla	r2, r2, r7, r6
 8012aca:	b296      	uxth	r6, r2
 8012acc:	00c2      	lsls	r2, r0, #3
 8012ace:	00dc      	lsls	r4, r3, #3
 8012ad0:	b2d2      	uxtb	r2, r2
 8012ad2:	b2e4      	uxtb	r4, r4
 8012ad4:	fb12 f205 	smulbb	r2, r2, r5
 8012ad8:	fb04 2207 	mla	r2, r4, r7, r2
 8012adc:	fa1f fc8c 	uxth.w	ip, ip
 8012ae0:	b292      	uxth	r2, r2
 8012ae2:	f10c 0301 	add.w	r3, ip, #1
 8012ae6:	1c50      	adds	r0, r2, #1
 8012ae8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8012aec:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8012af0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012af4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8012af8:	4313      	orrs	r3, r2
 8012afa:	1c72      	adds	r2, r6, #1
 8012afc:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8012b00:	0952      	lsrs	r2, r2, #5
 8012b02:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012b06:	4313      	orrs	r3, r2
 8012b08:	800b      	strh	r3, [r1, #0]
 8012b0a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b0e:	2e0f      	cmp	r6, #15
 8012b10:	f63f af71 	bhi.w	80129f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8012b14:	4603      	mov	r3, r0
 8012b16:	4686      	mov	lr, r0
 8012b18:	e786      	b.n	8012a28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8012b1a:	bf00      	nop
 8012b1c:	0801d6d1 	.word	0x0801d6d1
 8012b20:	0801dcd2 	.word	0x0801dcd2
 8012b24:	0801d759 	.word	0x0801d759

08012b28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8012b28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b2c:	ed2d 8b08 	vpush	{d8-d11}
 8012b30:	b09b      	sub	sp, #108	; 0x6c
 8012b32:	e9dd 982d 	ldrd	r9, r8, [sp, #180]	; 0xb4
 8012b36:	9309      	str	r3, [sp, #36]	; 0x24
 8012b38:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8012b3c:	9e31      	ldr	r6, [sp, #196]	; 0xc4
 8012b3e:	930a      	str	r3, [sp, #40]	; 0x28
 8012b40:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8012b44:	930e      	str	r3, [sp, #56]	; 0x38
 8012b46:	910d      	str	r1, [sp, #52]	; 0x34
 8012b48:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8012b4c:	9018      	str	r0, [sp, #96]	; 0x60
 8012b4e:	6870      	ldr	r0, [r6, #4]
 8012b50:	9217      	str	r2, [sp, #92]	; 0x5c
 8012b52:	fb00 1303 	mla	r3, r0, r3, r1
 8012b56:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8012b58:	6831      	ldr	r1, [r6, #0]
 8012b5a:	6856      	ldr	r6, [r2, #4]
 8012b5c:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 8012b60:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8012b64:	6813      	ldr	r3, [r2, #0]
 8012b66:	930c      	str	r3, [sp, #48]	; 0x30
 8012b68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012b6a:	43db      	mvns	r3, r3
 8012b6c:	b2db      	uxtb	r3, r3
 8012b6e:	eeb0 aa40 	vmov.f32	s20, s0
 8012b72:	eef0 9a60 	vmov.f32	s19, s1
 8012b76:	eeb0 9a41 	vmov.f32	s18, s2
 8012b7a:	eeb0 8a62 	vmov.f32	s16, s5
 8012b7e:	eef0 8a43 	vmov.f32	s17, s6
 8012b82:	eef0 ba44 	vmov.f32	s23, s8
 8012b86:	eeb0 ba64 	vmov.f32	s22, s9
 8012b8a:	eef0 aa45 	vmov.f32	s21, s10
 8012b8e:	3604      	adds	r6, #4
 8012b90:	930b      	str	r3, [sp, #44]	; 0x2c
 8012b92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012b94:	2b00      	cmp	r3, #0
 8012b96:	dc03      	bgt.n	8012ba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8012b98:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8012b9a:	2b00      	cmp	r3, #0
 8012b9c:	f340 8215 	ble.w	8012fca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8012ba0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012ba2:	2b00      	cmp	r3, #0
 8012ba4:	f340 8102 	ble.w	8012dac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8012ba8:	ea5f 4229 	movs.w	r2, r9, asr #16
 8012bac:	ea4f 4328 	mov.w	r3, r8, asr #16
 8012bb0:	d42c      	bmi.n	8012c0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8012bb2:	1c51      	adds	r1, r2, #1
 8012bb4:	428c      	cmp	r4, r1
 8012bb6:	dd2c      	ble.n	8012c12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8012bb8:	2b00      	cmp	r3, #0
 8012bba:	db2a      	blt.n	8012c12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8012bbc:	980a      	ldr	r0, [sp, #40]	; 0x28
 8012bbe:	1c59      	adds	r1, r3, #1
 8012bc0:	4288      	cmp	r0, r1
 8012bc2:	dd26      	ble.n	8012c12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8012bc4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012bc6:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8012bc8:	3b01      	subs	r3, #1
 8012bca:	fb02 9203 	mla	r2, r2, r3, r9
 8012bce:	1412      	asrs	r2, r2, #16
 8012bd0:	d429      	bmi.n	8012c26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8012bd2:	3201      	adds	r2, #1
 8012bd4:	4294      	cmp	r4, r2
 8012bd6:	dd26      	ble.n	8012c26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8012bd8:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8012bda:	fb02 8303 	mla	r3, r2, r3, r8
 8012bde:	141b      	asrs	r3, r3, #16
 8012be0:	d421      	bmi.n	8012c26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8012be2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012be4:	3301      	adds	r3, #1
 8012be6:	429a      	cmp	r2, r3
 8012be8:	dd1d      	ble.n	8012c26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8012bea:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012bee:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8012bf2:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8012bf6:	9312      	str	r3, [sp, #72]	; 0x48
 8012bf8:	f1be 0f00 	cmp.w	lr, #0
 8012bfc:	f300 8138 	bgt.w	8012e70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x348>
 8012c00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012c02:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8012c06:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8012c0a:	e0d1      	b.n	8012db0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x288>
 8012c0c:	1c51      	adds	r1, r2, #1
 8012c0e:	f040 80c3 	bne.w	8012d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8012c12:	42a2      	cmp	r2, r4
 8012c14:	f280 80c0 	bge.w	8012d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8012c18:	1c5f      	adds	r7, r3, #1
 8012c1a:	f2c0 80bd 	blt.w	8012d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8012c1e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012c20:	4293      	cmp	r3, r2
 8012c22:	f280 80b9 	bge.w	8012d98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8012c26:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8012c2a:	4657      	mov	r7, sl
 8012c2c:	f1bb 0f00 	cmp.w	fp, #0
 8012c30:	dde6      	ble.n	8012c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8012c32:	ea5f 4229 	movs.w	r2, r9, asr #16
 8012c36:	ea4f 4328 	mov.w	r3, r8, asr #16
 8012c3a:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8012c3e:	f3c8 3103 	ubfx	r1, r8, #12, #4
 8012c42:	f100 80fc 	bmi.w	8012e3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x316>
 8012c46:	f102 0c01 	add.w	ip, r2, #1
 8012c4a:	4564      	cmp	r4, ip
 8012c4c:	f340 80f9 	ble.w	8012e42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8012c50:	2b00      	cmp	r3, #0
 8012c52:	f2c0 80f6 	blt.w	8012e42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8012c56:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8012c58:	f103 0c01 	add.w	ip, r3, #1
 8012c5c:	4565      	cmp	r5, ip
 8012c5e:	f340 80f0 	ble.w	8012e42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8012c62:	fb03 2304 	mla	r3, r3, r4, r2
 8012c66:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8012c68:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8012c6a:	441a      	add	r2, r3
 8012c6c:	5ceb      	ldrb	r3, [r5, r3]
 8012c6e:	f836 e013 	ldrh.w	lr, [r6, r3, lsl #1]
 8012c72:	2800      	cmp	r0, #0
 8012c74:	f000 80db 	beq.w	8012e2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x306>
 8012c78:	7853      	ldrb	r3, [r2, #1]
 8012c7a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012c7e:	9313      	str	r3, [sp, #76]	; 0x4c
 8012c80:	b141      	cbz	r1, 8012c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8012c82:	1913      	adds	r3, r2, r4
 8012c84:	5d12      	ldrb	r2, [r2, r4]
 8012c86:	785b      	ldrb	r3, [r3, #1]
 8012c88:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8012c8c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012c90:	9210      	str	r2, [sp, #64]	; 0x40
 8012c92:	9314      	str	r3, [sp, #80]	; 0x50
 8012c94:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8012c96:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012c98:	fb10 f201 	smulbb	r2, r0, r1
 8012c9c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8012ca0:	10d2      	asrs	r2, r2, #3
 8012ca2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012ca6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012caa:	ea4c 0c03 	orr.w	ip, ip, r3
 8012cae:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8012cb2:	930f      	str	r3, [sp, #60]	; 0x3c
 8012cb4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8012cb6:	041b      	lsls	r3, r3, #16
 8012cb8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8012cbc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8012cc0:	432b      	orrs	r3, r5
 8012cc2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8012cc4:	4353      	muls	r3, r2
 8012cc6:	fb05 330c 	mla	r3, r5, ip, r3
 8012cca:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8012cce:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012cd2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8012cd6:	ea4c 0e0e 	orr.w	lr, ip, lr
 8012cda:	f1c1 0c10 	rsb	ip, r1, #16
 8012cde:	ebac 0c00 	sub.w	ip, ip, r0
 8012ce2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8012ce6:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8012cea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012cec:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8012cee:	0418      	lsls	r0, r3, #16
 8012cf0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8012cf4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012cf8:	4318      	orrs	r0, r3
 8012cfa:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8012cfe:	fb02 c200 	mla	r2, r2, r0, ip
 8012d02:	0d53      	lsrs	r3, r2, #21
 8012d04:	0952      	lsrs	r2, r2, #5
 8012d06:	f8b7 c000 	ldrh.w	ip, [r7]
 8012d0a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012d0e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8012d12:	431a      	orrs	r2, r3
 8012d14:	b292      	uxth	r2, r2
 8012d16:	ea4f 212c 	mov.w	r1, ip, asr #8
 8012d1a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012d1e:	1210      	asrs	r0, r2, #8
 8012d20:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8012d24:	fb11 f105 	smulbb	r1, r1, r5
 8012d28:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8012d2c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8012d30:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012d34:	fb00 1003 	mla	r0, r0, r3, r1
 8012d38:	fa5f fc8c 	uxtb.w	ip, ip
 8012d3c:	10d1      	asrs	r1, r2, #3
 8012d3e:	00d2      	lsls	r2, r2, #3
 8012d40:	fb1c fc05 	smulbb	ip, ip, r5
 8012d44:	b2d2      	uxtb	r2, r2
 8012d46:	fb02 c203 	mla	r2, r2, r3, ip
 8012d4a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8012d4e:	b280      	uxth	r0, r0
 8012d50:	b292      	uxth	r2, r2
 8012d52:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8012d56:	fb1e fe05 	smulbb	lr, lr, r5
 8012d5a:	fb01 e103 	mla	r1, r1, r3, lr
 8012d5e:	f102 0c01 	add.w	ip, r2, #1
 8012d62:	1c43      	adds	r3, r0, #1
 8012d64:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8012d68:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8012d6c:	b289      	uxth	r1, r1
 8012d6e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012d72:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8012d76:	4313      	orrs	r3, r2
 8012d78:	1c4a      	adds	r2, r1, #1
 8012d7a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8012d7e:	0949      	lsrs	r1, r1, #5
 8012d80:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012d84:	430b      	orrs	r3, r1
 8012d86:	803b      	strh	r3, [r7, #0]
 8012d88:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8012d8a:	4499      	add	r9, r3
 8012d8c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8012d8e:	3702      	adds	r7, #2
 8012d90:	4498      	add	r8, r3
 8012d92:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8012d96:	e749      	b.n	8012c2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8012d98:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8012d9a:	4499      	add	r9, r3
 8012d9c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8012d9e:	4498      	add	r8, r3
 8012da0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012da2:	3b01      	subs	r3, #1
 8012da4:	9309      	str	r3, [sp, #36]	; 0x24
 8012da6:	f10a 0a02 	add.w	sl, sl, #2
 8012daa:	e6f9      	b.n	8012ba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8012dac:	f47f af0a 	bne.w	8012bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8012db0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012db2:	2b00      	cmp	r3, #0
 8012db4:	f340 8109 	ble.w	8012fca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8012db8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8012dbc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012dc0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8012dc4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8012dc6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8012dca:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8012dce:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8012dd2:	eef0 6a48 	vmov.f32	s13, s16
 8012dd6:	ee69 7a27 	vmul.f32	s15, s18, s15
 8012dda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012dde:	ee37 8a48 	vsub.f32	s16, s14, s16
 8012de2:	ee16 9a90 	vmov	r9, s13
 8012de6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8012dea:	eef0 6a68 	vmov.f32	s13, s17
 8012dee:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8012df2:	ee18 2a10 	vmov	r2, s16
 8012df6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8012dfa:	fb92 f3f3 	sdiv	r3, r2, r3
 8012dfe:	ee18 2a90 	vmov	r2, s17
 8012e02:	932f      	str	r3, [sp, #188]	; 0xbc
 8012e04:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8012e06:	fb92 f3f3 	sdiv	r3, r2, r3
 8012e0a:	9330      	str	r3, [sp, #192]	; 0xc0
 8012e0c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012e0e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8012e10:	3b01      	subs	r3, #1
 8012e12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012e16:	930d      	str	r3, [sp, #52]	; 0x34
 8012e18:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8012e1a:	bf08      	it	eq
 8012e1c:	4613      	moveq	r3, r2
 8012e1e:	ee16 8a90 	vmov	r8, s13
 8012e22:	9309      	str	r3, [sp, #36]	; 0x24
 8012e24:	eef0 8a67 	vmov.f32	s17, s15
 8012e28:	eeb0 8a47 	vmov.f32	s16, s14
 8012e2c:	e6b1      	b.n	8012b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8012e2e:	2900      	cmp	r1, #0
 8012e30:	f43f af30 	beq.w	8012c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8012e34:	5d13      	ldrb	r3, [r2, r4]
 8012e36:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012e3a:	9310      	str	r3, [sp, #64]	; 0x40
 8012e3c:	e72a      	b.n	8012c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8012e3e:	1c55      	adds	r5, r2, #1
 8012e40:	d1a2      	bne.n	8012d88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8012e42:	4294      	cmp	r4, r2
 8012e44:	dda0      	ble.n	8012d88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8012e46:	1c5d      	adds	r5, r3, #1
 8012e48:	db9e      	blt.n	8012d88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8012e4a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8012e4c:	429d      	cmp	r5, r3
 8012e4e:	dd9b      	ble.n	8012d88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8012e50:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8012e54:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8012e56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012e58:	9202      	str	r2, [sp, #8]
 8012e5a:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8012e5e:	e9cd 4300 	strd	r4, r3, [sp]
 8012e62:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8012e64:	9818      	ldr	r0, [sp, #96]	; 0x60
 8012e66:	4633      	mov	r3, r6
 8012e68:	4639      	mov	r1, r7
 8012e6a:	f7ff fd7f 	bl	801296c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8012e6e:	e78b      	b.n	8012d88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8012e70:	ea4f 4329 	mov.w	r3, r9, asr #16
 8012e74:	ea4f 4228 	mov.w	r2, r8, asr #16
 8012e78:	fb04 3202 	mla	r2, r4, r2, r3
 8012e7c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012e7e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012e80:	4413      	add	r3, r2
 8012e82:	5c8a      	ldrb	r2, [r1, r2]
 8012e84:	f3c9 3c03 	ubfx	ip, r9, #12, #4
 8012e88:	f3c8 3003 	ubfx	r0, r8, #12, #4
 8012e8c:	f836 1012 	ldrh.w	r1, [r6, r2, lsl #1]
 8012e90:	f1bc 0f00 	cmp.w	ip, #0
 8012e94:	f000 8091 	beq.w	8012fba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x492>
 8012e98:	785a      	ldrb	r2, [r3, #1]
 8012e9a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8012e9e:	9215      	str	r2, [sp, #84]	; 0x54
 8012ea0:	b140      	cbz	r0, 8012eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8012ea2:	191a      	adds	r2, r3, r4
 8012ea4:	5d1b      	ldrb	r3, [r3, r4]
 8012ea6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012eaa:	9311      	str	r3, [sp, #68]	; 0x44
 8012eac:	7853      	ldrb	r3, [r2, #1]
 8012eae:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012eb2:	9316      	str	r3, [sp, #88]	; 0x58
 8012eb4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8012eb6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8012eb8:	fb1c f200 	smulbb	r2, ip, r0
 8012ebc:	041f      	lsls	r7, r3, #16
 8012ebe:	10d2      	asrs	r2, r2, #3
 8012ec0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012ec4:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8012ec8:	431f      	orrs	r7, r3
 8012eca:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8012ece:	9319      	str	r3, [sp, #100]	; 0x64
 8012ed0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8012ed2:	041b      	lsls	r3, r3, #16
 8012ed4:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8012ed8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8012edc:	ea43 030b 	orr.w	r3, r3, fp
 8012ee0:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8012ee2:	4353      	muls	r3, r2
 8012ee4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8012ee8:	fb05 3707 	mla	r7, r5, r7, r3
 8012eec:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8012ef0:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8012ef4:	ea43 0b01 	orr.w	fp, r3, r1
 8012ef8:	f1c0 0110 	rsb	r1, r0, #16
 8012efc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8012efe:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8012f00:	eba1 0c0c 	sub.w	ip, r1, ip
 8012f04:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8012f08:	fb0c 770b 	mla	r7, ip, fp, r7
 8012f0c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8012f10:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8012f14:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012f18:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8012f1c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8012f20:	fb02 770c 	mla	r7, r2, ip, r7
 8012f24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012f26:	0d79      	lsrs	r1, r7, #21
 8012f28:	8812      	ldrh	r2, [r2, #0]
 8012f2a:	097f      	lsrs	r7, r7, #5
 8012f2c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012f30:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8012f34:	430f      	orrs	r7, r1
 8012f36:	1211      	asrs	r1, r2, #8
 8012f38:	b2bb      	uxth	r3, r7
 8012f3a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8012f3e:	fb11 f105 	smulbb	r1, r1, r5
 8012f42:	1218      	asrs	r0, r3, #8
 8012f44:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012f46:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8012f4a:	fb00 1005 	mla	r0, r0, r5, r1
 8012f4e:	10d7      	asrs	r7, r2, #3
 8012f50:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8012f52:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012f56:	fb17 f705 	smulbb	r7, r7, r5
 8012f5a:	10d9      	asrs	r1, r3, #3
 8012f5c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012f5e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8012f62:	fb01 7105 	mla	r1, r1, r5, r7
 8012f66:	00d2      	lsls	r2, r2, #3
 8012f68:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8012f6a:	b2d2      	uxtb	r2, r2
 8012f6c:	fb12 f205 	smulbb	r2, r2, r5
 8012f70:	00db      	lsls	r3, r3, #3
 8012f72:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012f74:	b2db      	uxtb	r3, r3
 8012f76:	b280      	uxth	r0, r0
 8012f78:	fb03 2305 	mla	r3, r3, r5, r2
 8012f7c:	b29b      	uxth	r3, r3
 8012f7e:	b289      	uxth	r1, r1
 8012f80:	1c42      	adds	r2, r0, #1
 8012f82:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8012f86:	1c4f      	adds	r7, r1, #1
 8012f88:	1c5a      	adds	r2, r3, #1
 8012f8a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8012f8e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8012f92:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8012f96:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012f9a:	0949      	lsrs	r1, r1, #5
 8012f9c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012f9e:	4310      	orrs	r0, r2
 8012fa0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012fa4:	4308      	orrs	r0, r1
 8012fa6:	f823 0b02 	strh.w	r0, [r3], #2
 8012faa:	930f      	str	r3, [sp, #60]	; 0x3c
 8012fac:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8012fae:	4499      	add	r9, r3
 8012fb0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8012fb2:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
 8012fb6:	4498      	add	r8, r3
 8012fb8:	e61e      	b.n	8012bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8012fba:	2800      	cmp	r0, #0
 8012fbc:	f43f af7a 	beq.w	8012eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8012fc0:	5d1b      	ldrb	r3, [r3, r4]
 8012fc2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012fc6:	9311      	str	r3, [sp, #68]	; 0x44
 8012fc8:	e774      	b.n	8012eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8012fca:	b01b      	add	sp, #108	; 0x6c
 8012fcc:	ecbd 8b08 	vpop	{d8-d11}
 8012fd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8012fd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012fd8:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 8012fdc:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8012fe0:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8012fe4:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8012fe8:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8012fec:	8808      	ldrh	r0, [r1, #0]
 8012fee:	fb06 570e 	mla	r7, r6, lr, r5
 8012ff2:	2e00      	cmp	r6, #0
 8012ff4:	eb02 0807 	add.w	r8, r2, r7
 8012ff8:	db38      	blt.n	801306c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8012ffa:	45b1      	cmp	r9, r6
 8012ffc:	dd36      	ble.n	801306c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8012ffe:	2d00      	cmp	r5, #0
 8013000:	db32      	blt.n	8013068 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8013002:	45ae      	cmp	lr, r5
 8013004:	dd30      	ble.n	8013068 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8013006:	5dd2      	ldrb	r2, [r2, r7]
 8013008:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801300c:	1c6a      	adds	r2, r5, #1
 801300e:	d430      	bmi.n	8013072 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8013010:	4596      	cmp	lr, r2
 8013012:	dd2e      	ble.n	8013072 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8013014:	b36c      	cbz	r4, 8013072 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8013016:	f898 2001 	ldrb.w	r2, [r8, #1]
 801301a:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801301e:	3601      	adds	r6, #1
 8013020:	d42b      	bmi.n	801307a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8013022:	45b1      	cmp	r9, r6
 8013024:	dd29      	ble.n	801307a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8013026:	f1bc 0f00 	cmp.w	ip, #0
 801302a:	d028      	beq.n	801307e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 801302c:	2d00      	cmp	r5, #0
 801302e:	db22      	blt.n	8013076 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8013030:	45ae      	cmp	lr, r5
 8013032:	dd20      	ble.n	8013076 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8013034:	f818 600e 	ldrb.w	r6, [r8, lr]
 8013038:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 801303c:	3501      	adds	r5, #1
 801303e:	d407      	bmi.n	8013050 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8013040:	45ae      	cmp	lr, r5
 8013042:	dd05      	ble.n	8013050 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8013044:	b134      	cbz	r4, 8013054 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8013046:	44c6      	add	lr, r8
 8013048:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801304c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013050:	2c0f      	cmp	r4, #15
 8013052:	d802      	bhi.n	801305a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8013054:	f1bc 0f0f 	cmp.w	ip, #15
 8013058:	d914      	bls.n	8013084 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 801305a:	4b26      	ldr	r3, [pc, #152]	; (80130f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 801305c:	4a26      	ldr	r2, [pc, #152]	; (80130f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 801305e:	4827      	ldr	r0, [pc, #156]	; (80130fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8013060:	f240 11ef 	movw	r1, #495	; 0x1ef
 8013064:	f006 fd1c 	bl	8019aa0 <__assert_func>
 8013068:	4607      	mov	r7, r0
 801306a:	e7cf      	b.n	801300c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 801306c:	4602      	mov	r2, r0
 801306e:	4607      	mov	r7, r0
 8013070:	e7d5      	b.n	801301e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8013072:	4602      	mov	r2, r0
 8013074:	e7d3      	b.n	801301e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8013076:	4606      	mov	r6, r0
 8013078:	e7e0      	b.n	801303c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 801307a:	4606      	mov	r6, r0
 801307c:	e7e8      	b.n	8013050 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801307e:	2c0f      	cmp	r4, #15
 8013080:	d8eb      	bhi.n	801305a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8013082:	4606      	mov	r6, r0
 8013084:	043d      	lsls	r5, r7, #16
 8013086:	fb14 f30c 	smulbb	r3, r4, ip
 801308a:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801308e:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8013092:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8013096:	10db      	asrs	r3, r3, #3
 8013098:	432f      	orrs	r7, r5
 801309a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801309e:	f1cc 0510 	rsb	r5, ip, #16
 80130a2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80130a6:	1b2d      	subs	r5, r5, r4
 80130a8:	ea4e 0202 	orr.w	r2, lr, r2
 80130ac:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 80130b0:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80130b4:	4354      	muls	r4, r2
 80130b6:	fb05 4507 	mla	r5, r5, r7, r4
 80130ba:	0404      	lsls	r4, r0, #16
 80130bc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80130c0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80130c4:	4320      	orrs	r0, r4
 80130c6:	fb03 5400 	mla	r4, r3, r0, r5
 80130ca:	0430      	lsls	r0, r6, #16
 80130cc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80130d0:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80130d4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80130d8:	4330      	orrs	r0, r6
 80130da:	fb03 4000 	mla	r0, r3, r0, r4
 80130de:	0d43      	lsrs	r3, r0, #21
 80130e0:	0940      	lsrs	r0, r0, #5
 80130e2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80130e6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80130ea:	4318      	orrs	r0, r3
 80130ec:	8008      	strh	r0, [r1, #0]
 80130ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80130f2:	bf00      	nop
 80130f4:	0801d6d1 	.word	0x0801d6d1
 80130f8:	0801dcd2 	.word	0x0801dcd2
 80130fc:	0801d759 	.word	0x0801d759

08013100 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8013100:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013104:	ed2d 8b0a 	vpush	{d8-d12}
 8013108:	b095      	sub	sp, #84	; 0x54
 801310a:	e9dd 9629 	ldrd	r9, r6, [sp, #164]	; 0xa4
 801310e:	9f2d      	ldr	r7, [sp, #180]	; 0xb4
 8013110:	9306      	str	r3, [sp, #24]
 8013112:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8013116:	9109      	str	r1, [sp, #36]	; 0x24
 8013118:	9307      	str	r3, [sp, #28]
 801311a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801311e:	9012      	str	r0, [sp, #72]	; 0x48
 8013120:	6878      	ldr	r0, [r7, #4]
 8013122:	9211      	str	r2, [sp, #68]	; 0x44
 8013124:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8013126:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 801312a:	fb00 1303 	mla	r3, r0, r3, r1
 801312e:	6839      	ldr	r1, [r7, #0]
 8013130:	6857      	ldr	r7, [r2, #4]
 8013132:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8013136:	6813      	ldr	r3, [r2, #0]
 8013138:	9308      	str	r3, [sp, #32]
 801313a:	eeb0 aa40 	vmov.f32	s20, s0
 801313e:	eef0 9a60 	vmov.f32	s19, s1
 8013142:	eeb0 9a41 	vmov.f32	s18, s2
 8013146:	eeb0 8a62 	vmov.f32	s16, s5
 801314a:	eef0 8a43 	vmov.f32	s17, s6
 801314e:	eeb0 ca44 	vmov.f32	s24, s8
 8013152:	eef0 ba64 	vmov.f32	s23, s9
 8013156:	eeb0 ba45 	vmov.f32	s22, s10
 801315a:	3704      	adds	r7, #4
 801315c:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8013160:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013162:	2b00      	cmp	r3, #0
 8013164:	dc03      	bgt.n	801316e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8013166:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013168:	2b00      	cmp	r3, #0
 801316a:	f340 819a 	ble.w	80134a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 801316e:	9b06      	ldr	r3, [sp, #24]
 8013170:	2b00      	cmp	r3, #0
 8013172:	f340 80c4 	ble.w	80132fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8013176:	ea5f 4229 	movs.w	r2, r9, asr #16
 801317a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801317e:	d429      	bmi.n	80131d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8013180:	1c51      	adds	r1, r2, #1
 8013182:	428c      	cmp	r4, r1
 8013184:	dd29      	ble.n	80131da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8013186:	2b00      	cmp	r3, #0
 8013188:	db27      	blt.n	80131da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 801318a:	9807      	ldr	r0, [sp, #28]
 801318c:	1c59      	adds	r1, r3, #1
 801318e:	4288      	cmp	r0, r1
 8013190:	dd23      	ble.n	80131da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8013192:	9b06      	ldr	r3, [sp, #24]
 8013194:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013196:	3b01      	subs	r3, #1
 8013198:	fb02 9203 	mla	r2, r2, r3, r9
 801319c:	1412      	asrs	r2, r2, #16
 801319e:	d425      	bmi.n	80131ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80131a0:	3201      	adds	r2, #1
 80131a2:	4294      	cmp	r4, r2
 80131a4:	dd22      	ble.n	80131ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80131a6:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80131a8:	fb02 6303 	mla	r3, r2, r3, r6
 80131ac:	141b      	asrs	r3, r3, #16
 80131ae:	d41d      	bmi.n	80131ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80131b0:	9a07      	ldr	r2, [sp, #28]
 80131b2:	3301      	adds	r3, #1
 80131b4:	429a      	cmp	r2, r3
 80131b6:	dd19      	ble.n	80131ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80131b8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80131bc:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 80131c0:	f1b8 0f00 	cmp.w	r8, #0
 80131c4:	f300 80f8 	bgt.w	80133b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b8>
 80131c8:	9b06      	ldr	r3, [sp, #24]
 80131ca:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80131ce:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80131d2:	e096      	b.n	8013302 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 80131d4:	1c51      	adds	r1, r2, #1
 80131d6:	f040 8088 	bne.w	80132ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80131da:	42a2      	cmp	r2, r4
 80131dc:	f280 8085 	bge.w	80132ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80131e0:	1c5a      	adds	r2, r3, #1
 80131e2:	f2c0 8082 	blt.w	80132ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80131e6:	9a07      	ldr	r2, [sp, #28]
 80131e8:	4293      	cmp	r3, r2
 80131ea:	da7e      	bge.n	80132ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80131ec:	f8dd b018 	ldr.w	fp, [sp, #24]
 80131f0:	46d0      	mov	r8, sl
 80131f2:	f1bb 0f00 	cmp.w	fp, #0
 80131f6:	dde7      	ble.n	80131c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 80131f8:	ea5f 4229 	movs.w	r2, r9, asr #16
 80131fc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8013200:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8013204:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8013208:	f100 80c0 	bmi.w	801338c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 801320c:	f102 0c01 	add.w	ip, r2, #1
 8013210:	4564      	cmp	r4, ip
 8013212:	f340 80bd 	ble.w	8013390 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8013216:	2b00      	cmp	r3, #0
 8013218:	f2c0 80ba 	blt.w	8013390 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 801321c:	9d07      	ldr	r5, [sp, #28]
 801321e:	f103 0c01 	add.w	ip, r3, #1
 8013222:	4565      	cmp	r5, ip
 8013224:	f340 80b4 	ble.w	8013390 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8013228:	fb03 2304 	mla	r3, r3, r4, r2
 801322c:	9d08      	ldr	r5, [sp, #32]
 801322e:	9a08      	ldr	r2, [sp, #32]
 8013230:	441a      	add	r2, r3
 8013232:	5ceb      	ldrb	r3, [r5, r3]
 8013234:	f837 e013 	ldrh.w	lr, [r7, r3, lsl #1]
 8013238:	2800      	cmp	r0, #0
 801323a:	f000 809f 	beq.w	801337c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27c>
 801323e:	7853      	ldrb	r3, [r2, #1]
 8013240:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013244:	930d      	str	r3, [sp, #52]	; 0x34
 8013246:	b141      	cbz	r1, 801325a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8013248:	1913      	adds	r3, r2, r4
 801324a:	5d12      	ldrb	r2, [r2, r4]
 801324c:	785b      	ldrb	r3, [r3, #1]
 801324e:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8013252:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013256:	920a      	str	r2, [sp, #40]	; 0x28
 8013258:	930e      	str	r3, [sp, #56]	; 0x38
 801325a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801325c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801325e:	fb10 f201 	smulbb	r2, r0, r1
 8013262:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013266:	10d2      	asrs	r2, r2, #3
 8013268:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801326c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013270:	ea4c 0c03 	orr.w	ip, ip, r3
 8013274:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8013278:	930c      	str	r3, [sp, #48]	; 0x30
 801327a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801327c:	041b      	lsls	r3, r3, #16
 801327e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8013282:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013286:	432b      	orrs	r3, r5
 8013288:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801328a:	4353      	muls	r3, r2
 801328c:	fb05 330c 	mla	r3, r5, ip, r3
 8013290:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8013294:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013298:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801329c:	ea4c 0e0e 	orr.w	lr, ip, lr
 80132a0:	f1c1 0c10 	rsb	ip, r1, #16
 80132a4:	ebac 0c00 	sub.w	ip, ip, r0
 80132a8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80132ac:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80132b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80132b2:	0418      	lsls	r0, r3, #16
 80132b4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80132b8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80132bc:	4318      	orrs	r0, r3
 80132be:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80132c2:	fb02 c200 	mla	r2, r2, r0, ip
 80132c6:	0d53      	lsrs	r3, r2, #21
 80132c8:	0952      	lsrs	r2, r2, #5
 80132ca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80132ce:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80132d2:	431a      	orrs	r2, r3
 80132d4:	f8a8 2000 	strh.w	r2, [r8]
 80132d8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80132da:	4499      	add	r9, r3
 80132dc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80132de:	f108 0802 	add.w	r8, r8, #2
 80132e2:	441e      	add	r6, r3
 80132e4:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 80132e8:	e783      	b.n	80131f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80132ea:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80132ec:	4499      	add	r9, r3
 80132ee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80132f0:	441e      	add	r6, r3
 80132f2:	9b06      	ldr	r3, [sp, #24]
 80132f4:	3b01      	subs	r3, #1
 80132f6:	9306      	str	r3, [sp, #24]
 80132f8:	f10a 0a02 	add.w	sl, sl, #2
 80132fc:	e737      	b.n	801316e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80132fe:	f47f af48 	bne.w	8013192 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8013302:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013304:	2b00      	cmp	r3, #0
 8013306:	f340 80cc 	ble.w	80134a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 801330a:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801330e:	ee79 9aab 	vadd.f32	s19, s19, s23
 8013312:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8013316:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013318:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801331c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013320:	eef0 6a48 	vmov.f32	s13, s16
 8013324:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013328:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801332c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013330:	ee16 9a90 	vmov	r9, s13
 8013334:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013338:	eef0 6a68 	vmov.f32	s13, s17
 801333c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013340:	ee18 2a10 	vmov	r2, s16
 8013344:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013348:	fb92 f3f3 	sdiv	r3, r2, r3
 801334c:	ee18 2a90 	vmov	r2, s17
 8013350:	932b      	str	r3, [sp, #172]	; 0xac
 8013352:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013354:	fb92 f3f3 	sdiv	r3, r2, r3
 8013358:	932c      	str	r3, [sp, #176]	; 0xb0
 801335a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801335c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801335e:	3b01      	subs	r3, #1
 8013360:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013364:	9309      	str	r3, [sp, #36]	; 0x24
 8013366:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013368:	bf08      	it	eq
 801336a:	4613      	moveq	r3, r2
 801336c:	ee16 6a90 	vmov	r6, s13
 8013370:	9306      	str	r3, [sp, #24]
 8013372:	eef0 8a67 	vmov.f32	s17, s15
 8013376:	eeb0 8a47 	vmov.f32	s16, s14
 801337a:	e6f1      	b.n	8013160 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 801337c:	2900      	cmp	r1, #0
 801337e:	f43f af6c 	beq.w	801325a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8013382:	5d13      	ldrb	r3, [r2, r4]
 8013384:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8013388:	930a      	str	r3, [sp, #40]	; 0x28
 801338a:	e766      	b.n	801325a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 801338c:	1c55      	adds	r5, r2, #1
 801338e:	d1a3      	bne.n	80132d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8013390:	4294      	cmp	r4, r2
 8013392:	dda1      	ble.n	80132d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8013394:	1c5d      	adds	r5, r3, #1
 8013396:	db9f      	blt.n	80132d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8013398:	9d07      	ldr	r5, [sp, #28]
 801339a:	429d      	cmp	r5, r3
 801339c:	dd9c      	ble.n	80132d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 801339e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80133a2:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80133a6:	e9cd 4500 	strd	r4, r5, [sp]
 80133aa:	463b      	mov	r3, r7
 80133ac:	9a08      	ldr	r2, [sp, #32]
 80133ae:	9812      	ldr	r0, [sp, #72]	; 0x48
 80133b0:	4641      	mov	r1, r8
 80133b2:	f7ff fe0f 	bl	8012fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80133b6:	e78f      	b.n	80132d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 80133b8:	ea4f 4329 	mov.w	r3, r9, asr #16
 80133bc:	1432      	asrs	r2, r6, #16
 80133be:	fb04 3202 	mla	r2, r4, r2, r3
 80133c2:	9908      	ldr	r1, [sp, #32]
 80133c4:	9b08      	ldr	r3, [sp, #32]
 80133c6:	4413      	add	r3, r2
 80133c8:	5c8a      	ldrb	r2, [r1, r2]
 80133ca:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 80133ce:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80133d2:	f837 1012 	ldrh.w	r1, [r7, r2, lsl #1]
 80133d6:	f1be 0f00 	cmp.w	lr, #0
 80133da:	d05b      	beq.n	8013494 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x394>
 80133dc:	785a      	ldrb	r2, [r3, #1]
 80133de:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80133e2:	920f      	str	r2, [sp, #60]	; 0x3c
 80133e4:	b140      	cbz	r0, 80133f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 80133e6:	191a      	adds	r2, r3, r4
 80133e8:	5d1b      	ldrb	r3, [r3, r4]
 80133ea:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80133ee:	930b      	str	r3, [sp, #44]	; 0x2c
 80133f0:	7853      	ldrb	r3, [r2, #1]
 80133f2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80133f6:	9310      	str	r3, [sp, #64]	; 0x40
 80133f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80133fa:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80133fc:	fb1e f200 	smulbb	r2, lr, r0
 8013400:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013404:	10d2      	asrs	r2, r2, #3
 8013406:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801340a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801340e:	ea4c 0c03 	orr.w	ip, ip, r3
 8013412:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8013416:	9313      	str	r3, [sp, #76]	; 0x4c
 8013418:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801341a:	041b      	lsls	r3, r3, #16
 801341c:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8013420:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013424:	ea43 030b 	orr.w	r3, r3, fp
 8013428:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801342a:	4353      	muls	r3, r2
 801342c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8013430:	fb05 3c0c 	mla	ip, r5, ip, r3
 8013434:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8013438:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801343c:	ea43 0b01 	orr.w	fp, r3, r1
 8013440:	f1c0 0110 	rsb	r1, r0, #16
 8013444:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013446:	eba1 0e0e 	sub.w	lr, r1, lr
 801344a:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801344e:	fb0e cc0b 	mla	ip, lr, fp, ip
 8013452:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8013456:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801345a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801345e:	ea4b 0e0e 	orr.w	lr, fp, lr
 8013462:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8013466:	fb02 cc0e 	mla	ip, r2, lr, ip
 801346a:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801346e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8013472:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013476:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801347a:	ea43 0c0c 	orr.w	ip, r3, ip
 801347e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013480:	f823 cb02 	strh.w	ip, [r3], #2
 8013484:	930c      	str	r3, [sp, #48]	; 0x30
 8013486:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8013488:	4499      	add	r9, r3
 801348a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801348c:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8013490:	441e      	add	r6, r3
 8013492:	e695      	b.n	80131c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8013494:	2800      	cmp	r0, #0
 8013496:	d0af      	beq.n	80133f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8013498:	5d1b      	ldrb	r3, [r3, r4]
 801349a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801349e:	930b      	str	r3, [sp, #44]	; 0x2c
 80134a0:	e7aa      	b.n	80133f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 80134a2:	b015      	add	sp, #84	; 0x54
 80134a4:	ecbd 8b0a 	vpop	{d8-d12}
 80134a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080134ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 80134ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134b0:	468b      	mov	fp, r1
 80134b2:	8809      	ldrh	r1, [r1, #0]
 80134b4:	b089      	sub	sp, #36	; 0x24
 80134b6:	10cd      	asrs	r5, r1, #3
 80134b8:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 80134bc:	ea4f 2921 	mov.w	r9, r1, asr #8
 80134c0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80134c4:	00c9      	lsls	r1, r1, #3
 80134c6:	9500      	str	r5, [sp, #0]
 80134c8:	b2c9      	uxtb	r1, r1
 80134ca:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 80134ce:	9101      	str	r1, [sp, #4]
 80134d0:	9900      	ldr	r1, [sp, #0]
 80134d2:	9202      	str	r2, [sp, #8]
 80134d4:	fb04 650e 	mla	r5, r4, lr, r6
 80134d8:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80134dc:	eb02 0805 	add.w	r8, r2, r5
 80134e0:	0209      	lsls	r1, r1, #8
 80134e2:	9a01      	ldr	r2, [sp, #4]
 80134e4:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 80134e8:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80134ec:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 80134f0:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 80134f4:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 80134f8:	4311      	orrs	r1, r2
 80134fa:	2c00      	cmp	r4, #0
 80134fc:	9107      	str	r1, [sp, #28]
 80134fe:	db43      	blt.n	8013588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8013500:	45a2      	cmp	sl, r4
 8013502:	dd41      	ble.n	8013588 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8013504:	2e00      	cmp	r6, #0
 8013506:	db3d      	blt.n	8013584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8013508:	45b6      	cmp	lr, r6
 801350a:	dd3b      	ble.n	8013584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 801350c:	9a02      	ldr	r2, [sp, #8]
 801350e:	5d55      	ldrb	r5, [r2, r5]
 8013510:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8013514:	441d      	add	r5, r3
 8013516:	1c72      	adds	r2, r6, #1
 8013518:	d439      	bmi.n	801358e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801351a:	4596      	cmp	lr, r2
 801351c:	dd37      	ble.n	801358e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801351e:	2f00      	cmp	r7, #0
 8013520:	d035      	beq.n	801358e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8013522:	f898 1001 	ldrb.w	r1, [r8, #1]
 8013526:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801352a:	4419      	add	r1, r3
 801352c:	3401      	adds	r4, #1
 801352e:	d432      	bmi.n	8013596 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8013530:	45a2      	cmp	sl, r4
 8013532:	dd30      	ble.n	8013596 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8013534:	b378      	cbz	r0, 8013596 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8013536:	2e00      	cmp	r6, #0
 8013538:	db2b      	blt.n	8013592 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801353a:	45b6      	cmp	lr, r6
 801353c:	dd29      	ble.n	8013592 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801353e:	f818 400e 	ldrb.w	r4, [r8, lr]
 8013542:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8013546:	441c      	add	r4, r3
 8013548:	3601      	adds	r6, #1
 801354a:	d427      	bmi.n	801359c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801354c:	45b6      	cmp	lr, r6
 801354e:	dd25      	ble.n	801359c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8013550:	b327      	cbz	r7, 801359c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8013552:	44c6      	add	lr, r8
 8013554:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8013558:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801355c:	4413      	add	r3, r2
 801355e:	782a      	ldrb	r2, [r5, #0]
 8013560:	9202      	str	r2, [sp, #8]
 8013562:	780a      	ldrb	r2, [r1, #0]
 8013564:	9203      	str	r2, [sp, #12]
 8013566:	7822      	ldrb	r2, [r4, #0]
 8013568:	9204      	str	r2, [sp, #16]
 801356a:	2f0f      	cmp	r7, #15
 801356c:	781a      	ldrb	r2, [r3, #0]
 801356e:	9205      	str	r2, [sp, #20]
 8013570:	d801      	bhi.n	8013576 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8013572:	280f      	cmp	r0, #15
 8013574:	d914      	bls.n	80135a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8013576:	4b3f      	ldr	r3, [pc, #252]	; (8013674 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8013578:	4a3f      	ldr	r2, [pc, #252]	; (8013678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 801357a:	4840      	ldr	r0, [pc, #256]	; (801367c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 801357c:	f240 210d 	movw	r1, #525	; 0x20d
 8013580:	f006 fa8e 	bl	8019aa0 <__assert_func>
 8013584:	ad07      	add	r5, sp, #28
 8013586:	e7c6      	b.n	8013516 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8013588:	a907      	add	r1, sp, #28
 801358a:	460d      	mov	r5, r1
 801358c:	e7ce      	b.n	801352c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801358e:	a907      	add	r1, sp, #28
 8013590:	e7cc      	b.n	801352c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8013592:	ac07      	add	r4, sp, #28
 8013594:	e7d8      	b.n	8013548 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8013596:	ab07      	add	r3, sp, #28
 8013598:	461c      	mov	r4, r3
 801359a:	e7e0      	b.n	801355e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 801359c:	ab07      	add	r3, sp, #28
 801359e:	e7de      	b.n	801355e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 80135a0:	b2ba      	uxth	r2, r7
 80135a2:	b280      	uxth	r0, r0
 80135a4:	fb02 fa00 	mul.w	sl, r2, r0
 80135a8:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 80135ac:	0112      	lsls	r2, r2, #4
 80135ae:	b280      	uxth	r0, r0
 80135b0:	f891 8002 	ldrb.w	r8, [r1, #2]
 80135b4:	7849      	ldrb	r1, [r1, #1]
 80135b6:	78ae      	ldrb	r6, [r5, #2]
 80135b8:	786d      	ldrb	r5, [r5, #1]
 80135ba:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 80135be:	eba2 020a 	sub.w	r2, r2, sl
 80135c2:	b292      	uxth	r2, r2
 80135c4:	ebae 0e00 	sub.w	lr, lr, r0
 80135c8:	fa1f fe8e 	uxth.w	lr, lr
 80135cc:	4351      	muls	r1, r2
 80135ce:	fb02 f808 	mul.w	r8, r2, r8
 80135d2:	fb0e 8806 	mla	r8, lr, r6, r8
 80135d6:	fb0e 1505 	mla	r5, lr, r5, r1
 80135da:	78a6      	ldrb	r6, [r4, #2]
 80135dc:	7861      	ldrb	r1, [r4, #1]
 80135de:	fa1f f78c 	uxth.w	r7, ip
 80135e2:	fb00 8806 	mla	r8, r0, r6, r8
 80135e6:	fb00 5501 	mla	r5, r0, r1, r5
 80135ea:	789e      	ldrb	r6, [r3, #2]
 80135ec:	7859      	ldrb	r1, [r3, #1]
 80135ee:	9b00      	ldr	r3, [sp, #0]
 80135f0:	ea6f 0c0c 	mvn.w	ip, ip
 80135f4:	fa5f fc8c 	uxtb.w	ip, ip
 80135f8:	fb0a 5101 	mla	r1, sl, r1, r5
 80135fc:	fb13 f50c 	smulbb	r5, r3, ip
 8013600:	9b03      	ldr	r3, [sp, #12]
 8013602:	435a      	muls	r2, r3
 8013604:	9b02      	ldr	r3, [sp, #8]
 8013606:	fb0e 2203 	mla	r2, lr, r3, r2
 801360a:	9b04      	ldr	r3, [sp, #16]
 801360c:	fb00 2003 	mla	r0, r0, r3, r2
 8013610:	9b05      	ldr	r3, [sp, #20]
 8013612:	fb0a 8606 	mla	r6, sl, r6, r8
 8013616:	fb0a 0a03 	mla	sl, sl, r3, r0
 801361a:	9b01      	ldr	r3, [sp, #4]
 801361c:	fb19 f90c 	smulbb	r9, r9, ip
 8013620:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8013624:	fb13 fc0c 	smulbb	ip, r3, ip
 8013628:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801362c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8013630:	fb06 9607 	mla	r6, r6, r7, r9
 8013634:	fb01 5107 	mla	r1, r1, r7, r5
 8013638:	fb0a c707 	mla	r7, sl, r7, ip
 801363c:	b2b6      	uxth	r6, r6
 801363e:	b289      	uxth	r1, r1
 8013640:	b2bf      	uxth	r7, r7
 8013642:	f106 0901 	add.w	r9, r6, #1
 8013646:	f107 0c01 	add.w	ip, r7, #1
 801364a:	1c4d      	adds	r5, r1, #1
 801364c:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8013650:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8013654:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8013658:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801365c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8013660:	0949      	lsrs	r1, r1, #5
 8013662:	433e      	orrs	r6, r7
 8013664:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013668:	430e      	orrs	r6, r1
 801366a:	f8ab 6000 	strh.w	r6, [fp]
 801366e:	b009      	add	sp, #36	; 0x24
 8013670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013674:	0801d6d1 	.word	0x0801d6d1
 8013678:	0801dc29 	.word	0x0801dc29
 801367c:	0801d759 	.word	0x0801d759

08013680 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8013680:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013684:	ed2d 8b08 	vpush	{d8-d11}
 8013688:	b097      	sub	sp, #92	; 0x5c
 801368a:	eeb0 aa40 	vmov.f32	s20, s0
 801368e:	9309      	str	r3, [sp, #36]	; 0x24
 8013690:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8013694:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8013696:	930b      	str	r3, [sp, #44]	; 0x2c
 8013698:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 801369c:	9310      	str	r3, [sp, #64]	; 0x40
 801369e:	910f      	str	r1, [sp, #60]	; 0x3c
 80136a0:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80136a4:	9015      	str	r0, [sp, #84]	; 0x54
 80136a6:	6860      	ldr	r0, [r4, #4]
 80136a8:	9213      	str	r2, [sp, #76]	; 0x4c
 80136aa:	fb00 1303 	mla	r3, r0, r3, r1
 80136ae:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80136b0:	6821      	ldr	r1, [r4, #0]
 80136b2:	6854      	ldr	r4, [r2, #4]
 80136b4:	f9bd 50c0 	ldrsh.w	r5, [sp, #192]	; 0xc0
 80136b8:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80136bc:	930a      	str	r3, [sp, #40]	; 0x28
 80136be:	6813      	ldr	r3, [r2, #0]
 80136c0:	930e      	str	r3, [sp, #56]	; 0x38
 80136c2:	1d23      	adds	r3, r4, #4
 80136c4:	9308      	str	r3, [sp, #32]
 80136c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80136c8:	43db      	mvns	r3, r3
 80136ca:	b2db      	uxtb	r3, r3
 80136cc:	eef0 9a60 	vmov.f32	s19, s1
 80136d0:	eeb0 9a41 	vmov.f32	s18, s2
 80136d4:	eeb0 8a62 	vmov.f32	s16, s5
 80136d8:	eef0 8a43 	vmov.f32	s17, s6
 80136dc:	eef0 ba44 	vmov.f32	s23, s8
 80136e0:	eeb0 ba64 	vmov.f32	s22, s9
 80136e4:	eef0 aa45 	vmov.f32	s21, s10
 80136e8:	930c      	str	r3, [sp, #48]	; 0x30
 80136ea:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80136ec:	2b00      	cmp	r3, #0
 80136ee:	dc03      	bgt.n	80136f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80136f0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80136f2:	2b00      	cmp	r3, #0
 80136f4:	f340 825c 	ble.w	8013bb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 80136f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80136fa:	2b00      	cmp	r3, #0
 80136fc:	f340 8127 	ble.w	801394e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ce>
 8013700:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8013702:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013704:	1412      	asrs	r2, r2, #16
 8013706:	ea4f 4323 	mov.w	r3, r3, asr #16
 801370a:	d430      	bmi.n	801376e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 801370c:	1c51      	adds	r1, r2, #1
 801370e:	428d      	cmp	r5, r1
 8013710:	dd30      	ble.n	8013774 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8013712:	2b00      	cmp	r3, #0
 8013714:	db2e      	blt.n	8013774 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8013716:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013718:	1c59      	adds	r1, r3, #1
 801371a:	4288      	cmp	r0, r1
 801371c:	dd2a      	ble.n	8013774 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 801371e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013720:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013722:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013724:	3b01      	subs	r3, #1
 8013726:	fb02 1203 	mla	r2, r2, r3, r1
 801372a:	1412      	asrs	r2, r2, #16
 801372c:	d42c      	bmi.n	8013788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 801372e:	3201      	adds	r2, #1
 8013730:	4295      	cmp	r5, r2
 8013732:	dd29      	ble.n	8013788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8013734:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8013736:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8013738:	fb02 1303 	mla	r3, r2, r3, r1
 801373c:	141b      	asrs	r3, r3, #16
 801373e:	d423      	bmi.n	8013788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8013740:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013742:	3301      	adds	r3, #1
 8013744:	429a      	cmp	r2, r3
 8013746:	dd1f      	ble.n	8013788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8013748:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801374a:	9311      	str	r3, [sp, #68]	; 0x44
 801374c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801374e:	930d      	str	r3, [sp, #52]	; 0x34
 8013750:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013754:	9312      	str	r3, [sp, #72]	; 0x48
 8013756:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013758:	2b00      	cmp	r3, #0
 801375a:	f300 8161 	bgt.w	8013a20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a0>
 801375e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013760:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013762:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013766:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801376a:	930a      	str	r3, [sp, #40]	; 0x28
 801376c:	e0f1      	b.n	8013952 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 801376e:	1c51      	adds	r1, r2, #1
 8013770:	f040 80de 	bne.w	8013930 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8013774:	42aa      	cmp	r2, r5
 8013776:	f280 80db 	bge.w	8013930 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801377a:	1c5f      	adds	r7, r3, #1
 801377c:	f2c0 80d8 	blt.w	8013930 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8013780:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013782:	4293      	cmp	r3, r2
 8013784:	f280 80d4 	bge.w	8013930 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8013788:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801378a:	9311      	str	r3, [sp, #68]	; 0x44
 801378c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801378e:	930d      	str	r3, [sp, #52]	; 0x34
 8013790:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013792:	2b00      	cmp	r3, #0
 8013794:	dde3      	ble.n	801375e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8013796:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013798:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801379a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801379c:	141a      	asrs	r2, r3, #16
 801379e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80137a0:	1400      	asrs	r0, r0, #16
 80137a2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80137a6:	f3c1 3103 	ubfx	r1, r1, #12, #4
 80137aa:	f100 8120 	bmi.w	80139ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36e>
 80137ae:	1c46      	adds	r6, r0, #1
 80137b0:	42b5      	cmp	r5, r6
 80137b2:	f340 811e 	ble.w	80139f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 80137b6:	2a00      	cmp	r2, #0
 80137b8:	f2c0 811b 	blt.w	80139f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 80137bc:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80137be:	1c56      	adds	r6, r2, #1
 80137c0:	42b7      	cmp	r7, r6
 80137c2:	f340 8116 	ble.w	80139f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 80137c6:	fb02 0005 	mla	r0, r2, r5, r0
 80137ca:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80137cc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80137ce:	9c08      	ldr	r4, [sp, #32]
 80137d0:	4402      	add	r2, r0
 80137d2:	5c30      	ldrb	r0, [r6, r0]
 80137d4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80137d8:	9014      	str	r0, [sp, #80]	; 0x50
 80137da:	1826      	adds	r6, r4, r0
 80137dc:	2b00      	cmp	r3, #0
 80137de:	f000 80f7 	beq.w	80139d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x350>
 80137e2:	f892 e001 	ldrb.w	lr, [r2, #1]
 80137e6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80137ea:	44a6      	add	lr, r4
 80137ec:	2900      	cmp	r1, #0
 80137ee:	f000 80f8 	beq.w	80139e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 80137f2:	1950      	adds	r0, r2, r5
 80137f4:	5d52      	ldrb	r2, [r2, r5]
 80137f6:	7840      	ldrb	r0, [r0, #1]
 80137f8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80137fc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013800:	4422      	add	r2, r4
 8013802:	4420      	add	r0, r4
 8013804:	b29b      	uxth	r3, r3
 8013806:	b289      	uxth	r1, r1
 8013808:	fb03 fa01 	mul.w	sl, r3, r1
 801380c:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 8013810:	011b      	lsls	r3, r3, #4
 8013812:	b289      	uxth	r1, r1
 8013814:	f89e c002 	ldrb.w	ip, [lr, #2]
 8013818:	f896 b002 	ldrb.w	fp, [r6, #2]
 801381c:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801381e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8013820:	f8b7 8000 	ldrh.w	r8, [r7]
 8013824:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
 8013828:	f5c3 7980 	rsb	r9, r3, #256	; 0x100
 801382c:	eba3 030a 	sub.w	r3, r3, sl
 8013830:	b29b      	uxth	r3, r3
 8013832:	eba9 0901 	sub.w	r9, r9, r1
 8013836:	fa1f f989 	uxth.w	r9, r9
 801383a:	fb03 fc0c 	mul.w	ip, r3, ip
 801383e:	fb09 cc0b 	mla	ip, r9, fp, ip
 8013842:	f892 b002 	ldrb.w	fp, [r2, #2]
 8013846:	fb01 cc0b 	mla	ip, r1, fp, ip
 801384a:	f890 b002 	ldrb.w	fp, [r0, #2]
 801384e:	fb0a cc0b 	mla	ip, sl, fp, ip
 8013852:	ea4f 2b28 	mov.w	fp, r8, asr #8
 8013856:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801385a:	fb1b fb04 	smulbb	fp, fp, r4
 801385e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8013862:	fb0c bc07 	mla	ip, ip, r7, fp
 8013866:	f896 b001 	ldrb.w	fp, [r6, #1]
 801386a:	f89e 6001 	ldrb.w	r6, [lr, #1]
 801386e:	f89e e000 	ldrb.w	lr, [lr]
 8013872:	435e      	muls	r6, r3
 8013874:	fb09 660b 	mla	r6, r9, fp, r6
 8013878:	f892 b001 	ldrb.w	fp, [r2, #1]
 801387c:	fb01 660b 	mla	r6, r1, fp, r6
 8013880:	f890 b001 	ldrb.w	fp, [r0, #1]
 8013884:	fb0a 660b 	mla	r6, sl, fp, r6
 8013888:	ea4f 0be8 	mov.w	fp, r8, asr #3
 801388c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8013890:	fb1b fb04 	smulbb	fp, fp, r4
 8013894:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8013898:	fb06 b607 	mla	r6, r6, r7, fp
 801389c:	b2b4      	uxth	r4, r6
 801389e:	9412      	str	r4, [sp, #72]	; 0x48
 80138a0:	9e08      	ldr	r6, [sp, #32]
 80138a2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80138a4:	f816 b004 	ldrb.w	fp, [r6, r4]
 80138a8:	fb03 f30e 	mul.w	r3, r3, lr
 80138ac:	f892 e000 	ldrb.w	lr, [r2]
 80138b0:	fb09 330b 	mla	r3, r9, fp, r3
 80138b4:	fb01 330e 	mla	r3, r1, lr, r3
 80138b8:	f890 e000 	ldrb.w	lr, [r0]
 80138bc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80138c0:	fb0a 3e0e 	mla	lr, sl, lr, r3
 80138c4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80138c6:	fa5f f888 	uxtb.w	r8, r8
 80138ca:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 80138ce:	fb18 f803 	smulbb	r8, r8, r3
 80138d2:	fb0e 8807 	mla	r8, lr, r7, r8
 80138d6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80138d8:	fa1f fc8c 	uxth.w	ip, ip
 80138dc:	fa1f f888 	uxth.w	r8, r8
 80138e0:	f103 0b01 	add.w	fp, r3, #1
 80138e4:	f10c 0201 	add.w	r2, ip, #1
 80138e8:	f108 0e01 	add.w	lr, r8, #1
 80138ec:	eb0b 2613 	add.w	r6, fp, r3, lsr #8
 80138f0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80138f4:	eb0e 2818 	add.w	r8, lr, r8, lsr #8
 80138f8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80138fc:	f3c8 28c4 	ubfx	r8, r8, #11, #5
 8013900:	0976      	lsrs	r6, r6, #5
 8013902:	ea4c 0c08 	orr.w	ip, ip, r8
 8013906:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801390a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801390c:	ea4c 0606 	orr.w	r6, ip, r6
 8013910:	801e      	strh	r6, [r3, #0]
 8013912:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013914:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013916:	3302      	adds	r3, #2
 8013918:	930d      	str	r3, [sp, #52]	; 0x34
 801391a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801391c:	4413      	add	r3, r2
 801391e:	9329      	str	r3, [sp, #164]	; 0xa4
 8013920:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8013922:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013924:	4413      	add	r3, r2
 8013926:	932a      	str	r3, [sp, #168]	; 0xa8
 8013928:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801392a:	3b01      	subs	r3, #1
 801392c:	9311      	str	r3, [sp, #68]	; 0x44
 801392e:	e72f      	b.n	8013790 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8013930:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013932:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013934:	4413      	add	r3, r2
 8013936:	9329      	str	r3, [sp, #164]	; 0xa4
 8013938:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801393a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801393c:	4413      	add	r3, r2
 801393e:	932a      	str	r3, [sp, #168]	; 0xa8
 8013940:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013942:	3b01      	subs	r3, #1
 8013944:	9309      	str	r3, [sp, #36]	; 0x24
 8013946:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013948:	3302      	adds	r3, #2
 801394a:	930a      	str	r3, [sp, #40]	; 0x28
 801394c:	e6d4      	b.n	80136f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801394e:	f47f aee6 	bne.w	801371e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8013952:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013954:	2b00      	cmp	r3, #0
 8013956:	f340 812b 	ble.w	8013bb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801395a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801395e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013962:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8013966:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013968:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801396c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8013970:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013974:	eef0 6a48 	vmov.f32	s13, s16
 8013978:	ee69 7a27 	vmul.f32	s15, s18, s15
 801397c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013980:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013984:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8013988:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801398c:	eef0 6a68 	vmov.f32	s13, s17
 8013990:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013994:	ee18 2a10 	vmov	r2, s16
 8013998:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801399c:	fb92 f3f3 	sdiv	r3, r2, r3
 80139a0:	ee18 2a90 	vmov	r2, s17
 80139a4:	932b      	str	r3, [sp, #172]	; 0xac
 80139a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80139a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80139ac:	932c      	str	r3, [sp, #176]	; 0xb0
 80139ae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80139b0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80139b2:	3b01      	subs	r3, #1
 80139b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80139b8:	930f      	str	r3, [sp, #60]	; 0x3c
 80139ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80139bc:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 80139c0:	bf08      	it	eq
 80139c2:	4613      	moveq	r3, r2
 80139c4:	9309      	str	r3, [sp, #36]	; 0x24
 80139c6:	eef0 8a67 	vmov.f32	s17, s15
 80139ca:	eeb0 8a47 	vmov.f32	s16, s14
 80139ce:	e68c      	b.n	80136ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80139d0:	b151      	cbz	r1, 80139e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 80139d2:	5d52      	ldrb	r2, [r2, r5]
 80139d4:	9808      	ldr	r0, [sp, #32]
 80139d6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80139da:	4402      	add	r2, r0
 80139dc:	4630      	mov	r0, r6
 80139de:	46b6      	mov	lr, r6
 80139e0:	e710      	b.n	8013804 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 80139e2:	4630      	mov	r0, r6
 80139e4:	4632      	mov	r2, r6
 80139e6:	e70d      	b.n	8013804 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 80139e8:	4630      	mov	r0, r6
 80139ea:	4632      	mov	r2, r6
 80139ec:	e7f7      	b.n	80139de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x35e>
 80139ee:	1c46      	adds	r6, r0, #1
 80139f0:	d18f      	bne.n	8013912 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80139f2:	4285      	cmp	r5, r0
 80139f4:	dd8d      	ble.n	8013912 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80139f6:	1c54      	adds	r4, r2, #1
 80139f8:	db8b      	blt.n	8013912 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 80139fa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80139fc:	4294      	cmp	r4, r2
 80139fe:	dd88      	ble.n	8013912 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8013a00:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8013a04:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8013a06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013a08:	9002      	str	r0, [sp, #8]
 8013a0a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8013a0e:	e9cd 5300 	strd	r5, r3, [sp]
 8013a12:	e9dd 120d 	ldrd	r1, r2, [sp, #52]	; 0x34
 8013a16:	9b08      	ldr	r3, [sp, #32]
 8013a18:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013a1a:	f7ff fd47 	bl	80134ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8013a1e:	e778      	b.n	8013912 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8013a20:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8013a22:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8013a24:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013a26:	1410      	asrs	r0, r2, #16
 8013a28:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8013a2c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8013a2e:	1412      	asrs	r2, r2, #16
 8013a30:	fb05 2000 	mla	r0, r5, r0, r2
 8013a34:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013a36:	f814 a000 	ldrb.w	sl, [r4, r0]
 8013a3a:	4402      	add	r2, r0
 8013a3c:	9808      	ldr	r0, [sp, #32]
 8013a3e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8013a42:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8013a46:	eb00 060a 	add.w	r6, r0, sl
 8013a4a:	2b00      	cmp	r3, #0
 8013a4c:	f000 80a1 	beq.w	8013b92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 8013a50:	f892 c001 	ldrb.w	ip, [r2, #1]
 8013a54:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8013a58:	4484      	add	ip, r0
 8013a5a:	2900      	cmp	r1, #0
 8013a5c:	f000 80a2 	beq.w	8013ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 8013a60:	1950      	adds	r0, r2, r5
 8013a62:	5d52      	ldrb	r2, [r2, r5]
 8013a64:	7840      	ldrb	r0, [r0, #1]
 8013a66:	9c08      	ldr	r4, [sp, #32]
 8013a68:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013a6c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013a70:	4422      	add	r2, r4
 8013a72:	4420      	add	r0, r4
 8013a74:	b29b      	uxth	r3, r3
 8013a76:	b289      	uxth	r1, r1
 8013a78:	fb03 f901 	mul.w	r9, r3, r1
 8013a7c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8013a80:	011b      	lsls	r3, r3, #4
 8013a82:	b289      	uxth	r1, r1
 8013a84:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8013a88:	f896 b002 	ldrb.w	fp, [r6, #2]
 8013a8c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8013a8e:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8013a92:	eba3 0309 	sub.w	r3, r3, r9
 8013a96:	b29b      	uxth	r3, r3
 8013a98:	eba8 0801 	sub.w	r8, r8, r1
 8013a9c:	fa1f f888 	uxth.w	r8, r8
 8013aa0:	435f      	muls	r7, r3
 8013aa2:	fb08 770b 	mla	r7, r8, fp, r7
 8013aa6:	f892 b002 	ldrb.w	fp, [r2, #2]
 8013aaa:	f8b4 e000 	ldrh.w	lr, [r4]
 8013aae:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8013ab0:	fb01 770b 	mla	r7, r1, fp, r7
 8013ab4:	f890 b002 	ldrb.w	fp, [r0, #2]
 8013ab8:	fb09 770b 	mla	r7, r9, fp, r7
 8013abc:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8013ac0:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8013ac4:	fb1b fb04 	smulbb	fp, fp, r4
 8013ac8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013aca:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8013ace:	fb07 b704 	mla	r7, r7, r4, fp
 8013ad2:	f896 b001 	ldrb.w	fp, [r6, #1]
 8013ad6:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8013ada:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8013adc:	f89c c000 	ldrb.w	ip, [ip]
 8013ae0:	435e      	muls	r6, r3
 8013ae2:	fb08 660b 	mla	r6, r8, fp, r6
 8013ae6:	f892 b001 	ldrb.w	fp, [r2, #1]
 8013aea:	fb01 660b 	mla	r6, r1, fp, r6
 8013aee:	f890 b001 	ldrb.w	fp, [r0, #1]
 8013af2:	fb09 660b 	mla	r6, r9, fp, r6
 8013af6:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8013afa:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8013afe:	fb1b fb04 	smulbb	fp, fp, r4
 8013b02:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013b04:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8013b08:	fb06 b604 	mla	r6, r6, r4, fp
 8013b0c:	9c08      	ldr	r4, [sp, #32]
 8013b0e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8013b12:	fb03 f30c 	mul.w	r3, r3, ip
 8013b16:	f892 c000 	ldrb.w	ip, [r2]
 8013b1a:	fb08 330a 	mla	r3, r8, sl, r3
 8013b1e:	fb01 330c 	mla	r3, r1, ip, r3
 8013b22:	f890 c000 	ldrb.w	ip, [r0]
 8013b26:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013b2a:	fb09 3c0c 	mla	ip, r9, ip, r3
 8013b2e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013b30:	fa5f fe8e 	uxtb.w	lr, lr
 8013b34:	fb1e fe03 	smulbb	lr, lr, r3
 8013b38:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8013b3a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8013b3e:	fb0c ec03 	mla	ip, ip, r3, lr
 8013b42:	b2bf      	uxth	r7, r7
 8013b44:	b2b6      	uxth	r6, r6
 8013b46:	fa1f fc8c 	uxth.w	ip, ip
 8013b4a:	1c7b      	adds	r3, r7, #1
 8013b4c:	f10c 0201 	add.w	r2, ip, #1
 8013b50:	f106 0b01 	add.w	fp, r6, #1
 8013b54:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8013b58:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8013b5c:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8013b60:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013b64:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013b68:	0976      	lsrs	r6, r6, #5
 8013b6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013b6c:	4317      	orrs	r7, r2
 8013b6e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013b72:	4337      	orrs	r7, r6
 8013b74:	f823 7b02 	strh.w	r7, [r3], #2
 8013b78:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8013b7a:	930d      	str	r3, [sp, #52]	; 0x34
 8013b7c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013b7e:	4413      	add	r3, r2
 8013b80:	9329      	str	r3, [sp, #164]	; 0xa4
 8013b82:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8013b84:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8013b86:	4413      	add	r3, r2
 8013b88:	932a      	str	r3, [sp, #168]	; 0xa8
 8013b8a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013b8c:	3b01      	subs	r3, #1
 8013b8e:	9311      	str	r3, [sp, #68]	; 0x44
 8013b90:	e5e1      	b.n	8013756 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8013b92:	b151      	cbz	r1, 8013baa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52a>
 8013b94:	5d52      	ldrb	r2, [r2, r5]
 8013b96:	9808      	ldr	r0, [sp, #32]
 8013b98:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013b9c:	4402      	add	r2, r0
 8013b9e:	4630      	mov	r0, r6
 8013ba0:	46b4      	mov	ip, r6
 8013ba2:	e767      	b.n	8013a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8013ba4:	4630      	mov	r0, r6
 8013ba6:	4632      	mov	r2, r6
 8013ba8:	e764      	b.n	8013a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8013baa:	4630      	mov	r0, r6
 8013bac:	4632      	mov	r2, r6
 8013bae:	e7f7      	b.n	8013ba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>
 8013bb0:	b017      	add	sp, #92	; 0x5c
 8013bb2:	ecbd 8b08 	vpop	{d8-d11}
 8013bb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8013bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013bc0:	880e      	ldrh	r6, [r1, #0]
 8013bc2:	b085      	sub	sp, #20
 8013bc4:	0230      	lsls	r0, r6, #8
 8013bc6:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8013bca:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8013bce:	0170      	lsls	r0, r6, #5
 8013bd0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8013bd4:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8013bd8:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8013bdc:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8013be0:	00f6      	lsls	r6, r6, #3
 8013be2:	ea4b 0000 	orr.w	r0, fp, r0
 8013be6:	b2f6      	uxtb	r6, r6
 8013be8:	4691      	mov	r9, r2
 8013bea:	fb05 7a0c 	mla	sl, r5, ip, r7
 8013bee:	4306      	orrs	r6, r0
 8013bf0:	2d00      	cmp	r5, #0
 8013bf2:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8013bf6:	9603      	str	r6, [sp, #12]
 8013bf8:	eb09 0e0a 	add.w	lr, r9, sl
 8013bfc:	db42      	blt.n	8013c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8013bfe:	45a8      	cmp	r8, r5
 8013c00:	dd40      	ble.n	8013c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8013c02:	2f00      	cmp	r7, #0
 8013c04:	db3c      	blt.n	8013c80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8013c06:	45bc      	cmp	ip, r7
 8013c08:	dd3a      	ble.n	8013c80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8013c0a:	f819 600a 	ldrb.w	r6, [r9, sl]
 8013c0e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8013c12:	441e      	add	r6, r3
 8013c14:	1c78      	adds	r0, r7, #1
 8013c16:	d438      	bmi.n	8013c8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8013c18:	4584      	cmp	ip, r0
 8013c1a:	dd36      	ble.n	8013c8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8013c1c:	b3aa      	cbz	r2, 8013c8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8013c1e:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8013c22:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013c26:	4418      	add	r0, r3
 8013c28:	3501      	adds	r5, #1
 8013c2a:	d432      	bmi.n	8013c92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8013c2c:	45a8      	cmp	r8, r5
 8013c2e:	dd30      	ble.n	8013c92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8013c30:	b37c      	cbz	r4, 8013c92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8013c32:	2f00      	cmp	r7, #0
 8013c34:	db2b      	blt.n	8013c8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8013c36:	45bc      	cmp	ip, r7
 8013c38:	dd29      	ble.n	8013c8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8013c3a:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8013c3e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8013c42:	441d      	add	r5, r3
 8013c44:	3701      	adds	r7, #1
 8013c46:	d427      	bmi.n	8013c98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8013c48:	45bc      	cmp	ip, r7
 8013c4a:	dd25      	ble.n	8013c98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8013c4c:	b322      	cbz	r2, 8013c98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8013c4e:	44f4      	add	ip, lr
 8013c50:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8013c54:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8013c58:	443b      	add	r3, r7
 8013c5a:	781f      	ldrb	r7, [r3, #0]
 8013c5c:	f896 a000 	ldrb.w	sl, [r6]
 8013c60:	f890 b000 	ldrb.w	fp, [r0]
 8013c64:	f895 9000 	ldrb.w	r9, [r5]
 8013c68:	9700      	str	r7, [sp, #0]
 8013c6a:	2a0f      	cmp	r2, #15
 8013c6c:	d801      	bhi.n	8013c72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 8013c6e:	2c0f      	cmp	r4, #15
 8013c70:	d914      	bls.n	8013c9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 8013c72:	4b2c      	ldr	r3, [pc, #176]	; (8013d24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 8013c74:	4a2c      	ldr	r2, [pc, #176]	; (8013d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8013c76:	482d      	ldr	r0, [pc, #180]	; (8013d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8013c78:	f240 210d 	movw	r1, #525	; 0x20d
 8013c7c:	f005 ff10 	bl	8019aa0 <__assert_func>
 8013c80:	ae03      	add	r6, sp, #12
 8013c82:	e7c7      	b.n	8013c14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 8013c84:	a803      	add	r0, sp, #12
 8013c86:	4606      	mov	r6, r0
 8013c88:	e7ce      	b.n	8013c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8013c8a:	a803      	add	r0, sp, #12
 8013c8c:	e7cc      	b.n	8013c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8013c8e:	ad03      	add	r5, sp, #12
 8013c90:	e7d8      	b.n	8013c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 8013c92:	ab03      	add	r3, sp, #12
 8013c94:	461d      	mov	r5, r3
 8013c96:	e7e0      	b.n	8013c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8013c98:	ab03      	add	r3, sp, #12
 8013c9a:	e7de      	b.n	8013c5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8013c9c:	b292      	uxth	r2, r2
 8013c9e:	b2a4      	uxth	r4, r4
 8013ca0:	fb02 f804 	mul.w	r8, r2, r4
 8013ca4:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 8013ca8:	0112      	lsls	r2, r2, #4
 8013caa:	b2a4      	uxth	r4, r4
 8013cac:	f890 e002 	ldrb.w	lr, [r0, #2]
 8013cb0:	78b7      	ldrb	r7, [r6, #2]
 8013cb2:	7840      	ldrb	r0, [r0, #1]
 8013cb4:	7876      	ldrb	r6, [r6, #1]
 8013cb6:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8013cba:	eba2 0208 	sub.w	r2, r2, r8
 8013cbe:	b292      	uxth	r2, r2
 8013cc0:	ebac 0c04 	sub.w	ip, ip, r4
 8013cc4:	fa1f fc8c 	uxth.w	ip, ip
 8013cc8:	fb02 fe0e 	mul.w	lr, r2, lr
 8013ccc:	fb0c ee07 	mla	lr, ip, r7, lr
 8013cd0:	78af      	ldrb	r7, [r5, #2]
 8013cd2:	fb04 ee07 	mla	lr, r4, r7, lr
 8013cd6:	789f      	ldrb	r7, [r3, #2]
 8013cd8:	785b      	ldrb	r3, [r3, #1]
 8013cda:	fb08 e707 	mla	r7, r8, r7, lr
 8013cde:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013ce2:	fb02 fe0b 	mul.w	lr, r2, fp
 8013ce6:	4342      	muls	r2, r0
 8013ce8:	7868      	ldrb	r0, [r5, #1]
 8013cea:	9701      	str	r7, [sp, #4]
 8013cec:	fb0c ee0a 	mla	lr, ip, sl, lr
 8013cf0:	9f00      	ldr	r7, [sp, #0]
 8013cf2:	fb0c 2206 	mla	r2, ip, r6, r2
 8013cf6:	fb04 ee09 	mla	lr, r4, r9, lr
 8013cfa:	fb04 2400 	mla	r4, r4, r0, r2
 8013cfe:	fb08 ee07 	mla	lr, r8, r7, lr
 8013d02:	9f01      	ldr	r7, [sp, #4]
 8013d04:	fb08 4803 	mla	r8, r8, r3, r4
 8013d08:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8013d0c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013d10:	ea47 070e 	orr.w	r7, r7, lr
 8013d14:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8013d18:	ea47 0708 	orr.w	r7, r7, r8
 8013d1c:	800f      	strh	r7, [r1, #0]
 8013d1e:	b005      	add	sp, #20
 8013d20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d24:	0801d6d1 	.word	0x0801d6d1
 8013d28:	0801dc29 	.word	0x0801dc29
 8013d2c:	0801d759 	.word	0x0801d759

08013d30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8013d30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d34:	ed2d 8b0a 	vpush	{d8-d12}
 8013d38:	b091      	sub	sp, #68	; 0x44
 8013d3a:	eeb0 aa40 	vmov.f32	s20, s0
 8013d3e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8013d40:	9307      	str	r3, [sp, #28]
 8013d42:	f9bd 30b4 	ldrsh.w	r3, [sp, #180]	; 0xb4
 8013d46:	910c      	str	r1, [sp, #48]	; 0x30
 8013d48:	9309      	str	r3, [sp, #36]	; 0x24
 8013d4a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8013d4e:	900f      	str	r0, [sp, #60]	; 0x3c
 8013d50:	6860      	ldr	r0, [r4, #4]
 8013d52:	920e      	str	r2, [sp, #56]	; 0x38
 8013d54:	fb00 1303 	mla	r3, r0, r3, r1
 8013d58:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8013d5a:	6821      	ldr	r1, [r4, #0]
 8013d5c:	6854      	ldr	r4, [r2, #4]
 8013d5e:	f8dd b098 	ldr.w	fp, [sp, #152]	; 0x98
 8013d62:	f9bd 50b0 	ldrsh.w	r5, [sp, #176]	; 0xb0
 8013d66:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8013d6a:	9308      	str	r3, [sp, #32]
 8013d6c:	6813      	ldr	r3, [r2, #0]
 8013d6e:	930a      	str	r3, [sp, #40]	; 0x28
 8013d70:	eef0 9a60 	vmov.f32	s19, s1
 8013d74:	eeb0 9a41 	vmov.f32	s18, s2
 8013d78:	eeb0 8a62 	vmov.f32	s16, s5
 8013d7c:	eef0 8a43 	vmov.f32	s17, s6
 8013d80:	eeb0 ca44 	vmov.f32	s24, s8
 8013d84:	eef0 ba64 	vmov.f32	s23, s9
 8013d88:	eeb0 ba45 	vmov.f32	s22, s10
 8013d8c:	3404      	adds	r4, #4
 8013d8e:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8013d92:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013d94:	2b00      	cmp	r3, #0
 8013d96:	dc03      	bgt.n	8013da0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8013d98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013d9a:	2b00      	cmp	r3, #0
 8013d9c:	f340 81cb 	ble.w	8014136 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 8013da0:	9b07      	ldr	r3, [sp, #28]
 8013da2:	2b00      	cmp	r3, #0
 8013da4:	f340 80dd 	ble.w	8013f62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x232>
 8013da8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8013daa:	1412      	asrs	r2, r2, #16
 8013dac:	ea4f 432b 	mov.w	r3, fp, asr #16
 8013db0:	d42c      	bmi.n	8013e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8013db2:	1c51      	adds	r1, r2, #1
 8013db4:	428d      	cmp	r5, r1
 8013db6:	dd2c      	ble.n	8013e12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8013db8:	2b00      	cmp	r3, #0
 8013dba:	db2a      	blt.n	8013e12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8013dbc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013dbe:	1c59      	adds	r1, r3, #1
 8013dc0:	4288      	cmp	r0, r1
 8013dc2:	dd26      	ble.n	8013e12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8013dc4:	9b07      	ldr	r3, [sp, #28]
 8013dc6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8013dc8:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013dca:	3b01      	subs	r3, #1
 8013dcc:	fb02 1203 	mla	r2, r2, r3, r1
 8013dd0:	1412      	asrs	r2, r2, #16
 8013dd2:	d428      	bmi.n	8013e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8013dd4:	3201      	adds	r2, #1
 8013dd6:	4295      	cmp	r5, r2
 8013dd8:	dd25      	ble.n	8013e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8013dda:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8013ddc:	fb02 b303 	mla	r3, r2, r3, fp
 8013de0:	141b      	asrs	r3, r3, #16
 8013de2:	d420      	bmi.n	8013e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8013de4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013de6:	3301      	adds	r3, #1
 8013de8:	429a      	cmp	r2, r3
 8013dea:	dd1c      	ble.n	8013e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8013dec:	9b07      	ldr	r3, [sp, #28]
 8013dee:	930b      	str	r3, [sp, #44]	; 0x2c
 8013df0:	9b08      	ldr	r3, [sp, #32]
 8013df2:	930d      	str	r3, [sp, #52]	; 0x34
 8013df4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013df6:	2b00      	cmp	r3, #0
 8013df8:	f300 8116 	bgt.w	8014028 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8013dfc:	9b07      	ldr	r3, [sp, #28]
 8013dfe:	9a08      	ldr	r2, [sp, #32]
 8013e00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013e04:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013e08:	9308      	str	r3, [sp, #32]
 8013e0a:	e0ac      	b.n	8013f66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x236>
 8013e0c:	1c51      	adds	r1, r2, #1
 8013e0e:	f040 809b 	bne.w	8013f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8013e12:	42aa      	cmp	r2, r5
 8013e14:	f280 8098 	bge.w	8013f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8013e18:	1c5a      	adds	r2, r3, #1
 8013e1a:	f2c0 8095 	blt.w	8013f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8013e1e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013e20:	4293      	cmp	r3, r2
 8013e22:	f280 8091 	bge.w	8013f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8013e26:	9b07      	ldr	r3, [sp, #28]
 8013e28:	930d      	str	r3, [sp, #52]	; 0x34
 8013e2a:	9b08      	ldr	r3, [sp, #32]
 8013e2c:	930b      	str	r3, [sp, #44]	; 0x2c
 8013e2e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013e30:	2b00      	cmp	r3, #0
 8013e32:	dde3      	ble.n	8013dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8013e34:	9825      	ldr	r0, [sp, #148]	; 0x94
 8013e36:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8013e38:	1400      	asrs	r0, r0, #16
 8013e3a:	ea4f 422b 	mov.w	r2, fp, asr #16
 8013e3e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8013e42:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8013e46:	f100 80d9 	bmi.w	8013ffc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2cc>
 8013e4a:	1c46      	adds	r6, r0, #1
 8013e4c:	42b5      	cmp	r5, r6
 8013e4e:	f340 80d7 	ble.w	8014000 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8013e52:	2a00      	cmp	r2, #0
 8013e54:	f2c0 80d4 	blt.w	8014000 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8013e58:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8013e5a:	1c56      	adds	r6, r2, #1
 8013e5c:	42b7      	cmp	r7, r6
 8013e5e:	f340 80cf 	ble.w	8014000 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8013e62:	fb02 0005 	mla	r0, r2, r5, r0
 8013e66:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8013e68:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013e6a:	4402      	add	r2, r0
 8013e6c:	5c30      	ldrb	r0, [r6, r0]
 8013e6e:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8013e72:	eb04 0c08 	add.w	ip, r4, r8
 8013e76:	2b00      	cmp	r3, #0
 8013e78:	f000 80b2 	beq.w	8013fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8013e7c:	7856      	ldrb	r6, [r2, #1]
 8013e7e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8013e82:	4426      	add	r6, r4
 8013e84:	2900      	cmp	r1, #0
 8013e86:	f000 80b3 	beq.w	8013ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8013e8a:	1950      	adds	r0, r2, r5
 8013e8c:	5d52      	ldrb	r2, [r2, r5]
 8013e8e:	7840      	ldrb	r0, [r0, #1]
 8013e90:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013e94:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013e98:	4422      	add	r2, r4
 8013e9a:	4420      	add	r0, r4
 8013e9c:	b29b      	uxth	r3, r3
 8013e9e:	b289      	uxth	r1, r1
 8013ea0:	fb03 f901 	mul.w	r9, r3, r1
 8013ea4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8013ea8:	011b      	lsls	r3, r3, #4
 8013eaa:	b289      	uxth	r1, r1
 8013eac:	78b7      	ldrb	r7, [r6, #2]
 8013eae:	f89c a002 	ldrb.w	sl, [ip, #2]
 8013eb2:	f89c c001 	ldrb.w	ip, [ip, #1]
 8013eb6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8013eba:	eba3 0309 	sub.w	r3, r3, r9
 8013ebe:	b29b      	uxth	r3, r3
 8013ec0:	ebae 0e01 	sub.w	lr, lr, r1
 8013ec4:	fa1f fe8e 	uxth.w	lr, lr
 8013ec8:	435f      	muls	r7, r3
 8013eca:	fb0e 770a 	mla	r7, lr, sl, r7
 8013ece:	f892 a002 	ldrb.w	sl, [r2, #2]
 8013ed2:	fb01 770a 	mla	r7, r1, sl, r7
 8013ed6:	f890 a002 	ldrb.w	sl, [r0, #2]
 8013eda:	fb09 7a0a 	mla	sl, r9, sl, r7
 8013ede:	f814 7008 	ldrb.w	r7, [r4, r8]
 8013ee2:	f896 8000 	ldrb.w	r8, [r6]
 8013ee6:	7876      	ldrb	r6, [r6, #1]
 8013ee8:	fb03 f808 	mul.w	r8, r3, r8
 8013eec:	fb0e 8807 	mla	r8, lr, r7, r8
 8013ef0:	7817      	ldrb	r7, [r2, #0]
 8013ef2:	fb01 8807 	mla	r8, r1, r7, r8
 8013ef6:	7807      	ldrb	r7, [r0, #0]
 8013ef8:	fb09 8707 	mla	r7, r9, r7, r8
 8013efc:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8013f00:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013f04:	ea4a 0707 	orr.w	r7, sl, r7
 8013f08:	4373      	muls	r3, r6
 8013f0a:	f892 a001 	ldrb.w	sl, [r2, #1]
 8013f0e:	fb0e 330c 	mla	r3, lr, ip, r3
 8013f12:	fb01 310a 	mla	r1, r1, sl, r3
 8013f16:	f890 a001 	ldrb.w	sl, [r0, #1]
 8013f1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013f1c:	fb09 1a0a 	mla	sl, r9, sl, r1
 8013f20:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013f24:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013f28:	ea47 070a 	orr.w	r7, r7, sl
 8013f2c:	801f      	strh	r7, [r3, #0]
 8013f2e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013f30:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8013f32:	3302      	adds	r3, #2
 8013f34:	930b      	str	r3, [sp, #44]	; 0x2c
 8013f36:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8013f38:	4413      	add	r3, r2
 8013f3a:	9325      	str	r3, [sp, #148]	; 0x94
 8013f3c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013f3e:	449b      	add	fp, r3
 8013f40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013f42:	3b01      	subs	r3, #1
 8013f44:	930d      	str	r3, [sp, #52]	; 0x34
 8013f46:	e772      	b.n	8013e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013f48:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8013f4a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8013f4c:	4413      	add	r3, r2
 8013f4e:	9325      	str	r3, [sp, #148]	; 0x94
 8013f50:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013f52:	449b      	add	fp, r3
 8013f54:	9b07      	ldr	r3, [sp, #28]
 8013f56:	3b01      	subs	r3, #1
 8013f58:	9307      	str	r3, [sp, #28]
 8013f5a:	9b08      	ldr	r3, [sp, #32]
 8013f5c:	3302      	adds	r3, #2
 8013f5e:	9308      	str	r3, [sp, #32]
 8013f60:	e71e      	b.n	8013da0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8013f62:	f47f af2f 	bne.w	8013dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8013f66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013f68:	2b00      	cmp	r3, #0
 8013f6a:	f340 80e4 	ble.w	8014136 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 8013f6e:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8013f72:	ee79 9aab 	vadd.f32	s19, s19, s23
 8013f76:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8013f7a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013f7c:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8013f80:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013f84:	eef0 6a48 	vmov.f32	s13, s16
 8013f88:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013f8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013f90:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013f94:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8013f98:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013f9c:	eef0 6a68 	vmov.f32	s13, s17
 8013fa0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013fa4:	ee18 2a10 	vmov	r2, s16
 8013fa8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013fac:	fb92 f3f3 	sdiv	r3, r2, r3
 8013fb0:	ee18 2a90 	vmov	r2, s17
 8013fb4:	9327      	str	r3, [sp, #156]	; 0x9c
 8013fb6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013fb8:	fb92 f3f3 	sdiv	r3, r2, r3
 8013fbc:	9328      	str	r3, [sp, #160]	; 0xa0
 8013fbe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013fc0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013fc2:	3b01      	subs	r3, #1
 8013fc4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013fc8:	930c      	str	r3, [sp, #48]	; 0x30
 8013fca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8013fcc:	bf08      	it	eq
 8013fce:	4613      	moveq	r3, r2
 8013fd0:	ee16 ba90 	vmov	fp, s13
 8013fd4:	9307      	str	r3, [sp, #28]
 8013fd6:	eef0 8a67 	vmov.f32	s17, s15
 8013fda:	eeb0 8a47 	vmov.f32	s16, s14
 8013fde:	e6d8      	b.n	8013d92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8013fe0:	b149      	cbz	r1, 8013ff6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c6>
 8013fe2:	5d52      	ldrb	r2, [r2, r5]
 8013fe4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013fe8:	4422      	add	r2, r4
 8013fea:	4660      	mov	r0, ip
 8013fec:	4666      	mov	r6, ip
 8013fee:	e755      	b.n	8013e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013ff0:	4660      	mov	r0, ip
 8013ff2:	4662      	mov	r2, ip
 8013ff4:	e752      	b.n	8013e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013ff6:	4660      	mov	r0, ip
 8013ff8:	4662      	mov	r2, ip
 8013ffa:	e7f7      	b.n	8013fec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8013ffc:	1c47      	adds	r7, r0, #1
 8013ffe:	d196      	bne.n	8013f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014000:	4285      	cmp	r5, r0
 8014002:	dd94      	ble.n	8013f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014004:	1c56      	adds	r6, r2, #1
 8014006:	db92      	blt.n	8013f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014008:	9e09      	ldr	r6, [sp, #36]	; 0x24
 801400a:	4296      	cmp	r6, r2
 801400c:	dd8f      	ble.n	8013f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 801400e:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8014012:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8014016:	e9cd 5600 	strd	r5, r6, [sp]
 801401a:	4623      	mov	r3, r4
 801401c:	e9dd 210a 	ldrd	r2, r1, [sp, #40]	; 0x28
 8014020:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014022:	f7ff fdcb 	bl	8013bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8014026:	e782      	b.n	8013f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014028:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801402a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 801402c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801402e:	1412      	asrs	r2, r2, #16
 8014030:	ea4f 402b 	mov.w	r0, fp, asr #16
 8014034:	fb05 2000 	mla	r0, r5, r0, r2
 8014038:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801403a:	f816 8000 	ldrb.w	r8, [r6, r0]
 801403e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014042:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8014046:	f3cb 3103 	ubfx	r1, fp, #12, #4
 801404a:	4402      	add	r2, r0
 801404c:	eb04 0c08 	add.w	ip, r4, r8
 8014050:	2b00      	cmp	r3, #0
 8014052:	d062      	beq.n	801411a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ea>
 8014054:	7856      	ldrb	r6, [r2, #1]
 8014056:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801405a:	4426      	add	r6, r4
 801405c:	2900      	cmp	r1, #0
 801405e:	d064      	beq.n	801412a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3fa>
 8014060:	1950      	adds	r0, r2, r5
 8014062:	5d52      	ldrb	r2, [r2, r5]
 8014064:	7840      	ldrb	r0, [r0, #1]
 8014066:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801406a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801406e:	4422      	add	r2, r4
 8014070:	4420      	add	r0, r4
 8014072:	b29b      	uxth	r3, r3
 8014074:	b289      	uxth	r1, r1
 8014076:	fb03 f901 	mul.w	r9, r3, r1
 801407a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801407e:	011b      	lsls	r3, r3, #4
 8014080:	b289      	uxth	r1, r1
 8014082:	78b7      	ldrb	r7, [r6, #2]
 8014084:	f89c a002 	ldrb.w	sl, [ip, #2]
 8014088:	f89c c001 	ldrb.w	ip, [ip, #1]
 801408c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8014090:	eba3 0309 	sub.w	r3, r3, r9
 8014094:	b29b      	uxth	r3, r3
 8014096:	ebae 0e01 	sub.w	lr, lr, r1
 801409a:	fa1f fe8e 	uxth.w	lr, lr
 801409e:	435f      	muls	r7, r3
 80140a0:	fb0e 770a 	mla	r7, lr, sl, r7
 80140a4:	f892 a002 	ldrb.w	sl, [r2, #2]
 80140a8:	fb01 770a 	mla	r7, r1, sl, r7
 80140ac:	f890 a002 	ldrb.w	sl, [r0, #2]
 80140b0:	fb09 7a0a 	mla	sl, r9, sl, r7
 80140b4:	f814 7008 	ldrb.w	r7, [r4, r8]
 80140b8:	f896 8000 	ldrb.w	r8, [r6]
 80140bc:	7876      	ldrb	r6, [r6, #1]
 80140be:	fb03 f808 	mul.w	r8, r3, r8
 80140c2:	fb0e 8807 	mla	r8, lr, r7, r8
 80140c6:	7817      	ldrb	r7, [r2, #0]
 80140c8:	fb01 8807 	mla	r8, r1, r7, r8
 80140cc:	7807      	ldrb	r7, [r0, #0]
 80140ce:	fb09 8707 	mla	r7, r9, r7, r8
 80140d2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80140d6:	4373      	muls	r3, r6
 80140d8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80140dc:	7856      	ldrb	r6, [r2, #1]
 80140de:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80140e0:	ea4a 0707 	orr.w	r7, sl, r7
 80140e4:	fb0e 330c 	mla	r3, lr, ip, r3
 80140e8:	f890 a001 	ldrb.w	sl, [r0, #1]
 80140ec:	fb01 3306 	mla	r3, r1, r6, r3
 80140f0:	fb09 3a0a 	mla	sl, r9, sl, r3
 80140f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80140f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80140fa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80140fe:	ea47 070a 	orr.w	r7, r7, sl
 8014102:	f823 7b02 	strh.w	r7, [r3], #2
 8014106:	930d      	str	r3, [sp, #52]	; 0x34
 8014108:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801410a:	4413      	add	r3, r2
 801410c:	9325      	str	r3, [sp, #148]	; 0x94
 801410e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014110:	449b      	add	fp, r3
 8014112:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014114:	3b01      	subs	r3, #1
 8014116:	930b      	str	r3, [sp, #44]	; 0x2c
 8014118:	e66c      	b.n	8013df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 801411a:	b149      	cbz	r1, 8014130 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x400>
 801411c:	5d52      	ldrb	r2, [r2, r5]
 801411e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014122:	4422      	add	r2, r4
 8014124:	4660      	mov	r0, ip
 8014126:	4666      	mov	r6, ip
 8014128:	e7a3      	b.n	8014072 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 801412a:	4660      	mov	r0, ip
 801412c:	4662      	mov	r2, ip
 801412e:	e7a0      	b.n	8014072 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 8014130:	4660      	mov	r0, ip
 8014132:	4662      	mov	r2, ip
 8014134:	e7f7      	b.n	8014126 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f6>
 8014136:	b011      	add	sp, #68	; 0x44
 8014138:	ecbd 8b0a 	vpop	{d8-d12}
 801413c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014140 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8014140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014144:	8808      	ldrh	r0, [r1, #0]
 8014146:	b085      	sub	sp, #20
 8014148:	1206      	asrs	r6, r0, #8
 801414a:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 801414e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014152:	9600      	str	r6, [sp, #0]
 8014154:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8014158:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 801415c:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8014160:	10c6      	asrs	r6, r0, #3
 8014162:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014166:	9601      	str	r6, [sp, #4]
 8014168:	00c0      	lsls	r0, r0, #3
 801416a:	fb04 560c 	mla	r6, r4, ip, r5
 801416e:	b2c0      	uxtb	r0, r0
 8014170:	4692      	mov	sl, r2
 8014172:	eb02 0e06 	add.w	lr, r2, r6
 8014176:	9a00      	ldr	r2, [sp, #0]
 8014178:	9002      	str	r0, [sp, #8]
 801417a:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 801417e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8014182:	9a01      	ldr	r2, [sp, #4]
 8014184:	2c00      	cmp	r4, #0
 8014186:	4698      	mov	r8, r3
 8014188:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 801418c:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8014190:	db3e      	blt.n	8014210 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8014192:	45a1      	cmp	r9, r4
 8014194:	dd3c      	ble.n	8014210 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8014196:	2d00      	cmp	r5, #0
 8014198:	db38      	blt.n	801420c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 801419a:	45ac      	cmp	ip, r5
 801419c:	dd36      	ble.n	801420c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 801419e:	f81a 2006 	ldrb.w	r2, [sl, r6]
 80141a2:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 80141a6:	1c6e      	adds	r6, r5, #1
 80141a8:	d435      	bmi.n	8014216 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 80141aa:	45b4      	cmp	ip, r6
 80141ac:	dd33      	ble.n	8014216 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 80141ae:	b393      	cbz	r3, 8014216 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 80141b0:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80141b4:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 80141b8:	3401      	adds	r4, #1
 80141ba:	d430      	bmi.n	801421e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 80141bc:	45a1      	cmp	r9, r4
 80141be:	dd2e      	ble.n	801421e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 80141c0:	b36f      	cbz	r7, 801421e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 80141c2:	2d00      	cmp	r5, #0
 80141c4:	db29      	blt.n	801421a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 80141c6:	45ac      	cmp	ip, r5
 80141c8:	dd27      	ble.n	801421a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 80141ca:	f81e 400c 	ldrb.w	r4, [lr, ip]
 80141ce:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 80141d2:	3501      	adds	r5, #1
 80141d4:	d407      	bmi.n	80141e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80141d6:	45ac      	cmp	ip, r5
 80141d8:	dd05      	ble.n	80141e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80141da:	b123      	cbz	r3, 80141e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80141dc:	44f4      	add	ip, lr
 80141de:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80141e2:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 80141e6:	2b0f      	cmp	r3, #15
 80141e8:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80141ec:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80141f0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80141f4:	ea4f 6810 	mov.w	r8, r0, lsr #24
 80141f8:	d801      	bhi.n	80141fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 80141fa:	2f0f      	cmp	r7, #15
 80141fc:	d911      	bls.n	8014222 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe2>
 80141fe:	4b7f      	ldr	r3, [pc, #508]	; (80143fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2bc>)
 8014200:	4a7f      	ldr	r2, [pc, #508]	; (8014400 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>)
 8014202:	4880      	ldr	r0, [pc, #512]	; (8014404 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8014204:	f240 210d 	movw	r1, #525	; 0x20d
 8014208:	f005 fc4a 	bl	8019aa0 <__assert_func>
 801420c:	4602      	mov	r2, r0
 801420e:	e7ca      	b.n	80141a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 8014210:	4606      	mov	r6, r0
 8014212:	4602      	mov	r2, r0
 8014214:	e7d0      	b.n	80141b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8014216:	4606      	mov	r6, r0
 8014218:	e7ce      	b.n	80141b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 801421a:	4604      	mov	r4, r0
 801421c:	e7d9      	b.n	80141d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x92>
 801421e:	4604      	mov	r4, r0
 8014220:	e7e1      	b.n	80141e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8014222:	b29b      	uxth	r3, r3
 8014224:	b2bf      	uxth	r7, r7
 8014226:	fb03 fe07 	mul.w	lr, r3, r7
 801422a:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801422e:	011b      	lsls	r3, r3, #4
 8014230:	eba3 0c0e 	sub.w	ip, r3, lr
 8014234:	b2bf      	uxth	r7, r7
 8014236:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 801423a:	fa1f fc8c 	uxth.w	ip, ip
 801423e:	1bed      	subs	r5, r5, r7
 8014240:	b2ad      	uxth	r5, r5
 8014242:	fb0c f30a 	mul.w	r3, ip, sl
 8014246:	fb05 330b 	mla	r3, r5, fp, r3
 801424a:	fb07 3309 	mla	r3, r7, r9, r3
 801424e:	fb0e 3308 	mla	r3, lr, r8, r3
 8014252:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014256:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801425a:	9303      	str	r3, [sp, #12]
 801425c:	d018      	beq.n	8014290 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x150>
 801425e:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8014262:	fb0b f303 	mul.w	r3, fp, r3
 8014266:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801426a:	fb0b fb02 	mul.w	fp, fp, r2
 801426e:	0a1a      	lsrs	r2, r3, #8
 8014270:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8014274:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8014278:	441a      	add	r2, r3
 801427a:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 801427e:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8014282:	0a12      	lsrs	r2, r2, #8
 8014284:	0a1b      	lsrs	r3, r3, #8
 8014286:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801428a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801428e:	431a      	orrs	r2, r3
 8014290:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8014294:	d019      	beq.n	80142ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x18a>
 8014296:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801429a:	fb0a fb0b 	mul.w	fp, sl, fp
 801429e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80142a2:	fb0a fa06 	mul.w	sl, sl, r6
 80142a6:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80142aa:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80142ae:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80142b2:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 80142b6:	445e      	add	r6, fp
 80142b8:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80142bc:	0a36      	lsrs	r6, r6, #8
 80142be:	0a1b      	lsrs	r3, r3, #8
 80142c0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80142c4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80142c8:	431e      	orrs	r6, r3
 80142ca:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80142ce:	d019      	beq.n	8014304 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1c4>
 80142d0:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80142d4:	fb09 fa0a 	mul.w	sl, r9, sl
 80142d8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80142dc:	fb09 f904 	mul.w	r9, r9, r4
 80142e0:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80142e4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80142e8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80142ec:	f509 7380 	add.w	r3, r9, #256	; 0x100
 80142f0:	4454      	add	r4, sl
 80142f2:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 80142f6:	0a24      	lsrs	r4, r4, #8
 80142f8:	0a1b      	lsrs	r3, r3, #8
 80142fa:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80142fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014302:	431c      	orrs	r4, r3
 8014304:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014308:	d019      	beq.n	801433e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1fe>
 801430a:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 801430e:	fb08 f909 	mul.w	r9, r8, r9
 8014312:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8014316:	fb08 f800 	mul.w	r8, r8, r0
 801431a:	ea4f 2019 	mov.w	r0, r9, lsr #8
 801431e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8014322:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8014326:	f508 7380 	add.w	r3, r8, #256	; 0x100
 801432a:	4448      	add	r0, r9
 801432c:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8014330:	0a00      	lsrs	r0, r0, #8
 8014332:	0a1b      	lsrs	r3, r3, #8
 8014334:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8014338:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801433c:	4318      	orrs	r0, r3
 801433e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8014342:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8014346:	fb0c f808 	mul.w	r8, ip, r8
 801434a:	fb05 8803 	mla	r8, r5, r3, r8
 801434e:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8014352:	fb07 8803 	mla	r8, r7, r3, r8
 8014356:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 801435a:	fb0e 8303 	mla	r3, lr, r3, r8
 801435e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014362:	fb0c f606 	mul.w	r6, ip, r6
 8014366:	0a1b      	lsrs	r3, r3, #8
 8014368:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801436c:	fb05 6202 	mla	r2, r5, r2, r6
 8014370:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8014374:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8014378:	fb07 2703 	mla	r7, r7, r3, r2
 801437c:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8014380:	b295      	uxth	r5, r2
 8014382:	9a03      	ldr	r2, [sp, #12]
 8014384:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8014388:	436a      	muls	r2, r5
 801438a:	fb0e 7303 	mla	r3, lr, r3, r7
 801438e:	1c50      	adds	r0, r2, #1
 8014390:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8014394:	0a1b      	lsrs	r3, r3, #8
 8014396:	9a00      	ldr	r2, [sp, #0]
 8014398:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801439c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80143a0:	ea48 0303 	orr.w	r3, r8, r3
 80143a4:	b2c0      	uxtb	r0, r0
 80143a6:	fb12 f200 	smulbb	r2, r2, r0
 80143aa:	0c1e      	lsrs	r6, r3, #16
 80143ac:	fb06 2605 	mla	r6, r6, r5, r2
 80143b0:	9a01      	ldr	r2, [sp, #4]
 80143b2:	f3c3 2407 	ubfx	r4, r3, #8, #8
 80143b6:	fb12 f200 	smulbb	r2, r2, r0
 80143ba:	fb04 2205 	mla	r2, r4, r5, r2
 80143be:	b294      	uxth	r4, r2
 80143c0:	9a02      	ldr	r2, [sp, #8]
 80143c2:	b2db      	uxtb	r3, r3
 80143c4:	fb12 f200 	smulbb	r2, r2, r0
 80143c8:	fb03 2205 	mla	r2, r3, r5, r2
 80143cc:	b2b6      	uxth	r6, r6
 80143ce:	b292      	uxth	r2, r2
 80143d0:	1c73      	adds	r3, r6, #1
 80143d2:	1c50      	adds	r0, r2, #1
 80143d4:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 80143d8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80143dc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80143e0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80143e4:	4313      	orrs	r3, r2
 80143e6:	1c62      	adds	r2, r4, #1
 80143e8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80143ec:	0952      	lsrs	r2, r2, #5
 80143ee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80143f2:	4313      	orrs	r3, r2
 80143f4:	800b      	strh	r3, [r1, #0]
 80143f6:	b005      	add	sp, #20
 80143f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80143fc:	0801d6d1 	.word	0x0801d6d1
 8014400:	0801dc29 	.word	0x0801dc29
 8014404:	0801d759 	.word	0x0801d759

08014408 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801440c:	ed2d 8b08 	vpush	{d8-d11}
 8014410:	b09b      	sub	sp, #108	; 0x6c
 8014412:	eeb0 aa40 	vmov.f32	s20, s0
 8014416:	9309      	str	r3, [sp, #36]	; 0x24
 8014418:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 801441c:	9d31      	ldr	r5, [sp, #196]	; 0xc4
 801441e:	9311      	str	r3, [sp, #68]	; 0x44
 8014420:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8014424:	9114      	str	r1, [sp, #80]	; 0x50
 8014426:	9317      	str	r3, [sp, #92]	; 0x5c
 8014428:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801442c:	9019      	str	r0, [sp, #100]	; 0x64
 801442e:	6868      	ldr	r0, [r5, #4]
 8014430:	9218      	str	r2, [sp, #96]	; 0x60
 8014432:	fb00 1303 	mla	r3, r0, r3, r1
 8014436:	6829      	ldr	r1, [r5, #0]
 8014438:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801443a:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 801443e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8014442:	930c      	str	r3, [sp, #48]	; 0x30
 8014444:	6813      	ldr	r3, [r2, #0]
 8014446:	9313      	str	r3, [sp, #76]	; 0x4c
 8014448:	6853      	ldr	r3, [r2, #4]
 801444a:	3304      	adds	r3, #4
 801444c:	eef0 9a60 	vmov.f32	s19, s1
 8014450:	eeb0 9a41 	vmov.f32	s18, s2
 8014454:	eeb0 8a62 	vmov.f32	s16, s5
 8014458:	eef0 8a43 	vmov.f32	s17, s6
 801445c:	eef0 ba44 	vmov.f32	s23, s8
 8014460:	eeb0 ba64 	vmov.f32	s22, s9
 8014464:	eef0 aa45 	vmov.f32	s21, s10
 8014468:	9308      	str	r3, [sp, #32]
 801446a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801446c:	2b00      	cmp	r3, #0
 801446e:	dc03      	bgt.n	8014478 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8014470:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8014472:	2b00      	cmp	r3, #0
 8014474:	f340 8363 	ble.w	8014b3e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8014478:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801447a:	2b00      	cmp	r3, #0
 801447c:	f340 81ad 	ble.w	80147da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d2>
 8014480:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014482:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014484:	1412      	asrs	r2, r2, #16
 8014486:	ea4f 4323 	mov.w	r3, r3, asr #16
 801448a:	d42f      	bmi.n	80144ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801448c:	1c51      	adds	r1, r2, #1
 801448e:	428c      	cmp	r4, r1
 8014490:	dd2f      	ble.n	80144f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8014492:	2b00      	cmp	r3, #0
 8014494:	db2d      	blt.n	80144f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8014496:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014498:	1c59      	adds	r1, r3, #1
 801449a:	4288      	cmp	r0, r1
 801449c:	dd29      	ble.n	80144f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 801449e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80144a0:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80144a2:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80144a4:	3b01      	subs	r3, #1
 80144a6:	fb02 1203 	mla	r2, r2, r3, r1
 80144aa:	1412      	asrs	r2, r2, #16
 80144ac:	d42b      	bmi.n	8014506 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80144ae:	3201      	adds	r2, #1
 80144b0:	4294      	cmp	r4, r2
 80144b2:	dd28      	ble.n	8014506 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80144b4:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80144b6:	992e      	ldr	r1, [sp, #184]	; 0xb8
 80144b8:	fb02 1303 	mla	r3, r2, r3, r1
 80144bc:	141b      	asrs	r3, r3, #16
 80144be:	d422      	bmi.n	8014506 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80144c0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80144c2:	3301      	adds	r3, #1
 80144c4:	429a      	cmp	r2, r3
 80144c6:	dd1e      	ble.n	8014506 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80144c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80144ca:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80144ce:	f8bd b05c 	ldrh.w	fp, [sp, #92]	; 0x5c
 80144d2:	9312      	str	r3, [sp, #72]	; 0x48
 80144d4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80144d6:	2b00      	cmp	r3, #0
 80144d8:	f300 81ea 	bgt.w	80148b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a8>
 80144dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80144de:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80144e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80144e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80144e8:	930c      	str	r3, [sp, #48]	; 0x30
 80144ea:	e178      	b.n	80147de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d6>
 80144ec:	1c51      	adds	r1, r2, #1
 80144ee:	f040 8165 	bne.w	80147bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80144f2:	42a2      	cmp	r2, r4
 80144f4:	f280 8162 	bge.w	80147bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80144f8:	1c5f      	adds	r7, r3, #1
 80144fa:	f2c0 815f 	blt.w	80147bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80144fe:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014500:	4293      	cmp	r3, r2
 8014502:	f280 815b 	bge.w	80147bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8014506:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014508:	9316      	str	r3, [sp, #88]	; 0x58
 801450a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801450c:	9312      	str	r3, [sp, #72]	; 0x48
 801450e:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8014512:	9315      	str	r3, [sp, #84]	; 0x54
 8014514:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014516:	2b00      	cmp	r3, #0
 8014518:	dde0      	ble.n	80144dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 801451a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801451c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801451e:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8014522:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8014524:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8014528:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801452a:	1412      	asrs	r2, r2, #16
 801452c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8014530:	f100 81a5 	bmi.w	801487e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x476>
 8014534:	1c55      	adds	r5, r2, #1
 8014536:	42ac      	cmp	r4, r5
 8014538:	f340 81a3 	ble.w	8014882 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 801453c:	2b00      	cmp	r3, #0
 801453e:	f2c0 81a0 	blt.w	8014882 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8014542:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8014544:	1c5d      	adds	r5, r3, #1
 8014546:	42af      	cmp	r7, r5
 8014548:	f340 819b 	ble.w	8014882 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 801454c:	fb03 2304 	mla	r3, r3, r4, r2
 8014550:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014552:	18d5      	adds	r5, r2, r3
 8014554:	5cd3      	ldrb	r3, [r2, r3]
 8014556:	9a08      	ldr	r2, [sp, #32]
 8014558:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801455c:	0e1f      	lsrs	r7, r3, #24
 801455e:	2800      	cmp	r0, #0
 8014560:	f000 817c 	beq.w	801485c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x454>
 8014564:	786a      	ldrb	r2, [r5, #1]
 8014566:	9e08      	ldr	r6, [sp, #32]
 8014568:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 801456c:	920d      	str	r2, [sp, #52]	; 0x34
 801456e:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8014572:	2900      	cmp	r1, #0
 8014574:	f000 817d 	beq.w	8014872 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46a>
 8014578:	192a      	adds	r2, r5, r4
 801457a:	5d2d      	ldrb	r5, [r5, r4]
 801457c:	7852      	ldrb	r2, [r2, #1]
 801457e:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 8014582:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8014586:	950a      	str	r5, [sp, #40]	; 0x28
 8014588:	ea4f 6915 	mov.w	r9, r5, lsr #24
 801458c:	920e      	str	r2, [sp, #56]	; 0x38
 801458e:	0e15      	lsrs	r5, r2, #24
 8014590:	b280      	uxth	r0, r0
 8014592:	b289      	uxth	r1, r1
 8014594:	fb00 fa01 	mul.w	sl, r0, r1
 8014598:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 801459c:	0100      	lsls	r0, r0, #4
 801459e:	eba0 080a 	sub.w	r8, r0, sl
 80145a2:	b289      	uxth	r1, r1
 80145a4:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 80145a8:	fa1f f888 	uxth.w	r8, r8
 80145ac:	1a52      	subs	r2, r2, r1
 80145ae:	b292      	uxth	r2, r2
 80145b0:	fb08 f00e 	mul.w	r0, r8, lr
 80145b4:	fb02 0007 	mla	r0, r2, r7, r0
 80145b8:	fb01 0009 	mla	r0, r1, r9, r0
 80145bc:	fb0a 0005 	mla	r0, sl, r5, r0
 80145c0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80145c4:	2800      	cmp	r0, #0
 80145c6:	f000 80ea 	beq.w	801479e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80145ca:	2fff      	cmp	r7, #255	; 0xff
 80145cc:	d01a      	beq.n	8014604 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fc>
 80145ce:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80145d2:	fb07 fc0c 	mul.w	ip, r7, ip
 80145d6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80145da:	435f      	muls	r7, r3
 80145dc:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80145e0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80145e4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80145e8:	f507 7b80 	add.w	fp, r7, #256	; 0x100
 80145ec:	4463      	add	r3, ip
 80145ee:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 80145f2:	0a1b      	lsrs	r3, r3, #8
 80145f4:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80145f8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80145fc:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8014600:	ea43 030b 	orr.w	r3, r3, fp
 8014604:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8014608:	d01e      	beq.n	8014648 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x240>
 801460a:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 801460c:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8014610:	fb0e fb0b 	mul.w	fp, lr, fp
 8014614:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8014618:	fb0e fe07 	mul.w	lr, lr, r7
 801461c:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 8014620:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014624:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8014628:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 801462c:	44dc      	add	ip, fp
 801462e:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8014632:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014636:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801463a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801463e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8014642:	ea4c 060e 	orr.w	r6, ip, lr
 8014646:	960d      	str	r6, [sp, #52]	; 0x34
 8014648:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801464c:	d01e      	beq.n	801468c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801464e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8014650:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8014654:	fb09 fe0e 	mul.w	lr, r9, lr
 8014658:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 801465c:	fb09 f907 	mul.w	r9, r9, r7
 8014660:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8014664:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014668:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801466c:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8014670:	44f4      	add	ip, lr
 8014672:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8014676:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801467a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801467e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014682:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8014686:	ea4c 0609 	orr.w	r6, ip, r9
 801468a:	960a      	str	r6, [sp, #40]	; 0x28
 801468c:	2dff      	cmp	r5, #255	; 0xff
 801468e:	d01c      	beq.n	80146ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c2>
 8014690:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014692:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8014696:	fb05 fe0e 	mul.w	lr, r5, lr
 801469a:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 801469e:	437d      	muls	r5, r7
 80146a0:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80146a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80146a8:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80146ac:	f505 7780 	add.w	r7, r5, #256	; 0x100
 80146b0:	44f4      	add	ip, lr
 80146b2:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 80146b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80146ba:	0a2d      	lsrs	r5, r5, #8
 80146bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80146c0:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80146c4:	ea4c 0505 	orr.w	r5, ip, r5
 80146c8:	950e      	str	r5, [sp, #56]	; 0x38
 80146ca:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80146cc:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80146ce:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80146d2:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 80146d6:	fb08 f505 	mul.w	r5, r8, r5
 80146da:	fb02 5507 	mla	r5, r2, r7, r5
 80146de:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 80146e2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80146e4:	fb01 5507 	mla	r5, r1, r7, r5
 80146e8:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 80146ec:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80146ee:	fb0a 5507 	mla	r5, sl, r7, r5
 80146f2:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 80146f6:	fb08 f807 	mul.w	r8, r8, r7
 80146fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80146fe:	fb02 8303 	mla	r3, r2, r3, r8
 8014702:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014704:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8014706:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801470a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801470c:	fb01 330c 	mla	r3, r1, ip, r3
 8014710:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8014714:	fb0a 3a01 	mla	sl, sl, r1, r3
 8014718:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801471a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801471c:	881f      	ldrh	r7, [r3, #0]
 801471e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014720:	0a2d      	lsrs	r5, r5, #8
 8014722:	4343      	muls	r3, r0
 8014724:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014728:	1c58      	adds	r0, r3, #1
 801472a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801472e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014732:	ea45 050a 	orr.w	r5, r5, sl
 8014736:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801473a:	0c29      	lsrs	r1, r5, #16
 801473c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8014740:	123b      	asrs	r3, r7, #8
 8014742:	b2c0      	uxtb	r0, r0
 8014744:	fb11 f102 	smulbb	r1, r1, r2
 8014748:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801474c:	fb03 1300 	mla	r3, r3, r0, r1
 8014750:	b299      	uxth	r1, r3
 8014752:	10fa      	asrs	r2, r7, #3
 8014754:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8014758:	fb13 f306 	smulbb	r3, r3, r6
 801475c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014760:	fb02 3200 	mla	r2, r2, r0, r3
 8014764:	b2ed      	uxtb	r5, r5
 8014766:	00fb      	lsls	r3, r7, #3
 8014768:	b2db      	uxtb	r3, r3
 801476a:	fb15 f506 	smulbb	r5, r5, r6
 801476e:	fb03 5500 	mla	r5, r3, r0, r5
 8014772:	b292      	uxth	r2, r2
 8014774:	b2ad      	uxth	r5, r5
 8014776:	1c4b      	adds	r3, r1, #1
 8014778:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801477c:	1c68      	adds	r0, r5, #1
 801477e:	1c51      	adds	r1, r2, #1
 8014780:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8014784:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8014788:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801478c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014790:	0952      	lsrs	r2, r2, #5
 8014792:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014796:	432b      	orrs	r3, r5
 8014798:	4313      	orrs	r3, r2
 801479a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801479c:	8013      	strh	r3, [r2, #0]
 801479e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80147a0:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80147a2:	3302      	adds	r3, #2
 80147a4:	9312      	str	r3, [sp, #72]	; 0x48
 80147a6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80147a8:	4413      	add	r3, r2
 80147aa:	932d      	str	r3, [sp, #180]	; 0xb4
 80147ac:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80147ae:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80147b0:	4413      	add	r3, r2
 80147b2:	932e      	str	r3, [sp, #184]	; 0xb8
 80147b4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80147b6:	3b01      	subs	r3, #1
 80147b8:	9316      	str	r3, [sp, #88]	; 0x58
 80147ba:	e6ab      	b.n	8014514 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10c>
 80147bc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80147be:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80147c0:	4413      	add	r3, r2
 80147c2:	932d      	str	r3, [sp, #180]	; 0xb4
 80147c4:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80147c6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80147c8:	4413      	add	r3, r2
 80147ca:	932e      	str	r3, [sp, #184]	; 0xb8
 80147cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80147ce:	3b01      	subs	r3, #1
 80147d0:	9309      	str	r3, [sp, #36]	; 0x24
 80147d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80147d4:	3302      	adds	r3, #2
 80147d6:	930c      	str	r3, [sp, #48]	; 0x30
 80147d8:	e64e      	b.n	8014478 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 80147da:	f47f ae60 	bne.w	801449e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 80147de:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80147e0:	2b00      	cmp	r3, #0
 80147e2:	f340 81ac 	ble.w	8014b3e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 80147e6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80147ea:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80147ee:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80147f2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80147f4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80147f8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80147fc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014800:	eef0 6a48 	vmov.f32	s13, s16
 8014804:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014808:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801480c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014810:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8014814:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014818:	eef0 6a68 	vmov.f32	s13, s17
 801481c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014820:	ee18 2a10 	vmov	r2, s16
 8014824:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014828:	fb92 f3f3 	sdiv	r3, r2, r3
 801482c:	ee18 2a90 	vmov	r2, s17
 8014830:	932f      	str	r3, [sp, #188]	; 0xbc
 8014832:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014834:	fb92 f3f3 	sdiv	r3, r2, r3
 8014838:	9330      	str	r3, [sp, #192]	; 0xc0
 801483a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801483c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801483e:	3b01      	subs	r3, #1
 8014840:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014844:	9314      	str	r3, [sp, #80]	; 0x50
 8014846:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014848:	edcd 6a2e 	vstr	s13, [sp, #184]	; 0xb8
 801484c:	bf08      	it	eq
 801484e:	4613      	moveq	r3, r2
 8014850:	9309      	str	r3, [sp, #36]	; 0x24
 8014852:	eef0 8a67 	vmov.f32	s17, s15
 8014856:	eeb0 8a47 	vmov.f32	s16, s14
 801485a:	e606      	b.n	801446a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 801485c:	b161      	cbz	r1, 8014878 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 801485e:	5d2a      	ldrb	r2, [r5, r4]
 8014860:	9d08      	ldr	r5, [sp, #32]
 8014862:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8014866:	920a      	str	r2, [sp, #40]	; 0x28
 8014868:	ea4f 6912 	mov.w	r9, r2, lsr #24
 801486c:	25ff      	movs	r5, #255	; 0xff
 801486e:	46ae      	mov	lr, r5
 8014870:	e68e      	b.n	8014590 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 8014872:	25ff      	movs	r5, #255	; 0xff
 8014874:	46a9      	mov	r9, r5
 8014876:	e68b      	b.n	8014590 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 8014878:	25ff      	movs	r5, #255	; 0xff
 801487a:	46a9      	mov	r9, r5
 801487c:	e7f7      	b.n	801486e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801487e:	1c56      	adds	r6, r2, #1
 8014880:	d18d      	bne.n	801479e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8014882:	4294      	cmp	r4, r2
 8014884:	dd8b      	ble.n	801479e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8014886:	1c5d      	adds	r5, r3, #1
 8014888:	db89      	blt.n	801479e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801488a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801488c:	429d      	cmp	r5, r3
 801488e:	dd86      	ble.n	801479e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8014890:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8014894:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8014896:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014898:	9202      	str	r2, [sp, #8]
 801489a:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801489e:	e9cd 4300 	strd	r4, r3, [sp]
 80148a2:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
 80148a6:	9b08      	ldr	r3, [sp, #32]
 80148a8:	9819      	ldr	r0, [sp, #100]	; 0x64
 80148aa:	f7ff fc49 	bl	8014140 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80148ae:	e776      	b.n	801479e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80148b0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80148b2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80148b4:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80148b8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80148ba:	1412      	asrs	r2, r2, #16
 80148bc:	f3c3 3003 	ubfx	r0, r3, #12, #4
 80148c0:	141b      	asrs	r3, r3, #16
 80148c2:	fb04 2303 	mla	r3, r4, r3, r2
 80148c6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80148c8:	18d5      	adds	r5, r2, r3
 80148ca:	5cd3      	ldrb	r3, [r2, r3]
 80148cc:	9a08      	ldr	r2, [sp, #32]
 80148ce:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80148d2:	0e1e      	lsrs	r6, r3, #24
 80148d4:	2900      	cmp	r1, #0
 80148d6:	f000 8121 	beq.w	8014b1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 80148da:	786a      	ldrb	r2, [r5, #1]
 80148dc:	9f08      	ldr	r7, [sp, #32]
 80148de:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80148e2:	920f      	str	r2, [sp, #60]	; 0x3c
 80148e4:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 80148e8:	2800      	cmp	r0, #0
 80148ea:	f000 8122 	beq.w	8014b32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72a>
 80148ee:	192a      	adds	r2, r5, r4
 80148f0:	5d2d      	ldrb	r5, [r5, r4]
 80148f2:	7852      	ldrb	r2, [r2, #1]
 80148f4:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 80148f8:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80148fc:	950b      	str	r5, [sp, #44]	; 0x2c
 80148fe:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8014902:	9210      	str	r2, [sp, #64]	; 0x40
 8014904:	0e15      	lsrs	r5, r2, #24
 8014906:	b289      	uxth	r1, r1
 8014908:	b280      	uxth	r0, r0
 801490a:	fb01 f900 	mul.w	r9, r1, r0
 801490e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8014912:	0109      	lsls	r1, r1, #4
 8014914:	eba1 0e09 	sub.w	lr, r1, r9
 8014918:	b280      	uxth	r0, r0
 801491a:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 801491e:	fa1f fe8e 	uxth.w	lr, lr
 8014922:	1a12      	subs	r2, r2, r0
 8014924:	b292      	uxth	r2, r2
 8014926:	fb0e f10c 	mul.w	r1, lr, ip
 801492a:	fb02 1106 	mla	r1, r2, r6, r1
 801492e:	fb00 1108 	mla	r1, r0, r8, r1
 8014932:	fb09 1105 	mla	r1, r9, r5, r1
 8014936:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801493a:	2900      	cmp	r1, #0
 801493c:	f000 80e0 	beq.w	8014b00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f8>
 8014940:	2eff      	cmp	r6, #255	; 0xff
 8014942:	d016      	beq.n	8014972 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56a>
 8014944:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8014948:	4377      	muls	r7, r6
 801494a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801494e:	435e      	muls	r6, r3
 8014950:	0a3b      	lsrs	r3, r7, #8
 8014952:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014956:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801495a:	443b      	add	r3, r7
 801495c:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8014960:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8014964:	0a1b      	lsrs	r3, r3, #8
 8014966:	0a3f      	lsrs	r7, r7, #8
 8014968:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801496c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8014970:	433b      	orrs	r3, r7
 8014972:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8014976:	d01d      	beq.n	80149b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ac>
 8014978:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 801497a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801497c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014980:	fb0c f606 	mul.w	r6, ip, r6
 8014984:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8014988:	fb0c fc07 	mul.w	ip, ip, r7
 801498c:	0a37      	lsrs	r7, r6, #8
 801498e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8014992:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8014996:	4437      	add	r7, r6
 8014998:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 801499c:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 80149a0:	0a3f      	lsrs	r7, r7, #8
 80149a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80149a6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80149aa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80149ae:	ea47 060c 	orr.w	r6, r7, ip
 80149b2:	960f      	str	r6, [sp, #60]	; 0x3c
 80149b4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80149b8:	d01d      	beq.n	80149f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ee>
 80149ba:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80149bc:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80149c0:	fb08 fc0c 	mul.w	ip, r8, ip
 80149c4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80149c8:	fb08 f806 	mul.w	r8, r8, r6
 80149cc:	ea4f 271c 	mov.w	r7, ip, lsr #8
 80149d0:	f508 7680 	add.w	r6, r8, #256	; 0x100
 80149d4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80149d8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80149dc:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 80149e0:	4467      	add	r7, ip
 80149e2:	0a3f      	lsrs	r7, r7, #8
 80149e4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80149e8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80149ec:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80149f0:	ea47 0608 	orr.w	r6, r7, r8
 80149f4:	960b      	str	r6, [sp, #44]	; 0x2c
 80149f6:	2dff      	cmp	r5, #255	; 0xff
 80149f8:	d01a      	beq.n	8014a30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x628>
 80149fa:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80149fc:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8014a00:	fb05 fc0c 	mul.w	ip, r5, ip
 8014a04:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014a08:	4375      	muls	r5, r6
 8014a0a:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8014a0e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8014a12:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8014a16:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8014a1a:	4467      	add	r7, ip
 8014a1c:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8014a20:	0a3f      	lsrs	r7, r7, #8
 8014a22:	0a2d      	lsrs	r5, r5, #8
 8014a24:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8014a28:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8014a2c:	433d      	orrs	r5, r7
 8014a2e:	9510      	str	r5, [sp, #64]	; 0x40
 8014a30:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8014a32:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8014a36:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 8014a3a:	fb0e f505 	mul.w	r5, lr, r5
 8014a3e:	fb02 5506 	mla	r5, r2, r6, r5
 8014a42:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8014a44:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014a48:	fb00 5506 	mla	r5, r0, r6, r5
 8014a4c:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8014a4e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014a52:	fb09 5506 	mla	r5, r9, r6, r5
 8014a56:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8014a58:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014a5c:	fb0e fe06 	mul.w	lr, lr, r6
 8014a60:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014a64:	fb02 e303 	mla	r3, r2, r3, lr
 8014a68:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014a6a:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8014a6e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014a70:	fb00 3307 	mla	r3, r0, r7, r3
 8014a74:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8014a78:	fb09 3c0c 	mla	ip, r9, ip, r3
 8014a7c:	fb01 f10b 	mul.w	r1, r1, fp
 8014a80:	0a2d      	lsrs	r5, r5, #8
 8014a82:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014a86:	f8ba 0000 	ldrh.w	r0, [sl]
 8014a8a:	1c4b      	adds	r3, r1, #1
 8014a8c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8014a90:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8014a94:	ea45 050c 	orr.w	r5, r5, ip
 8014a98:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8014a9c:	1202      	asrs	r2, r0, #8
 8014a9e:	0c2b      	lsrs	r3, r5, #16
 8014aa0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8014aa4:	b2c9      	uxtb	r1, r1
 8014aa6:	fb13 f30b 	smulbb	r3, r3, fp
 8014aaa:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8014aae:	fb02 3201 	mla	r2, r2, r1, r3
 8014ab2:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8014ab6:	10c3      	asrs	r3, r0, #3
 8014ab8:	b2ed      	uxtb	r5, r5
 8014aba:	00c0      	lsls	r0, r0, #3
 8014abc:	b2c0      	uxtb	r0, r0
 8014abe:	fb15 f50b 	smulbb	r5, r5, fp
 8014ac2:	fb00 5001 	mla	r0, r0, r1, r5
 8014ac6:	b292      	uxth	r2, r2
 8014ac8:	fb16 f60b 	smulbb	r6, r6, fp
 8014acc:	b280      	uxth	r0, r0
 8014ace:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8014ad2:	fb03 6301 	mla	r3, r3, r1, r6
 8014ad6:	1c51      	adds	r1, r2, #1
 8014ad8:	1c46      	adds	r6, r0, #1
 8014ada:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8014ade:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8014ae2:	b29b      	uxth	r3, r3
 8014ae4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014ae8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8014aec:	4332      	orrs	r2, r6
 8014aee:	1c5e      	adds	r6, r3, #1
 8014af0:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8014af4:	095b      	lsrs	r3, r3, #5
 8014af6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014afa:	431a      	orrs	r2, r3
 8014afc:	f8aa 2000 	strh.w	r2, [sl]
 8014b00:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014b02:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8014b04:	4413      	add	r3, r2
 8014b06:	932d      	str	r3, [sp, #180]	; 0xb4
 8014b08:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8014b0a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8014b0c:	4413      	add	r3, r2
 8014b0e:	932e      	str	r3, [sp, #184]	; 0xb8
 8014b10:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014b12:	3b01      	subs	r3, #1
 8014b14:	f10a 0a02 	add.w	sl, sl, #2
 8014b18:	9312      	str	r3, [sp, #72]	; 0x48
 8014b1a:	e4db      	b.n	80144d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8014b1c:	b160      	cbz	r0, 8014b38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8014b1e:	5d2a      	ldrb	r2, [r5, r4]
 8014b20:	9d08      	ldr	r5, [sp, #32]
 8014b22:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8014b26:	920b      	str	r2, [sp, #44]	; 0x2c
 8014b28:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8014b2c:	25ff      	movs	r5, #255	; 0xff
 8014b2e:	46ac      	mov	ip, r5
 8014b30:	e6e9      	b.n	8014906 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8014b32:	25ff      	movs	r5, #255	; 0xff
 8014b34:	46a8      	mov	r8, r5
 8014b36:	e6e6      	b.n	8014906 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8014b38:	25ff      	movs	r5, #255	; 0xff
 8014b3a:	46a8      	mov	r8, r5
 8014b3c:	e7f7      	b.n	8014b2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x726>
 8014b3e:	b01b      	add	sp, #108	; 0x6c
 8014b40:	ecbd 8b08 	vpop	{d8-d11}
 8014b44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014b48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8014b48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b4c:	8808      	ldrh	r0, [r1, #0]
 8014b4e:	b085      	sub	sp, #20
 8014b50:	1206      	asrs	r6, r0, #8
 8014b52:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8014b56:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014b5a:	9600      	str	r6, [sp, #0]
 8014b5c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8014b60:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8014b64:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8014b68:	10c6      	asrs	r6, r0, #3
 8014b6a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014b6e:	9601      	str	r6, [sp, #4]
 8014b70:	00c0      	lsls	r0, r0, #3
 8014b72:	fb04 560c 	mla	r6, r4, ip, r5
 8014b76:	b2c0      	uxtb	r0, r0
 8014b78:	4692      	mov	sl, r2
 8014b7a:	eb02 0e06 	add.w	lr, r2, r6
 8014b7e:	9a00      	ldr	r2, [sp, #0]
 8014b80:	9002      	str	r0, [sp, #8]
 8014b82:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8014b86:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8014b8a:	9a01      	ldr	r2, [sp, #4]
 8014b8c:	2c00      	cmp	r4, #0
 8014b8e:	4698      	mov	r8, r3
 8014b90:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8014b94:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8014b98:	db3e      	blt.n	8014c18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8014b9a:	45a1      	cmp	r9, r4
 8014b9c:	dd3c      	ble.n	8014c18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8014b9e:	2d00      	cmp	r5, #0
 8014ba0:	db38      	blt.n	8014c14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8014ba2:	45ac      	cmp	ip, r5
 8014ba4:	dd36      	ble.n	8014c14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8014ba6:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8014baa:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8014bae:	1c6e      	adds	r6, r5, #1
 8014bb0:	d435      	bmi.n	8014c1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8014bb2:	45b4      	cmp	ip, r6
 8014bb4:	dd33      	ble.n	8014c1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8014bb6:	b393      	cbz	r3, 8014c1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8014bb8:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8014bbc:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8014bc0:	3401      	adds	r4, #1
 8014bc2:	d430      	bmi.n	8014c26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8014bc4:	45a1      	cmp	r9, r4
 8014bc6:	dd2e      	ble.n	8014c26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8014bc8:	b36f      	cbz	r7, 8014c26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8014bca:	2d00      	cmp	r5, #0
 8014bcc:	db29      	blt.n	8014c22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8014bce:	45ac      	cmp	ip, r5
 8014bd0:	dd27      	ble.n	8014c22 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8014bd2:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8014bd6:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8014bda:	3501      	adds	r5, #1
 8014bdc:	d407      	bmi.n	8014bee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8014bde:	45ac      	cmp	ip, r5
 8014be0:	dd05      	ble.n	8014bee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8014be2:	b123      	cbz	r3, 8014bee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8014be4:	44f4      	add	ip, lr
 8014be6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8014bea:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 8014bee:	2b0f      	cmp	r3, #15
 8014bf0:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8014bf4:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8014bf8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8014bfc:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8014c00:	d801      	bhi.n	8014c06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8014c02:	2f0f      	cmp	r7, #15
 8014c04:	d911      	bls.n	8014c2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8014c06:	4b79      	ldr	r3, [pc, #484]	; (8014dec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>)
 8014c08:	4a79      	ldr	r2, [pc, #484]	; (8014df0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8014c0a:	487a      	ldr	r0, [pc, #488]	; (8014df4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8014c0c:	f240 210d 	movw	r1, #525	; 0x20d
 8014c10:	f004 ff46 	bl	8019aa0 <__assert_func>
 8014c14:	4602      	mov	r2, r0
 8014c16:	e7ca      	b.n	8014bae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 8014c18:	4606      	mov	r6, r0
 8014c1a:	4602      	mov	r2, r0
 8014c1c:	e7d0      	b.n	8014bc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 8014c1e:	4606      	mov	r6, r0
 8014c20:	e7ce      	b.n	8014bc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 8014c22:	4604      	mov	r4, r0
 8014c24:	e7d9      	b.n	8014bda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x92>
 8014c26:	4604      	mov	r4, r0
 8014c28:	e7e1      	b.n	8014bee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8014c2a:	b29b      	uxth	r3, r3
 8014c2c:	b2bf      	uxth	r7, r7
 8014c2e:	fb03 fe07 	mul.w	lr, r3, r7
 8014c32:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8014c36:	011b      	lsls	r3, r3, #4
 8014c38:	eba3 0c0e 	sub.w	ip, r3, lr
 8014c3c:	b2bf      	uxth	r7, r7
 8014c3e:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8014c42:	fa1f fc8c 	uxth.w	ip, ip
 8014c46:	1bed      	subs	r5, r5, r7
 8014c48:	b2ad      	uxth	r5, r5
 8014c4a:	fb0c f30a 	mul.w	r3, ip, sl
 8014c4e:	fb05 330b 	mla	r3, r5, fp, r3
 8014c52:	fb07 3309 	mla	r3, r7, r9, r3
 8014c56:	fb0e 3308 	mla	r3, lr, r8, r3
 8014c5a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014c5e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8014c62:	9303      	str	r3, [sp, #12]
 8014c64:	d018      	beq.n	8014c98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 8014c66:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8014c6a:	fb0b f303 	mul.w	r3, fp, r3
 8014c6e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8014c72:	fb0b fb02 	mul.w	fp, fp, r2
 8014c76:	0a1a      	lsrs	r2, r3, #8
 8014c78:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8014c7c:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8014c80:	441a      	add	r2, r3
 8014c82:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8014c86:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8014c8a:	0a12      	lsrs	r2, r2, #8
 8014c8c:	0a1b      	lsrs	r3, r3, #8
 8014c8e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8014c92:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014c96:	431a      	orrs	r2, r3
 8014c98:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8014c9c:	d019      	beq.n	8014cd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x18a>
 8014c9e:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8014ca2:	fb0a fb0b 	mul.w	fp, sl, fp
 8014ca6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014caa:	fb0a fa06 	mul.w	sl, sl, r6
 8014cae:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8014cb2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014cb6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8014cba:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8014cbe:	445e      	add	r6, fp
 8014cc0:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8014cc4:	0a36      	lsrs	r6, r6, #8
 8014cc6:	0a1b      	lsrs	r3, r3, #8
 8014cc8:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014ccc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014cd0:	431e      	orrs	r6, r3
 8014cd2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8014cd6:	d019      	beq.n	8014d0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1c4>
 8014cd8:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8014cdc:	fb09 fa0a 	mul.w	sl, r9, sl
 8014ce0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8014ce4:	fb09 f904 	mul.w	r9, r9, r4
 8014ce8:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8014cec:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8014cf0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8014cf4:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8014cf8:	4454      	add	r4, sl
 8014cfa:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8014cfe:	0a24      	lsrs	r4, r4, #8
 8014d00:	0a1b      	lsrs	r3, r3, #8
 8014d02:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8014d06:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014d0a:	431c      	orrs	r4, r3
 8014d0c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014d10:	d019      	beq.n	8014d46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1fe>
 8014d12:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8014d16:	fb08 f909 	mul.w	r9, r8, r9
 8014d1a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8014d1e:	fb08 f800 	mul.w	r8, r8, r0
 8014d22:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8014d26:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8014d2a:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8014d2e:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8014d32:	4448      	add	r0, r9
 8014d34:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8014d38:	0a00      	lsrs	r0, r0, #8
 8014d3a:	0a1b      	lsrs	r3, r3, #8
 8014d3c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8014d40:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014d44:	4318      	orrs	r0, r3
 8014d46:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8014d4a:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8014d4e:	fb0c f808 	mul.w	r8, ip, r8
 8014d52:	fb05 8803 	mla	r8, r5, r3, r8
 8014d56:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8014d5a:	fb07 8803 	mla	r8, r7, r3, r8
 8014d5e:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8014d62:	fb0e 8303 	mla	r3, lr, r3, r8
 8014d66:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8014d6a:	0a1b      	lsrs	r3, r3, #8
 8014d6c:	fb0c f606 	mul.w	r6, ip, r6
 8014d70:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8014d74:	fb05 6202 	mla	r2, r5, r2, r6
 8014d78:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8014d7c:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8014d80:	fb07 2703 	mla	r7, r7, r3, r2
 8014d84:	9a03      	ldr	r2, [sp, #12]
 8014d86:	9c02      	ldr	r4, [sp, #8]
 8014d88:	9d01      	ldr	r5, [sp, #4]
 8014d8a:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8014d8e:	fb0e 7303 	mla	r3, lr, r3, r7
 8014d92:	43d0      	mvns	r0, r2
 8014d94:	9a00      	ldr	r2, [sp, #0]
 8014d96:	b2c0      	uxtb	r0, r0
 8014d98:	0a1b      	lsrs	r3, r3, #8
 8014d9a:	4342      	muls	r2, r0
 8014d9c:	4344      	muls	r4, r0
 8014d9e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014da2:	ea48 0303 	orr.w	r3, r8, r3
 8014da6:	4345      	muls	r5, r0
 8014da8:	4620      	mov	r0, r4
 8014daa:	1c54      	adds	r4, r2, #1
 8014dac:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8014db0:	0c1a      	lsrs	r2, r3, #16
 8014db2:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8014db6:	4a10      	ldr	r2, [pc, #64]	; (8014df8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8014db8:	ea02 2204 	and.w	r2, r2, r4, lsl #8
 8014dbc:	1c44      	adds	r4, r0, #1
 8014dbe:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 8014dc2:	b2d8      	uxtb	r0, r3
 8014dc4:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8014dc8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8014dcc:	1c68      	adds	r0, r5, #1
 8014dce:	eb00 2015 	add.w	r0, r0, r5, lsr #8
 8014dd2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8014dd6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8014dda:	00db      	lsls	r3, r3, #3
 8014ddc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014de0:	4313      	orrs	r3, r2
 8014de2:	800b      	strh	r3, [r1, #0]
 8014de4:	b005      	add	sp, #20
 8014de6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014dea:	bf00      	nop
 8014dec:	0801d6d1 	.word	0x0801d6d1
 8014df0:	0801dc29 	.word	0x0801dc29
 8014df4:	0801d759 	.word	0x0801d759
 8014df8:	fffff800 	.word	0xfffff800

08014dfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e00:	ed2d 8b08 	vpush	{d8-d11}
 8014e04:	b097      	sub	sp, #92	; 0x5c
 8014e06:	eeb0 aa40 	vmov.f32	s20, s0
 8014e0a:	9d2d      	ldr	r5, [sp, #180]	; 0xb4
 8014e0c:	9307      	str	r3, [sp, #28]
 8014e0e:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8014e12:	9112      	str	r1, [sp, #72]	; 0x48
 8014e14:	930f      	str	r3, [sp, #60]	; 0x3c
 8014e16:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8014e1a:	9015      	str	r0, [sp, #84]	; 0x54
 8014e1c:	6868      	ldr	r0, [r5, #4]
 8014e1e:	9214      	str	r2, [sp, #80]	; 0x50
 8014e20:	fb00 1303 	mla	r3, r0, r3, r1
 8014e24:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8014e26:	6829      	ldr	r1, [r5, #0]
 8014e28:	6855      	ldr	r5, [r2, #4]
 8014e2a:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 8014e2e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8014e32:	930a      	str	r3, [sp, #40]	; 0x28
 8014e34:	6813      	ldr	r3, [r2, #0]
 8014e36:	9311      	str	r3, [sp, #68]	; 0x44
 8014e38:	eef0 9a60 	vmov.f32	s19, s1
 8014e3c:	eeb0 9a41 	vmov.f32	s18, s2
 8014e40:	eeb0 8a62 	vmov.f32	s16, s5
 8014e44:	eef0 8a43 	vmov.f32	s17, s6
 8014e48:	eef0 ba44 	vmov.f32	s23, s8
 8014e4c:	eeb0 ba64 	vmov.f32	s22, s9
 8014e50:	eef0 aa45 	vmov.f32	s21, s10
 8014e54:	3504      	adds	r5, #4
 8014e56:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014e58:	2b00      	cmp	r3, #0
 8014e5a:	dc03      	bgt.n	8014e64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8014e5c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8014e5e:	2b00      	cmp	r3, #0
 8014e60:	f340 834d 	ble.w	80154fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8014e64:	9b07      	ldr	r3, [sp, #28]
 8014e66:	2b00      	cmp	r3, #0
 8014e68:	f340 819c 	ble.w	80151a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a8>
 8014e6c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014e6e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014e70:	1412      	asrs	r2, r2, #16
 8014e72:	ea4f 4323 	mov.w	r3, r3, asr #16
 8014e76:	d42d      	bmi.n	8014ed4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8014e78:	1c51      	adds	r1, r2, #1
 8014e7a:	428c      	cmp	r4, r1
 8014e7c:	dd2d      	ble.n	8014eda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8014e7e:	2b00      	cmp	r3, #0
 8014e80:	db2b      	blt.n	8014eda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8014e82:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014e84:	1c59      	adds	r1, r3, #1
 8014e86:	4288      	cmp	r0, r1
 8014e88:	dd27      	ble.n	8014eda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8014e8a:	9b07      	ldr	r3, [sp, #28]
 8014e8c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014e8e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014e90:	3b01      	subs	r3, #1
 8014e92:	fb02 1203 	mla	r2, r2, r3, r1
 8014e96:	1412      	asrs	r2, r2, #16
 8014e98:	d429      	bmi.n	8014eee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8014e9a:	3201      	adds	r2, #1
 8014e9c:	4294      	cmp	r4, r2
 8014e9e:	dd26      	ble.n	8014eee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8014ea0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014ea2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014ea4:	fb02 1303 	mla	r3, r2, r3, r1
 8014ea8:	141b      	asrs	r3, r3, #16
 8014eaa:	d420      	bmi.n	8014eee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8014eac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014eae:	3301      	adds	r3, #1
 8014eb0:	429a      	cmp	r2, r3
 8014eb2:	dd1c      	ble.n	8014eee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8014eb4:	9b07      	ldr	r3, [sp, #28]
 8014eb6:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8014eba:	9310      	str	r3, [sp, #64]	; 0x40
 8014ebc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014ebe:	2b00      	cmp	r3, #0
 8014ec0:	f300 81da 	bgt.w	8015278 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8014ec4:	9b07      	ldr	r3, [sp, #28]
 8014ec6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014ec8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ecc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014ed0:	930a      	str	r3, [sp, #40]	; 0x28
 8014ed2:	e169      	b.n	80151a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8014ed4:	1c51      	adds	r1, r2, #1
 8014ed6:	f040 8156 	bne.w	8015186 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8014eda:	42a2      	cmp	r2, r4
 8014edc:	f280 8153 	bge.w	8015186 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8014ee0:	1c5a      	adds	r2, r3, #1
 8014ee2:	f2c0 8150 	blt.w	8015186 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8014ee6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014ee8:	4293      	cmp	r3, r2
 8014eea:	f280 814c 	bge.w	8015186 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8014eee:	9b07      	ldr	r3, [sp, #28]
 8014ef0:	9313      	str	r3, [sp, #76]	; 0x4c
 8014ef2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014ef4:	9310      	str	r3, [sp, #64]	; 0x40
 8014ef6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014ef8:	2b00      	cmp	r3, #0
 8014efa:	dde3      	ble.n	8014ec4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8014efc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014efe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014f00:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8014f04:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8014f06:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8014f0a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014f0c:	1412      	asrs	r2, r2, #16
 8014f0e:	ea4f 4323 	mov.w	r3, r3, asr #16
 8014f12:	f100 8198 	bmi.w	8015246 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44a>
 8014f16:	1c56      	adds	r6, r2, #1
 8014f18:	42b4      	cmp	r4, r6
 8014f1a:	f340 8196 	ble.w	801524a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8014f1e:	2b00      	cmp	r3, #0
 8014f20:	f2c0 8193 	blt.w	801524a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8014f24:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8014f26:	1c5e      	adds	r6, r3, #1
 8014f28:	42b7      	cmp	r7, r6
 8014f2a:	f340 818e 	ble.w	801524a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8014f2e:	fb03 2304 	mla	r3, r3, r4, r2
 8014f32:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014f34:	18d6      	adds	r6, r2, r3
 8014f36:	5cd3      	ldrb	r3, [r2, r3]
 8014f38:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8014f3c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8014f40:	2900      	cmp	r1, #0
 8014f42:	f000 8170 	beq.w	8015226 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42a>
 8014f46:	7872      	ldrb	r2, [r6, #1]
 8014f48:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8014f4c:	920b      	str	r2, [sp, #44]	; 0x2c
 8014f4e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8014f52:	2800      	cmp	r0, #0
 8014f54:	f000 8171 	beq.w	801523a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43e>
 8014f58:	1932      	adds	r2, r6, r4
 8014f5a:	5d36      	ldrb	r6, [r6, r4]
 8014f5c:	7852      	ldrb	r2, [r2, #1]
 8014f5e:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8014f62:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8014f66:	9608      	str	r6, [sp, #32]
 8014f68:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8014f6c:	920c      	str	r2, [sp, #48]	; 0x30
 8014f6e:	0e16      	lsrs	r6, r2, #24
 8014f70:	b289      	uxth	r1, r1
 8014f72:	b280      	uxth	r0, r0
 8014f74:	fb01 fb00 	mul.w	fp, r1, r0
 8014f78:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8014f7c:	0109      	lsls	r1, r1, #4
 8014f7e:	eba1 090b 	sub.w	r9, r1, fp
 8014f82:	b280      	uxth	r0, r0
 8014f84:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8014f88:	fa1f f989 	uxth.w	r9, r9
 8014f8c:	1a12      	subs	r2, r2, r0
 8014f8e:	b292      	uxth	r2, r2
 8014f90:	fb09 f108 	mul.w	r1, r9, r8
 8014f94:	fb02 110c 	mla	r1, r2, ip, r1
 8014f98:	fb00 110a 	mla	r1, r0, sl, r1
 8014f9c:	fb0b 1106 	mla	r1, fp, r6, r1
 8014fa0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8014fa4:	2900      	cmp	r1, #0
 8014fa6:	f000 80df 	beq.w	8015168 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8014faa:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8014fae:	d01b      	beq.n	8014fe8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ec>
 8014fb0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8014fb4:	fb0c fe0e 	mul.w	lr, ip, lr
 8014fb8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014fbc:	fb0c fc03 	mul.w	ip, ip, r3
 8014fc0:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8014fc4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014fc8:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8014fcc:	4473      	add	r3, lr
 8014fce:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8014fd2:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8014fd6:	0a1b      	lsrs	r3, r3, #8
 8014fd8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014fdc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014fe0:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8014fe4:	ea43 030e 	orr.w	r3, r3, lr
 8014fe8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014fec:	d01e      	beq.n	801502c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 8014fee:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8014ff0:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8014ff4:	fb08 fc0c 	mul.w	ip, r8, ip
 8014ff8:	f407 4e7f 	and.w	lr, r7, #65280	; 0xff00
 8014ffc:	fb08 f80e 	mul.w	r8, r8, lr
 8015000:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8015004:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015008:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801500c:	44e6      	add	lr, ip
 801500e:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8015012:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8015016:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801501a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801501e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015022:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8015026:	ea4e 0708 	orr.w	r7, lr, r8
 801502a:	970b      	str	r7, [sp, #44]	; 0x2c
 801502c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015030:	d01e      	beq.n	8015070 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8015032:	9f08      	ldr	r7, [sp, #32]
 8015034:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8015038:	fb0a f808 	mul.w	r8, sl, r8
 801503c:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8015040:	fb0a fa0c 	mul.w	sl, sl, ip
 8015044:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8015048:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801504c:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8015050:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8015054:	44c6      	add	lr, r8
 8015056:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801505a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801505e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015062:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8015066:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801506a:	ea4e 070a 	orr.w	r7, lr, sl
 801506e:	9708      	str	r7, [sp, #32]
 8015070:	2eff      	cmp	r6, #255	; 0xff
 8015072:	d01d      	beq.n	80150b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8015074:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8015076:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 801507a:	fb06 f808 	mul.w	r8, r6, r8
 801507e:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8015082:	fb06 f60c 	mul.w	r6, r6, ip
 8015086:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801508a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801508e:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8015092:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8015096:	44c6      	add	lr, r8
 8015098:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 801509c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80150a0:	0a36      	lsrs	r6, r6, #8
 80150a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80150a6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80150aa:	ea4e 0606 	orr.w	r6, lr, r6
 80150ae:	960c      	str	r6, [sp, #48]	; 0x30
 80150b0:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80150b2:	9f08      	ldr	r7, [sp, #32]
 80150b4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80150b8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80150bc:	fb09 f606 	mul.w	r6, r9, r6
 80150c0:	fb02 660c 	mla	r6, r2, ip, r6
 80150c4:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80150c8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80150ca:	fb00 660c 	mla	r6, r0, ip, r6
 80150ce:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80150d2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80150d4:	fb0b 660c 	mla	r6, fp, ip, r6
 80150d8:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 80150dc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80150e0:	fb09 f90c 	mul.w	r9, r9, ip
 80150e4:	fb02 9303 	mla	r3, r2, r3, r9
 80150e8:	9a08      	ldr	r2, [sp, #32]
 80150ea:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 80150ee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80150f0:	fb00 330e 	mla	r3, r0, lr, r3
 80150f4:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80150f8:	fb0b 3b00 	mla	fp, fp, r0, r3
 80150fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80150fe:	881b      	ldrh	r3, [r3, #0]
 8015100:	43c9      	mvns	r1, r1
 8015102:	1218      	asrs	r0, r3, #8
 8015104:	b2c9      	uxtb	r1, r1
 8015106:	10da      	asrs	r2, r3, #3
 8015108:	0a36      	lsrs	r6, r6, #8
 801510a:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801510e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015112:	00db      	lsls	r3, r3, #3
 8015114:	4348      	muls	r0, r1
 8015116:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801511a:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801511e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015122:	b2db      	uxtb	r3, r3
 8015124:	434b      	muls	r3, r1
 8015126:	ea46 060b 	orr.w	r6, r6, fp
 801512a:	434a      	muls	r2, r1
 801512c:	1c41      	adds	r1, r0, #1
 801512e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8015132:	0c30      	lsrs	r0, r6, #16
 8015134:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8015138:	494e      	ldr	r1, [pc, #312]	; (8015274 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>)
 801513a:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 801513e:	1c59      	adds	r1, r3, #1
 8015140:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8015144:	b2f3      	uxtb	r3, r6
 8015146:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801514a:	1c51      	adds	r1, r2, #1
 801514c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015150:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015154:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8015158:	00f6      	lsls	r6, r6, #3
 801515a:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 801515e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015162:	431e      	orrs	r6, r3
 8015164:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015166:	801e      	strh	r6, [r3, #0]
 8015168:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801516a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801516c:	3302      	adds	r3, #2
 801516e:	9310      	str	r3, [sp, #64]	; 0x40
 8015170:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015172:	4413      	add	r3, r2
 8015174:	9329      	str	r3, [sp, #164]	; 0xa4
 8015176:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015178:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801517a:	4413      	add	r3, r2
 801517c:	932a      	str	r3, [sp, #168]	; 0xa8
 801517e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015180:	3b01      	subs	r3, #1
 8015182:	9313      	str	r3, [sp, #76]	; 0x4c
 8015184:	e6b7      	b.n	8014ef6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8015186:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015188:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801518a:	4413      	add	r3, r2
 801518c:	9329      	str	r3, [sp, #164]	; 0xa4
 801518e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015190:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015192:	4413      	add	r3, r2
 8015194:	932a      	str	r3, [sp, #168]	; 0xa8
 8015196:	9b07      	ldr	r3, [sp, #28]
 8015198:	3b01      	subs	r3, #1
 801519a:	9307      	str	r3, [sp, #28]
 801519c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801519e:	3302      	adds	r3, #2
 80151a0:	930a      	str	r3, [sp, #40]	; 0x28
 80151a2:	e65f      	b.n	8014e64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80151a4:	f47f ae71 	bne.w	8014e8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 80151a8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80151aa:	2b00      	cmp	r3, #0
 80151ac:	f340 81a7 	ble.w	80154fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 80151b0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80151b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80151b8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80151bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80151be:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80151c2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80151c6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80151ca:	eef0 6a48 	vmov.f32	s13, s16
 80151ce:	ee69 7a27 	vmul.f32	s15, s18, s15
 80151d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80151d6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80151da:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80151de:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80151e2:	eef0 6a68 	vmov.f32	s13, s17
 80151e6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80151ea:	ee18 2a10 	vmov	r2, s16
 80151ee:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80151f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80151f6:	ee18 2a90 	vmov	r2, s17
 80151fa:	932b      	str	r3, [sp, #172]	; 0xac
 80151fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80151fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8015202:	932c      	str	r3, [sp, #176]	; 0xb0
 8015204:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015206:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015208:	3b01      	subs	r3, #1
 801520a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801520e:	9312      	str	r3, [sp, #72]	; 0x48
 8015210:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015212:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8015216:	bf08      	it	eq
 8015218:	4613      	moveq	r3, r2
 801521a:	9307      	str	r3, [sp, #28]
 801521c:	eef0 8a67 	vmov.f32	s17, s15
 8015220:	eeb0 8a47 	vmov.f32	s16, s14
 8015224:	e617      	b.n	8014e56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5a>
 8015226:	b158      	cbz	r0, 8015240 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x444>
 8015228:	5d32      	ldrb	r2, [r6, r4]
 801522a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801522e:	9208      	str	r2, [sp, #32]
 8015230:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8015234:	26ff      	movs	r6, #255	; 0xff
 8015236:	46b0      	mov	r8, r6
 8015238:	e69a      	b.n	8014f70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 801523a:	26ff      	movs	r6, #255	; 0xff
 801523c:	46b2      	mov	sl, r6
 801523e:	e697      	b.n	8014f70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8015240:	26ff      	movs	r6, #255	; 0xff
 8015242:	46b2      	mov	sl, r6
 8015244:	e7f7      	b.n	8015236 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43a>
 8015246:	1c57      	adds	r7, r2, #1
 8015248:	d18e      	bne.n	8015168 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801524a:	4294      	cmp	r4, r2
 801524c:	dd8c      	ble.n	8015168 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801524e:	1c5e      	adds	r6, r3, #1
 8015250:	db8a      	blt.n	8015168 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8015252:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8015254:	429e      	cmp	r6, r3
 8015256:	dd87      	ble.n	8015168 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8015258:	e9cd 1004 	strd	r1, r0, [sp, #16]
 801525c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8015260:	e9cd 4600 	strd	r4, r6, [sp]
 8015264:	462b      	mov	r3, r5
 8015266:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
 801526a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801526c:	f7ff fc6c 	bl	8014b48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8015270:	e77a      	b.n	8015168 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8015272:	bf00      	nop
 8015274:	fffff800 	.word	0xfffff800
 8015278:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801527a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801527c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015280:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015282:	1409      	asrs	r1, r1, #16
 8015284:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8015288:	141b      	asrs	r3, r3, #16
 801528a:	fb04 1303 	mla	r3, r4, r3, r1
 801528e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8015290:	18ce      	adds	r6, r1, r3
 8015292:	5ccb      	ldrb	r3, [r1, r3]
 8015294:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8015298:	0e1f      	lsrs	r7, r3, #24
 801529a:	2a00      	cmp	r2, #0
 801529c:	f000 811f 	beq.w	80154de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 80152a0:	7871      	ldrb	r1, [r6, #1]
 80152a2:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 80152a6:	910d      	str	r1, [sp, #52]	; 0x34
 80152a8:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 80152ac:	2800      	cmp	r0, #0
 80152ae:	f000 8120 	beq.w	80154f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 80152b2:	1931      	adds	r1, r6, r4
 80152b4:	5d36      	ldrb	r6, [r6, r4]
 80152b6:	7849      	ldrb	r1, [r1, #1]
 80152b8:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 80152bc:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 80152c0:	9609      	str	r6, [sp, #36]	; 0x24
 80152c2:	ea4f 6916 	mov.w	r9, r6, lsr #24
 80152c6:	910e      	str	r1, [sp, #56]	; 0x38
 80152c8:	0e0e      	lsrs	r6, r1, #24
 80152ca:	b292      	uxth	r2, r2
 80152cc:	b280      	uxth	r0, r0
 80152ce:	fb02 fa00 	mul.w	sl, r2, r0
 80152d2:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 80152d6:	0112      	lsls	r2, r2, #4
 80152d8:	eba2 080a 	sub.w	r8, r2, sl
 80152dc:	b280      	uxth	r0, r0
 80152de:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80152e2:	fa1f f888 	uxth.w	r8, r8
 80152e6:	1a09      	subs	r1, r1, r0
 80152e8:	b289      	uxth	r1, r1
 80152ea:	fb08 f20e 	mul.w	r2, r8, lr
 80152ee:	fb01 2207 	mla	r2, r1, r7, r2
 80152f2:	fb00 2209 	mla	r2, r0, r9, r2
 80152f6:	fb0a 2206 	mla	r2, sl, r6, r2
 80152fa:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80152fe:	9213      	str	r2, [sp, #76]	; 0x4c
 8015300:	2a00      	cmp	r2, #0
 8015302:	f000 80de 	beq.w	80154c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c6>
 8015306:	2fff      	cmp	r7, #255	; 0xff
 8015308:	d01a      	beq.n	8015340 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 801530a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801530e:	fb07 fc0c 	mul.w	ip, r7, ip
 8015312:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015316:	435f      	muls	r7, r3
 8015318:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801531c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015320:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8015324:	4463      	add	r3, ip
 8015326:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 801532a:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 801532e:	0a1b      	lsrs	r3, r3, #8
 8015330:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015334:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015338:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801533c:	ea43 030c 	orr.w	r3, r3, ip
 8015340:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8015344:	d01f      	beq.n	8015386 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58a>
 8015346:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8015348:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801534a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801534e:	fb0e f707 	mul.w	r7, lr, r7
 8015352:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8015356:	fb0e fe0c 	mul.w	lr, lr, ip
 801535a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801535e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015362:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8015366:	44bc      	add	ip, r7
 8015368:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 801536c:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8015370:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015374:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015378:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801537c:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8015380:	ea4c 020e 	orr.w	r2, ip, lr
 8015384:	920d      	str	r2, [sp, #52]	; 0x34
 8015386:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801538a:	d01e      	beq.n	80153ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ce>
 801538c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801538e:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8015392:	fb09 fe0e 	mul.w	lr, r9, lr
 8015396:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 801539a:	fb09 f907 	mul.w	r9, r9, r7
 801539e:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80153a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80153a6:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80153aa:	f509 7780 	add.w	r7, r9, #256	; 0x100
 80153ae:	44f4      	add	ip, lr
 80153b0:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 80153b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80153b8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80153bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80153c0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80153c4:	ea4c 0209 	orr.w	r2, ip, r9
 80153c8:	9209      	str	r2, [sp, #36]	; 0x24
 80153ca:	2eff      	cmp	r6, #255	; 0xff
 80153cc:	d01c      	beq.n	8015408 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60c>
 80153ce:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80153d0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80153d4:	fb06 fe0e 	mul.w	lr, r6, lr
 80153d8:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 80153dc:	437e      	muls	r6, r7
 80153de:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80153e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80153e6:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80153ea:	f506 7780 	add.w	r7, r6, #256	; 0x100
 80153ee:	44f4      	add	ip, lr
 80153f0:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 80153f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80153f8:	0a36      	lsrs	r6, r6, #8
 80153fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80153fe:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015402:	ea4c 0206 	orr.w	r2, ip, r6
 8015406:	920e      	str	r2, [sp, #56]	; 0x38
 8015408:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801540a:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 801540e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015410:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8015414:	fb08 f606 	mul.w	r6, r8, r6
 8015418:	fb01 6607 	mla	r6, r1, r7, r6
 801541c:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8015420:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015422:	fb00 6607 	mla	r6, r0, r7, r6
 8015426:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 801542a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801542c:	fb0a 6607 	mla	r6, sl, r7, r6
 8015430:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8015434:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015436:	fb08 f807 	mul.w	r8, r8, r7
 801543a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801543e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015442:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015444:	fb01 8303 	mla	r3, r1, r3, r8
 8015448:	fb00 330c 	mla	r3, r0, ip, r3
 801544c:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8015450:	fb0a 3e0e 	mla	lr, sl, lr, r3
 8015454:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015456:	f8bb 3000 	ldrh.w	r3, [fp]
 801545a:	43d2      	mvns	r2, r2
 801545c:	1218      	asrs	r0, r3, #8
 801545e:	b2d2      	uxtb	r2, r2
 8015460:	0a36      	lsrs	r6, r6, #8
 8015462:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015466:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801546a:	4350      	muls	r0, r2
 801546c:	10d9      	asrs	r1, r3, #3
 801546e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015472:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8015476:	00db      	lsls	r3, r3, #3
 8015478:	ea46 060e 	orr.w	r6, r6, lr
 801547c:	1c47      	adds	r7, r0, #1
 801547e:	b2db      	uxtb	r3, r3
 8015480:	4353      	muls	r3, r2
 8015482:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8015486:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801548a:	0c37      	lsrs	r7, r6, #16
 801548c:	4351      	muls	r1, r2
 801548e:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8015492:	4a1d      	ldr	r2, [pc, #116]	; (8015508 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>)
 8015494:	1c5f      	adds	r7, r3, #1
 8015496:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 801549a:	b2f7      	uxtb	r7, r6
 801549c:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 80154a0:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80154a4:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 80154a8:	1c4b      	adds	r3, r1, #1
 80154aa:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80154ae:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80154b2:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 80154b6:	00f6      	lsls	r6, r6, #3
 80154b8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80154bc:	4330      	orrs	r0, r6
 80154be:	f8ab 0000 	strh.w	r0, [fp]
 80154c2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80154c4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80154c6:	4413      	add	r3, r2
 80154c8:	9329      	str	r3, [sp, #164]	; 0xa4
 80154ca:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80154cc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80154ce:	4413      	add	r3, r2
 80154d0:	932a      	str	r3, [sp, #168]	; 0xa8
 80154d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80154d4:	3b01      	subs	r3, #1
 80154d6:	f10b 0b02 	add.w	fp, fp, #2
 80154da:	9310      	str	r3, [sp, #64]	; 0x40
 80154dc:	e4ee      	b.n	8014ebc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 80154de:	b158      	cbz	r0, 80154f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fc>
 80154e0:	5d31      	ldrb	r1, [r6, r4]
 80154e2:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 80154e6:	9109      	str	r1, [sp, #36]	; 0x24
 80154e8:	ea4f 6911 	mov.w	r9, r1, lsr #24
 80154ec:	26ff      	movs	r6, #255	; 0xff
 80154ee:	46b6      	mov	lr, r6
 80154f0:	e6eb      	b.n	80152ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 80154f2:	26ff      	movs	r6, #255	; 0xff
 80154f4:	46b1      	mov	r9, r6
 80154f6:	e6e8      	b.n	80152ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 80154f8:	26ff      	movs	r6, #255	; 0xff
 80154fa:	46b1      	mov	r9, r6
 80154fc:	e7f7      	b.n	80154ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f2>
 80154fe:	b017      	add	sp, #92	; 0x5c
 8015500:	ecbd 8b08 	vpop	{d8-d11}
 8015504:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015508:	fffff800 	.word	0xfffff800

0801550c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801550c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015510:	b087      	sub	sp, #28
 8015512:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8015516:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 801551a:	9105      	str	r1, [sp, #20]
 801551c:	fb00 e604 	mla	r6, r0, r4, lr
 8015520:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8015524:	9102      	str	r1, [sp, #8]
 8015526:	eb02 0146 	add.w	r1, r2, r6, lsl #1
 801552a:	9103      	str	r1, [sp, #12]
 801552c:	9905      	ldr	r1, [sp, #20]
 801552e:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 8015532:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8015536:	8809      	ldrh	r1, [r1, #0]
 8015538:	2800      	cmp	r0, #0
 801553a:	eb03 0a06 	add.w	sl, r3, r6
 801553e:	f2c0 80ca 	blt.w	80156d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8015542:	4287      	cmp	r7, r0
 8015544:	f340 80c7 	ble.w	80156d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8015548:	f1be 0f00 	cmp.w	lr, #0
 801554c:	f2c0 80bf 	blt.w	80156ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8015550:	4574      	cmp	r4, lr
 8015552:	f340 80bc 	ble.w	80156ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8015556:	f813 c006 	ldrb.w	ip, [r3, r6]
 801555a:	f832 9016 	ldrh.w	r9, [r2, r6, lsl #1]
 801555e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8015562:	d01c      	beq.n	801559e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x92>
 8015564:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8015568:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801556c:	4372      	muls	r2, r6
 801556e:	f64f 081f 	movw	r8, #63519	; 0xf81f
 8015572:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8015576:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801557a:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801557e:	fb0c f609 	mul.w	r6, ip, r9
 8015582:	eb03 0902 	add.w	r9, r3, r2
 8015586:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 801558a:	f106 0820 	add.w	r8, r6, #32
 801558e:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8015592:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015596:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801559a:	ea49 0908 	orr.w	r9, r9, r8
 801559e:	fa1f f989 	uxth.w	r9, r9
 80155a2:	f11e 0301 	adds.w	r3, lr, #1
 80155a6:	f100 809b 	bmi.w	80156e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 80155aa:	429c      	cmp	r4, r3
 80155ac:	f340 8098 	ble.w	80156e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 80155b0:	2d00      	cmp	r5, #0
 80155b2:	f000 8095 	beq.w	80156e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 80155b6:	f89a 6001 	ldrb.w	r6, [sl, #1]
 80155ba:	9b03      	ldr	r3, [sp, #12]
 80155bc:	2eff      	cmp	r6, #255	; 0xff
 80155be:	885b      	ldrh	r3, [r3, #2]
 80155c0:	d01b      	beq.n	80155fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xee>
 80155c2:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80155c6:	ea4f 08e6 	mov.w	r8, r6, asr #3
 80155ca:	fb08 f202 	mul.w	r2, r8, r2
 80155ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80155d2:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80155d6:	fb06 f803 	mul.w	r8, r6, r3
 80155da:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80155de:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80155e2:	441a      	add	r2, r3
 80155e4:	f108 0320 	add.w	r3, r8, #32
 80155e8:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80155ec:	0a1b      	lsrs	r3, r3, #8
 80155ee:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 80155f2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80155f6:	ea4b 0303 	orr.w	r3, fp, r3
 80155fa:	b29b      	uxth	r3, r3
 80155fc:	9301      	str	r3, [sp, #4]
 80155fe:	3001      	adds	r0, #1
 8015600:	d474      	bmi.n	80156ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8015602:	4287      	cmp	r7, r0
 8015604:	dd72      	ble.n	80156ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8015606:	9a02      	ldr	r2, [sp, #8]
 8015608:	2a00      	cmp	r2, #0
 801560a:	f000 8121 	beq.w	8015850 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>
 801560e:	f1be 0f00 	cmp.w	lr, #0
 8015612:	db68      	blt.n	80156e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8015614:	4574      	cmp	r4, lr
 8015616:	dd66      	ble.n	80156e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8015618:	f81a 7004 	ldrb.w	r7, [sl, r4]
 801561c:	9a03      	ldr	r2, [sp, #12]
 801561e:	2fff      	cmp	r7, #255	; 0xff
 8015620:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8015624:	d01c      	beq.n	8015660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x154>
 8015626:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 801562a:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801562e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015632:	fb07 fb00 	mul.w	fp, r7, r0
 8015636:	fb08 f802 	mul.w	r8, r8, r2
 801563a:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801563e:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 8015642:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015646:	4490      	add	r8, r2
 8015648:	f10b 0220 	add.w	r2, fp, #32
 801564c:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8015650:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8015654:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8015658:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801565c:	ea40 000b 	orr.w	r0, r0, fp
 8015660:	b280      	uxth	r0, r0
 8015662:	f11e 0e01 	adds.w	lr, lr, #1
 8015666:	d446      	bmi.n	80156f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8015668:	4574      	cmp	r4, lr
 801566a:	dd44      	ble.n	80156f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 801566c:	2d00      	cmp	r5, #0
 801566e:	d045      	beq.n	80156fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f0>
 8015670:	1c62      	adds	r2, r4, #1
 8015672:	9b03      	ldr	r3, [sp, #12]
 8015674:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8015678:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801567c:	2cff      	cmp	r4, #255	; 0xff
 801567e:	d01c      	beq.n	80156ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ae>
 8015680:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8015684:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8015688:	fb08 fe0e 	mul.w	lr, r8, lr
 801568c:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8015690:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015694:	fb04 f802 	mul.w	r8, r4, r2
 8015698:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 801569c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80156a0:	4472      	add	r2, lr
 80156a2:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 80156a6:	f108 0a20 	add.w	sl, r8, #32
 80156aa:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 80156ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80156b2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80156b6:	ea42 020a 	orr.w	r2, r2, sl
 80156ba:	b292      	uxth	r2, r2
 80156bc:	2d0f      	cmp	r5, #15
 80156be:	d91f      	bls.n	8015700 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f4>
 80156c0:	4b67      	ldr	r3, [pc, #412]	; (8015860 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x354>)
 80156c2:	4a68      	ldr	r2, [pc, #416]	; (8015864 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x358>)
 80156c4:	4868      	ldr	r0, [pc, #416]	; (8015868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x35c>)
 80156c6:	f240 210d 	movw	r1, #525	; 0x20d
 80156ca:	f004 f9e9 	bl	8019aa0 <__assert_func>
 80156ce:	4689      	mov	r9, r1
 80156d0:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80156d4:	e765      	b.n	80155a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x96>
 80156d6:	26ff      	movs	r6, #255	; 0xff
 80156d8:	9101      	str	r1, [sp, #4]
 80156da:	4689      	mov	r9, r1
 80156dc:	46b4      	mov	ip, r6
 80156de:	e78e      	b.n	80155fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 80156e0:	9101      	str	r1, [sp, #4]
 80156e2:	26ff      	movs	r6, #255	; 0xff
 80156e4:	e78b      	b.n	80155fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 80156e6:	4608      	mov	r0, r1
 80156e8:	27ff      	movs	r7, #255	; 0xff
 80156ea:	e7ba      	b.n	8015662 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x156>
 80156ec:	24ff      	movs	r4, #255	; 0xff
 80156ee:	460a      	mov	r2, r1
 80156f0:	4608      	mov	r0, r1
 80156f2:	4627      	mov	r7, r4
 80156f4:	e7e2      	b.n	80156bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80156f6:	460a      	mov	r2, r1
 80156f8:	24ff      	movs	r4, #255	; 0xff
 80156fa:	e7df      	b.n	80156bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80156fc:	460a      	mov	r2, r1
 80156fe:	24ff      	movs	r4, #255	; 0xff
 8015700:	9b02      	ldr	r3, [sp, #8]
 8015702:	2b0f      	cmp	r3, #15
 8015704:	d8dc      	bhi.n	80156c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 8015706:	f8bd e008 	ldrh.w	lr, [sp, #8]
 801570a:	fa1f f885 	uxth.w	r8, r5
 801570e:	fb08 fa0e 	mul.w	sl, r8, lr
 8015712:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8015716:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 801571a:	9303      	str	r3, [sp, #12]
 801571c:	fa1f f38e 	uxth.w	r3, lr
 8015720:	9304      	str	r3, [sp, #16]
 8015722:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8015726:	9b02      	ldr	r3, [sp, #8]
 8015728:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801572c:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8015730:	fb15 fe03 	smulbb	lr, r5, r3
 8015734:	ea48 0809 	orr.w	r8, r8, r9
 8015738:	f1c3 0910 	rsb	r9, r3, #16
 801573c:	9b01      	ldr	r3, [sp, #4]
 801573e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8015742:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8015746:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801574a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801574e:	eba9 0905 	sub.w	r9, r9, r5
 8015752:	ea4b 0303 	orr.w	r3, fp, r3
 8015756:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 801575a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801575e:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 8015762:	436b      	muls	r3, r5
 8015764:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015768:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801576c:	ea4b 0202 	orr.w	r2, fp, r2
 8015770:	fb09 3308 	mla	r3, r9, r8, r3
 8015774:	fb0e 3302 	mla	r3, lr, r2, r3
 8015778:	0402      	lsls	r2, r0, #16
 801577a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801577e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015782:	4310      	orrs	r0, r2
 8015784:	9a02      	ldr	r2, [sp, #8]
 8015786:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 801578a:	fb0e 3e00 	mla	lr, lr, r0, r3
 801578e:	9803      	ldr	r0, [sp, #12]
 8015790:	f89d 2058 	ldrb.w	r2, [sp, #88]	; 0x58
 8015794:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8015798:	9804      	ldr	r0, [sp, #16]
 801579a:	1a2d      	subs	r5, r5, r0
 801579c:	9803      	ldr	r0, [sp, #12]
 801579e:	eba0 000a 	sub.w	r0, r0, sl
 80157a2:	b280      	uxth	r0, r0
 80157a4:	b2ad      	uxth	r5, r5
 80157a6:	4346      	muls	r6, r0
 80157a8:	9804      	ldr	r0, [sp, #16]
 80157aa:	fb0c 6605 	mla	r6, ip, r5, r6
 80157ae:	fb00 6707 	mla	r7, r0, r7, r6
 80157b2:	fb0a 7404 	mla	r4, sl, r4, r7
 80157b6:	b292      	uxth	r2, r2
 80157b8:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80157bc:	4354      	muls	r4, r2
 80157be:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80157c2:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80157c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80157ca:	f104 0a01 	add.w	sl, r4, #1
 80157ce:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80157d2:	ea43 0e0e 	orr.w	lr, r3, lr
 80157d6:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80157da:	fa1f f38e 	uxth.w	r3, lr
 80157de:	1208      	asrs	r0, r1, #8
 80157e0:	ea6f 2414 	mvn.w	r4, r4, lsr #8
 80157e4:	b2e4      	uxtb	r4, r4
 80157e6:	121d      	asrs	r5, r3, #8
 80157e8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80157ec:	fb10 f004 	smulbb	r0, r0, r4
 80157f0:	10ce      	asrs	r6, r1, #3
 80157f2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80157f6:	00c9      	lsls	r1, r1, #3
 80157f8:	fb05 0502 	mla	r5, r5, r2, r0
 80157fc:	b2c9      	uxtb	r1, r1
 80157fe:	10d8      	asrs	r0, r3, #3
 8015800:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015804:	00db      	lsls	r3, r3, #3
 8015806:	fb16 f604 	smulbb	r6, r6, r4
 801580a:	b2db      	uxtb	r3, r3
 801580c:	fb11 f404 	smulbb	r4, r1, r4
 8015810:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8015814:	fb00 6002 	mla	r0, r0, r2, r6
 8015818:	fb03 4202 	mla	r2, r3, r2, r4
 801581c:	b2ad      	uxth	r5, r5
 801581e:	b292      	uxth	r2, r2
 8015820:	1c6b      	adds	r3, r5, #1
 8015822:	1c51      	adds	r1, r2, #1
 8015824:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8015828:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801582c:	b280      	uxth	r0, r0
 801582e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015832:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015836:	4313      	orrs	r3, r2
 8015838:	1c42      	adds	r2, r0, #1
 801583a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801583e:	0940      	lsrs	r0, r0, #5
 8015840:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015844:	9a05      	ldr	r2, [sp, #20]
 8015846:	4303      	orrs	r3, r0
 8015848:	8013      	strh	r3, [r2, #0]
 801584a:	b007      	add	sp, #28
 801584c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015850:	2d0f      	cmp	r5, #15
 8015852:	f63f af35 	bhi.w	80156c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 8015856:	24ff      	movs	r4, #255	; 0xff
 8015858:	460a      	mov	r2, r1
 801585a:	4608      	mov	r0, r1
 801585c:	4627      	mov	r7, r4
 801585e:	e752      	b.n	8015706 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1fa>
 8015860:	0801d6d1 	.word	0x0801d6d1
 8015864:	0801dc29 	.word	0x0801dc29
 8015868:	0801d759 	.word	0x0801d759

0801586c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801586c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015870:	ed2d 8b08 	vpush	{d8-d11}
 8015874:	b099      	sub	sp, #100	; 0x64
 8015876:	eeb0 aa40 	vmov.f32	s20, s0
 801587a:	9308      	str	r3, [sp, #32]
 801587c:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8015880:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 8015882:	930b      	str	r3, [sp, #44]	; 0x2c
 8015884:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8015888:	9314      	str	r3, [sp, #80]	; 0x50
 801588a:	9113      	str	r1, [sp, #76]	; 0x4c
 801588c:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8015890:	9017      	str	r0, [sp, #92]	; 0x5c
 8015892:	6870      	ldr	r0, [r6, #4]
 8015894:	9216      	str	r2, [sp, #88]	; 0x58
 8015896:	fb00 1303 	mla	r3, r0, r3, r1
 801589a:	6831      	ldr	r1, [r6, #0]
 801589c:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801589e:	f9bd 50c8 	ldrsh.w	r5, [sp, #200]	; 0xc8
 80158a2:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80158a6:	9309      	str	r3, [sp, #36]	; 0x24
 80158a8:	6813      	ldr	r3, [r2, #0]
 80158aa:	930c      	str	r3, [sp, #48]	; 0x30
 80158ac:	6853      	ldr	r3, [r2, #4]
 80158ae:	930d      	str	r3, [sp, #52]	; 0x34
 80158b0:	006b      	lsls	r3, r5, #1
 80158b2:	9312      	str	r3, [sp, #72]	; 0x48
 80158b4:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80158b8:	930a      	str	r3, [sp, #40]	; 0x28
 80158ba:	eef0 9a60 	vmov.f32	s19, s1
 80158be:	eeb0 9a41 	vmov.f32	s18, s2
 80158c2:	eeb0 8a62 	vmov.f32	s16, s5
 80158c6:	eef0 8a43 	vmov.f32	s17, s6
 80158ca:	eef0 ba44 	vmov.f32	s23, s8
 80158ce:	eeb0 ba64 	vmov.f32	s22, s9
 80158d2:	eef0 aa45 	vmov.f32	s21, s10
 80158d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80158d8:	2b00      	cmp	r3, #0
 80158da:	dc03      	bgt.n	80158e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80158dc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80158de:	2b00      	cmp	r3, #0
 80158e0:	f340 83bf 	ble.w	8016062 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 80158e4:	9b08      	ldr	r3, [sp, #32]
 80158e6:	2b00      	cmp	r3, #0
 80158e8:	f340 81cb 	ble.w	8015c82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x416>
 80158ec:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80158ee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80158f0:	1412      	asrs	r2, r2, #16
 80158f2:	ea4f 4323 	mov.w	r3, r3, asr #16
 80158f6:	d42f      	bmi.n	8015958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80158f8:	1c51      	adds	r1, r2, #1
 80158fa:	428d      	cmp	r5, r1
 80158fc:	dd2f      	ble.n	801595e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80158fe:	2b00      	cmp	r3, #0
 8015900:	db2d      	blt.n	801595e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015902:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8015904:	1c59      	adds	r1, r3, #1
 8015906:	4288      	cmp	r0, r1
 8015908:	dd29      	ble.n	801595e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 801590a:	9b08      	ldr	r3, [sp, #32]
 801590c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801590e:	992b      	ldr	r1, [sp, #172]	; 0xac
 8015910:	3b01      	subs	r3, #1
 8015912:	fb02 1203 	mla	r2, r2, r3, r1
 8015916:	1412      	asrs	r2, r2, #16
 8015918:	d42b      	bmi.n	8015972 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 801591a:	3201      	adds	r2, #1
 801591c:	4295      	cmp	r5, r2
 801591e:	dd28      	ble.n	8015972 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8015920:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8015922:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8015924:	fb02 1303 	mla	r3, r2, r3, r1
 8015928:	141b      	asrs	r3, r3, #16
 801592a:	d422      	bmi.n	8015972 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 801592c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801592e:	3301      	adds	r3, #1
 8015930:	429a      	cmp	r2, r3
 8015932:	dd1e      	ble.n	8015972 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8015934:	9b08      	ldr	r3, [sp, #32]
 8015936:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801593a:	9315      	str	r3, [sp, #84]	; 0x54
 801593c:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8015940:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015942:	2b00      	cmp	r3, #0
 8015944:	f300 8217 	bgt.w	8015d76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50a>
 8015948:	9b08      	ldr	r3, [sp, #32]
 801594a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801594e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015950:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8015954:	9309      	str	r3, [sp, #36]	; 0x24
 8015956:	e196      	b.n	8015c86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 8015958:	1c57      	adds	r7, r2, #1
 801595a:	f040 8183 	bne.w	8015c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 801595e:	42aa      	cmp	r2, r5
 8015960:	f280 8180 	bge.w	8015c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8015964:	1c5e      	adds	r6, r3, #1
 8015966:	f2c0 817d 	blt.w	8015c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 801596a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801596c:	4293      	cmp	r3, r2
 801596e:	f280 8179 	bge.w	8015c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8015972:	9b08      	ldr	r3, [sp, #32]
 8015974:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8015976:	9315      	str	r3, [sp, #84]	; 0x54
 8015978:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801597c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801597e:	2b00      	cmp	r3, #0
 8015980:	dde2      	ble.n	8015948 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8015982:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015984:	1419      	asrs	r1, r3, #16
 8015986:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015988:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801598c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801598e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8015992:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015994:	141b      	asrs	r3, r3, #16
 8015996:	f100 81d3 	bmi.w	8015d40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d4>
 801599a:	1c58      	adds	r0, r3, #1
 801599c:	4285      	cmp	r5, r0
 801599e:	f340 81d1 	ble.w	8015d44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 80159a2:	2900      	cmp	r1, #0
 80159a4:	f2c0 81ce 	blt.w	8015d44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 80159a8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80159aa:	1c48      	adds	r0, r1, #1
 80159ac:	4284      	cmp	r4, r0
 80159ae:	f340 81c9 	ble.w	8015d44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 80159b2:	fb01 3105 	mla	r1, r1, r5, r3
 80159b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80159b8:	fa1f fe82 	uxth.w	lr, r2
 80159bc:	eb03 0a01 	add.w	sl, r3, r1
 80159c0:	ea4f 100e 	mov.w	r0, lr, lsl #4
 80159c4:	f813 9001 	ldrb.w	r9, [r3, r1]
 80159c8:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80159cc:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80159d0:	b29b      	uxth	r3, r3
 80159d2:	f1bc 0f00 	cmp.w	ip, #0
 80159d6:	f000 8195 	beq.w	8015d04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x498>
 80159da:	f81a 4005 	ldrb.w	r4, [sl, r5]
 80159de:	940e      	str	r4, [sp, #56]	; 0x38
 80159e0:	eb0a 0b05 	add.w	fp, sl, r5
 80159e4:	fa1f fa8c 	uxth.w	sl, ip
 80159e8:	fb0a fe0e 	mul.w	lr, sl, lr
 80159ec:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80159f0:	fa1f fa8a 	uxth.w	sl, sl
 80159f4:	eba0 000e 	sub.w	r0, r0, lr
 80159f8:	eba3 030a 	sub.w	r3, r3, sl
 80159fc:	b280      	uxth	r0, r0
 80159fe:	fb08 f000 	mul.w	r0, r8, r0
 8015a02:	b29b      	uxth	r3, r3
 8015a04:	fb09 0303 	mla	r3, r9, r3, r0
 8015a08:	980e      	ldr	r0, [sp, #56]	; 0x38
 8015a0a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8015a0e:	940f      	str	r4, [sp, #60]	; 0x3c
 8015a10:	fb0a 3300 	mla	r3, sl, r0, r3
 8015a14:	fb0e 3304 	mla	r3, lr, r4, r3
 8015a18:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015a1c:	2b00      	cmp	r3, #0
 8015a1e:	f000 8114 	beq.w	8015c4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8015a22:	980c      	ldr	r0, [sp, #48]	; 0x30
 8015a24:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015a26:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015a2a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8015a2e:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 8015a32:	f000 816c 	beq.w	8015d0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8015a36:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8015a3a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8015a3e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015a42:	fb09 f101 	mul.w	r1, r9, r1
 8015a46:	fb0a fe0e 	mul.w	lr, sl, lr
 8015a4a:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8015a4e:	f101 0b20 	add.w	fp, r1, #32
 8015a52:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015a56:	44ce      	add	lr, r9
 8015a58:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8015a5c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8015a60:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8015a64:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015a68:	ea4e 0909 	orr.w	r9, lr, r9
 8015a6c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015a70:	8841      	ldrh	r1, [r0, #2]
 8015a72:	d019      	beq.n	8015aa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 8015a74:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8015a78:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8015a7c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015a80:	fb0a fe0e 	mul.w	lr, sl, lr
 8015a84:	fb08 f801 	mul.w	r8, r8, r1
 8015a88:	f108 0b20 	add.w	fp, r8, #32
 8015a8c:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8015a90:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015a94:	448e      	add	lr, r1
 8015a96:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 8015a9a:	0a09      	lsrs	r1, r1, #8
 8015a9c:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8015aa0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015aa4:	ea4a 0101 	orr.w	r1, sl, r1
 8015aa8:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8015aac:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8015ab0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015ab4:	ea4e 0909 	orr.w	r9, lr, r9
 8015ab8:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8015abc:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8015ac0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015ac4:	ea4e 0e01 	orr.w	lr, lr, r1
 8015ac8:	f1bc 0f00 	cmp.w	ip, #0
 8015acc:	f000 8121 	beq.w	8015d12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 8015ad0:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015ad2:	eb00 0801 	add.w	r8, r0, r1
 8015ad6:	5a41      	ldrh	r1, [r0, r1]
 8015ad8:	980e      	ldr	r0, [sp, #56]	; 0x38
 8015ada:	28ff      	cmp	r0, #255	; 0xff
 8015adc:	d019      	beq.n	8015b12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8015ade:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015ae0:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8015ae4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015ae8:	fb04 fb01 	mul.w	fp, r4, r1
 8015aec:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8015af0:	fb0a fa00 	mul.w	sl, sl, r0
 8015af4:	f10b 0020 	add.w	r0, fp, #32
 8015af8:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8015afc:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8015b00:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8015b04:	4451      	add	r1, sl
 8015b06:	0a00      	lsrs	r0, r0, #8
 8015b08:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8015b0c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015b10:	4301      	orrs	r1, r0
 8015b12:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8015b14:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8015b18:	2cff      	cmp	r4, #255	; 0xff
 8015b1a:	d01a      	beq.n	8015b52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e6>
 8015b1c:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8015b20:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015b24:	fb04 fb00 	mul.w	fp, r4, r0
 8015b28:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8015b2c:	fb0a fa08 	mul.w	sl, sl, r8
 8015b30:	f10b 0820 	add.w	r8, fp, #32
 8015b34:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8015b38:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8015b3c:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8015b40:	4450      	add	r0, sl
 8015b42:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015b46:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8015b4a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015b4e:	ea40 0008 	orr.w	r0, r0, r8
 8015b52:	fb1c f802 	smulbb	r8, ip, r2
 8015b56:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8015b5a:	f1cc 0a10 	rsb	sl, ip, #16
 8015b5e:	ebaa 0a02 	sub.w	sl, sl, r2
 8015b62:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8015b66:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8015b6a:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8015b6e:	fb0e f202 	mul.w	r2, lr, r2
 8015b72:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015b76:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8015b7a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015b7e:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8015b82:	fb09 220a 	mla	r2, r9, sl, r2
 8015b86:	ea4b 0101 	orr.w	r1, fp, r1
 8015b8a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8015b8e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015b92:	fb0c 2201 	mla	r2, ip, r1, r2
 8015b96:	ea4e 0000 	orr.w	r0, lr, r0
 8015b9a:	fb08 2800 	mla	r8, r8, r0, r2
 8015b9e:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8015ba2:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015ba6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015baa:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8015bae:	ea42 0808 	orr.w	r8, r2, r8
 8015bb2:	fa1f f288 	uxth.w	r2, r8
 8015bb6:	2bff      	cmp	r3, #255	; 0xff
 8015bb8:	d103      	bne.n	8015bc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x356>
 8015bba:	9914      	ldr	r1, [sp, #80]	; 0x50
 8015bbc:	29ff      	cmp	r1, #255	; 0xff
 8015bbe:	f000 80bd 	beq.w	8015d3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d0>
 8015bc2:	990a      	ldr	r1, [sp, #40]	; 0x28
 8015bc4:	f8b7 c000 	ldrh.w	ip, [r7]
 8015bc8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015bca:	434b      	muls	r3, r1
 8015bcc:	f103 0e01 	add.w	lr, r3, #1
 8015bd0:	eb0e 2323 	add.w	r3, lr, r3, asr #8
 8015bd4:	ea6f 2e23 	mvn.w	lr, r3, asr #8
 8015bd8:	ea4f 202c 	mov.w	r0, ip, asr #8
 8015bdc:	fa5f fe8e 	uxtb.w	lr, lr
 8015be0:	1213      	asrs	r3, r2, #8
 8015be2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015be6:	fb10 f00e 	smulbb	r0, r0, lr
 8015bea:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8015bee:	fb03 0301 	mla	r3, r3, r1, r0
 8015bf2:	b298      	uxth	r0, r3
 8015bf4:	ea4f 03ec 	mov.w	r3, ip, asr #3
 8015bf8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015bfc:	10d1      	asrs	r1, r2, #3
 8015bfe:	fa5f fc8c 	uxtb.w	ip, ip
 8015c02:	00d2      	lsls	r2, r2, #3
 8015c04:	fb1c fc0e 	smulbb	ip, ip, lr
 8015c08:	b2d2      	uxtb	r2, r2
 8015c0a:	fb02 c204 	mla	r2, r2, r4, ip
 8015c0e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8015c12:	fb13 f30e 	smulbb	r3, r3, lr
 8015c16:	b292      	uxth	r2, r2
 8015c18:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015c1c:	fb01 3104 	mla	r1, r1, r4, r3
 8015c20:	f102 0c01 	add.w	ip, r2, #1
 8015c24:	1c43      	adds	r3, r0, #1
 8015c26:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8015c2a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8015c2e:	b289      	uxth	r1, r1
 8015c30:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015c34:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015c38:	4313      	orrs	r3, r2
 8015c3a:	1c4a      	adds	r2, r1, #1
 8015c3c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8015c40:	0949      	lsrs	r1, r1, #5
 8015c42:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015c46:	430b      	orrs	r3, r1
 8015c48:	803b      	strh	r3, [r7, #0]
 8015c4a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015c4c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015c4e:	4413      	add	r3, r2
 8015c50:	932b      	str	r3, [sp, #172]	; 0xac
 8015c52:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015c54:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015c56:	441a      	add	r2, r3
 8015c58:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015c5a:	922c      	str	r2, [sp, #176]	; 0xb0
 8015c5c:	3b01      	subs	r3, #1
 8015c5e:	3702      	adds	r7, #2
 8015c60:	9315      	str	r3, [sp, #84]	; 0x54
 8015c62:	e68b      	b.n	801597c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8015c64:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015c66:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015c68:	4413      	add	r3, r2
 8015c6a:	932b      	str	r3, [sp, #172]	; 0xac
 8015c6c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015c6e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015c70:	441a      	add	r2, r3
 8015c72:	9b08      	ldr	r3, [sp, #32]
 8015c74:	922c      	str	r2, [sp, #176]	; 0xb0
 8015c76:	3b01      	subs	r3, #1
 8015c78:	9308      	str	r3, [sp, #32]
 8015c7a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015c7c:	3302      	adds	r3, #2
 8015c7e:	9309      	str	r3, [sp, #36]	; 0x24
 8015c80:	e630      	b.n	80158e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8015c82:	f47f ae42 	bne.w	801590a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8015c86:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015c88:	2b00      	cmp	r3, #0
 8015c8a:	f340 81ea 	ble.w	8016062 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 8015c8e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015c92:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015c96:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015c9a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015c9c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015ca0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015ca4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015ca8:	eef0 6a48 	vmov.f32	s13, s16
 8015cac:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015cb0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015cb4:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015cb8:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8015cbc:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015cc0:	eef0 6a68 	vmov.f32	s13, s17
 8015cc4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015cc8:	ee18 2a10 	vmov	r2, s16
 8015ccc:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015cd0:	fb92 f3f3 	sdiv	r3, r2, r3
 8015cd4:	ee18 2a90 	vmov	r2, s17
 8015cd8:	932d      	str	r3, [sp, #180]	; 0xb4
 8015cda:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015cdc:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ce0:	932e      	str	r3, [sp, #184]	; 0xb8
 8015ce2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015ce4:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8015ce6:	3b01      	subs	r3, #1
 8015ce8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015cec:	9313      	str	r3, [sp, #76]	; 0x4c
 8015cee:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015cf0:	edcd 6a2c 	vstr	s13, [sp, #176]	; 0xb0
 8015cf4:	bf08      	it	eq
 8015cf6:	4613      	moveq	r3, r2
 8015cf8:	9308      	str	r3, [sp, #32]
 8015cfa:	eef0 8a67 	vmov.f32	s17, s15
 8015cfe:	eeb0 8a47 	vmov.f32	s16, s14
 8015d02:	e5e8      	b.n	80158d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8015d04:	fb08 f000 	mul.w	r0, r8, r0
 8015d08:	fb09 0303 	mla	r3, r9, r3, r0
 8015d0c:	e684      	b.n	8015a18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ac>
 8015d0e:	4689      	mov	r9, r1
 8015d10:	e6ac      	b.n	8015a6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x200>
 8015d12:	f1c2 0010 	rsb	r0, r2, #16
 8015d16:	fb0e f202 	mul.w	r2, lr, r2
 8015d1a:	fb09 2900 	mla	r9, r9, r0, r2
 8015d1e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015d22:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8015d26:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015d2a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015d2e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015d32:	ea42 0909 	orr.w	r9, r2, r9
 8015d36:	fa1f f289 	uxth.w	r2, r9
 8015d3a:	e73c      	b.n	8015bb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8015d3c:	803a      	strh	r2, [r7, #0]
 8015d3e:	e784      	b.n	8015c4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8015d40:	1c5c      	adds	r4, r3, #1
 8015d42:	d182      	bne.n	8015c4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8015d44:	429d      	cmp	r5, r3
 8015d46:	dd80      	ble.n	8015c4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8015d48:	1c48      	adds	r0, r1, #1
 8015d4a:	f6ff af7e 	blt.w	8015c4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8015d4e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8015d50:	4288      	cmp	r0, r1
 8015d52:	f77f af7a 	ble.w	8015c4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8015d56:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015d58:	9302      	str	r3, [sp, #8]
 8015d5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015d5c:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8015d60:	e9cd c005 	strd	ip, r0, [sp, #20]
 8015d64:	e9cd 5300 	strd	r5, r3, [sp]
 8015d68:	4639      	mov	r1, r7
 8015d6a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8015d6e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8015d70:	f7ff fbcc 	bl	801550c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8015d74:	e769      	b.n	8015c4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8015d76:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015d78:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8015d7c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015d7e:	141f      	asrs	r7, r3, #16
 8015d80:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8015d84:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015d86:	141b      	asrs	r3, r3, #16
 8015d88:	fb05 3707 	mla	r7, r5, r7, r3
 8015d8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015d8e:	fa1f fc82 	uxth.w	ip, r2
 8015d92:	eb03 0a07 	add.w	sl, r3, r7
 8015d96:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8015d9a:	f813 9007 	ldrb.w	r9, [r3, r7]
 8015d9e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8015da2:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8015da6:	b29b      	uxth	r3, r3
 8015da8:	2800      	cmp	r0, #0
 8015daa:	f000 813f 	beq.w	801602c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c0>
 8015dae:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8015db2:	9410      	str	r4, [sp, #64]	; 0x40
 8015db4:	eb0a 0b05 	add.w	fp, sl, r5
 8015db8:	fa1f fa80 	uxth.w	sl, r0
 8015dbc:	fb0a fc0c 	mul.w	ip, sl, ip
 8015dc0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8015dc4:	fa1f fa8a 	uxth.w	sl, sl
 8015dc8:	eba1 010c 	sub.w	r1, r1, ip
 8015dcc:	eba3 030a 	sub.w	r3, r3, sl
 8015dd0:	b289      	uxth	r1, r1
 8015dd2:	fb08 f101 	mul.w	r1, r8, r1
 8015dd6:	b29b      	uxth	r3, r3
 8015dd8:	fb09 1303 	mla	r3, r9, r3, r1
 8015ddc:	9910      	ldr	r1, [sp, #64]	; 0x40
 8015dde:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8015de2:	9411      	str	r4, [sp, #68]	; 0x44
 8015de4:	fb0a 3301 	mla	r3, sl, r1, r3
 8015de8:	fb0c 3304 	mla	r3, ip, r4, r3
 8015dec:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015df0:	2b00      	cmp	r3, #0
 8015df2:	f000 810d 	beq.w	8016010 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8015df6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015df8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8015dfa:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015dfe:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8015e02:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8015e06:	f000 8116 	beq.w	8016036 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ca>
 8015e0a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8015e0e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8015e12:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8015e16:	fb09 f707 	mul.w	r7, r9, r7
 8015e1a:	fb0a fc0c 	mul.w	ip, sl, ip
 8015e1e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8015e22:	f107 0b20 	add.w	fp, r7, #32
 8015e26:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8015e2a:	44cc      	add	ip, r9
 8015e2c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8015e30:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8015e34:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8015e38:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015e3c:	ea4c 0909 	orr.w	r9, ip, r9
 8015e40:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015e44:	884f      	ldrh	r7, [r1, #2]
 8015e46:	d019      	beq.n	8015e7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x610>
 8015e48:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8015e4c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8015e50:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8015e54:	fb08 f807 	mul.w	r8, r8, r7
 8015e58:	fb0a fc0c 	mul.w	ip, sl, ip
 8015e5c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8015e60:	f108 0b20 	add.w	fp, r8, #32
 8015e64:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8015e68:	44bc      	add	ip, r7
 8015e6a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8015e6e:	0a3f      	lsrs	r7, r7, #8
 8015e70:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8015e74:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8015e78:	ea4c 0707 	orr.w	r7, ip, r7
 8015e7c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8015e80:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8015e84:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015e88:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015e8c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015e90:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015e94:	ea4c 0909 	orr.w	r9, ip, r9
 8015e98:	ea4a 0707 	orr.w	r7, sl, r7
 8015e9c:	2800      	cmp	r0, #0
 8015e9e:	f000 80cc 	beq.w	801603a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ce>
 8015ea2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015ea4:	eb01 0c04 	add.w	ip, r1, r4
 8015ea8:	f831 8004 	ldrh.w	r8, [r1, r4]
 8015eac:	9910      	ldr	r1, [sp, #64]	; 0x40
 8015eae:	29ff      	cmp	r1, #255	; 0xff
 8015eb0:	d01a      	beq.n	8015ee8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x67c>
 8015eb2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8015eb4:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 8015eb8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015ebc:	fb04 fb08 	mul.w	fp, r4, r8
 8015ec0:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8015ec4:	fb0a fa01 	mul.w	sl, sl, r1
 8015ec8:	f10b 0120 	add.w	r1, fp, #32
 8015ecc:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 8015ed0:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 8015ed4:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8015ed8:	44d0      	add	r8, sl
 8015eda:	0a09      	lsrs	r1, r1, #8
 8015edc:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 8015ee0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015ee4:	ea48 0801 	orr.w	r8, r8, r1
 8015ee8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015eea:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 8015eee:	2cff      	cmp	r4, #255	; 0xff
 8015ef0:	d01a      	beq.n	8015f28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6bc>
 8015ef2:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8015ef6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015efa:	fb04 fb01 	mul.w	fp, r4, r1
 8015efe:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8015f02:	fb0a fa0c 	mul.w	sl, sl, ip
 8015f06:	f10b 0c20 	add.w	ip, fp, #32
 8015f0a:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8015f0e:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8015f12:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8015f16:	4451      	add	r1, sl
 8015f18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015f1c:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8015f20:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8015f24:	ea41 010c 	orr.w	r1, r1, ip
 8015f28:	fb10 fc02 	smulbb	ip, r0, r2
 8015f2c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8015f30:	f1c0 0a10 	rsb	sl, r0, #16
 8015f34:	ebaa 0a02 	sub.w	sl, sl, r2
 8015f38:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8015f3c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8015f40:	437a      	muls	r2, r7
 8015f42:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8015f46:	040f      	lsls	r7, r1, #16
 8015f48:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015f4c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8015f50:	fb09 220a 	mla	r2, r9, sl, r2
 8015f54:	ea4b 0808 	orr.w	r8, fp, r8
 8015f58:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8015f5c:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8015f60:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015f64:	fb00 2208 	mla	r2, r0, r8, r2
 8015f68:	4339      	orrs	r1, r7
 8015f6a:	fb0c 2201 	mla	r2, ip, r1, r2
 8015f6e:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8015f72:	0952      	lsrs	r2, r2, #5
 8015f74:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015f78:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015f7c:	ea49 0202 	orr.w	r2, r9, r2
 8015f80:	2bff      	cmp	r3, #255	; 0xff
 8015f82:	b292      	uxth	r2, r2
 8015f84:	d102      	bne.n	8015f8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x720>
 8015f86:	9914      	ldr	r1, [sp, #80]	; 0x50
 8015f88:	29ff      	cmp	r1, #255	; 0xff
 8015f8a:	d067      	beq.n	801605c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f0>
 8015f8c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8015f8e:	f8be 0000 	ldrh.w	r0, [lr]
 8015f92:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015f94:	434b      	muls	r3, r1
 8015f96:	1c59      	adds	r1, r3, #1
 8015f98:	eb01 2323 	add.w	r3, r1, r3, asr #8
 8015f9c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8015fa0:	1201      	asrs	r1, r0, #8
 8015fa2:	b2db      	uxtb	r3, r3
 8015fa4:	1217      	asrs	r7, r2, #8
 8015fa6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8015faa:	fb11 f103 	smulbb	r1, r1, r3
 8015fae:	ea4f 0ce0 	mov.w	ip, r0, asr #3
 8015fb2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015fb6:	00c0      	lsls	r0, r0, #3
 8015fb8:	fb07 1704 	mla	r7, r7, r4, r1
 8015fbc:	b2c0      	uxtb	r0, r0
 8015fbe:	10d1      	asrs	r1, r2, #3
 8015fc0:	00d2      	lsls	r2, r2, #3
 8015fc2:	fb10 f003 	smulbb	r0, r0, r3
 8015fc6:	b2d2      	uxtb	r2, r2
 8015fc8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8015fcc:	fb02 0204 	mla	r2, r2, r4, r0
 8015fd0:	fb1c fc03 	smulbb	ip, ip, r3
 8015fd4:	b2bf      	uxth	r7, r7
 8015fd6:	b292      	uxth	r2, r2
 8015fd8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015fdc:	fb01 c104 	mla	r1, r1, r4, ip
 8015fe0:	1c7b      	adds	r3, r7, #1
 8015fe2:	f102 0c01 	add.w	ip, r2, #1
 8015fe6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8015fea:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 8015fee:	b289      	uxth	r1, r1
 8015ff0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015ff4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015ff8:	ea47 070c 	orr.w	r7, r7, ip
 8015ffc:	f101 0c01 	add.w	ip, r1, #1
 8016000:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 8016004:	0949      	lsrs	r1, r1, #5
 8016006:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801600a:	430f      	orrs	r7, r1
 801600c:	f8ae 7000 	strh.w	r7, [lr]
 8016010:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016012:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016014:	4413      	add	r3, r2
 8016016:	932b      	str	r3, [sp, #172]	; 0xac
 8016018:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801601a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801601c:	441a      	add	r2, r3
 801601e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016020:	922c      	str	r2, [sp, #176]	; 0xb0
 8016022:	3b01      	subs	r3, #1
 8016024:	f10e 0e02 	add.w	lr, lr, #2
 8016028:	9315      	str	r3, [sp, #84]	; 0x54
 801602a:	e489      	b.n	8015940 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 801602c:	fb08 f101 	mul.w	r1, r8, r1
 8016030:	fb09 1303 	mla	r3, r9, r3, r1
 8016034:	e6da      	b.n	8015dec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x580>
 8016036:	46b9      	mov	r9, r7
 8016038:	e702      	b.n	8015e40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d4>
 801603a:	f1c2 0110 	rsb	r1, r2, #16
 801603e:	437a      	muls	r2, r7
 8016040:	fb09 2901 	mla	r9, r9, r1, r2
 8016044:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016048:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801604c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8016050:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016054:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016058:	4302      	orrs	r2, r0
 801605a:	e791      	b.n	8015f80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 801605c:	f8ae 2000 	strh.w	r2, [lr]
 8016060:	e7d6      	b.n	8016010 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8016062:	b019      	add	sp, #100	; 0x64
 8016064:	ecbd 8b08 	vpop	{d8-d11}
 8016068:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801606c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801606c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016070:	b087      	sub	sp, #28
 8016072:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8016076:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 801607a:	9105      	str	r1, [sp, #20]
 801607c:	fb00 e604 	mla	r6, r0, r4, lr
 8016080:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8016084:	9102      	str	r1, [sp, #8]
 8016086:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 801608a:	9103      	str	r1, [sp, #12]
 801608c:	9905      	ldr	r1, [sp, #20]
 801608e:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 8016092:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8016096:	8809      	ldrh	r1, [r1, #0]
 8016098:	2800      	cmp	r0, #0
 801609a:	eb02 0a06 	add.w	sl, r2, r6
 801609e:	f2c0 80ca 	blt.w	8016236 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 80160a2:	4287      	cmp	r7, r0
 80160a4:	f340 80c7 	ble.w	8016236 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 80160a8:	f1be 0f00 	cmp.w	lr, #0
 80160ac:	f2c0 80bf 	blt.w	801622e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 80160b0:	4574      	cmp	r4, lr
 80160b2:	f340 80bc 	ble.w	801622e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 80160b6:	f812 c006 	ldrb.w	ip, [r2, r6]
 80160ba:	f833 9016 	ldrh.w	r9, [r3, r6, lsl #1]
 80160be:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80160c2:	d01c      	beq.n	80160fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x92>
 80160c4:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 80160c8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80160cc:	4372      	muls	r2, r6
 80160ce:	f64f 081f 	movw	r8, #63519	; 0xf81f
 80160d2:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 80160d6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80160da:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80160de:	fb0c f609 	mul.w	r6, ip, r9
 80160e2:	eb03 0902 	add.w	r9, r3, r2
 80160e6:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 80160ea:	f106 0820 	add.w	r8, r6, #32
 80160ee:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 80160f2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80160f6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80160fa:	ea49 0908 	orr.w	r9, r9, r8
 80160fe:	fa1f f989 	uxth.w	r9, r9
 8016102:	f11e 0301 	adds.w	r3, lr, #1
 8016106:	f100 809b 	bmi.w	8016240 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 801610a:	429c      	cmp	r4, r3
 801610c:	f340 8098 	ble.w	8016240 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8016110:	2d00      	cmp	r5, #0
 8016112:	f000 8095 	beq.w	8016240 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8016116:	f89a 6001 	ldrb.w	r6, [sl, #1]
 801611a:	9b03      	ldr	r3, [sp, #12]
 801611c:	2eff      	cmp	r6, #255	; 0xff
 801611e:	885b      	ldrh	r3, [r3, #2]
 8016120:	d01b      	beq.n	801615a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xee>
 8016122:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8016126:	ea4f 08e6 	mov.w	r8, r6, asr #3
 801612a:	fb08 f202 	mul.w	r2, r8, r2
 801612e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016132:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8016136:	fb06 f803 	mul.w	r8, r6, r3
 801613a:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801613e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016142:	441a      	add	r2, r3
 8016144:	f108 0320 	add.w	r3, r8, #32
 8016148:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 801614c:	0a1b      	lsrs	r3, r3, #8
 801614e:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8016152:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016156:	ea4b 0303 	orr.w	r3, fp, r3
 801615a:	b29b      	uxth	r3, r3
 801615c:	9301      	str	r3, [sp, #4]
 801615e:	3001      	adds	r0, #1
 8016160:	d474      	bmi.n	801624c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8016162:	4287      	cmp	r7, r0
 8016164:	dd72      	ble.n	801624c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8016166:	9a02      	ldr	r2, [sp, #8]
 8016168:	2a00      	cmp	r2, #0
 801616a:	f000 8111 	beq.w	8016390 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>
 801616e:	f1be 0f00 	cmp.w	lr, #0
 8016172:	db68      	blt.n	8016246 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8016174:	4574      	cmp	r4, lr
 8016176:	dd66      	ble.n	8016246 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8016178:	f81a 7004 	ldrb.w	r7, [sl, r4]
 801617c:	9a03      	ldr	r2, [sp, #12]
 801617e:	2fff      	cmp	r7, #255	; 0xff
 8016180:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8016184:	d01c      	beq.n	80161c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x154>
 8016186:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 801618a:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801618e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016192:	fb07 fb00 	mul.w	fp, r7, r0
 8016196:	fb08 f802 	mul.w	r8, r8, r2
 801619a:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801619e:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 80161a2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80161a6:	4490      	add	r8, r2
 80161a8:	f10b 0220 	add.w	r2, fp, #32
 80161ac:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 80161b0:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80161b4:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 80161b8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80161bc:	ea40 000b 	orr.w	r0, r0, fp
 80161c0:	b280      	uxth	r0, r0
 80161c2:	f11e 0e01 	adds.w	lr, lr, #1
 80161c6:	d446      	bmi.n	8016256 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 80161c8:	4574      	cmp	r4, lr
 80161ca:	dd44      	ble.n	8016256 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 80161cc:	2d00      	cmp	r5, #0
 80161ce:	d045      	beq.n	801625c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f0>
 80161d0:	1c62      	adds	r2, r4, #1
 80161d2:	9b03      	ldr	r3, [sp, #12]
 80161d4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80161d8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80161dc:	2cff      	cmp	r4, #255	; 0xff
 80161de:	d01c      	beq.n	801621a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ae>
 80161e0:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 80161e4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80161e8:	fb08 fe0e 	mul.w	lr, r8, lr
 80161ec:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 80161f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80161f4:	fb04 f802 	mul.w	r8, r4, r2
 80161f8:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 80161fc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016200:	4472      	add	r2, lr
 8016202:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8016206:	f108 0a20 	add.w	sl, r8, #32
 801620a:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 801620e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016212:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016216:	ea42 020a 	orr.w	r2, r2, sl
 801621a:	b292      	uxth	r2, r2
 801621c:	2d0f      	cmp	r5, #15
 801621e:	d91f      	bls.n	8016260 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f4>
 8016220:	4b5f      	ldr	r3, [pc, #380]	; (80163a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x334>)
 8016222:	4a60      	ldr	r2, [pc, #384]	; (80163a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x338>)
 8016224:	4860      	ldr	r0, [pc, #384]	; (80163a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x33c>)
 8016226:	f240 210d 	movw	r1, #525	; 0x20d
 801622a:	f003 fc39 	bl	8019aa0 <__assert_func>
 801622e:	4689      	mov	r9, r1
 8016230:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8016234:	e765      	b.n	8016102 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x96>
 8016236:	26ff      	movs	r6, #255	; 0xff
 8016238:	9101      	str	r1, [sp, #4]
 801623a:	4689      	mov	r9, r1
 801623c:	46b4      	mov	ip, r6
 801623e:	e78e      	b.n	801615e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8016240:	9101      	str	r1, [sp, #4]
 8016242:	26ff      	movs	r6, #255	; 0xff
 8016244:	e78b      	b.n	801615e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8016246:	4608      	mov	r0, r1
 8016248:	27ff      	movs	r7, #255	; 0xff
 801624a:	e7ba      	b.n	80161c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x156>
 801624c:	24ff      	movs	r4, #255	; 0xff
 801624e:	460a      	mov	r2, r1
 8016250:	4608      	mov	r0, r1
 8016252:	4627      	mov	r7, r4
 8016254:	e7e2      	b.n	801621c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8016256:	460a      	mov	r2, r1
 8016258:	24ff      	movs	r4, #255	; 0xff
 801625a:	e7df      	b.n	801621c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801625c:	460a      	mov	r2, r1
 801625e:	24ff      	movs	r4, #255	; 0xff
 8016260:	9b02      	ldr	r3, [sp, #8]
 8016262:	2b0f      	cmp	r3, #15
 8016264:	d8dc      	bhi.n	8016220 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8016266:	f8bd e008 	ldrh.w	lr, [sp, #8]
 801626a:	fa1f f885 	uxth.w	r8, r5
 801626e:	fb08 fa0e 	mul.w	sl, r8, lr
 8016272:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8016276:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 801627a:	9303      	str	r3, [sp, #12]
 801627c:	fa1f f38e 	uxth.w	r3, lr
 8016280:	9304      	str	r3, [sp, #16]
 8016282:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8016286:	9b02      	ldr	r3, [sp, #8]
 8016288:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801628c:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8016290:	fb15 fe03 	smulbb	lr, r5, r3
 8016294:	ea48 0809 	orr.w	r8, r8, r9
 8016298:	f1c3 0910 	rsb	r9, r3, #16
 801629c:	9b01      	ldr	r3, [sp, #4]
 801629e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80162a2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80162a6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80162aa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80162ae:	eba9 0905 	sub.w	r9, r9, r5
 80162b2:	ea4b 0303 	orr.w	r3, fp, r3
 80162b6:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 80162ba:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80162be:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 80162c2:	436b      	muls	r3, r5
 80162c4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80162c8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80162cc:	ea4b 0202 	orr.w	r2, fp, r2
 80162d0:	fb09 3308 	mla	r3, r9, r8, r3
 80162d4:	fb0e 3302 	mla	r3, lr, r2, r3
 80162d8:	0402      	lsls	r2, r0, #16
 80162da:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80162de:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80162e2:	4310      	orrs	r0, r2
 80162e4:	9a02      	ldr	r2, [sp, #8]
 80162e6:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 80162ea:	9a03      	ldr	r2, [sp, #12]
 80162ec:	fb0e 3e00 	mla	lr, lr, r0, r3
 80162f0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80162f4:	9a04      	ldr	r2, [sp, #16]
 80162f6:	1a80      	subs	r0, r0, r2
 80162f8:	9a03      	ldr	r2, [sp, #12]
 80162fa:	eba2 020a 	sub.w	r2, r2, sl
 80162fe:	b292      	uxth	r2, r2
 8016300:	b280      	uxth	r0, r0
 8016302:	4356      	muls	r6, r2
 8016304:	9a04      	ldr	r2, [sp, #16]
 8016306:	fb0c 6600 	mla	r6, ip, r0, r6
 801630a:	fb02 6707 	mla	r7, r2, r7, r6
 801630e:	fb0a 7404 	mla	r4, sl, r4, r7
 8016312:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8016316:	1208      	asrs	r0, r1, #8
 8016318:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801631c:	ea6f 2424 	mvn.w	r4, r4, asr #8
 8016320:	b2e4      	uxtb	r4, r4
 8016322:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016326:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801632a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801632e:	4360      	muls	r0, r4
 8016330:	ea43 0e0e 	orr.w	lr, r3, lr
 8016334:	fa1f f38e 	uxth.w	r3, lr
 8016338:	1c42      	adds	r2, r0, #1
 801633a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801633e:	1218      	asrs	r0, r3, #8
 8016340:	10cd      	asrs	r5, r1, #3
 8016342:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016346:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801634a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801634e:	4a17      	ldr	r2, [pc, #92]	; (80163ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x340>)
 8016350:	4365      	muls	r5, r4
 8016352:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8016356:	1c6a      	adds	r2, r5, #1
 8016358:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801635c:	00c9      	lsls	r1, r1, #3
 801635e:	10da      	asrs	r2, r3, #3
 8016360:	b2c9      	uxtb	r1, r1
 8016362:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016366:	434c      	muls	r4, r1
 8016368:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801636c:	1c61      	adds	r1, r4, #1
 801636e:	00d2      	lsls	r2, r2, #3
 8016370:	00db      	lsls	r3, r3, #3
 8016372:	eb01 2414 	add.w	r4, r1, r4, lsr #8
 8016376:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801637a:	b2db      	uxtb	r3, r3
 801637c:	4302      	orrs	r2, r0
 801637e:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8016382:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 8016386:	9a05      	ldr	r2, [sp, #20]
 8016388:	8013      	strh	r3, [r2, #0]
 801638a:	b007      	add	sp, #28
 801638c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016390:	2d0f      	cmp	r5, #15
 8016392:	f63f af45 	bhi.w	8016220 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8016396:	24ff      	movs	r4, #255	; 0xff
 8016398:	460a      	mov	r2, r1
 801639a:	4608      	mov	r0, r1
 801639c:	4627      	mov	r7, r4
 801639e:	e762      	b.n	8016266 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1fa>
 80163a0:	0801d6d1 	.word	0x0801d6d1
 80163a4:	0801dc29 	.word	0x0801dc29
 80163a8:	0801d759 	.word	0x0801d759
 80163ac:	fffff800 	.word	0xfffff800

080163b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80163b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163b4:	ed2d 8b08 	vpush	{d8-d11}
 80163b8:	b095      	sub	sp, #84	; 0x54
 80163ba:	eeb0 aa40 	vmov.f32	s20, s0
 80163be:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 80163c0:	9306      	str	r3, [sp, #24]
 80163c2:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 80163c6:	9110      	str	r1, [sp, #64]	; 0x40
 80163c8:	9308      	str	r3, [sp, #32]
 80163ca:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80163ce:	9013      	str	r0, [sp, #76]	; 0x4c
 80163d0:	6870      	ldr	r0, [r6, #4]
 80163d2:	9212      	str	r2, [sp, #72]	; 0x48
 80163d4:	fb00 1303 	mla	r3, r0, r3, r1
 80163d8:	6831      	ldr	r1, [r6, #0]
 80163da:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80163dc:	f9bd 50b8 	ldrsh.w	r5, [sp, #184]	; 0xb8
 80163e0:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80163e4:	9307      	str	r3, [sp, #28]
 80163e6:	6813      	ldr	r3, [r2, #0]
 80163e8:	9309      	str	r3, [sp, #36]	; 0x24
 80163ea:	6853      	ldr	r3, [r2, #4]
 80163ec:	930a      	str	r3, [sp, #40]	; 0x28
 80163ee:	006b      	lsls	r3, r5, #1
 80163f0:	eef0 9a60 	vmov.f32	s19, s1
 80163f4:	eeb0 9a41 	vmov.f32	s18, s2
 80163f8:	eeb0 8a62 	vmov.f32	s16, s5
 80163fc:	eef0 8a43 	vmov.f32	s17, s6
 8016400:	eef0 ba44 	vmov.f32	s23, s8
 8016404:	eeb0 ba64 	vmov.f32	s22, s9
 8016408:	eef0 aa45 	vmov.f32	s21, s10
 801640c:	930f      	str	r3, [sp, #60]	; 0x3c
 801640e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016410:	2b00      	cmp	r3, #0
 8016412:	dc03      	bgt.n	801641c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8016414:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016416:	2b00      	cmp	r3, #0
 8016418:	f340 83a3 	ble.w	8016b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 801641c:	9b06      	ldr	r3, [sp, #24]
 801641e:	2b00      	cmp	r3, #0
 8016420:	f340 81bc 	ble.w	801679c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ec>
 8016424:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8016426:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016428:	1412      	asrs	r2, r2, #16
 801642a:	ea4f 4323 	mov.w	r3, r3, asr #16
 801642e:	d42f      	bmi.n	8016490 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8016430:	1c51      	adds	r1, r2, #1
 8016432:	428d      	cmp	r5, r1
 8016434:	dd2f      	ble.n	8016496 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8016436:	2b00      	cmp	r3, #0
 8016438:	db2d      	blt.n	8016496 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 801643a:	9808      	ldr	r0, [sp, #32]
 801643c:	1c59      	adds	r1, r3, #1
 801643e:	4288      	cmp	r0, r1
 8016440:	dd29      	ble.n	8016496 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8016442:	9b06      	ldr	r3, [sp, #24]
 8016444:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016446:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8016448:	3b01      	subs	r3, #1
 801644a:	fb02 1203 	mla	r2, r2, r3, r1
 801644e:	1412      	asrs	r2, r2, #16
 8016450:	d42b      	bmi.n	80164aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8016452:	3201      	adds	r2, #1
 8016454:	4295      	cmp	r5, r2
 8016456:	dd28      	ble.n	80164aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8016458:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801645a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801645c:	fb02 1303 	mla	r3, r2, r3, r1
 8016460:	141b      	asrs	r3, r3, #16
 8016462:	d422      	bmi.n	80164aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8016464:	9a08      	ldr	r2, [sp, #32]
 8016466:	3301      	adds	r3, #1
 8016468:	429a      	cmp	r2, r3
 801646a:	dd1e      	ble.n	80164aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801646c:	9b06      	ldr	r3, [sp, #24]
 801646e:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8016472:	9311      	str	r3, [sp, #68]	; 0x44
 8016474:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8016478:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801647a:	2b00      	cmp	r3, #0
 801647c:	f300 8208 	bgt.w	8016890 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e0>
 8016480:	9b06      	ldr	r3, [sp, #24]
 8016482:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016486:	9b07      	ldr	r3, [sp, #28]
 8016488:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801648c:	9307      	str	r3, [sp, #28]
 801648e:	e187      	b.n	80167a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f0>
 8016490:	1c57      	adds	r7, r2, #1
 8016492:	f040 8174 	bne.w	801677e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8016496:	42aa      	cmp	r2, r5
 8016498:	f280 8171 	bge.w	801677e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 801649c:	1c5e      	adds	r6, r3, #1
 801649e:	f2c0 816e 	blt.w	801677e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 80164a2:	9a08      	ldr	r2, [sp, #32]
 80164a4:	4293      	cmp	r3, r2
 80164a6:	f280 816a 	bge.w	801677e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 80164aa:	9b06      	ldr	r3, [sp, #24]
 80164ac:	9f07      	ldr	r7, [sp, #28]
 80164ae:	9311      	str	r3, [sp, #68]	; 0x44
 80164b0:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80164b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80164b6:	2b00      	cmp	r3, #0
 80164b8:	dde2      	ble.n	8016480 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 80164ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80164bc:	1419      	asrs	r1, r3, #16
 80164be:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80164c0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80164c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80164c6:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80164ca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80164cc:	141b      	asrs	r3, r3, #16
 80164ce:	f100 81c4 	bmi.w	801685a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4aa>
 80164d2:	1c58      	adds	r0, r3, #1
 80164d4:	4285      	cmp	r5, r0
 80164d6:	f340 81c2 	ble.w	801685e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 80164da:	2900      	cmp	r1, #0
 80164dc:	f2c0 81bf 	blt.w	801685e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 80164e0:	9c08      	ldr	r4, [sp, #32]
 80164e2:	1c48      	adds	r0, r1, #1
 80164e4:	4284      	cmp	r4, r0
 80164e6:	f340 81ba 	ble.w	801685e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 80164ea:	fb01 3105 	mla	r1, r1, r5, r3
 80164ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80164f0:	fa1f fe82 	uxth.w	lr, r2
 80164f4:	eb03 0a01 	add.w	sl, r3, r1
 80164f8:	ea4f 100e 	mov.w	r0, lr, lsl #4
 80164fc:	f813 9001 	ldrb.w	r9, [r3, r1]
 8016500:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016504:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8016508:	b29b      	uxth	r3, r3
 801650a:	f1bc 0f00 	cmp.w	ip, #0
 801650e:	f000 8186 	beq.w	801681e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46e>
 8016512:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8016516:	940b      	str	r4, [sp, #44]	; 0x2c
 8016518:	eb0a 0b05 	add.w	fp, sl, r5
 801651c:	fa1f fa8c 	uxth.w	sl, ip
 8016520:	fb0a fe0e 	mul.w	lr, sl, lr
 8016524:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8016528:	fa1f fa8a 	uxth.w	sl, sl
 801652c:	eba0 000e 	sub.w	r0, r0, lr
 8016530:	eba3 030a 	sub.w	r3, r3, sl
 8016534:	b280      	uxth	r0, r0
 8016536:	fb08 f000 	mul.w	r0, r8, r0
 801653a:	b29b      	uxth	r3, r3
 801653c:	fb09 0303 	mla	r3, r9, r3, r0
 8016540:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8016542:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016546:	940c      	str	r4, [sp, #48]	; 0x30
 8016548:	fb0a 3300 	mla	r3, sl, r0, r3
 801654c:	fb0e 3304 	mla	r3, lr, r4, r3
 8016550:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016554:	2b00      	cmp	r3, #0
 8016556:	f000 8105 	beq.w	8016764 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801655a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801655c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801655e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016562:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016566:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 801656a:	f000 815d 	beq.w	8016828 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>
 801656e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8016572:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016576:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801657a:	fb09 f101 	mul.w	r1, r9, r1
 801657e:	fb0a fe0e 	mul.w	lr, sl, lr
 8016582:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8016586:	f101 0b20 	add.w	fp, r1, #32
 801658a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801658e:	44ce      	add	lr, r9
 8016590:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8016594:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016598:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801659c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80165a0:	ea4e 0909 	orr.w	r9, lr, r9
 80165a4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80165a8:	8841      	ldrh	r1, [r0, #2]
 80165aa:	d019      	beq.n	80165e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 80165ac:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80165b0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80165b4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80165b8:	fb0a fe0e 	mul.w	lr, sl, lr
 80165bc:	fb08 f801 	mul.w	r8, r8, r1
 80165c0:	f108 0b20 	add.w	fp, r8, #32
 80165c4:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 80165c8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80165cc:	448e      	add	lr, r1
 80165ce:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 80165d2:	0a09      	lsrs	r1, r1, #8
 80165d4:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 80165d8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80165dc:	ea4a 0101 	orr.w	r1, sl, r1
 80165e0:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80165e4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80165e8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80165ec:	ea4e 0909 	orr.w	r9, lr, r9
 80165f0:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 80165f4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80165f8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80165fc:	ea4e 0e01 	orr.w	lr, lr, r1
 8016600:	f1bc 0f00 	cmp.w	ip, #0
 8016604:	f000 8112 	beq.w	801682c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8016608:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801660a:	eb00 0801 	add.w	r8, r0, r1
 801660e:	5a41      	ldrh	r1, [r0, r1]
 8016610:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8016612:	28ff      	cmp	r0, #255	; 0xff
 8016614:	d019      	beq.n	801664a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29a>
 8016616:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016618:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801661c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016620:	fb04 fb01 	mul.w	fp, r4, r1
 8016624:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016628:	fb0a fa00 	mul.w	sl, sl, r0
 801662c:	f10b 0020 	add.w	r0, fp, #32
 8016630:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8016634:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8016638:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801663c:	4451      	add	r1, sl
 801663e:	0a00      	lsrs	r0, r0, #8
 8016640:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8016644:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016648:	4301      	orrs	r1, r0
 801664a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801664c:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8016650:	2cff      	cmp	r4, #255	; 0xff
 8016652:	d01a      	beq.n	801668a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2da>
 8016654:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8016658:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801665c:	fb04 fb00 	mul.w	fp, r4, r0
 8016660:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016664:	fb0a fa08 	mul.w	sl, sl, r8
 8016668:	f10b 0820 	add.w	r8, fp, #32
 801666c:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8016670:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8016674:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016678:	4450      	add	r0, sl
 801667a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801667e:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8016682:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016686:	ea40 0008 	orr.w	r0, r0, r8
 801668a:	fb1c f802 	smulbb	r8, ip, r2
 801668e:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8016692:	f1cc 0a10 	rsb	sl, ip, #16
 8016696:	ebaa 0a02 	sub.w	sl, sl, r2
 801669a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801669e:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 80166a2:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 80166a6:	fb0e f202 	mul.w	r2, lr, r2
 80166aa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80166ae:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 80166b2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80166b6:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 80166ba:	fb09 220a 	mla	r2, r9, sl, r2
 80166be:	ea4b 0101 	orr.w	r1, fp, r1
 80166c2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80166c6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80166ca:	fb0c 2201 	mla	r2, ip, r1, r2
 80166ce:	ea4e 0000 	orr.w	r0, lr, r0
 80166d2:	fb08 2800 	mla	r8, r8, r0, r2
 80166d6:	ea4f 5258 	mov.w	r2, r8, lsr #21
 80166da:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80166de:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80166e2:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80166e6:	ea42 0808 	orr.w	r8, r2, r8
 80166ea:	fa1f f288 	uxth.w	r2, r8
 80166ee:	2bff      	cmp	r3, #255	; 0xff
 80166f0:	f000 80b1 	beq.w	8016856 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 80166f4:	f8b7 8000 	ldrh.w	r8, [r7]
 80166f8:	43db      	mvns	r3, r3
 80166fa:	ea4f 2028 	mov.w	r0, r8, asr #8
 80166fe:	fa5f fe83 	uxtb.w	lr, r3
 8016702:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016706:	fb00 f00e 	mul.w	r0, r0, lr
 801670a:	1c41      	adds	r1, r0, #1
 801670c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8016710:	1210      	asrs	r0, r2, #8
 8016712:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8016716:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801671a:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 801671e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016722:	495a      	ldr	r1, [pc, #360]	; (801688c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4dc>)
 8016724:	fb0c fc0e 	mul.w	ip, ip, lr
 8016728:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 801672c:	f10c 0101 	add.w	r1, ip, #1
 8016730:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8016734:	10d1      	asrs	r1, r2, #3
 8016736:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801673a:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 801673e:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8016742:	b2db      	uxtb	r3, r3
 8016744:	00c9      	lsls	r1, r1, #3
 8016746:	fb03 f30e 	mul.w	r3, r3, lr
 801674a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801674e:	4301      	orrs	r1, r0
 8016750:	1c58      	adds	r0, r3, #1
 8016752:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8016756:	00d3      	lsls	r3, r2, #3
 8016758:	b2db      	uxtb	r3, r3
 801675a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801675e:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8016762:	803b      	strh	r3, [r7, #0]
 8016764:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016766:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016768:	4413      	add	r3, r2
 801676a:	9327      	str	r3, [sp, #156]	; 0x9c
 801676c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801676e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016770:	441a      	add	r2, r3
 8016772:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016774:	9228      	str	r2, [sp, #160]	; 0xa0
 8016776:	3b01      	subs	r3, #1
 8016778:	3702      	adds	r7, #2
 801677a:	9311      	str	r3, [sp, #68]	; 0x44
 801677c:	e69a      	b.n	80164b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801677e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016780:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016782:	4413      	add	r3, r2
 8016784:	9327      	str	r3, [sp, #156]	; 0x9c
 8016786:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016788:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801678a:	441a      	add	r2, r3
 801678c:	9b06      	ldr	r3, [sp, #24]
 801678e:	9228      	str	r2, [sp, #160]	; 0xa0
 8016790:	3b01      	subs	r3, #1
 8016792:	9306      	str	r3, [sp, #24]
 8016794:	9b07      	ldr	r3, [sp, #28]
 8016796:	3302      	adds	r3, #2
 8016798:	9307      	str	r3, [sp, #28]
 801679a:	e63f      	b.n	801641c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 801679c:	f47f ae51 	bne.w	8016442 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 80167a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80167a2:	2b00      	cmp	r3, #0
 80167a4:	f340 81dd 	ble.w	8016b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 80167a8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80167ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80167b0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80167b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80167b6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80167ba:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80167be:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80167c2:	eef0 6a48 	vmov.f32	s13, s16
 80167c6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80167ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80167ce:	ee37 8a48 	vsub.f32	s16, s14, s16
 80167d2:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80167d6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80167da:	eef0 6a68 	vmov.f32	s13, s17
 80167de:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80167e2:	ee18 2a10 	vmov	r2, s16
 80167e6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80167ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80167ee:	ee18 2a90 	vmov	r2, s17
 80167f2:	9329      	str	r3, [sp, #164]	; 0xa4
 80167f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80167f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80167fa:	932a      	str	r3, [sp, #168]	; 0xa8
 80167fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80167fe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016800:	3b01      	subs	r3, #1
 8016802:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016806:	9310      	str	r3, [sp, #64]	; 0x40
 8016808:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801680a:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 801680e:	bf08      	it	eq
 8016810:	4613      	moveq	r3, r2
 8016812:	9306      	str	r3, [sp, #24]
 8016814:	eef0 8a67 	vmov.f32	s17, s15
 8016818:	eeb0 8a47 	vmov.f32	s16, s14
 801681c:	e5f7      	b.n	801640e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 801681e:	fb08 f000 	mul.w	r0, r8, r0
 8016822:	fb09 0303 	mla	r3, r9, r3, r0
 8016826:	e693      	b.n	8016550 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1a0>
 8016828:	4689      	mov	r9, r1
 801682a:	e6bb      	b.n	80165a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 801682c:	f1c2 0010 	rsb	r0, r2, #16
 8016830:	fb0e f202 	mul.w	r2, lr, r2
 8016834:	fb09 2900 	mla	r9, r9, r0, r2
 8016838:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801683c:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8016840:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016844:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016848:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801684c:	ea42 0909 	orr.w	r9, r2, r9
 8016850:	fa1f f289 	uxth.w	r2, r9
 8016854:	e74b      	b.n	80166ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 8016856:	803a      	strh	r2, [r7, #0]
 8016858:	e784      	b.n	8016764 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801685a:	1c5c      	adds	r4, r3, #1
 801685c:	d182      	bne.n	8016764 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801685e:	429d      	cmp	r5, r3
 8016860:	dd80      	ble.n	8016764 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8016862:	1c48      	adds	r0, r1, #1
 8016864:	f6ff af7e 	blt.w	8016764 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8016868:	9808      	ldr	r0, [sp, #32]
 801686a:	4288      	cmp	r0, r1
 801686c:	f77f af7a 	ble.w	8016764 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8016870:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8016874:	e9cd 2c04 	strd	r2, ip, [sp, #16]
 8016878:	e9cd 5000 	strd	r5, r0, [sp]
 801687c:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8016880:	4639      	mov	r1, r7
 8016882:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016884:	f7ff fbf2 	bl	801606c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8016888:	e76c      	b.n	8016764 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801688a:	bf00      	nop
 801688c:	fffff800 	.word	0xfffff800
 8016890:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016892:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016896:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016898:	141f      	asrs	r7, r3, #16
 801689a:	f3c3 3003 	ubfx	r0, r3, #12, #4
 801689e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80168a0:	141b      	asrs	r3, r3, #16
 80168a2:	fb05 3707 	mla	r7, r5, r7, r3
 80168a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80168a8:	fa1f fc82 	uxth.w	ip, r2
 80168ac:	eb03 0a07 	add.w	sl, r3, r7
 80168b0:	ea4f 110c 	mov.w	r1, ip, lsl #4
 80168b4:	f813 9007 	ldrb.w	r9, [r3, r7]
 80168b8:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80168bc:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 80168c0:	b29b      	uxth	r3, r3
 80168c2:	2800      	cmp	r0, #0
 80168c4:	f000 8132 	beq.w	8016b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x77c>
 80168c8:	f81a 4005 	ldrb.w	r4, [sl, r5]
 80168cc:	940d      	str	r4, [sp, #52]	; 0x34
 80168ce:	eb0a 0b05 	add.w	fp, sl, r5
 80168d2:	fa1f fa80 	uxth.w	sl, r0
 80168d6:	fb0a fc0c 	mul.w	ip, sl, ip
 80168da:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80168de:	fa1f fa8a 	uxth.w	sl, sl
 80168e2:	eba1 010c 	sub.w	r1, r1, ip
 80168e6:	eba3 030a 	sub.w	r3, r3, sl
 80168ea:	b289      	uxth	r1, r1
 80168ec:	fb08 f101 	mul.w	r1, r8, r1
 80168f0:	b29b      	uxth	r3, r3
 80168f2:	fb09 1303 	mla	r3, r9, r3, r1
 80168f6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80168f8:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80168fc:	940e      	str	r4, [sp, #56]	; 0x38
 80168fe:	fb0a 3301 	mla	r3, sl, r1, r3
 8016902:	fb0c 3304 	mla	r3, ip, r4, r3
 8016906:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801690a:	2b00      	cmp	r3, #0
 801690c:	f000 8100 	beq.w	8016b10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 8016910:	9909      	ldr	r1, [sp, #36]	; 0x24
 8016912:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8016914:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016918:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 801691c:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8016920:	f000 8109 	beq.w	8016b36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x786>
 8016924:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016928:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801692c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016930:	fb09 f707 	mul.w	r7, r9, r7
 8016934:	fb0a fc0c 	mul.w	ip, sl, ip
 8016938:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801693c:	f107 0b20 	add.w	fp, r7, #32
 8016940:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016944:	44cc      	add	ip, r9
 8016946:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801694a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801694e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016952:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016956:	ea4c 0909 	orr.w	r9, ip, r9
 801695a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801695e:	884f      	ldrh	r7, [r1, #2]
 8016960:	d019      	beq.n	8016996 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e6>
 8016962:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016966:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801696a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801696e:	fb08 f807 	mul.w	r8, r8, r7
 8016972:	fb0a fc0c 	mul.w	ip, sl, ip
 8016976:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801697a:	f108 0b20 	add.w	fp, r8, #32
 801697e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016982:	44bc      	add	ip, r7
 8016984:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8016988:	0a3f      	lsrs	r7, r7, #8
 801698a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801698e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016992:	ea4c 0707 	orr.w	r7, ip, r7
 8016996:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801699a:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801699e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80169a2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80169a6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80169aa:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80169ae:	ea4c 0909 	orr.w	r9, ip, r9
 80169b2:	ea4a 0707 	orr.w	r7, sl, r7
 80169b6:	2800      	cmp	r0, #0
 80169b8:	f000 80bf 	beq.w	8016b3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78a>
 80169bc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80169be:	eb01 0c04 	add.w	ip, r1, r4
 80169c2:	f831 8004 	ldrh.w	r8, [r1, r4]
 80169c6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80169c8:	29ff      	cmp	r1, #255	; 0xff
 80169ca:	d01a      	beq.n	8016a02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x652>
 80169cc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80169ce:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 80169d2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80169d6:	fb04 fb08 	mul.w	fp, r4, r8
 80169da:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80169de:	fb0a fa01 	mul.w	sl, sl, r1
 80169e2:	f10b 0120 	add.w	r1, fp, #32
 80169e6:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 80169ea:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 80169ee:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80169f2:	44d0      	add	r8, sl
 80169f4:	0a09      	lsrs	r1, r1, #8
 80169f6:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 80169fa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80169fe:	ea48 0801 	orr.w	r8, r8, r1
 8016a02:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016a04:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 8016a08:	2cff      	cmp	r4, #255	; 0xff
 8016a0a:	d01a      	beq.n	8016a42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x692>
 8016a0c:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8016a10:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016a14:	fb04 fb01 	mul.w	fp, r4, r1
 8016a18:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016a1c:	fb0a fa0c 	mul.w	sl, sl, ip
 8016a20:	f10b 0c20 	add.w	ip, fp, #32
 8016a24:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8016a28:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8016a2c:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016a30:	4451      	add	r1, sl
 8016a32:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016a36:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8016a3a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8016a3e:	ea41 010c 	orr.w	r1, r1, ip
 8016a42:	fb10 fc02 	smulbb	ip, r0, r2
 8016a46:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8016a4a:	f1c0 0a10 	rsb	sl, r0, #16
 8016a4e:	ebaa 0a02 	sub.w	sl, sl, r2
 8016a52:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8016a56:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8016a5a:	437a      	muls	r2, r7
 8016a5c:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8016a60:	040f      	lsls	r7, r1, #16
 8016a62:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016a66:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8016a6a:	fb09 220a 	mla	r2, r9, sl, r2
 8016a6e:	ea4b 0808 	orr.w	r8, fp, r8
 8016a72:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8016a76:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8016a7a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016a7e:	fb00 2208 	mla	r2, r0, r8, r2
 8016a82:	4339      	orrs	r1, r7
 8016a84:	fb0c 2201 	mla	r2, ip, r1, r2
 8016a88:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8016a8c:	0952      	lsrs	r2, r2, #5
 8016a8e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016a92:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016a96:	ea49 0202 	orr.w	r2, r9, r2
 8016a9a:	2bff      	cmp	r3, #255	; 0xff
 8016a9c:	b292      	uxth	r2, r2
 8016a9e:	d05d      	beq.n	8016b5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ac>
 8016aa0:	f8be 8000 	ldrh.w	r8, [lr]
 8016aa4:	4c31      	ldr	r4, [pc, #196]	; (8016b6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7bc>)
 8016aa6:	43db      	mvns	r3, r3
 8016aa8:	ea4f 2028 	mov.w	r0, r8, asr #8
 8016aac:	fa5f fc83 	uxtb.w	ip, r3
 8016ab0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016ab4:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8016ab8:	fb00 f00c 	mul.w	r0, r0, ip
 8016abc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016ac0:	fb07 f10c 	mul.w	r1, r7, ip
 8016ac4:	1c47      	adds	r7, r0, #1
 8016ac6:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8016aca:	1217      	asrs	r7, r2, #8
 8016acc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016ad0:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8016ad4:	1c4f      	adds	r7, r1, #1
 8016ad6:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8016ada:	10d1      	asrs	r1, r2, #3
 8016adc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016ae0:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8016ae4:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 8016ae8:	b2db      	uxtb	r3, r3
 8016aea:	00c9      	lsls	r1, r1, #3
 8016aec:	fb03 f30c 	mul.w	r3, r3, ip
 8016af0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016af4:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8016af8:	4308      	orrs	r0, r1
 8016afa:	00d2      	lsls	r2, r2, #3
 8016afc:	1c59      	adds	r1, r3, #1
 8016afe:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8016b02:	b2d2      	uxtb	r2, r2
 8016b04:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8016b08:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8016b0c:	f8ae 0000 	strh.w	r0, [lr]
 8016b10:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016b12:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016b14:	4413      	add	r3, r2
 8016b16:	9327      	str	r3, [sp, #156]	; 0x9c
 8016b18:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016b1a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016b1c:	441a      	add	r2, r3
 8016b1e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016b20:	9228      	str	r2, [sp, #160]	; 0xa0
 8016b22:	3b01      	subs	r3, #1
 8016b24:	f10e 0e02 	add.w	lr, lr, #2
 8016b28:	9311      	str	r3, [sp, #68]	; 0x44
 8016b2a:	e4a5      	b.n	8016478 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8016b2c:	fb08 f101 	mul.w	r1, r8, r1
 8016b30:	fb09 1303 	mla	r3, r9, r3, r1
 8016b34:	e6e7      	b.n	8016906 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x556>
 8016b36:	46b9      	mov	r9, r7
 8016b38:	e70f      	b.n	801695a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5aa>
 8016b3a:	f1c2 0110 	rsb	r1, r2, #16
 8016b3e:	437a      	muls	r2, r7
 8016b40:	fb09 2901 	mla	r9, r9, r1, r2
 8016b44:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016b48:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8016b4c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8016b50:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016b54:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016b58:	4302      	orrs	r2, r0
 8016b5a:	e79e      	b.n	8016a9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6ea>
 8016b5c:	f8ae 2000 	strh.w	r2, [lr]
 8016b60:	e7d6      	b.n	8016b10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 8016b62:	b015      	add	sp, #84	; 0x54
 8016b64:	ecbd 8b08 	vpop	{d8-d11}
 8016b68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b6c:	fffff800 	.word	0xfffff800

08016b70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8016b70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016b74:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8016b78:	fb0c 4e03 	mla	lr, ip, r3, r4
 8016b7c:	f1bc 0f00 	cmp.w	ip, #0
 8016b80:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8016b84:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8016b88:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8016b8c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8016b90:	8808      	ldrh	r0, [r1, #0]
 8016b92:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8016b96:	db2f      	blt.n	8016bf8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8016b98:	45e2      	cmp	sl, ip
 8016b9a:	dd2d      	ble.n	8016bf8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8016b9c:	2c00      	cmp	r4, #0
 8016b9e:	db29      	blt.n	8016bf4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8016ba0:	42a3      	cmp	r3, r4
 8016ba2:	dd27      	ble.n	8016bf4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8016ba4:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8016ba8:	1c62      	adds	r2, r4, #1
 8016baa:	d428      	bmi.n	8016bfe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8016bac:	4293      	cmp	r3, r2
 8016bae:	dd26      	ble.n	8016bfe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8016bb0:	b32f      	cbz	r7, 8016bfe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8016bb2:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8016bb6:	f11c 0c01 	adds.w	ip, ip, #1
 8016bba:	d424      	bmi.n	8016c06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8016bbc:	45e2      	cmp	sl, ip
 8016bbe:	dd22      	ble.n	8016c06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8016bc0:	2e00      	cmp	r6, #0
 8016bc2:	f000 809c 	beq.w	8016cfe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 8016bc6:	2c00      	cmp	r4, #0
 8016bc8:	db1b      	blt.n	8016c02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8016bca:	42a3      	cmp	r3, r4
 8016bcc:	dd19      	ble.n	8016c02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8016bce:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8016bd2:	3401      	adds	r4, #1
 8016bd4:	d41a      	bmi.n	8016c0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8016bd6:	42a3      	cmp	r3, r4
 8016bd8:	dd18      	ble.n	8016c0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8016bda:	b1cf      	cbz	r7, 8016c10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8016bdc:	3301      	adds	r3, #1
 8016bde:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8016be2:	2f0f      	cmp	r7, #15
 8016be4:	d915      	bls.n	8016c12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8016be6:	4b49      	ldr	r3, [pc, #292]	; (8016d0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8016be8:	4a49      	ldr	r2, [pc, #292]	; (8016d10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8016bea:	484a      	ldr	r0, [pc, #296]	; (8016d14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8016bec:	f240 11ef 	movw	r1, #495	; 0x1ef
 8016bf0:	f002 ff56 	bl	8019aa0 <__assert_func>
 8016bf4:	4681      	mov	r9, r0
 8016bf6:	e7d7      	b.n	8016ba8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8016bf8:	4686      	mov	lr, r0
 8016bfa:	4681      	mov	r9, r0
 8016bfc:	e7db      	b.n	8016bb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8016bfe:	4686      	mov	lr, r0
 8016c00:	e7d9      	b.n	8016bb6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8016c02:	4684      	mov	ip, r0
 8016c04:	e7e5      	b.n	8016bd2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8016c06:	4603      	mov	r3, r0
 8016c08:	4684      	mov	ip, r0
 8016c0a:	e7ea      	b.n	8016be2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8016c0c:	4603      	mov	r3, r0
 8016c0e:	e7e8      	b.n	8016be2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8016c10:	4603      	mov	r3, r0
 8016c12:	2e0f      	cmp	r6, #15
 8016c14:	d8e7      	bhi.n	8016be6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8016c16:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8016c1a:	fb17 f806 	smulbb	r8, r7, r6
 8016c1e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8016c22:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8016c26:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016c2a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8016c2e:	ea44 0909 	orr.w	r9, r4, r9
 8016c32:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016c36:	f1c6 0410 	rsb	r4, r6, #16
 8016c3a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016c3e:	1be4      	subs	r4, r4, r7
 8016c40:	041a      	lsls	r2, r3, #16
 8016c42:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8016c46:	ea4a 0e0e 	orr.w	lr, sl, lr
 8016c4a:	fb07 fe0e 	mul.w	lr, r7, lr
 8016c4e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016c52:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8016c56:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016c5a:	fb04 e409 	mla	r4, r4, r9, lr
 8016c5e:	4313      	orrs	r3, r2
 8016c60:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8016c64:	fb08 4303 	mla	r3, r8, r3, r4
 8016c68:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016c6c:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8016c70:	4322      	orrs	r2, r4
 8016c72:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8016c76:	fb06 3202 	mla	r2, r6, r2, r3
 8016c7a:	0d53      	lsrs	r3, r2, #21
 8016c7c:	0952      	lsrs	r2, r2, #5
 8016c7e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016c82:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016c86:	431a      	orrs	r2, r3
 8016c88:	b293      	uxth	r3, r2
 8016c8a:	b2af      	uxth	r7, r5
 8016c8c:	1202      	asrs	r2, r0, #8
 8016c8e:	43ed      	mvns	r5, r5
 8016c90:	b2ed      	uxtb	r5, r5
 8016c92:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8016c96:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016c9a:	fb12 f205 	smulbb	r2, r2, r5
 8016c9e:	10c6      	asrs	r6, r0, #3
 8016ca0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016ca4:	fb0c 2c07 	mla	ip, ip, r7, r2
 8016ca8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016cac:	10da      	asrs	r2, r3, #3
 8016cae:	fb16 f605 	smulbb	r6, r6, r5
 8016cb2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016cb6:	fb02 6207 	mla	r2, r2, r7, r6
 8016cba:	b296      	uxth	r6, r2
 8016cbc:	00c2      	lsls	r2, r0, #3
 8016cbe:	00dc      	lsls	r4, r3, #3
 8016cc0:	b2d2      	uxtb	r2, r2
 8016cc2:	b2e4      	uxtb	r4, r4
 8016cc4:	fb12 f205 	smulbb	r2, r2, r5
 8016cc8:	fb04 2207 	mla	r2, r4, r7, r2
 8016ccc:	fa1f fc8c 	uxth.w	ip, ip
 8016cd0:	b292      	uxth	r2, r2
 8016cd2:	f10c 0301 	add.w	r3, ip, #1
 8016cd6:	1c50      	adds	r0, r2, #1
 8016cd8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8016cdc:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8016ce0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016ce4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8016ce8:	4313      	orrs	r3, r2
 8016cea:	1c72      	adds	r2, r6, #1
 8016cec:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8016cf0:	0952      	lsrs	r2, r2, #5
 8016cf2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016cf6:	4313      	orrs	r3, r2
 8016cf8:	800b      	strh	r3, [r1, #0]
 8016cfa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016cfe:	2f0f      	cmp	r7, #15
 8016d00:	f63f af71 	bhi.w	8016be6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8016d04:	4603      	mov	r3, r0
 8016d06:	4684      	mov	ip, r0
 8016d08:	e785      	b.n	8016c16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8016d0a:	bf00      	nop
 8016d0c:	0801d6d1 	.word	0x0801d6d1
 8016d10:	0801dcd2 	.word	0x0801dcd2
 8016d14:	0801d759 	.word	0x0801d759

08016d18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8016d18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d1c:	ed2d 8b08 	vpush	{d8-d11}
 8016d20:	b095      	sub	sp, #84	; 0x54
 8016d22:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8016d26:	9306      	str	r3, [sp, #24]
 8016d28:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8016d2c:	9212      	str	r2, [sp, #72]	; 0x48
 8016d2e:	9307      	str	r3, [sp, #28]
 8016d30:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016d32:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8016d36:	930c      	str	r3, [sp, #48]	; 0x30
 8016d38:	910b      	str	r1, [sp, #44]	; 0x2c
 8016d3a:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8016d3e:	9013      	str	r0, [sp, #76]	; 0x4c
 8016d40:	6850      	ldr	r0, [r2, #4]
 8016d42:	6812      	ldr	r2, [r2, #0]
 8016d44:	f9bd 70b8 	ldrsh.w	r7, [sp, #184]	; 0xb8
 8016d48:	fb00 1303 	mla	r3, r0, r3, r1
 8016d4c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8016d50:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016d52:	681b      	ldr	r3, [r3, #0]
 8016d54:	9309      	str	r3, [sp, #36]	; 0x24
 8016d56:	007b      	lsls	r3, r7, #1
 8016d58:	930a      	str	r3, [sp, #40]	; 0x28
 8016d5a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016d5c:	43db      	mvns	r3, r3
 8016d5e:	b2db      	uxtb	r3, r3
 8016d60:	eeb0 aa40 	vmov.f32	s20, s0
 8016d64:	eef0 9a60 	vmov.f32	s19, s1
 8016d68:	eeb0 9a41 	vmov.f32	s18, s2
 8016d6c:	eeb0 8a62 	vmov.f32	s16, s5
 8016d70:	eef0 8a43 	vmov.f32	s17, s6
 8016d74:	eef0 ba44 	vmov.f32	s23, s8
 8016d78:	eeb0 ba64 	vmov.f32	s22, s9
 8016d7c:	eef0 aa45 	vmov.f32	s21, s10
 8016d80:	9308      	str	r3, [sp, #32]
 8016d82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016d84:	2b00      	cmp	r3, #0
 8016d86:	dc03      	bgt.n	8016d90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8016d88:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016d8a:	2b00      	cmp	r3, #0
 8016d8c:	f340 81f3 	ble.w	8017176 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8016d90:	9b06      	ldr	r3, [sp, #24]
 8016d92:	2b00      	cmp	r3, #0
 8016d94:	f340 80fa 	ble.w	8016f8c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8016d98:	1422      	asrs	r2, r4, #16
 8016d9a:	ea4f 4326 	mov.w	r3, r6, asr #16
 8016d9e:	d42b      	bmi.n	8016df8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8016da0:	1c51      	adds	r1, r2, #1
 8016da2:	428f      	cmp	r7, r1
 8016da4:	dd2b      	ble.n	8016dfe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8016da6:	2b00      	cmp	r3, #0
 8016da8:	db29      	blt.n	8016dfe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8016daa:	9807      	ldr	r0, [sp, #28]
 8016dac:	1c59      	adds	r1, r3, #1
 8016dae:	4288      	cmp	r0, r1
 8016db0:	dd25      	ble.n	8016dfe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8016db2:	9b06      	ldr	r3, [sp, #24]
 8016db4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016db6:	3b01      	subs	r3, #1
 8016db8:	fb02 4203 	mla	r2, r2, r3, r4
 8016dbc:	1412      	asrs	r2, r2, #16
 8016dbe:	d428      	bmi.n	8016e12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8016dc0:	3201      	adds	r2, #1
 8016dc2:	4297      	cmp	r7, r2
 8016dc4:	dd25      	ble.n	8016e12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8016dc6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016dc8:	fb02 6303 	mla	r3, r2, r3, r6
 8016dcc:	141b      	asrs	r3, r3, #16
 8016dce:	d420      	bmi.n	8016e12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8016dd0:	9a07      	ldr	r2, [sp, #28]
 8016dd2:	3301      	adds	r3, #1
 8016dd4:	429a      	cmp	r2, r3
 8016dd6:	dd1c      	ble.n	8016e12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8016dd8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8016ddc:	f8bd a030 	ldrh.w	sl, [sp, #48]	; 0x30
 8016de0:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8016de4:	f1b8 0f00 	cmp.w	r8, #0
 8016de8:	f300 8129 	bgt.w	801703e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x326>
 8016dec:	9b06      	ldr	r3, [sp, #24]
 8016dee:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8016df2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8016df6:	e0cb      	b.n	8016f90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x278>
 8016df8:	1c51      	adds	r1, r2, #1
 8016dfa:	f040 80bd 	bne.w	8016f78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8016dfe:	42ba      	cmp	r2, r7
 8016e00:	f280 80ba 	bge.w	8016f78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8016e04:	1c5a      	adds	r2, r3, #1
 8016e06:	f2c0 80b7 	blt.w	8016f78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8016e0a:	9a07      	ldr	r2, [sp, #28]
 8016e0c:	4293      	cmp	r3, r2
 8016e0e:	f280 80b3 	bge.w	8016f78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8016e12:	f8dd b018 	ldr.w	fp, [sp, #24]
 8016e16:	46c8      	mov	r8, r9
 8016e18:	f1bb 0f00 	cmp.w	fp, #0
 8016e1c:	dde6      	ble.n	8016dec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8016e1e:	1421      	asrs	r1, r4, #16
 8016e20:	ea4f 4226 	mov.w	r2, r6, asr #16
 8016e24:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8016e28:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8016e2c:	f100 80ef 	bmi.w	801700e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8016e30:	f101 0c01 	add.w	ip, r1, #1
 8016e34:	4567      	cmp	r7, ip
 8016e36:	f340 80ec 	ble.w	8017012 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8016e3a:	2a00      	cmp	r2, #0
 8016e3c:	f2c0 80e9 	blt.w	8017012 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8016e40:	9d07      	ldr	r5, [sp, #28]
 8016e42:	f102 0c01 	add.w	ip, r2, #1
 8016e46:	4565      	cmp	r5, ip
 8016e48:	f340 80e3 	ble.w	8017012 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8016e4c:	fb02 1207 	mla	r2, r2, r7, r1
 8016e50:	9909      	ldr	r1, [sp, #36]	; 0x24
 8016e52:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8016e56:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8016e5a:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8016e5e:	b138      	cbz	r0, 8016e70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x158>
 8016e60:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016e62:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8016e64:	4472      	add	r2, lr
 8016e66:	f83e 5005 	ldrh.w	r5, [lr, r5]
 8016e6a:	8852      	ldrh	r2, [r2, #2]
 8016e6c:	950e      	str	r5, [sp, #56]	; 0x38
 8016e6e:	920f      	str	r2, [sp, #60]	; 0x3c
 8016e70:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8016e74:	fb13 f200 	smulbb	r2, r3, r0
 8016e78:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016e7c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8016e80:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016e84:	10d2      	asrs	r2, r2, #3
 8016e86:	ea4e 0c0c 	orr.w	ip, lr, ip
 8016e8a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016e8e:	f1c0 0e10 	rsb	lr, r0, #16
 8016e92:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016e96:	ebae 0e03 	sub.w	lr, lr, r3
 8016e9a:	ea4a 0101 	orr.w	r1, sl, r1
 8016e9e:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8016ea2:	4359      	muls	r1, r3
 8016ea4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016ea6:	9d08      	ldr	r5, [sp, #32]
 8016ea8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8016eac:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8016eb0:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016eb4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016eb8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016ebc:	ea4c 0c03 	orr.w	ip, ip, r3
 8016ec0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016ec2:	990e      	ldr	r1, [sp, #56]	; 0x38
 8016ec4:	041b      	lsls	r3, r3, #16
 8016ec6:	fb02 ec0c 	mla	ip, r2, ip, lr
 8016eca:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016ece:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8016ed2:	ea43 030e 	orr.w	r3, r3, lr
 8016ed6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8016eda:	fb02 c203 	mla	r2, r2, r3, ip
 8016ede:	0d53      	lsrs	r3, r2, #21
 8016ee0:	0952      	lsrs	r2, r2, #5
 8016ee2:	f8b8 c000 	ldrh.w	ip, [r8]
 8016ee6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016eea:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016eee:	431a      	orrs	r2, r3
 8016ef0:	b292      	uxth	r2, r2
 8016ef2:	ea4f 212c 	mov.w	r1, ip, asr #8
 8016ef6:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8016efa:	1210      	asrs	r0, r2, #8
 8016efc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016f00:	fb11 f105 	smulbb	r1, r1, r5
 8016f04:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8016f08:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016f0c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016f10:	fb00 1003 	mla	r0, r0, r3, r1
 8016f14:	fa5f fc8c 	uxtb.w	ip, ip
 8016f18:	10d1      	asrs	r1, r2, #3
 8016f1a:	00d2      	lsls	r2, r2, #3
 8016f1c:	fb1c fc05 	smulbb	ip, ip, r5
 8016f20:	b2d2      	uxtb	r2, r2
 8016f22:	fb02 c203 	mla	r2, r2, r3, ip
 8016f26:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8016f2a:	b280      	uxth	r0, r0
 8016f2c:	b292      	uxth	r2, r2
 8016f2e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016f32:	fb1e fe05 	smulbb	lr, lr, r5
 8016f36:	fb01 e103 	mla	r1, r1, r3, lr
 8016f3a:	f102 0c01 	add.w	ip, r2, #1
 8016f3e:	1c43      	adds	r3, r0, #1
 8016f40:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016f44:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016f48:	b289      	uxth	r1, r1
 8016f4a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016f4e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8016f52:	4313      	orrs	r3, r2
 8016f54:	1c4a      	adds	r2, r1, #1
 8016f56:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016f5a:	0949      	lsrs	r1, r1, #5
 8016f5c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016f60:	430b      	orrs	r3, r1
 8016f62:	f8a8 3000 	strh.w	r3, [r8]
 8016f66:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016f68:	441c      	add	r4, r3
 8016f6a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016f6c:	f108 0802 	add.w	r8, r8, #2
 8016f70:	441e      	add	r6, r3
 8016f72:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 8016f76:	e74f      	b.n	8016e18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8016f78:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016f7a:	441c      	add	r4, r3
 8016f7c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016f7e:	441e      	add	r6, r3
 8016f80:	9b06      	ldr	r3, [sp, #24]
 8016f82:	3b01      	subs	r3, #1
 8016f84:	9306      	str	r3, [sp, #24]
 8016f86:	f109 0902 	add.w	r9, r9, #2
 8016f8a:	e701      	b.n	8016d90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8016f8c:	f47f af11 	bne.w	8016db2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8016f90:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016f92:	2b00      	cmp	r3, #0
 8016f94:	f340 80ef 	ble.w	8017176 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8016f98:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016f9c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016fa0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016fa4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016fa6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016faa:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016fae:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016fb2:	eef0 6a48 	vmov.f32	s13, s16
 8016fb6:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016fba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016fbe:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016fc2:	ee16 4a90 	vmov	r4, s13
 8016fc6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016fca:	eef0 6a68 	vmov.f32	s13, s17
 8016fce:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016fd2:	ee18 2a10 	vmov	r2, s16
 8016fd6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016fda:	fb92 f3f3 	sdiv	r3, r2, r3
 8016fde:	ee18 2a90 	vmov	r2, s17
 8016fe2:	9329      	str	r3, [sp, #164]	; 0xa4
 8016fe4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016fe6:	fb92 f3f3 	sdiv	r3, r2, r3
 8016fea:	932a      	str	r3, [sp, #168]	; 0xa8
 8016fec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016fee:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016ff0:	3b01      	subs	r3, #1
 8016ff2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016ff6:	930b      	str	r3, [sp, #44]	; 0x2c
 8016ff8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016ffa:	bf08      	it	eq
 8016ffc:	4613      	moveq	r3, r2
 8016ffe:	ee16 6a90 	vmov	r6, s13
 8017002:	9306      	str	r3, [sp, #24]
 8017004:	eef0 8a67 	vmov.f32	s17, s15
 8017008:	eeb0 8a47 	vmov.f32	s16, s14
 801700c:	e6b9      	b.n	8016d82 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801700e:	1c4d      	adds	r5, r1, #1
 8017010:	d1a9      	bne.n	8016f66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017012:	428f      	cmp	r7, r1
 8017014:	dda7      	ble.n	8016f66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017016:	1c55      	adds	r5, r2, #1
 8017018:	dba5      	blt.n	8016f66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 801701a:	9d07      	ldr	r5, [sp, #28]
 801701c:	4295      	cmp	r5, r2
 801701e:	dda2      	ble.n	8016f66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8017020:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017022:	9101      	str	r1, [sp, #4]
 8017024:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8017028:	9b07      	ldr	r3, [sp, #28]
 801702a:	9300      	str	r3, [sp, #0]
 801702c:	e9cd 0504 	strd	r0, r5, [sp, #16]
 8017030:	463b      	mov	r3, r7
 8017032:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017034:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017036:	4641      	mov	r1, r8
 8017038:	f7ff fd9a 	bl	8016b70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801703c:	e793      	b.n	8016f66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 801703e:	1422      	asrs	r2, r4, #16
 8017040:	1431      	asrs	r1, r6, #16
 8017042:	fb07 2101 	mla	r1, r7, r1, r2
 8017046:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017048:	9809      	ldr	r0, [sp, #36]	; 0x24
 801704a:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 801704e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8017052:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8017056:	8851      	ldrh	r1, [r2, #2]
 8017058:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801705c:	f1be 0f00 	cmp.w	lr, #0
 8017060:	d006      	beq.n	8017070 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 8017062:	980a      	ldr	r0, [sp, #40]	; 0x28
 8017064:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8017066:	1810      	adds	r0, r2, r0
 8017068:	5b52      	ldrh	r2, [r2, r5]
 801706a:	9210      	str	r2, [sp, #64]	; 0x40
 801706c:	8842      	ldrh	r2, [r0, #2]
 801706e:	9211      	str	r2, [sp, #68]	; 0x44
 8017070:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8017074:	fb13 f20e 	smulbb	r2, r3, lr
 8017078:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801707c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017080:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017084:	10d2      	asrs	r2, r2, #3
 8017086:	ea40 000c 	orr.w	r0, r0, ip
 801708a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801708e:	f1ce 0c10 	rsb	ip, lr, #16
 8017092:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017096:	ebac 0c03 	sub.w	ip, ip, r3
 801709a:	ea4b 0101 	orr.w	r1, fp, r1
 801709e:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 80170a2:	4359      	muls	r1, r3
 80170a4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80170a6:	9d08      	ldr	r5, [sp, #32]
 80170a8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80170ac:	fb0c 1c00 	mla	ip, ip, r0, r1
 80170b0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80170b4:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 80170b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80170ba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80170be:	ea4b 0000 	orr.w	r0, fp, r0
 80170c2:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80170c6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80170ca:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80170ce:	fb02 c000 	mla	r0, r2, r0, ip
 80170d2:	ea4b 0b03 	orr.w	fp, fp, r3
 80170d6:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 80170da:	fb02 0b0b 	mla	fp, r2, fp, r0
 80170de:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80170e0:	ea4f 515b 	mov.w	r1, fp, lsr #21
 80170e4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80170e8:	8812      	ldrh	r2, [r2, #0]
 80170ea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80170ee:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80170f2:	ea41 0b0b 	orr.w	fp, r1, fp
 80170f6:	fa1f f38b 	uxth.w	r3, fp
 80170fa:	1211      	asrs	r1, r2, #8
 80170fc:	1218      	asrs	r0, r3, #8
 80170fe:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017102:	fb11 f105 	smulbb	r1, r1, r5
 8017106:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801710a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801710e:	00d2      	lsls	r2, r2, #3
 8017110:	fb00 100a 	mla	r0, r0, sl, r1
 8017114:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8017118:	10d9      	asrs	r1, r3, #3
 801711a:	b2d2      	uxtb	r2, r2
 801711c:	00db      	lsls	r3, r3, #3
 801711e:	fb1c fc05 	smulbb	ip, ip, r5
 8017122:	fb12 f205 	smulbb	r2, r2, r5
 8017126:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801712a:	b2db      	uxtb	r3, r3
 801712c:	b280      	uxth	r0, r0
 801712e:	fb01 c10a 	mla	r1, r1, sl, ip
 8017132:	fb03 230a 	mla	r3, r3, sl, r2
 8017136:	b29b      	uxth	r3, r3
 8017138:	b289      	uxth	r1, r1
 801713a:	1c42      	adds	r2, r0, #1
 801713c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8017140:	f101 0c01 	add.w	ip, r1, #1
 8017144:	1c5a      	adds	r2, r3, #1
 8017146:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801714a:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 801714e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8017152:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017156:	0949      	lsrs	r1, r1, #5
 8017158:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801715a:	4310      	orrs	r0, r2
 801715c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017160:	4308      	orrs	r0, r1
 8017162:	f823 0b02 	strh.w	r0, [r3], #2
 8017166:	930d      	str	r3, [sp, #52]	; 0x34
 8017168:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801716a:	441c      	add	r4, r3
 801716c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801716e:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8017172:	441e      	add	r6, r3
 8017174:	e636      	b.n	8016de4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8017176:	b015      	add	sp, #84	; 0x54
 8017178:	ecbd 8b08 	vpop	{d8-d11}
 801717c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017180 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8017180:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017184:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8017188:	fb06 5c03 	mla	ip, r6, r3, r5
 801718c:	2e00      	cmp	r6, #0
 801718e:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8017192:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8017196:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 801719a:	8808      	ldrh	r0, [r1, #0]
 801719c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80171a0:	db2e      	blt.n	8017200 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 80171a2:	45b0      	cmp	r8, r6
 80171a4:	dd2c      	ble.n	8017200 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 80171a6:	2d00      	cmp	r5, #0
 80171a8:	db28      	blt.n	80171fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80171aa:	42ab      	cmp	r3, r5
 80171ac:	dd26      	ble.n	80171fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80171ae:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 80171b2:	1c6a      	adds	r2, r5, #1
 80171b4:	d427      	bmi.n	8017206 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80171b6:	4293      	cmp	r3, r2
 80171b8:	dd25      	ble.n	8017206 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80171ba:	b324      	cbz	r4, 8017206 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80171bc:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80171c0:	3601      	adds	r6, #1
 80171c2:	d424      	bmi.n	801720e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80171c4:	45b0      	cmp	r8, r6
 80171c6:	dd22      	ble.n	801720e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80171c8:	b31f      	cbz	r7, 8017212 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 80171ca:	2d00      	cmp	r5, #0
 80171cc:	db1d      	blt.n	801720a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80171ce:	42ab      	cmp	r3, r5
 80171d0:	dd1b      	ble.n	801720a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80171d2:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 80171d6:	3501      	adds	r5, #1
 80171d8:	d405      	bmi.n	80171e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80171da:	42ab      	cmp	r3, r5
 80171dc:	dd03      	ble.n	80171e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80171de:	b124      	cbz	r4, 80171ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 80171e0:	3301      	adds	r3, #1
 80171e2:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 80171e6:	2c0f      	cmp	r4, #15
 80171e8:	d801      	bhi.n	80171ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80171ea:	2f0f      	cmp	r7, #15
 80171ec:	d914      	bls.n	8017218 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 80171ee:	4b27      	ldr	r3, [pc, #156]	; (801728c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 80171f0:	4a27      	ldr	r2, [pc, #156]	; (8017290 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 80171f2:	4828      	ldr	r0, [pc, #160]	; (8017294 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 80171f4:	f240 11ef 	movw	r1, #495	; 0x1ef
 80171f8:	f002 fc52 	bl	8019aa0 <__assert_func>
 80171fc:	4684      	mov	ip, r0
 80171fe:	e7d8      	b.n	80171b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8017200:	4602      	mov	r2, r0
 8017202:	4684      	mov	ip, r0
 8017204:	e7dc      	b.n	80171c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8017206:	4602      	mov	r2, r0
 8017208:	e7da      	b.n	80171c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801720a:	4606      	mov	r6, r0
 801720c:	e7e3      	b.n	80171d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 801720e:	4606      	mov	r6, r0
 8017210:	e7e9      	b.n	80171e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8017212:	2c0f      	cmp	r4, #15
 8017214:	d8eb      	bhi.n	80171ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8017216:	4606      	mov	r6, r0
 8017218:	ea4f 450c 	mov.w	r5, ip, lsl #16
 801721c:	fb14 f307 	smulbb	r3, r4, r7
 8017220:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8017224:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8017228:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801722c:	10db      	asrs	r3, r3, #3
 801722e:	ea45 0c0c 	orr.w	ip, r5, ip
 8017232:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017236:	f1c7 0510 	rsb	r5, r7, #16
 801723a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801723e:	1b2d      	subs	r5, r5, r4
 8017240:	ea4e 0202 	orr.w	r2, lr, r2
 8017244:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8017248:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801724c:	4354      	muls	r4, r2
 801724e:	fb05 450c 	mla	r5, r5, ip, r4
 8017252:	0404      	lsls	r4, r0, #16
 8017254:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8017258:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801725c:	4320      	orrs	r0, r4
 801725e:	fb03 5400 	mla	r4, r3, r0, r5
 8017262:	0430      	lsls	r0, r6, #16
 8017264:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8017268:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801726c:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8017270:	4330      	orrs	r0, r6
 8017272:	fb07 4000 	mla	r0, r7, r0, r4
 8017276:	0d43      	lsrs	r3, r0, #21
 8017278:	0940      	lsrs	r0, r0, #5
 801727a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801727e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017282:	4318      	orrs	r0, r3
 8017284:	8008      	strh	r0, [r1, #0]
 8017286:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801728a:	bf00      	nop
 801728c:	0801d6d1 	.word	0x0801d6d1
 8017290:	0801dcd2 	.word	0x0801dcd2
 8017294:	0801d759 	.word	0x0801d759

08017298 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801729c:	ed2d 8b0a 	vpush	{d8-d12}
 80172a0:	b093      	sub	sp, #76	; 0x4c
 80172a2:	461d      	mov	r5, r3
 80172a4:	9210      	str	r2, [sp, #64]	; 0x40
 80172a6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80172a8:	f9bd 20bc 	ldrsh.w	r2, [sp, #188]	; 0xbc
 80172ac:	9208      	str	r2, [sp, #32]
 80172ae:	e9dd 272c 	ldrd	r2, r7, [sp, #176]	; 0xb0
 80172b2:	910b      	str	r1, [sp, #44]	; 0x2c
 80172b4:	6859      	ldr	r1, [r3, #4]
 80172b6:	681b      	ldr	r3, [r3, #0]
 80172b8:	f9bd 80b8 	ldrsh.w	r8, [sp, #184]	; 0xb8
 80172bc:	9011      	str	r0, [sp, #68]	; 0x44
 80172be:	fb01 2707 	mla	r7, r1, r7, r2
 80172c2:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80172c6:	9307      	str	r3, [sp, #28]
 80172c8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80172ca:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80172ce:	681b      	ldr	r3, [r3, #0]
 80172d0:	9309      	str	r3, [sp, #36]	; 0x24
 80172d2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80172d6:	eeb0 aa40 	vmov.f32	s20, s0
 80172da:	eef0 9a60 	vmov.f32	s19, s1
 80172de:	eeb0 9a41 	vmov.f32	s18, s2
 80172e2:	eeb0 8a62 	vmov.f32	s16, s5
 80172e6:	eef0 8a43 	vmov.f32	s17, s6
 80172ea:	eeb0 ca44 	vmov.f32	s24, s8
 80172ee:	eef0 ba64 	vmov.f32	s23, s9
 80172f2:	eeb0 ba45 	vmov.f32	s22, s10
 80172f6:	930a      	str	r3, [sp, #40]	; 0x28
 80172f8:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 80172fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80172fe:	2b00      	cmp	r3, #0
 8017300:	dc03      	bgt.n	801730a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8017302:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017304:	2b00      	cmp	r3, #0
 8017306:	f340 816c 	ble.w	80175e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 801730a:	2d00      	cmp	r5, #0
 801730c:	f340 80b6 	ble.w	801747c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8017310:	1422      	asrs	r2, r4, #16
 8017312:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017316:	d428      	bmi.n	801736a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd2>
 8017318:	1c51      	adds	r1, r2, #1
 801731a:	4588      	cmp	r8, r1
 801731c:	dd27      	ble.n	801736e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801731e:	2b00      	cmp	r3, #0
 8017320:	db25      	blt.n	801736e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8017322:	9808      	ldr	r0, [sp, #32]
 8017324:	1c59      	adds	r1, r3, #1
 8017326:	4288      	cmp	r0, r1
 8017328:	dd21      	ble.n	801736e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801732a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801732c:	1e6b      	subs	r3, r5, #1
 801732e:	fb02 4203 	mla	r2, r2, r3, r4
 8017332:	1412      	asrs	r2, r2, #16
 8017334:	d422      	bmi.n	801737c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8017336:	3201      	adds	r2, #1
 8017338:	4590      	cmp	r8, r2
 801733a:	dd1f      	ble.n	801737c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801733c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801733e:	fb02 6303 	mla	r3, r2, r3, r6
 8017342:	141b      	asrs	r3, r3, #16
 8017344:	d41a      	bmi.n	801737c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8017346:	9a08      	ldr	r2, [sp, #32]
 8017348:	3301      	adds	r3, #1
 801734a:	429a      	cmp	r2, r3
 801734c:	dd16      	ble.n	801737c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801734e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8017352:	46a9      	mov	r9, r5
 8017354:	f1b9 0f00 	cmp.w	r9, #0
 8017358:	f300 80e4 	bgt.w	8017524 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 801735c:	9b07      	ldr	r3, [sp, #28]
 801735e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8017362:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8017366:	9307      	str	r3, [sp, #28]
 8017368:	e08a      	b.n	8017480 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 801736a:	1c51      	adds	r1, r2, #1
 801736c:	d17d      	bne.n	801746a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 801736e:	4542      	cmp	r2, r8
 8017370:	da7b      	bge.n	801746a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8017372:	1c5a      	adds	r2, r3, #1
 8017374:	db79      	blt.n	801746a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8017376:	9a08      	ldr	r2, [sp, #32]
 8017378:	4293      	cmp	r3, r2
 801737a:	da76      	bge.n	801746a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 801737c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8017380:	46aa      	mov	sl, r5
 8017382:	f1ba 0f00 	cmp.w	sl, #0
 8017386:	dde9      	ble.n	801735c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8017388:	1421      	asrs	r1, r4, #16
 801738a:	ea4f 4226 	mov.w	r2, r6, asr #16
 801738e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8017392:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8017396:	f100 80b0 	bmi.w	80174fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x262>
 801739a:	f101 0c01 	add.w	ip, r1, #1
 801739e:	45e0      	cmp	r8, ip
 80173a0:	f340 80ad 	ble.w	80174fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 80173a4:	2a00      	cmp	r2, #0
 80173a6:	f2c0 80aa 	blt.w	80174fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 80173aa:	9f08      	ldr	r7, [sp, #32]
 80173ac:	f102 0c01 	add.w	ip, r2, #1
 80173b0:	4567      	cmp	r7, ip
 80173b2:	f340 80a4 	ble.w	80174fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 80173b6:	fb02 1208 	mla	r2, r2, r8, r1
 80173ba:	9909      	ldr	r1, [sp, #36]	; 0x24
 80173bc:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 80173c0:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 80173c4:	f8be 1002 	ldrh.w	r1, [lr, #2]
 80173c8:	b138      	cbz	r0, 80173da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x142>
 80173ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80173cc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80173ce:	4472      	add	r2, lr
 80173d0:	f83e 7007 	ldrh.w	r7, [lr, r7]
 80173d4:	8852      	ldrh	r2, [r2, #2]
 80173d6:	970c      	str	r7, [sp, #48]	; 0x30
 80173d8:	920d      	str	r2, [sp, #52]	; 0x34
 80173da:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 80173de:	fb13 f200 	smulbb	r2, r3, r0
 80173e2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80173e6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80173ea:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80173ee:	10d2      	asrs	r2, r2, #3
 80173f0:	ea4e 0c0c 	orr.w	ip, lr, ip
 80173f4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80173f8:	f1c0 0e10 	rsb	lr, r0, #16
 80173fc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017400:	ebae 0e03 	sub.w	lr, lr, r3
 8017404:	ea4b 0101 	orr.w	r1, fp, r1
 8017408:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 801740c:	4359      	muls	r1, r3
 801740e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017410:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8017414:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8017418:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801741c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017420:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017424:	ea4c 0c03 	orr.w	ip, ip, r3
 8017428:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801742a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801742c:	041b      	lsls	r3, r3, #16
 801742e:	fb02 ec0c 	mla	ip, r2, ip, lr
 8017432:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8017436:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801743a:	ea43 030e 	orr.w	r3, r3, lr
 801743e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8017442:	fb02 c203 	mla	r2, r2, r3, ip
 8017446:	0d53      	lsrs	r3, r2, #21
 8017448:	0952      	lsrs	r2, r2, #5
 801744a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801744e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017452:	431a      	orrs	r2, r3
 8017454:	f8a9 2000 	strh.w	r2, [r9]
 8017458:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801745a:	441c      	add	r4, r3
 801745c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801745e:	f109 0902 	add.w	r9, r9, #2
 8017462:	441e      	add	r6, r3
 8017464:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8017468:	e78b      	b.n	8017382 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 801746a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801746c:	441c      	add	r4, r3
 801746e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017470:	441e      	add	r6, r3
 8017472:	9b07      	ldr	r3, [sp, #28]
 8017474:	3302      	adds	r3, #2
 8017476:	3d01      	subs	r5, #1
 8017478:	9307      	str	r3, [sp, #28]
 801747a:	e746      	b.n	801730a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 801747c:	f47f af55 	bne.w	801732a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8017480:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017482:	2b00      	cmp	r3, #0
 8017484:	f340 80ad 	ble.w	80175e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8017488:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801748c:	ee79 9aab 	vadd.f32	s19, s19, s23
 8017490:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8017494:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017496:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801749a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801749e:	eef0 6a48 	vmov.f32	s13, s16
 80174a2:	ee69 7a27 	vmul.f32	s15, s18, s15
 80174a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80174aa:	ee37 8a48 	vsub.f32	s16, s14, s16
 80174ae:	ee16 4a90 	vmov	r4, s13
 80174b2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80174b6:	eef0 6a68 	vmov.f32	s13, s17
 80174ba:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80174be:	ee18 2a10 	vmov	r2, s16
 80174c2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80174c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80174ca:	ee18 2a90 	vmov	r2, s17
 80174ce:	9329      	str	r3, [sp, #164]	; 0xa4
 80174d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80174d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80174d6:	932a      	str	r3, [sp, #168]	; 0xa8
 80174d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80174da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80174dc:	3b01      	subs	r3, #1
 80174de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80174e2:	930b      	str	r3, [sp, #44]	; 0x2c
 80174e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80174e6:	ee16 6a90 	vmov	r6, s13
 80174ea:	bf14      	ite	ne
 80174ec:	461d      	movne	r5, r3
 80174ee:	4615      	moveq	r5, r2
 80174f0:	eef0 8a67 	vmov.f32	s17, s15
 80174f4:	eeb0 8a47 	vmov.f32	s16, s14
 80174f8:	e700      	b.n	80172fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 80174fa:	1c4f      	adds	r7, r1, #1
 80174fc:	d1ac      	bne.n	8017458 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80174fe:	4588      	cmp	r8, r1
 8017500:	ddaa      	ble.n	8017458 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8017502:	1c57      	adds	r7, r2, #1
 8017504:	dba8      	blt.n	8017458 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8017506:	9f08      	ldr	r7, [sp, #32]
 8017508:	4297      	cmp	r7, r2
 801750a:	dda5      	ble.n	8017458 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801750c:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8017510:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8017514:	9700      	str	r7, [sp, #0]
 8017516:	4643      	mov	r3, r8
 8017518:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801751a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801751c:	4649      	mov	r1, r9
 801751e:	f7ff fe2f 	bl	8017180 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8017522:	e799      	b.n	8017458 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8017524:	1422      	asrs	r2, r4, #16
 8017526:	1431      	asrs	r1, r6, #16
 8017528:	fb08 2101 	mla	r1, r8, r1, r2
 801752c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801752e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017530:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8017534:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8017538:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 801753c:	8851      	ldrh	r1, [r2, #2]
 801753e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8017542:	f1be 0f00 	cmp.w	lr, #0
 8017546:	d006      	beq.n	8017556 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8017548:	980a      	ldr	r0, [sp, #40]	; 0x28
 801754a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801754c:	1810      	adds	r0, r2, r0
 801754e:	5bd2      	ldrh	r2, [r2, r7]
 8017550:	920e      	str	r2, [sp, #56]	; 0x38
 8017552:	8842      	ldrh	r2, [r0, #2]
 8017554:	920f      	str	r2, [sp, #60]	; 0x3c
 8017556:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801755a:	fb13 f20e 	smulbb	r2, r3, lr
 801755e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017562:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017566:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801756a:	10d2      	asrs	r2, r2, #3
 801756c:	ea40 000c 	orr.w	r0, r0, ip
 8017570:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017574:	f1ce 0c10 	rsb	ip, lr, #16
 8017578:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801757c:	ebac 0c03 	sub.w	ip, ip, r3
 8017580:	ea4a 0101 	orr.w	r1, sl, r1
 8017584:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8017588:	4359      	muls	r1, r3
 801758a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801758c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8017590:	fb0c 1c00 	mla	ip, ip, r0, r1
 8017594:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8017598:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 801759c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801759e:	990e      	ldr	r1, [sp, #56]	; 0x38
 80175a0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80175a4:	041b      	lsls	r3, r3, #16
 80175a6:	ea4a 0000 	orr.w	r0, sl, r0
 80175aa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80175ae:	f421 6afc 	bic.w	sl, r1, #2016	; 0x7e0
 80175b2:	fb02 c000 	mla	r0, r2, r0, ip
 80175b6:	ea43 0a0a 	orr.w	sl, r3, sl
 80175ba:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 80175be:	fb02 000a 	mla	r0, r2, sl, r0
 80175c2:	0d43      	lsrs	r3, r0, #21
 80175c4:	0940      	lsrs	r0, r0, #5
 80175c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80175ca:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80175ce:	4318      	orrs	r0, r3
 80175d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80175d2:	f82b 0b02 	strh.w	r0, [fp], #2
 80175d6:	441c      	add	r4, r3
 80175d8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80175da:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80175de:	441e      	add	r6, r3
 80175e0:	e6b8      	b.n	8017354 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xbc>
 80175e2:	b013      	add	sp, #76	; 0x4c
 80175e4:	ecbd 8b0a 	vpop	{d8-d12}
 80175e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080175ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80175ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80175f0:	8808      	ldrh	r0, [r1, #0]
 80175f2:	b085      	sub	sp, #20
 80175f4:	1206      	asrs	r6, r0, #8
 80175f6:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 80175fa:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80175fe:	9600      	str	r6, [sp, #0]
 8017600:	10c6      	asrs	r6, r0, #3
 8017602:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017606:	9601      	str	r6, [sp, #4]
 8017608:	00c0      	lsls	r0, r0, #3
 801760a:	fb04 c603 	mla	r6, r4, r3, ip
 801760e:	b2c0      	uxtb	r0, r0
 8017610:	4691      	mov	r9, r2
 8017612:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8017616:	9a00      	ldr	r2, [sp, #0]
 8017618:	9002      	str	r0, [sp, #8]
 801761a:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 801761e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8017622:	9a01      	ldr	r2, [sp, #4]
 8017624:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8017628:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 801762c:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8017630:	2c00      	cmp	r4, #0
 8017632:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8017636:	db3a      	blt.n	80176ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8017638:	45a0      	cmp	r8, r4
 801763a:	dd38      	ble.n	80176ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 801763c:	f1bc 0f00 	cmp.w	ip, #0
 8017640:	db33      	blt.n	80176aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8017642:	4563      	cmp	r3, ip
 8017644:	dd31      	ble.n	80176aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8017646:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 801764a:	f11c 0601 	adds.w	r6, ip, #1
 801764e:	d431      	bmi.n	80176b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8017650:	42b3      	cmp	r3, r6
 8017652:	dd2f      	ble.n	80176b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8017654:	b375      	cbz	r5, 80176b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8017656:	f8de 6004 	ldr.w	r6, [lr, #4]
 801765a:	3401      	adds	r4, #1
 801765c:	d42e      	bmi.n	80176bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801765e:	45a0      	cmp	r8, r4
 8017660:	dd2c      	ble.n	80176bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8017662:	b35f      	cbz	r7, 80176bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8017664:	f1bc 0f00 	cmp.w	ip, #0
 8017668:	db26      	blt.n	80176b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801766a:	4563      	cmp	r3, ip
 801766c:	dd24      	ble.n	80176b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801766e:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8017672:	f11c 0c01 	adds.w	ip, ip, #1
 8017676:	d405      	bmi.n	8017684 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8017678:	4563      	cmp	r3, ip
 801767a:	dd03      	ble.n	8017684 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 801767c:	b115      	cbz	r5, 8017684 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 801767e:	3301      	adds	r3, #1
 8017680:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8017684:	2d0f      	cmp	r5, #15
 8017686:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801768a:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801768e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8017692:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8017696:	d801      	bhi.n	801769c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 8017698:	2f0f      	cmp	r7, #15
 801769a:	d911      	bls.n	80176c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 801769c:	4b82      	ldr	r3, [pc, #520]	; (80178a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 801769e:	4a83      	ldr	r2, [pc, #524]	; (80178ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c0>)
 80176a0:	4883      	ldr	r0, [pc, #524]	; (80178b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c4>)
 80176a2:	f240 210d 	movw	r1, #525	; 0x20d
 80176a6:	f002 f9fb 	bl	8019aa0 <__assert_func>
 80176aa:	4602      	mov	r2, r0
 80176ac:	e7cd      	b.n	801764a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 80176ae:	4606      	mov	r6, r0
 80176b0:	4602      	mov	r2, r0
 80176b2:	e7d2      	b.n	801765a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 80176b4:	4606      	mov	r6, r0
 80176b6:	e7d0      	b.n	801765a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 80176b8:	4604      	mov	r4, r0
 80176ba:	e7da      	b.n	8017672 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x86>
 80176bc:	4604      	mov	r4, r0
 80176be:	e7e1      	b.n	8017684 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80176c0:	b2ab      	uxth	r3, r5
 80176c2:	b2bf      	uxth	r7, r7
 80176c4:	fb03 fe07 	mul.w	lr, r3, r7
 80176c8:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80176cc:	011b      	lsls	r3, r3, #4
 80176ce:	eba3 0c0e 	sub.w	ip, r3, lr
 80176d2:	b2bf      	uxth	r7, r7
 80176d4:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 80176d8:	fa1f fc8c 	uxth.w	ip, ip
 80176dc:	1bed      	subs	r5, r5, r7
 80176de:	b2ad      	uxth	r5, r5
 80176e0:	fb0c f30a 	mul.w	r3, ip, sl
 80176e4:	fb05 330b 	mla	r3, r5, fp, r3
 80176e8:	fb07 3309 	mla	r3, r7, r9, r3
 80176ec:	fb0e 3308 	mla	r3, lr, r8, r3
 80176f0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80176f4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80176f8:	9303      	str	r3, [sp, #12]
 80176fa:	d018      	beq.n	801772e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 80176fc:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8017700:	fb0b f303 	mul.w	r3, fp, r3
 8017704:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017708:	fb0b fb02 	mul.w	fp, fp, r2
 801770c:	0a1a      	lsrs	r2, r3, #8
 801770e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017712:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8017716:	441a      	add	r2, r3
 8017718:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 801771c:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8017720:	0a12      	lsrs	r2, r2, #8
 8017722:	0a1b      	lsrs	r3, r3, #8
 8017724:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017728:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801772c:	431a      	orrs	r2, r3
 801772e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017732:	d019      	beq.n	8017768 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 8017734:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8017738:	fb0a fb0b 	mul.w	fp, sl, fp
 801773c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017740:	fb0a fa06 	mul.w	sl, sl, r6
 8017744:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8017748:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801774c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017750:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8017754:	445e      	add	r6, fp
 8017756:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801775a:	0a36      	lsrs	r6, r6, #8
 801775c:	0a1b      	lsrs	r3, r3, #8
 801775e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017762:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017766:	431e      	orrs	r6, r3
 8017768:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801776c:	d019      	beq.n	80177a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 801776e:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8017772:	fb09 fa0a 	mul.w	sl, r9, sl
 8017776:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801777a:	fb09 f904 	mul.w	r9, r9, r4
 801777e:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8017782:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017786:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801778a:	f509 7380 	add.w	r3, r9, #256	; 0x100
 801778e:	4454      	add	r4, sl
 8017790:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8017794:	0a24      	lsrs	r4, r4, #8
 8017796:	0a1b      	lsrs	r3, r3, #8
 8017798:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801779c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80177a0:	431c      	orrs	r4, r3
 80177a2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80177a6:	d019      	beq.n	80177dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 80177a8:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 80177ac:	fb08 f909 	mul.w	r9, r8, r9
 80177b0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80177b4:	fb08 f800 	mul.w	r8, r8, r0
 80177b8:	ea4f 2019 	mov.w	r0, r9, lsr #8
 80177bc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80177c0:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80177c4:	f508 7380 	add.w	r3, r8, #256	; 0x100
 80177c8:	4448      	add	r0, r9
 80177ca:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80177ce:	0a00      	lsrs	r0, r0, #8
 80177d0:	0a1b      	lsrs	r3, r3, #8
 80177d2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80177d6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80177da:	4318      	orrs	r0, r3
 80177dc:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80177e0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80177e4:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80177e8:	fb0c f808 	mul.w	r8, ip, r8
 80177ec:	fb0c f606 	mul.w	r6, ip, r6
 80177f0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80177f4:	fb05 6202 	mla	r2, r5, r2, r6
 80177f8:	fb05 8803 	mla	r8, r5, r3, r8
 80177fc:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8017800:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017804:	fb07 8803 	mla	r8, r7, r3, r8
 8017808:	fb07 2704 	mla	r7, r7, r4, r2
 801780c:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8017810:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017814:	fb0e 8303 	mla	r3, lr, r3, r8
 8017818:	fb0e 7e00 	mla	lr, lr, r0, r7
 801781c:	0a1b      	lsrs	r3, r3, #8
 801781e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017822:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017826:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 801782a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801782e:	ea43 0e0e 	orr.w	lr, r3, lr
 8017832:	9b03      	ldr	r3, [sp, #12]
 8017834:	b2a4      	uxth	r4, r4
 8017836:	4363      	muls	r3, r4
 8017838:	1c5a      	adds	r2, r3, #1
 801783a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801783e:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8017842:	9b00      	ldr	r3, [sp, #0]
 8017844:	b2d2      	uxtb	r2, r2
 8017846:	ea4f 451e 	mov.w	r5, lr, lsr #16
 801784a:	fb13 f302 	smulbb	r3, r3, r2
 801784e:	fb05 3304 	mla	r3, r5, r4, r3
 8017852:	b29d      	uxth	r5, r3
 8017854:	9b01      	ldr	r3, [sp, #4]
 8017856:	f3ce 2007 	ubfx	r0, lr, #8, #8
 801785a:	fb13 f302 	smulbb	r3, r3, r2
 801785e:	fb00 3004 	mla	r0, r0, r4, r3
 8017862:	9b02      	ldr	r3, [sp, #8]
 8017864:	fa5f fe8e 	uxtb.w	lr, lr
 8017868:	fb13 f202 	smulbb	r2, r3, r2
 801786c:	fb0e 2e04 	mla	lr, lr, r4, r2
 8017870:	fa1f fe8e 	uxth.w	lr, lr
 8017874:	b280      	uxth	r0, r0
 8017876:	f10e 0201 	add.w	r2, lr, #1
 801787a:	1c6b      	adds	r3, r5, #1
 801787c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8017880:	1c42      	adds	r2, r0, #1
 8017882:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8017886:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801788a:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801788e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017892:	0952      	lsrs	r2, r2, #5
 8017894:	ea43 030e 	orr.w	r3, r3, lr
 8017898:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801789c:	4313      	orrs	r3, r2
 801789e:	800b      	strh	r3, [r1, #0]
 80178a0:	b005      	add	sp, #20
 80178a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80178a6:	bf00      	nop
 80178a8:	0801d6d1 	.word	0x0801d6d1
 80178ac:	0801dc29 	.word	0x0801dc29
 80178b0:	0801d759 	.word	0x0801d759

080178b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80178b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80178b8:	ed2d 8b08 	vpush	{d8-d11}
 80178bc:	b099      	sub	sp, #100	; 0x64
 80178be:	eeb0 aa40 	vmov.f32	s20, s0
 80178c2:	9306      	str	r3, [sp, #24]
 80178c4:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 80178c8:	9307      	str	r3, [sp, #28]
 80178ca:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 80178ce:	9216      	str	r2, [sp, #88]	; 0x58
 80178d0:	9310      	str	r3, [sp, #64]	; 0x40
 80178d2:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80178d4:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 80178d8:	9113      	str	r1, [sp, #76]	; 0x4c
 80178da:	9315      	str	r3, [sp, #84]	; 0x54
 80178dc:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 80178e0:	9017      	str	r0, [sp, #92]	; 0x5c
 80178e2:	6850      	ldr	r0, [r2, #4]
 80178e4:	6812      	ldr	r2, [r2, #0]
 80178e6:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80178e8:	fb00 1303 	mla	r3, r0, r3, r1
 80178ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80178f0:	930a      	str	r3, [sp, #40]	; 0x28
 80178f2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80178f4:	681b      	ldr	r3, [r3, #0]
 80178f6:	9312      	str	r3, [sp, #72]	; 0x48
 80178f8:	9b07      	ldr	r3, [sp, #28]
 80178fa:	009b      	lsls	r3, r3, #2
 80178fc:	eef0 9a60 	vmov.f32	s19, s1
 8017900:	eeb0 9a41 	vmov.f32	s18, s2
 8017904:	eeb0 8a62 	vmov.f32	s16, s5
 8017908:	eef0 8a43 	vmov.f32	s17, s6
 801790c:	eef0 ba44 	vmov.f32	s23, s8
 8017910:	eeb0 ba64 	vmov.f32	s22, s9
 8017914:	eef0 aa45 	vmov.f32	s21, s10
 8017918:	930e      	str	r3, [sp, #56]	; 0x38
 801791a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801791c:	2b00      	cmp	r3, #0
 801791e:	dc03      	bgt.n	8017928 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8017920:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8017922:	2b00      	cmp	r3, #0
 8017924:	f340 8352 	ble.w	8017fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8017928:	9b06      	ldr	r3, [sp, #24]
 801792a:	2b00      	cmp	r3, #0
 801792c:	f340 81a8 	ble.w	8017c80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3cc>
 8017930:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017932:	1412      	asrs	r2, r2, #16
 8017934:	ea4f 4324 	mov.w	r3, r4, asr #16
 8017938:	d430      	bmi.n	801799c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801793a:	9807      	ldr	r0, [sp, #28]
 801793c:	1c51      	adds	r1, r2, #1
 801793e:	4288      	cmp	r0, r1
 8017940:	dd2f      	ble.n	80179a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8017942:	2b00      	cmp	r3, #0
 8017944:	db2d      	blt.n	80179a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8017946:	9810      	ldr	r0, [sp, #64]	; 0x40
 8017948:	1c59      	adds	r1, r3, #1
 801794a:	4288      	cmp	r0, r1
 801794c:	dd29      	ble.n	80179a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 801794e:	9b06      	ldr	r3, [sp, #24]
 8017950:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017952:	992b      	ldr	r1, [sp, #172]	; 0xac
 8017954:	3b01      	subs	r3, #1
 8017956:	fb02 1203 	mla	r2, r2, r3, r1
 801795a:	1412      	asrs	r2, r2, #16
 801795c:	d42c      	bmi.n	80179b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801795e:	9907      	ldr	r1, [sp, #28]
 8017960:	3201      	adds	r2, #1
 8017962:	4291      	cmp	r1, r2
 8017964:	dd28      	ble.n	80179b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8017966:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8017968:	fb02 4303 	mla	r3, r2, r3, r4
 801796c:	141b      	asrs	r3, r3, #16
 801796e:	d423      	bmi.n	80179b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8017970:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017972:	3301      	adds	r3, #1
 8017974:	429a      	cmp	r2, r3
 8017976:	dd1f      	ble.n	80179b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8017978:	9b06      	ldr	r3, [sp, #24]
 801797a:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 801797e:	f8bd b054 	ldrh.w	fp, [sp, #84]	; 0x54
 8017982:	9311      	str	r3, [sp, #68]	; 0x44
 8017984:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017986:	2b00      	cmp	r3, #0
 8017988:	f300 81e3 	bgt.w	8017d52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x49e>
 801798c:	9b06      	ldr	r3, [sp, #24]
 801798e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017992:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017994:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017998:	930a      	str	r3, [sp, #40]	; 0x28
 801799a:	e173      	b.n	8017c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d0>
 801799c:	1c51      	adds	r1, r2, #1
 801799e:	f040 8162 	bne.w	8017c66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80179a2:	9907      	ldr	r1, [sp, #28]
 80179a4:	428a      	cmp	r2, r1
 80179a6:	f280 815e 	bge.w	8017c66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80179aa:	1c5f      	adds	r7, r3, #1
 80179ac:	f2c0 815b 	blt.w	8017c66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80179b0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80179b2:	4293      	cmp	r3, r2
 80179b4:	f280 8157 	bge.w	8017c66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80179b8:	9b06      	ldr	r3, [sp, #24]
 80179ba:	9314      	str	r3, [sp, #80]	; 0x50
 80179bc:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 80179c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80179c2:	9311      	str	r3, [sp, #68]	; 0x44
 80179c4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80179c6:	2b00      	cmp	r3, #0
 80179c8:	dde0      	ble.n	801798c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 80179ca:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80179cc:	f3c2 3003 	ubfx	r0, r2, #12, #4
 80179d0:	1412      	asrs	r2, r2, #16
 80179d2:	ea4f 4324 	mov.w	r3, r4, asr #16
 80179d6:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80179da:	f100 81a1 	bmi.w	8017d20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46c>
 80179de:	9e07      	ldr	r6, [sp, #28]
 80179e0:	1c55      	adds	r5, r2, #1
 80179e2:	42ae      	cmp	r6, r5
 80179e4:	f340 819e 	ble.w	8017d24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80179e8:	2b00      	cmp	r3, #0
 80179ea:	f2c0 819b 	blt.w	8017d24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80179ee:	9e10      	ldr	r6, [sp, #64]	; 0x40
 80179f0:	1c5d      	adds	r5, r3, #1
 80179f2:	42ae      	cmp	r6, r5
 80179f4:	f340 8196 	ble.w	8017d24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 80179f8:	9d07      	ldr	r5, [sp, #28]
 80179fa:	fb03 2305 	mla	r3, r3, r5, r2
 80179fe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017a00:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8017a04:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8017a08:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8017a0c:	2800      	cmp	r0, #0
 8017a0e:	f000 8178 	beq.w	8017d02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8017a12:	686a      	ldr	r2, [r5, #4]
 8017a14:	920b      	str	r2, [sp, #44]	; 0x2c
 8017a16:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8017a1a:	2900      	cmp	r1, #0
 8017a1c:	f000 817a 	beq.w	8017d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x460>
 8017a20:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8017a22:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017a24:	18aa      	adds	r2, r5, r2
 8017a26:	59ad      	ldr	r5, [r5, r6]
 8017a28:	6852      	ldr	r2, [r2, #4]
 8017a2a:	9508      	str	r5, [sp, #32]
 8017a2c:	ea4f 6a15 	mov.w	sl, r5, lsr #24
 8017a30:	920c      	str	r2, [sp, #48]	; 0x30
 8017a32:	0e15      	lsrs	r5, r2, #24
 8017a34:	b280      	uxth	r0, r0
 8017a36:	b289      	uxth	r1, r1
 8017a38:	fb00 fb01 	mul.w	fp, r0, r1
 8017a3c:	ebcb 1101 	rsb	r1, fp, r1, lsl #4
 8017a40:	0100      	lsls	r0, r0, #4
 8017a42:	eba0 090b 	sub.w	r9, r0, fp
 8017a46:	b289      	uxth	r1, r1
 8017a48:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8017a4c:	fa1f f989 	uxth.w	r9, r9
 8017a50:	1a52      	subs	r2, r2, r1
 8017a52:	b292      	uxth	r2, r2
 8017a54:	fb09 f008 	mul.w	r0, r9, r8
 8017a58:	fb02 000c 	mla	r0, r2, ip, r0
 8017a5c:	fb01 000a 	mla	r0, r1, sl, r0
 8017a60:	fb0b 0005 	mla	r0, fp, r5, r0
 8017a64:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017a68:	2800      	cmp	r0, #0
 8017a6a:	f000 80ef 	beq.w	8017c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8017a6e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017a72:	d01b      	beq.n	8017aac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f8>
 8017a74:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8017a78:	fb0c fe0e 	mul.w	lr, ip, lr
 8017a7c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017a80:	fb0c fc03 	mul.w	ip, ip, r3
 8017a84:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8017a88:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017a8c:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8017a90:	4473      	add	r3, lr
 8017a92:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8017a96:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8017a9a:	0a1b      	lsrs	r3, r3, #8
 8017a9c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017aa0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017aa4:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8017aa8:	ea43 030e 	orr.w	r3, r3, lr
 8017aac:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017ab0:	d01e      	beq.n	8017af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 8017ab2:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8017ab4:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8017ab8:	fb08 fc0c 	mul.w	ip, r8, ip
 8017abc:	f406 4e7f 	and.w	lr, r6, #65280	; 0xff00
 8017ac0:	fb08 f80e 	mul.w	r8, r8, lr
 8017ac4:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8017ac8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017acc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017ad0:	44e6      	add	lr, ip
 8017ad2:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8017ad6:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8017ada:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017ade:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017ae2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017ae6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8017aea:	ea4e 0608 	orr.w	r6, lr, r8
 8017aee:	960b      	str	r6, [sp, #44]	; 0x2c
 8017af0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017af4:	d01e      	beq.n	8017b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x280>
 8017af6:	9e08      	ldr	r6, [sp, #32]
 8017af8:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8017afc:	fb0a f808 	mul.w	r8, sl, r8
 8017b00:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8017b04:	fb0a fa0c 	mul.w	sl, sl, ip
 8017b08:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8017b0c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017b10:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8017b14:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017b18:	44c6      	add	lr, r8
 8017b1a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017b1e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017b22:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017b26:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017b2a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017b2e:	ea4e 060a 	orr.w	r6, lr, sl
 8017b32:	9608      	str	r6, [sp, #32]
 8017b34:	2dff      	cmp	r5, #255	; 0xff
 8017b36:	d01d      	beq.n	8017b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8017b38:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8017b3a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8017b3e:	fb05 f808 	mul.w	r8, r5, r8
 8017b42:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8017b46:	fb05 f50c 	mul.w	r5, r5, ip
 8017b4a:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8017b4e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017b52:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8017b56:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8017b5a:	44c6      	add	lr, r8
 8017b5c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017b60:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017b64:	0a2d      	lsrs	r5, r5, #8
 8017b66:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017b6a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8017b6e:	ea4e 0505 	orr.w	r5, lr, r5
 8017b72:	950c      	str	r5, [sp, #48]	; 0x30
 8017b74:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8017b76:	9e08      	ldr	r6, [sp, #32]
 8017b78:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017b7c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8017b80:	fb09 f505 	mul.w	r5, r9, r5
 8017b84:	fb02 550c 	mla	r5, r2, ip, r5
 8017b88:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8017b8c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8017b8e:	fb01 550c 	mla	r5, r1, ip, r5
 8017b92:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8017b96:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8017b98:	fb0b 550c 	mla	r5, fp, ip, r5
 8017b9c:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8017ba0:	fb09 f90c 	mul.w	r9, r9, ip
 8017ba4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017ba8:	fb02 9303 	mla	r3, r2, r3, r9
 8017bac:	9a08      	ldr	r2, [sp, #32]
 8017bae:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8017bb2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8017bb4:	fb01 330e 	mla	r3, r1, lr, r3
 8017bb8:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8017bbc:	fb0b 3b01 	mla	fp, fp, r1, r3
 8017bc0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017bc2:	0a2d      	lsrs	r5, r5, #8
 8017bc4:	f8b3 c000 	ldrh.w	ip, [r3]
 8017bc8:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8017bcc:	fb00 f307 	mul.w	r3, r0, r7
 8017bd0:	1c58      	adds	r0, r3, #1
 8017bd2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017bd6:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8017bda:	ea45 050b 	orr.w	r5, r5, fp
 8017bde:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8017be2:	0c29      	lsrs	r1, r5, #16
 8017be4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8017be8:	ea4f 232c 	mov.w	r3, ip, asr #8
 8017bec:	b2c0      	uxtb	r0, r0
 8017bee:	fb11 f107 	smulbb	r1, r1, r7
 8017bf2:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017bf6:	fb03 1300 	mla	r3, r3, r0, r1
 8017bfa:	b299      	uxth	r1, r3
 8017bfc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8017c00:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8017c04:	fb13 f307 	smulbb	r3, r3, r7
 8017c08:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017c0c:	fb02 3200 	mla	r2, r2, r0, r3
 8017c10:	b2ed      	uxtb	r5, r5
 8017c12:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8017c16:	b2db      	uxtb	r3, r3
 8017c18:	fb15 f507 	smulbb	r5, r5, r7
 8017c1c:	fb03 5500 	mla	r5, r3, r0, r5
 8017c20:	b292      	uxth	r2, r2
 8017c22:	b2ad      	uxth	r5, r5
 8017c24:	1c4b      	adds	r3, r1, #1
 8017c26:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8017c2a:	1c68      	adds	r0, r5, #1
 8017c2c:	1c51      	adds	r1, r2, #1
 8017c2e:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8017c32:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017c36:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017c3a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017c3e:	0952      	lsrs	r2, r2, #5
 8017c40:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017c44:	432b      	orrs	r3, r5
 8017c46:	4313      	orrs	r3, r2
 8017c48:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017c4a:	8013      	strh	r3, [r2, #0]
 8017c4c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017c4e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017c50:	3302      	adds	r3, #2
 8017c52:	9311      	str	r3, [sp, #68]	; 0x44
 8017c54:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017c56:	4413      	add	r3, r2
 8017c58:	932b      	str	r3, [sp, #172]	; 0xac
 8017c5a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017c5c:	441c      	add	r4, r3
 8017c5e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8017c60:	3b01      	subs	r3, #1
 8017c62:	9314      	str	r3, [sp, #80]	; 0x50
 8017c64:	e6ae      	b.n	80179c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8017c66:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017c68:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017c6a:	4413      	add	r3, r2
 8017c6c:	932b      	str	r3, [sp, #172]	; 0xac
 8017c6e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017c70:	441c      	add	r4, r3
 8017c72:	9b06      	ldr	r3, [sp, #24]
 8017c74:	3b01      	subs	r3, #1
 8017c76:	9306      	str	r3, [sp, #24]
 8017c78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017c7a:	3302      	adds	r3, #2
 8017c7c:	930a      	str	r3, [sp, #40]	; 0x28
 8017c7e:	e653      	b.n	8017928 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8017c80:	f47f ae65 	bne.w	801794e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8017c84:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017c86:	2b00      	cmp	r3, #0
 8017c88:	f340 81a0 	ble.w	8017fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8017c8c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017c90:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017c94:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017c98:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017c9a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017c9e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017ca2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017ca6:	eef0 6a48 	vmov.f32	s13, s16
 8017caa:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017cae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017cb2:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017cb6:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8017cba:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017cbe:	eef0 6a68 	vmov.f32	s13, s17
 8017cc2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017cc6:	ee18 2a10 	vmov	r2, s16
 8017cca:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017cce:	fb92 f3f3 	sdiv	r3, r2, r3
 8017cd2:	ee18 2a90 	vmov	r2, s17
 8017cd6:	932d      	str	r3, [sp, #180]	; 0xb4
 8017cd8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017cda:	fb92 f3f3 	sdiv	r3, r2, r3
 8017cde:	932e      	str	r3, [sp, #184]	; 0xb8
 8017ce0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017ce2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8017ce4:	3b01      	subs	r3, #1
 8017ce6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017cea:	9313      	str	r3, [sp, #76]	; 0x4c
 8017cec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017cee:	bf08      	it	eq
 8017cf0:	4613      	moveq	r3, r2
 8017cf2:	ee16 4a90 	vmov	r4, s13
 8017cf6:	9306      	str	r3, [sp, #24]
 8017cf8:	eef0 8a67 	vmov.f32	s17, s15
 8017cfc:	eeb0 8a47 	vmov.f32	s16, s14
 8017d00:	e60b      	b.n	801791a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8017d02:	b151      	cbz	r1, 8017d1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8017d04:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8017d06:	58aa      	ldr	r2, [r5, r2]
 8017d08:	9208      	str	r2, [sp, #32]
 8017d0a:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8017d0e:	25ff      	movs	r5, #255	; 0xff
 8017d10:	46a8      	mov	r8, r5
 8017d12:	e68f      	b.n	8017a34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8017d14:	25ff      	movs	r5, #255	; 0xff
 8017d16:	46aa      	mov	sl, r5
 8017d18:	e68c      	b.n	8017a34 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8017d1a:	25ff      	movs	r5, #255	; 0xff
 8017d1c:	46aa      	mov	sl, r5
 8017d1e:	e7f7      	b.n	8017d10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45c>
 8017d20:	1c56      	adds	r6, r2, #1
 8017d22:	d193      	bne.n	8017c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8017d24:	9d07      	ldr	r5, [sp, #28]
 8017d26:	4295      	cmp	r5, r2
 8017d28:	dd90      	ble.n	8017c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8017d2a:	1c5d      	adds	r5, r3, #1
 8017d2c:	db8e      	blt.n	8017c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8017d2e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8017d30:	429d      	cmp	r5, r3
 8017d32:	dd8b      	ble.n	8017c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8017d34:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8017d36:	9201      	str	r2, [sp, #4]
 8017d38:	e9cd 3002 	strd	r3, r0, [sp, #8]
 8017d3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017d3e:	9300      	str	r3, [sp, #0]
 8017d40:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8017d44:	9b07      	ldr	r3, [sp, #28]
 8017d46:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8017d48:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
 8017d4c:	f7ff fc4e 	bl	80175ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8017d50:	e77c      	b.n	8017c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8017d52:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017d54:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017d56:	9d07      	ldr	r5, [sp, #28]
 8017d58:	1412      	asrs	r2, r2, #16
 8017d5a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8017d5e:	1423      	asrs	r3, r4, #16
 8017d60:	fb05 2303 	mla	r3, r5, r3, r2
 8017d64:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017d66:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8017d6a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8017d6e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8017d72:	0e1e      	lsrs	r6, r3, #24
 8017d74:	2900      	cmp	r1, #0
 8017d76:	f000 811a 	beq.w	8017fae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fa>
 8017d7a:	686a      	ldr	r2, [r5, #4]
 8017d7c:	920d      	str	r2, [sp, #52]	; 0x34
 8017d7e:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8017d82:	2800      	cmp	r0, #0
 8017d84:	f000 811c 	beq.w	8017fc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>
 8017d88:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8017d8a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8017d8c:	18aa      	adds	r2, r5, r2
 8017d8e:	59ed      	ldr	r5, [r5, r7]
 8017d90:	6852      	ldr	r2, [r2, #4]
 8017d92:	9509      	str	r5, [sp, #36]	; 0x24
 8017d94:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8017d98:	920f      	str	r2, [sp, #60]	; 0x3c
 8017d9a:	0e15      	lsrs	r5, r2, #24
 8017d9c:	b289      	uxth	r1, r1
 8017d9e:	b280      	uxth	r0, r0
 8017da0:	fb01 f900 	mul.w	r9, r1, r0
 8017da4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8017da8:	0109      	lsls	r1, r1, #4
 8017daa:	eba1 0e09 	sub.w	lr, r1, r9
 8017dae:	b280      	uxth	r0, r0
 8017db0:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8017db4:	fa1f fe8e 	uxth.w	lr, lr
 8017db8:	1a12      	subs	r2, r2, r0
 8017dba:	b292      	uxth	r2, r2
 8017dbc:	fb0e f10c 	mul.w	r1, lr, ip
 8017dc0:	fb02 1106 	mla	r1, r2, r6, r1
 8017dc4:	fb00 1108 	mla	r1, r0, r8, r1
 8017dc8:	fb09 1105 	mla	r1, r9, r5, r1
 8017dcc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017dd0:	2900      	cmp	r1, #0
 8017dd2:	f000 80e0 	beq.w	8017f96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8017dd6:	2eff      	cmp	r6, #255	; 0xff
 8017dd8:	d016      	beq.n	8017e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x554>
 8017dda:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8017dde:	4377      	muls	r7, r6
 8017de0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017de4:	435e      	muls	r6, r3
 8017de6:	0a3b      	lsrs	r3, r7, #8
 8017de8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017dec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017df0:	443b      	add	r3, r7
 8017df2:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8017df6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8017dfa:	0a1b      	lsrs	r3, r3, #8
 8017dfc:	0a3f      	lsrs	r7, r7, #8
 8017dfe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017e02:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8017e06:	433b      	orrs	r3, r7
 8017e08:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017e0c:	d01d      	beq.n	8017e4a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 8017e0e:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8017e10:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8017e12:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017e16:	fb0c f606 	mul.w	r6, ip, r6
 8017e1a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8017e1e:	fb0c fc07 	mul.w	ip, ip, r7
 8017e22:	0a37      	lsrs	r7, r6, #8
 8017e24:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017e28:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8017e2c:	4437      	add	r7, r6
 8017e2e:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8017e32:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8017e36:	0a3f      	lsrs	r7, r7, #8
 8017e38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017e3c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017e40:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017e44:	ea47 060c 	orr.w	r6, r7, ip
 8017e48:	960d      	str	r6, [sp, #52]	; 0x34
 8017e4a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017e4e:	d01d      	beq.n	8017e8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d8>
 8017e50:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8017e52:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8017e56:	fb08 fc0c 	mul.w	ip, r8, ip
 8017e5a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017e5e:	fb08 f806 	mul.w	r8, r8, r6
 8017e62:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8017e66:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8017e6a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017e6e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017e72:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8017e76:	4467      	add	r7, ip
 8017e78:	0a3f      	lsrs	r7, r7, #8
 8017e7a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017e7e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017e82:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8017e86:	ea47 0608 	orr.w	r6, r7, r8
 8017e8a:	9609      	str	r6, [sp, #36]	; 0x24
 8017e8c:	2dff      	cmp	r5, #255	; 0xff
 8017e8e:	d01a      	beq.n	8017ec6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x612>
 8017e90:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8017e92:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8017e96:	fb05 fc0c 	mul.w	ip, r5, ip
 8017e9a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017e9e:	4375      	muls	r5, r6
 8017ea0:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8017ea4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017ea8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017eac:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8017eb0:	4467      	add	r7, ip
 8017eb2:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8017eb6:	0a3f      	lsrs	r7, r7, #8
 8017eb8:	0a2d      	lsrs	r5, r5, #8
 8017eba:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017ebe:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8017ec2:	433d      	orrs	r5, r7
 8017ec4:	950f      	str	r5, [sp, #60]	; 0x3c
 8017ec6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8017ec8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017ecc:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 8017ed0:	fb0e f505 	mul.w	r5, lr, r5
 8017ed4:	fb02 5506 	mla	r5, r2, r6, r5
 8017ed8:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8017eda:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017ede:	fb00 5506 	mla	r5, r0, r6, r5
 8017ee2:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8017ee4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017ee8:	fb09 5506 	mla	r5, r9, r6, r5
 8017eec:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8017eee:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017ef2:	fb0e fe06 	mul.w	lr, lr, r6
 8017ef6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017efa:	fb02 e303 	mla	r3, r2, r3, lr
 8017efe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017f00:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8017f04:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8017f06:	fb00 3307 	mla	r3, r0, r7, r3
 8017f0a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8017f0e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8017f12:	fb01 f10b 	mul.w	r1, r1, fp
 8017f16:	0a2d      	lsrs	r5, r5, #8
 8017f18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017f1c:	f8ba 0000 	ldrh.w	r0, [sl]
 8017f20:	1c4b      	adds	r3, r1, #1
 8017f22:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017f26:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017f2a:	ea45 050c 	orr.w	r5, r5, ip
 8017f2e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8017f32:	1202      	asrs	r2, r0, #8
 8017f34:	0c2b      	lsrs	r3, r5, #16
 8017f36:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8017f3a:	b2c9      	uxtb	r1, r1
 8017f3c:	fb13 f30b 	smulbb	r3, r3, fp
 8017f40:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017f44:	fb02 3201 	mla	r2, r2, r1, r3
 8017f48:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8017f4c:	10c3      	asrs	r3, r0, #3
 8017f4e:	b2ed      	uxtb	r5, r5
 8017f50:	00c0      	lsls	r0, r0, #3
 8017f52:	b2c0      	uxtb	r0, r0
 8017f54:	fb15 f50b 	smulbb	r5, r5, fp
 8017f58:	fb00 5001 	mla	r0, r0, r1, r5
 8017f5c:	b292      	uxth	r2, r2
 8017f5e:	fb16 f60b 	smulbb	r6, r6, fp
 8017f62:	b280      	uxth	r0, r0
 8017f64:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017f68:	fb03 6301 	mla	r3, r3, r1, r6
 8017f6c:	1c51      	adds	r1, r2, #1
 8017f6e:	1c46      	adds	r6, r0, #1
 8017f70:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017f74:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8017f78:	b29b      	uxth	r3, r3
 8017f7a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017f7e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8017f82:	4332      	orrs	r2, r6
 8017f84:	1c5e      	adds	r6, r3, #1
 8017f86:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8017f8a:	095b      	lsrs	r3, r3, #5
 8017f8c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017f90:	431a      	orrs	r2, r3
 8017f92:	f8aa 2000 	strh.w	r2, [sl]
 8017f96:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017f98:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017f9a:	4413      	add	r3, r2
 8017f9c:	932b      	str	r3, [sp, #172]	; 0xac
 8017f9e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017fa0:	441c      	add	r4, r3
 8017fa2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017fa4:	3b01      	subs	r3, #1
 8017fa6:	f10a 0a02 	add.w	sl, sl, #2
 8017faa:	9311      	str	r3, [sp, #68]	; 0x44
 8017fac:	e4ea      	b.n	8017984 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8017fae:	b150      	cbz	r0, 8017fc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x712>
 8017fb0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8017fb2:	58aa      	ldr	r2, [r5, r2]
 8017fb4:	9209      	str	r2, [sp, #36]	; 0x24
 8017fb6:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8017fba:	25ff      	movs	r5, #255	; 0xff
 8017fbc:	46ac      	mov	ip, r5
 8017fbe:	e6ed      	b.n	8017d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8017fc0:	25ff      	movs	r5, #255	; 0xff
 8017fc2:	46a8      	mov	r8, r5
 8017fc4:	e6ea      	b.n	8017d9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8017fc6:	25ff      	movs	r5, #255	; 0xff
 8017fc8:	46a8      	mov	r8, r5
 8017fca:	e7f7      	b.n	8017fbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 8017fcc:	b019      	add	sp, #100	; 0x64
 8017fce:	ecbd 8b08 	vpop	{d8-d11}
 8017fd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08017fd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8017fd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017fdc:	8808      	ldrh	r0, [r1, #0]
 8017fde:	b085      	sub	sp, #20
 8017fe0:	1206      	asrs	r6, r0, #8
 8017fe2:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8017fe6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017fea:	9600      	str	r6, [sp, #0]
 8017fec:	10c6      	asrs	r6, r0, #3
 8017fee:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017ff2:	9601      	str	r6, [sp, #4]
 8017ff4:	00c0      	lsls	r0, r0, #3
 8017ff6:	fb04 c603 	mla	r6, r4, r3, ip
 8017ffa:	b2c0      	uxtb	r0, r0
 8017ffc:	4691      	mov	r9, r2
 8017ffe:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8018002:	9a00      	ldr	r2, [sp, #0]
 8018004:	9002      	str	r0, [sp, #8]
 8018006:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 801800a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 801800e:	9a01      	ldr	r2, [sp, #4]
 8018010:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8018014:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8018018:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801801c:	2c00      	cmp	r4, #0
 801801e:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8018022:	db3a      	blt.n	801809a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8018024:	45a0      	cmp	r8, r4
 8018026:	dd38      	ble.n	801809a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8018028:	f1bc 0f00 	cmp.w	ip, #0
 801802c:	db33      	blt.n	8018096 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 801802e:	4563      	cmp	r3, ip
 8018030:	dd31      	ble.n	8018096 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8018032:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8018036:	f11c 0601 	adds.w	r6, ip, #1
 801803a:	d431      	bmi.n	80180a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 801803c:	42b3      	cmp	r3, r6
 801803e:	dd2f      	ble.n	80180a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8018040:	b375      	cbz	r5, 80180a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8018042:	f8de 6004 	ldr.w	r6, [lr, #4]
 8018046:	3401      	adds	r4, #1
 8018048:	d42e      	bmi.n	80180a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801804a:	45a0      	cmp	r8, r4
 801804c:	dd2c      	ble.n	80180a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801804e:	b35f      	cbz	r7, 80180a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8018050:	f1bc 0f00 	cmp.w	ip, #0
 8018054:	db26      	blt.n	80180a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8018056:	4563      	cmp	r3, ip
 8018058:	dd24      	ble.n	80180a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 801805a:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 801805e:	f11c 0c01 	adds.w	ip, ip, #1
 8018062:	d405      	bmi.n	8018070 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8018064:	4563      	cmp	r3, ip
 8018066:	dd03      	ble.n	8018070 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8018068:	b115      	cbz	r5, 8018070 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 801806a:	3301      	adds	r3, #1
 801806c:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8018070:	2d0f      	cmp	r5, #15
 8018072:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8018076:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801807a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801807e:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8018082:	d801      	bhi.n	8018088 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 8018084:	2f0f      	cmp	r7, #15
 8018086:	d911      	bls.n	80180ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 8018088:	4b7b      	ldr	r3, [pc, #492]	; (8018278 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 801808a:	4a7c      	ldr	r2, [pc, #496]	; (801827c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 801808c:	487c      	ldr	r0, [pc, #496]	; (8018280 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a8>)
 801808e:	f240 210d 	movw	r1, #525	; 0x20d
 8018092:	f001 fd05 	bl	8019aa0 <__assert_func>
 8018096:	4602      	mov	r2, r0
 8018098:	e7cd      	b.n	8018036 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801809a:	4606      	mov	r6, r0
 801809c:	4602      	mov	r2, r0
 801809e:	e7d2      	b.n	8018046 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 80180a0:	4606      	mov	r6, r0
 80180a2:	e7d0      	b.n	8018046 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 80180a4:	4604      	mov	r4, r0
 80180a6:	e7da      	b.n	801805e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 80180a8:	4604      	mov	r4, r0
 80180aa:	e7e1      	b.n	8018070 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 80180ac:	b2ab      	uxth	r3, r5
 80180ae:	b2bf      	uxth	r7, r7
 80180b0:	fb03 fe07 	mul.w	lr, r3, r7
 80180b4:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80180b8:	011b      	lsls	r3, r3, #4
 80180ba:	eba3 0c0e 	sub.w	ip, r3, lr
 80180be:	b2bf      	uxth	r7, r7
 80180c0:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 80180c4:	fa1f fc8c 	uxth.w	ip, ip
 80180c8:	1bed      	subs	r5, r5, r7
 80180ca:	b2ad      	uxth	r5, r5
 80180cc:	fb0c f30a 	mul.w	r3, ip, sl
 80180d0:	fb05 330b 	mla	r3, r5, fp, r3
 80180d4:	fb07 3309 	mla	r3, r7, r9, r3
 80180d8:	fb0e 3308 	mla	r3, lr, r8, r3
 80180dc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80180e0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80180e4:	9303      	str	r3, [sp, #12]
 80180e6:	d018      	beq.n	801811a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 80180e8:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80180ec:	fb0b f303 	mul.w	r3, fp, r3
 80180f0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80180f4:	fb0b fb02 	mul.w	fp, fp, r2
 80180f8:	0a1a      	lsrs	r2, r3, #8
 80180fa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80180fe:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8018102:	441a      	add	r2, r3
 8018104:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8018108:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 801810c:	0a12      	lsrs	r2, r2, #8
 801810e:	0a1b      	lsrs	r3, r3, #8
 8018110:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018114:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018118:	431a      	orrs	r2, r3
 801811a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801811e:	d019      	beq.n	8018154 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 8018120:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8018124:	fb0a fb0b 	mul.w	fp, sl, fp
 8018128:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801812c:	fb0a fa06 	mul.w	sl, sl, r6
 8018130:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8018134:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018138:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801813c:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8018140:	445e      	add	r6, fp
 8018142:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8018146:	0a36      	lsrs	r6, r6, #8
 8018148:	0a1b      	lsrs	r3, r3, #8
 801814a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801814e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018152:	431e      	orrs	r6, r3
 8018154:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018158:	d019      	beq.n	801818e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 801815a:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801815e:	fb09 fa0a 	mul.w	sl, r9, sl
 8018162:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8018166:	fb09 f904 	mul.w	r9, r9, r4
 801816a:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801816e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018172:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018176:	f509 7380 	add.w	r3, r9, #256	; 0x100
 801817a:	4454      	add	r4, sl
 801817c:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8018180:	0a24      	lsrs	r4, r4, #8
 8018182:	0a1b      	lsrs	r3, r3, #8
 8018184:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018188:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801818c:	431c      	orrs	r4, r3
 801818e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018192:	d019      	beq.n	80181c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 8018194:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8018198:	fb08 f909 	mul.w	r9, r8, r9
 801819c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80181a0:	fb08 f800 	mul.w	r8, r8, r0
 80181a4:	ea4f 2019 	mov.w	r0, r9, lsr #8
 80181a8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80181ac:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80181b0:	f508 7380 	add.w	r3, r8, #256	; 0x100
 80181b4:	4448      	add	r0, r9
 80181b6:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80181ba:	0a00      	lsrs	r0, r0, #8
 80181bc:	0a1b      	lsrs	r3, r3, #8
 80181be:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80181c2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80181c6:	4318      	orrs	r0, r3
 80181c8:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80181cc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80181d0:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80181d4:	fb0c f808 	mul.w	r8, ip, r8
 80181d8:	fb0c f606 	mul.w	r6, ip, r6
 80181dc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80181e0:	fb05 8803 	mla	r8, r5, r3, r8
 80181e4:	fb05 6202 	mla	r2, r5, r2, r6
 80181e8:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 80181ec:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80181f0:	fb07 8803 	mla	r8, r7, r3, r8
 80181f4:	fb07 2704 	mla	r7, r7, r4, r2
 80181f8:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 80181fc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018200:	fb0e 8303 	mla	r3, lr, r3, r8
 8018204:	fb0e 7e00 	mla	lr, lr, r0, r7
 8018208:	0a1b      	lsrs	r3, r3, #8
 801820a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801820e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018212:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8018216:	ea43 0e0e 	orr.w	lr, r3, lr
 801821a:	9b03      	ldr	r3, [sp, #12]
 801821c:	9800      	ldr	r0, [sp, #0]
 801821e:	9c01      	ldr	r4, [sp, #4]
 8018220:	9a02      	ldr	r2, [sp, #8]
 8018222:	43db      	mvns	r3, r3
 8018224:	b2db      	uxtb	r3, r3
 8018226:	4358      	muls	r0, r3
 8018228:	435c      	muls	r4, r3
 801822a:	435a      	muls	r2, r3
 801822c:	1c43      	adds	r3, r0, #1
 801822e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018232:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8018236:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801823a:	4b12      	ldr	r3, [pc, #72]	; (8018284 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2ac>)
 801823c:	ea03 2300 	and.w	r3, r3, r0, lsl #8
 8018240:	1c50      	adds	r0, r2, #1
 8018242:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8018246:	fa5f f28e 	uxtb.w	r2, lr
 801824a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801824e:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8018252:	1c62      	adds	r2, r4, #1
 8018254:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8018258:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 801825c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8018260:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018264:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8018268:	ea43 0e0e 	orr.w	lr, r3, lr
 801826c:	f8a1 e000 	strh.w	lr, [r1]
 8018270:	b005      	add	sp, #20
 8018272:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018276:	bf00      	nop
 8018278:	0801d6d1 	.word	0x0801d6d1
 801827c:	0801dc29 	.word	0x0801dc29
 8018280:	0801d759 	.word	0x0801d759
 8018284:	fffff800 	.word	0xfffff800

08018288 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801828c:	ed2d 8b08 	vpush	{d8-d11}
 8018290:	b097      	sub	sp, #92	; 0x5c
 8018292:	eeb0 aa40 	vmov.f32	s20, s0
 8018296:	9306      	str	r3, [sp, #24]
 8018298:	f9bd 30c0 	ldrsh.w	r3, [sp, #192]	; 0xc0
 801829c:	9307      	str	r3, [sp, #28]
 801829e:	9214      	str	r2, [sp, #80]	; 0x50
 80182a0:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 80182a4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80182a6:	9112      	str	r1, [sp, #72]	; 0x48
 80182a8:	9310      	str	r3, [sp, #64]	; 0x40
 80182aa:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80182ae:	9015      	str	r0, [sp, #84]	; 0x54
 80182b0:	6850      	ldr	r0, [r2, #4]
 80182b2:	6812      	ldr	r2, [r2, #0]
 80182b4:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80182b6:	fb00 1303 	mla	r3, r0, r3, r1
 80182ba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80182be:	930a      	str	r3, [sp, #40]	; 0x28
 80182c0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80182c2:	681b      	ldr	r3, [r3, #0]
 80182c4:	9311      	str	r3, [sp, #68]	; 0x44
 80182c6:	9b07      	ldr	r3, [sp, #28]
 80182c8:	009b      	lsls	r3, r3, #2
 80182ca:	eef0 9a60 	vmov.f32	s19, s1
 80182ce:	eeb0 9a41 	vmov.f32	s18, s2
 80182d2:	eeb0 8a62 	vmov.f32	s16, s5
 80182d6:	eef0 8a43 	vmov.f32	s17, s6
 80182da:	eef0 ba44 	vmov.f32	s23, s8
 80182de:	eeb0 ba64 	vmov.f32	s22, s9
 80182e2:	eef0 aa45 	vmov.f32	s21, s10
 80182e6:	930e      	str	r3, [sp, #56]	; 0x38
 80182e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80182ea:	2b00      	cmp	r3, #0
 80182ec:	dc03      	bgt.n	80182f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80182ee:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80182f0:	2b00      	cmp	r3, #0
 80182f2:	f340 8361 	ble.w	80189b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 80182f6:	9b06      	ldr	r3, [sp, #24]
 80182f8:	2b00      	cmp	r3, #0
 80182fa:	f340 819b 	ble.w	8018634 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 80182fe:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018300:	1412      	asrs	r2, r2, #16
 8018302:	ea4f 4325 	mov.w	r3, r5, asr #16
 8018306:	d42e      	bmi.n	8018366 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8018308:	9807      	ldr	r0, [sp, #28]
 801830a:	1c51      	adds	r1, r2, #1
 801830c:	4288      	cmp	r0, r1
 801830e:	dd2d      	ble.n	801836c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018310:	2b00      	cmp	r3, #0
 8018312:	db2b      	blt.n	801836c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018314:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018316:	1c59      	adds	r1, r3, #1
 8018318:	4288      	cmp	r0, r1
 801831a:	dd27      	ble.n	801836c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801831c:	9b06      	ldr	r3, [sp, #24]
 801831e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018320:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8018322:	3b01      	subs	r3, #1
 8018324:	fb02 1203 	mla	r2, r2, r3, r1
 8018328:	1412      	asrs	r2, r2, #16
 801832a:	d42a      	bmi.n	8018382 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801832c:	9907      	ldr	r1, [sp, #28]
 801832e:	3201      	adds	r2, #1
 8018330:	4291      	cmp	r1, r2
 8018332:	dd26      	ble.n	8018382 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018334:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8018336:	fb02 5303 	mla	r3, r2, r3, r5
 801833a:	141b      	asrs	r3, r3, #16
 801833c:	d421      	bmi.n	8018382 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801833e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018340:	3301      	adds	r3, #1
 8018342:	429a      	cmp	r2, r3
 8018344:	dd1d      	ble.n	8018382 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018346:	9b06      	ldr	r3, [sp, #24]
 8018348:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 801834c:	9313      	str	r3, [sp, #76]	; 0x4c
 801834e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018350:	2b00      	cmp	r3, #0
 8018352:	f300 81e3 	bgt.w	801871c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x494>
 8018356:	9b06      	ldr	r3, [sp, #24]
 8018358:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801835c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801835e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018362:	930a      	str	r3, [sp, #40]	; 0x28
 8018364:	e168      	b.n	8018638 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b0>
 8018366:	1c51      	adds	r1, r2, #1
 8018368:	f040 8157 	bne.w	801861a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801836c:	9907      	ldr	r1, [sp, #28]
 801836e:	428a      	cmp	r2, r1
 8018370:	f280 8153 	bge.w	801861a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8018374:	1c5f      	adds	r7, r3, #1
 8018376:	f2c0 8150 	blt.w	801861a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801837a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801837c:	4293      	cmp	r3, r2
 801837e:	f280 814c 	bge.w	801861a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8018382:	9b06      	ldr	r3, [sp, #24]
 8018384:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8018386:	9313      	str	r3, [sp, #76]	; 0x4c
 8018388:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801838a:	2b00      	cmp	r3, #0
 801838c:	dde3      	ble.n	8018356 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 801838e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8018390:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018392:	1409      	asrs	r1, r1, #16
 8018394:	ea4f 4325 	mov.w	r3, r5, asr #16
 8018398:	f3c2 3203 	ubfx	r2, r2, #12, #4
 801839c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80183a0:	f100 81a3 	bmi.w	80186ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x462>
 80183a4:	9c07      	ldr	r4, [sp, #28]
 80183a6:	1c4e      	adds	r6, r1, #1
 80183a8:	42b4      	cmp	r4, r6
 80183aa:	f340 81a0 	ble.w	80186ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 80183ae:	2b00      	cmp	r3, #0
 80183b0:	f2c0 819d 	blt.w	80186ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 80183b4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80183b6:	1c5e      	adds	r6, r3, #1
 80183b8:	42b4      	cmp	r4, r6
 80183ba:	f340 8198 	ble.w	80186ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 80183be:	9c07      	ldr	r4, [sp, #28]
 80183c0:	fb03 1304 	mla	r3, r3, r4, r1
 80183c4:	9911      	ldr	r1, [sp, #68]	; 0x44
 80183c6:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 80183ca:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80183ce:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80183d2:	2a00      	cmp	r2, #0
 80183d4:	f000 816f 	beq.w	80186b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 80183d8:	6871      	ldr	r1, [r6, #4]
 80183da:	910b      	str	r1, [sp, #44]	; 0x2c
 80183dc:	ea4f 6811 	mov.w	r8, r1, lsr #24
 80183e0:	2800      	cmp	r0, #0
 80183e2:	f000 8171 	beq.w	80186c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x440>
 80183e6:	990e      	ldr	r1, [sp, #56]	; 0x38
 80183e8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80183ea:	1871      	adds	r1, r6, r1
 80183ec:	5934      	ldr	r4, [r6, r4]
 80183ee:	6849      	ldr	r1, [r1, #4]
 80183f0:	9408      	str	r4, [sp, #32]
 80183f2:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 80183f6:	910c      	str	r1, [sp, #48]	; 0x30
 80183f8:	0e0e      	lsrs	r6, r1, #24
 80183fa:	b292      	uxth	r2, r2
 80183fc:	b280      	uxth	r0, r0
 80183fe:	fb02 fb00 	mul.w	fp, r2, r0
 8018402:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8018406:	0112      	lsls	r2, r2, #4
 8018408:	eba2 090b 	sub.w	r9, r2, fp
 801840c:	b280      	uxth	r0, r0
 801840e:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8018412:	fa1f f989 	uxth.w	r9, r9
 8018416:	1a09      	subs	r1, r1, r0
 8018418:	b289      	uxth	r1, r1
 801841a:	fb09 f208 	mul.w	r2, r9, r8
 801841e:	fb01 220c 	mla	r2, r1, ip, r2
 8018422:	fb00 220a 	mla	r2, r0, sl, r2
 8018426:	fb0b 2206 	mla	r2, fp, r6, r2
 801842a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801842e:	2a00      	cmp	r2, #0
 8018430:	f000 80e8 	beq.w	8018604 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8018434:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018438:	d01b      	beq.n	8018472 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 801843a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801843e:	fb0c fe0e 	mul.w	lr, ip, lr
 8018442:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018446:	fb0c fc03 	mul.w	ip, ip, r3
 801844a:	ea4f 231e 	mov.w	r3, lr, lsr #8
 801844e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018452:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8018456:	4473      	add	r3, lr
 8018458:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 801845c:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8018460:	0a1b      	lsrs	r3, r3, #8
 8018462:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018466:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801846a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801846e:	ea43 030e 	orr.w	r3, r3, lr
 8018472:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018476:	d01e      	beq.n	80184b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x22e>
 8018478:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801847a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801847e:	fb08 fc0c 	mul.w	ip, r8, ip
 8018482:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8018486:	fb08 f80e 	mul.w	r8, r8, lr
 801848a:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801848e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018492:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018496:	44e6      	add	lr, ip
 8018498:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 801849c:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80184a0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80184a4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80184a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80184ac:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80184b0:	ea4e 0408 	orr.w	r4, lr, r8
 80184b4:	940b      	str	r4, [sp, #44]	; 0x2c
 80184b6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80184ba:	d01e      	beq.n	80184fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x272>
 80184bc:	9c08      	ldr	r4, [sp, #32]
 80184be:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 80184c2:	fb0a f808 	mul.w	r8, sl, r8
 80184c6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80184ca:	fb0a fa0c 	mul.w	sl, sl, ip
 80184ce:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 80184d2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80184d6:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 80184da:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80184de:	44c6      	add	lr, r8
 80184e0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80184e4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80184e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80184ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80184f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80184f4:	ea4e 040a 	orr.w	r4, lr, sl
 80184f8:	9408      	str	r4, [sp, #32]
 80184fa:	2eff      	cmp	r6, #255	; 0xff
 80184fc:	d01d      	beq.n	801853a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b2>
 80184fe:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018500:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8018504:	fb06 f808 	mul.w	r8, r6, r8
 8018508:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801850c:	fb06 f60c 	mul.w	r6, r6, ip
 8018510:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8018514:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018518:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801851c:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8018520:	44c6      	add	lr, r8
 8018522:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8018526:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801852a:	0a36      	lsrs	r6, r6, #8
 801852c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018530:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018534:	ea4e 0406 	orr.w	r4, lr, r6
 8018538:	940c      	str	r4, [sp, #48]	; 0x30
 801853a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801853c:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 8018540:	9c08      	ldr	r4, [sp, #32]
 8018542:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018546:	fb09 f606 	mul.w	r6, r9, r6
 801854a:	fb01 660c 	mla	r6, r1, ip, r6
 801854e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018552:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018554:	fb00 660c 	mla	r6, r0, ip, r6
 8018558:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801855c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801855e:	fb0b 660c 	mla	r6, fp, ip, r6
 8018562:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8018566:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801856a:	fb09 f90c 	mul.w	r9, r9, ip
 801856e:	fb01 9303 	mla	r3, r1, r3, r9
 8018572:	9908      	ldr	r1, [sp, #32]
 8018574:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 8018578:	990c      	ldr	r1, [sp, #48]	; 0x30
 801857a:	fb00 330e 	mla	r3, r0, lr, r3
 801857e:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8018582:	fb0b 3b00 	mla	fp, fp, r0, r3
 8018586:	0a36      	lsrs	r6, r6, #8
 8018588:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801858c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018590:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8018594:	ea46 060b 	orr.w	r6, r6, fp
 8018598:	2aff      	cmp	r2, #255	; 0xff
 801859a:	ea4f 2316 	mov.w	r3, r6, lsr #8
 801859e:	f000 8099 	beq.w	80186d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44c>
 80185a2:	8839      	ldrh	r1, [r7, #0]
 80185a4:	43d2      	mvns	r2, r2
 80185a6:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80185aa:	fa5f fe82 	uxtb.w	lr, r2
 80185ae:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80185b2:	fb0c fc0e 	mul.w	ip, ip, lr
 80185b6:	10c8      	asrs	r0, r1, #3
 80185b8:	00ca      	lsls	r2, r1, #3
 80185ba:	f10c 0101 	add.w	r1, ip, #1
 80185be:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 80185c2:	ea4f 4c16 	mov.w	ip, r6, lsr #16
 80185c6:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80185ca:	b2d2      	uxtb	r2, r2
 80185cc:	4952      	ldr	r1, [pc, #328]	; (8018718 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x490>)
 80185ce:	fb02 f20e 	mul.w	r2, r2, lr
 80185d2:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80185d6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80185da:	1c51      	adds	r1, r2, #1
 80185dc:	fb00 f00e 	mul.w	r0, r0, lr
 80185e0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80185e4:	b2f6      	uxtb	r6, r6
 80185e6:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 80185ea:	1c42      	adds	r2, r0, #1
 80185ec:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80185f0:	b2db      	uxtb	r3, r3
 80185f2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80185f6:	00db      	lsls	r3, r3, #3
 80185f8:	ea4c 06d6 	orr.w	r6, ip, r6, lsr #3
 80185fc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018600:	431e      	orrs	r6, r3
 8018602:	803e      	strh	r6, [r7, #0]
 8018604:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018606:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018608:	441a      	add	r2, r3
 801860a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801860c:	9229      	str	r2, [sp, #164]	; 0xa4
 801860e:	441d      	add	r5, r3
 8018610:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018612:	3b01      	subs	r3, #1
 8018614:	3702      	adds	r7, #2
 8018616:	9313      	str	r3, [sp, #76]	; 0x4c
 8018618:	e6b6      	b.n	8018388 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 801861a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801861c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801861e:	441a      	add	r2, r3
 8018620:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018622:	9229      	str	r2, [sp, #164]	; 0xa4
 8018624:	441d      	add	r5, r3
 8018626:	9b06      	ldr	r3, [sp, #24]
 8018628:	3b01      	subs	r3, #1
 801862a:	9306      	str	r3, [sp, #24]
 801862c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801862e:	3302      	adds	r3, #2
 8018630:	930a      	str	r3, [sp, #40]	; 0x28
 8018632:	e660      	b.n	80182f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8018634:	f47f ae72 	bne.w	801831c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8018638:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801863a:	2b00      	cmp	r3, #0
 801863c:	f340 81bc 	ble.w	80189b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8018640:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018644:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018648:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801864c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801864e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018652:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018656:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801865a:	eef0 6a48 	vmov.f32	s13, s16
 801865e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018662:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018666:	ee37 8a48 	vsub.f32	s16, s14, s16
 801866a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801866e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018672:	eef0 6a68 	vmov.f32	s13, s17
 8018676:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801867a:	ee18 2a10 	vmov	r2, s16
 801867e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018682:	fb92 f3f3 	sdiv	r3, r2, r3
 8018686:	ee18 2a90 	vmov	r2, s17
 801868a:	932b      	str	r3, [sp, #172]	; 0xac
 801868c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801868e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018692:	932c      	str	r3, [sp, #176]	; 0xb0
 8018694:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018696:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018698:	3b01      	subs	r3, #1
 801869a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801869e:	9312      	str	r3, [sp, #72]	; 0x48
 80186a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80186a2:	bf08      	it	eq
 80186a4:	4613      	moveq	r3, r2
 80186a6:	ee16 5a90 	vmov	r5, s13
 80186aa:	9306      	str	r3, [sp, #24]
 80186ac:	eef0 8a67 	vmov.f32	s17, s15
 80186b0:	eeb0 8a47 	vmov.f32	s16, s14
 80186b4:	e618      	b.n	80182e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 80186b6:	b150      	cbz	r0, 80186ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x446>
 80186b8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80186ba:	5871      	ldr	r1, [r6, r1]
 80186bc:	9108      	str	r1, [sp, #32]
 80186be:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80186c2:	26ff      	movs	r6, #255	; 0xff
 80186c4:	46b0      	mov	r8, r6
 80186c6:	e698      	b.n	80183fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 80186c8:	26ff      	movs	r6, #255	; 0xff
 80186ca:	46b2      	mov	sl, r6
 80186cc:	e695      	b.n	80183fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 80186ce:	26ff      	movs	r6, #255	; 0xff
 80186d0:	46b2      	mov	sl, r6
 80186d2:	e7f7      	b.n	80186c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43c>
 80186d4:	0972      	lsrs	r2, r6, #5
 80186d6:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80186da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80186de:	f023 0307 	bic.w	r3, r3, #7
 80186e2:	4313      	orrs	r3, r2
 80186e4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80186e8:	e78a      	b.n	8018600 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x378>
 80186ea:	1c4e      	adds	r6, r1, #1
 80186ec:	d18a      	bne.n	8018604 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80186ee:	9c07      	ldr	r4, [sp, #28]
 80186f0:	428c      	cmp	r4, r1
 80186f2:	dd87      	ble.n	8018604 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80186f4:	1c5c      	adds	r4, r3, #1
 80186f6:	db85      	blt.n	8018604 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80186f8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80186fa:	429c      	cmp	r4, r3
 80186fc:	dd82      	ble.n	8018604 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80186fe:	e9cd 2003 	strd	r2, r0, [sp, #12]
 8018702:	e9cd 1301 	strd	r1, r3, [sp, #4]
 8018706:	9400      	str	r4, [sp, #0]
 8018708:	9b07      	ldr	r3, [sp, #28]
 801870a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801870c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801870e:	4639      	mov	r1, r7
 8018710:	f7ff fc62 	bl	8017fd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8018714:	e776      	b.n	8018604 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8018716:	bf00      	nop
 8018718:	fffff800 	.word	0xfffff800
 801871c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801871e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8018720:	9c07      	ldr	r4, [sp, #28]
 8018722:	1409      	asrs	r1, r1, #16
 8018724:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018728:	142b      	asrs	r3, r5, #16
 801872a:	fb04 1303 	mla	r3, r4, r3, r1
 801872e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8018730:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 8018734:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8018738:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801873c:	0e1f      	lsrs	r7, r3, #24
 801873e:	2a00      	cmp	r2, #0
 8018740:	f000 811d 	beq.w	801897e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 8018744:	6871      	ldr	r1, [r6, #4]
 8018746:	910d      	str	r1, [sp, #52]	; 0x34
 8018748:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 801874c:	2800      	cmp	r0, #0
 801874e:	f000 811f 	beq.w	8018990 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 8018752:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018754:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018756:	1871      	adds	r1, r6, r1
 8018758:	5934      	ldr	r4, [r6, r4]
 801875a:	6849      	ldr	r1, [r1, #4]
 801875c:	9409      	str	r4, [sp, #36]	; 0x24
 801875e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8018762:	910f      	str	r1, [sp, #60]	; 0x3c
 8018764:	0e0e      	lsrs	r6, r1, #24
 8018766:	b292      	uxth	r2, r2
 8018768:	b280      	uxth	r0, r0
 801876a:	fb02 fb00 	mul.w	fp, r2, r0
 801876e:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8018772:	0112      	lsls	r2, r2, #4
 8018774:	eba2 080b 	sub.w	r8, r2, fp
 8018778:	b280      	uxth	r0, r0
 801877a:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801877e:	fa1f f888 	uxth.w	r8, r8
 8018782:	1a09      	subs	r1, r1, r0
 8018784:	b289      	uxth	r1, r1
 8018786:	fb08 f20e 	mul.w	r2, r8, lr
 801878a:	fb01 2207 	mla	r2, r1, r7, r2
 801878e:	fb00 2209 	mla	r2, r0, r9, r2
 8018792:	fb0b 2206 	mla	r2, fp, r6, r2
 8018796:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801879a:	2a00      	cmp	r2, #0
 801879c:	f000 80e3 	beq.w	8018966 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 80187a0:	2fff      	cmp	r7, #255	; 0xff
 80187a2:	d01a      	beq.n	80187da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x552>
 80187a4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80187a8:	fb07 fc0c 	mul.w	ip, r7, ip
 80187ac:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80187b0:	435f      	muls	r7, r3
 80187b2:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80187b6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80187ba:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80187be:	4463      	add	r3, ip
 80187c0:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 80187c4:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 80187c8:	0a1b      	lsrs	r3, r3, #8
 80187ca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80187ce:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80187d2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80187d6:	ea43 030c 	orr.w	r3, r3, ip
 80187da:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80187de:	d01e      	beq.n	801881e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 80187e0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80187e2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80187e6:	fb0e f707 	mul.w	r7, lr, r7
 80187ea:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80187ee:	fb0e fe0c 	mul.w	lr, lr, ip
 80187f2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80187f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80187fa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80187fe:	44bc      	add	ip, r7
 8018800:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8018804:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8018808:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801880c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018810:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018814:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8018818:	ea4c 040e 	orr.w	r4, ip, lr
 801881c:	940d      	str	r4, [sp, #52]	; 0x34
 801881e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018822:	d01e      	beq.n	8018862 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5da>
 8018824:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018826:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801882a:	fb09 fe0e 	mul.w	lr, r9, lr
 801882e:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 8018832:	fb09 f907 	mul.w	r9, r9, r7
 8018836:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801883a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801883e:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8018842:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8018846:	44f4      	add	ip, lr
 8018848:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 801884c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018850:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018854:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018858:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801885c:	ea4c 0409 	orr.w	r4, ip, r9
 8018860:	9409      	str	r4, [sp, #36]	; 0x24
 8018862:	2eff      	cmp	r6, #255	; 0xff
 8018864:	d01c      	beq.n	80188a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x618>
 8018866:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018868:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801886c:	fb06 fe0e 	mul.w	lr, r6, lr
 8018870:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 8018874:	437e      	muls	r6, r7
 8018876:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801887a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801887e:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8018882:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8018886:	44f4      	add	ip, lr
 8018888:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801888c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018890:	0a36      	lsrs	r6, r6, #8
 8018892:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018896:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801889a:	ea4c 0406 	orr.w	r4, ip, r6
 801889e:	940f      	str	r4, [sp, #60]	; 0x3c
 80188a0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80188a2:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 80188a6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80188a8:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 80188ac:	fb08 f606 	mul.w	r6, r8, r6
 80188b0:	fb01 6607 	mla	r6, r1, r7, r6
 80188b4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80188b8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80188ba:	fb00 6607 	mla	r6, r0, r7, r6
 80188be:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80188c2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80188c4:	fb0b 6607 	mla	r6, fp, r7, r6
 80188c8:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 80188cc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80188d0:	fb08 f807 	mul.w	r8, r8, r7
 80188d4:	fb01 8303 	mla	r3, r1, r3, r8
 80188d8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80188da:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80188de:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80188e0:	fb00 330c 	mla	r3, r0, ip, r3
 80188e4:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 80188e8:	fb0b 3e0e 	mla	lr, fp, lr, r3
 80188ec:	0a36      	lsrs	r6, r6, #8
 80188ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80188f2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80188f6:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80188fa:	ea46 060e 	orr.w	r6, r6, lr
 80188fe:	2aff      	cmp	r2, #255	; 0xff
 8018900:	ea4f 2316 	mov.w	r3, r6, lsr #8
 8018904:	d04a      	beq.n	801899c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 8018906:	f8ba 1000 	ldrh.w	r1, [sl]
 801890a:	43d2      	mvns	r2, r2
 801890c:	120f      	asrs	r7, r1, #8
 801890e:	fa5f fc82 	uxtb.w	ip, r2
 8018912:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018916:	fb07 f70c 	mul.w	r7, r7, ip
 801891a:	10c8      	asrs	r0, r1, #3
 801891c:	00ca      	lsls	r2, r1, #3
 801891e:	1c79      	adds	r1, r7, #1
 8018920:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 8018924:	0c37      	lsrs	r7, r6, #16
 8018926:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 801892a:	b2d2      	uxtb	r2, r2
 801892c:	4925      	ldr	r1, [pc, #148]	; (80189c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x73c>)
 801892e:	fb02 f20c 	mul.w	r2, r2, ip
 8018932:	ea01 2707 	and.w	r7, r1, r7, lsl #8
 8018936:	1c51      	adds	r1, r2, #1
 8018938:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801893c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018940:	b2f6      	uxtb	r6, r6
 8018942:	fb00 f00c 	mul.w	r0, r0, ip
 8018946:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 801894a:	ea47 07d6 	orr.w	r7, r7, r6, lsr #3
 801894e:	1c46      	adds	r6, r0, #1
 8018950:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 8018954:	b2de      	uxtb	r6, r3
 8018956:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801895a:	00f6      	lsls	r6, r6, #3
 801895c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018960:	4337      	orrs	r7, r6
 8018962:	f8aa 7000 	strh.w	r7, [sl]
 8018966:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018968:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801896a:	441a      	add	r2, r3
 801896c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801896e:	9229      	str	r2, [sp, #164]	; 0xa4
 8018970:	441d      	add	r5, r3
 8018972:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018974:	3b01      	subs	r3, #1
 8018976:	f10a 0a02 	add.w	sl, sl, #2
 801897a:	9313      	str	r3, [sp, #76]	; 0x4c
 801897c:	e4e7      	b.n	801834e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc6>
 801897e:	b150      	cbz	r0, 8018996 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70e>
 8018980:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018982:	5871      	ldr	r1, [r6, r1]
 8018984:	9109      	str	r1, [sp, #36]	; 0x24
 8018986:	ea4f 6911 	mov.w	r9, r1, lsr #24
 801898a:	26ff      	movs	r6, #255	; 0xff
 801898c:	46b6      	mov	lr, r6
 801898e:	e6ea      	b.n	8018766 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8018990:	26ff      	movs	r6, #255	; 0xff
 8018992:	46b1      	mov	r9, r6
 8018994:	e6e7      	b.n	8018766 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8018996:	26ff      	movs	r6, #255	; 0xff
 8018998:	46b1      	mov	r9, r6
 801899a:	e7f7      	b.n	801898c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x704>
 801899c:	0972      	lsrs	r2, r6, #5
 801899e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80189a2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80189a6:	f023 0307 	bic.w	r3, r3, #7
 80189aa:	4313      	orrs	r3, r2
 80189ac:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80189b0:	431e      	orrs	r6, r3
 80189b2:	f8aa 6000 	strh.w	r6, [sl]
 80189b6:	e7d6      	b.n	8018966 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 80189b8:	b017      	add	sp, #92	; 0x5c
 80189ba:	ecbd 8b08 	vpop	{d8-d11}
 80189be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80189c2:	bf00      	nop
 80189c4:	fffff800 	.word	0xfffff800

080189c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80189c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80189cc:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 80189d0:	2c00      	cmp	r4, #0
 80189d2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80189d6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80189da:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80189de:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 80189e2:	fb04 ce03 	mla	lr, r4, r3, ip
 80189e6:	db60      	blt.n	8018aaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 80189e8:	45a1      	cmp	r9, r4
 80189ea:	dd5e      	ble.n	8018aaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 80189ec:	f1bc 0f00 	cmp.w	ip, #0
 80189f0:	db59      	blt.n	8018aa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 80189f2:	45e0      	cmp	r8, ip
 80189f4:	dd57      	ble.n	8018aa6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 80189f6:	ea4f 005e 	mov.w	r0, lr, lsr #1
 80189fa:	f01e 0f01 	tst.w	lr, #1
 80189fe:	5c16      	ldrb	r6, [r2, r0]
 8018a00:	bf0c      	ite	eq
 8018a02:	f006 060f 	andeq.w	r6, r6, #15
 8018a06:	1136      	asrne	r6, r6, #4
 8018a08:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8018a0c:	b2f6      	uxtb	r6, r6
 8018a0e:	f11c 0001 	adds.w	r0, ip, #1
 8018a12:	d44d      	bmi.n	8018ab0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8018a14:	4580      	cmp	r8, r0
 8018a16:	dd4b      	ble.n	8018ab0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8018a18:	2d00      	cmp	r5, #0
 8018a1a:	d04b      	beq.n	8018ab4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 8018a1c:	f10e 0a01 	add.w	sl, lr, #1
 8018a20:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8018a24:	f01a 0f01 	tst.w	sl, #1
 8018a28:	5c10      	ldrb	r0, [r2, r0]
 8018a2a:	bf0c      	ite	eq
 8018a2c:	f000 000f 	andeq.w	r0, r0, #15
 8018a30:	1100      	asrne	r0, r0, #4
 8018a32:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8018a36:	b2c0      	uxtb	r0, r0
 8018a38:	3401      	adds	r4, #1
 8018a3a:	d43f      	bmi.n	8018abc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8018a3c:	45a1      	cmp	r9, r4
 8018a3e:	dd3d      	ble.n	8018abc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8018a40:	2f00      	cmp	r7, #0
 8018a42:	f000 809e 	beq.w	8018b82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 8018a46:	f1bc 0f00 	cmp.w	ip, #0
 8018a4a:	db35      	blt.n	8018ab8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8018a4c:	45e0      	cmp	r8, ip
 8018a4e:	dd33      	ble.n	8018ab8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8018a50:	eb03 090e 	add.w	r9, r3, lr
 8018a54:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8018a58:	f019 0f01 	tst.w	r9, #1
 8018a5c:	5d14      	ldrb	r4, [r2, r4]
 8018a5e:	bf0c      	ite	eq
 8018a60:	f004 040f 	andeq.w	r4, r4, #15
 8018a64:	1124      	asrne	r4, r4, #4
 8018a66:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8018a6a:	b2e4      	uxtb	r4, r4
 8018a6c:	f11c 0c01 	adds.w	ip, ip, #1
 8018a70:	d427      	bmi.n	8018ac2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8018a72:	45e0      	cmp	r8, ip
 8018a74:	dd25      	ble.n	8018ac2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8018a76:	b335      	cbz	r5, 8018ac6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 8018a78:	3301      	adds	r3, #1
 8018a7a:	449e      	add	lr, r3
 8018a7c:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8018a80:	f01e 0f01 	tst.w	lr, #1
 8018a84:	5cd2      	ldrb	r2, [r2, r3]
 8018a86:	bf0c      	ite	eq
 8018a88:	f002 020f 	andeq.w	r2, r2, #15
 8018a8c:	1112      	asrne	r2, r2, #4
 8018a8e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8018a92:	b2d3      	uxtb	r3, r2
 8018a94:	2d0f      	cmp	r5, #15
 8018a96:	d917      	bls.n	8018ac8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 8018a98:	4b3c      	ldr	r3, [pc, #240]	; (8018b8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 8018a9a:	4a3d      	ldr	r2, [pc, #244]	; (8018b90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8018a9c:	483d      	ldr	r0, [pc, #244]	; (8018b94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8018a9e:	f240 210d 	movw	r1, #525	; 0x20d
 8018aa2:	f000 fffd 	bl	8019aa0 <__assert_func>
 8018aa6:	2600      	movs	r6, #0
 8018aa8:	e7b1      	b.n	8018a0e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 8018aaa:	2000      	movs	r0, #0
 8018aac:	4606      	mov	r6, r0
 8018aae:	e7c3      	b.n	8018a38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8018ab0:	2000      	movs	r0, #0
 8018ab2:	e7c1      	b.n	8018a38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8018ab4:	4628      	mov	r0, r5
 8018ab6:	e7bf      	b.n	8018a38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8018ab8:	2400      	movs	r4, #0
 8018aba:	e7d7      	b.n	8018a6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8018abc:	2300      	movs	r3, #0
 8018abe:	461c      	mov	r4, r3
 8018ac0:	e7e8      	b.n	8018a94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8018ac2:	2300      	movs	r3, #0
 8018ac4:	e7e6      	b.n	8018a94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8018ac6:	462b      	mov	r3, r5
 8018ac8:	2f0f      	cmp	r7, #15
 8018aca:	d8e5      	bhi.n	8018a98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8018acc:	b2ad      	uxth	r5, r5
 8018ace:	b2bf      	uxth	r7, r7
 8018ad0:	fb05 fc07 	mul.w	ip, r5, r7
 8018ad4:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8018ad8:	012d      	lsls	r5, r5, #4
 8018ada:	b2bf      	uxth	r7, r7
 8018adc:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8018ae0:	eba5 050c 	sub.w	r5, r5, ip
 8018ae4:	1bd2      	subs	r2, r2, r7
 8018ae6:	b2ad      	uxth	r5, r5
 8018ae8:	b292      	uxth	r2, r2
 8018aea:	4368      	muls	r0, r5
 8018aec:	fb06 0002 	mla	r0, r6, r2, r0
 8018af0:	fb07 0404 	mla	r4, r7, r4, r0
 8018af4:	fb0c 4303 	mla	r3, ip, r3, r4
 8018af8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018afc:	2b00      	cmp	r3, #0
 8018afe:	d03e      	beq.n	8018b7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b6>
 8018b00:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 8018b04:	4a24      	ldr	r2, [pc, #144]	; (8018b98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 8018b06:	4343      	muls	r3, r0
 8018b08:	1c58      	adds	r0, r3, #1
 8018b0a:	6816      	ldr	r6, [r2, #0]
 8018b0c:	880a      	ldrh	r2, [r1, #0]
 8018b0e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8018b12:	1200      	asrs	r0, r0, #8
 8018b14:	b284      	uxth	r4, r0
 8018b16:	1215      	asrs	r5, r2, #8
 8018b18:	43c0      	mvns	r0, r0
 8018b1a:	b2c3      	uxtb	r3, r0
 8018b1c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018b20:	0a30      	lsrs	r0, r6, #8
 8018b22:	fb15 f503 	smulbb	r5, r5, r3
 8018b26:	10d7      	asrs	r7, r2, #3
 8018b28:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018b2c:	fb00 5004 	mla	r0, r0, r4, r5
 8018b30:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018b34:	08f5      	lsrs	r5, r6, #3
 8018b36:	00d2      	lsls	r2, r2, #3
 8018b38:	fb17 f703 	smulbb	r7, r7, r3
 8018b3c:	b2d2      	uxtb	r2, r2
 8018b3e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018b42:	00f6      	lsls	r6, r6, #3
 8018b44:	fb05 7504 	mla	r5, r5, r4, r7
 8018b48:	fb12 f303 	smulbb	r3, r2, r3
 8018b4c:	b2f6      	uxtb	r6, r6
 8018b4e:	fb06 3304 	mla	r3, r6, r4, r3
 8018b52:	b2ad      	uxth	r5, r5
 8018b54:	b29a      	uxth	r2, r3
 8018b56:	b280      	uxth	r0, r0
 8018b58:	1c6b      	adds	r3, r5, #1
 8018b5a:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8018b5e:	1c44      	adds	r4, r0, #1
 8018b60:	095b      	lsrs	r3, r3, #5
 8018b62:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 8018b66:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018b6a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018b6e:	4303      	orrs	r3, r0
 8018b70:	1c50      	adds	r0, r2, #1
 8018b72:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8018b76:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018b7a:	4313      	orrs	r3, r2
 8018b7c:	800b      	strh	r3, [r1, #0]
 8018b7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018b82:	2d0f      	cmp	r5, #15
 8018b84:	d888      	bhi.n	8018a98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8018b86:	463b      	mov	r3, r7
 8018b88:	463c      	mov	r4, r7
 8018b8a:	e79f      	b.n	8018acc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8018b8c:	0801d6d1 	.word	0x0801d6d1
 8018b90:	0801dc29 	.word	0x0801dc29
 8018b94:	0801d759 	.word	0x0801d759
 8018b98:	20012184 	.word	0x20012184

08018b9c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018b9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ba0:	ed2d 8b08 	vpush	{d8-d11}
 8018ba4:	b099      	sub	sp, #100	; 0x64
 8018ba6:	e9dd 462b 	ldrd	r4, r6, [sp, #172]	; 0xac
 8018baa:	9309      	str	r3, [sp, #36]	; 0x24
 8018bac:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 8018bb0:	930a      	str	r3, [sp, #40]	; 0x28
 8018bb2:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8018bb6:	9216      	str	r2, [sp, #88]	; 0x58
 8018bb8:	930b      	str	r3, [sp, #44]	; 0x2c
 8018bba:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8018bbc:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8018bc0:	910f      	str	r1, [sp, #60]	; 0x3c
 8018bc2:	9310      	str	r3, [sp, #64]	; 0x40
 8018bc4:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8018bc8:	9017      	str	r0, [sp, #92]	; 0x5c
 8018bca:	6850      	ldr	r0, [r2, #4]
 8018bcc:	6812      	ldr	r2, [r2, #0]
 8018bce:	fb00 1303 	mla	r3, r0, r3, r1
 8018bd2:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 8018bd6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018bd8:	3301      	adds	r3, #1
 8018bda:	f023 0301 	bic.w	r3, r3, #1
 8018bde:	930c      	str	r3, [sp, #48]	; 0x30
 8018be0:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8018be2:	681f      	ldr	r7, [r3, #0]
 8018be4:	eeb0 aa40 	vmov.f32	s20, s0
 8018be8:	eef0 9a60 	vmov.f32	s19, s1
 8018bec:	eeb0 9a41 	vmov.f32	s18, s2
 8018bf0:	eeb0 8a62 	vmov.f32	s16, s5
 8018bf4:	eef0 8a43 	vmov.f32	s17, s6
 8018bf8:	eef0 ba44 	vmov.f32	s23, s8
 8018bfc:	eeb0 ba64 	vmov.f32	s22, s9
 8018c00:	eef0 aa45 	vmov.f32	s21, s10
 8018c04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018c06:	2b00      	cmp	r3, #0
 8018c08:	dc03      	bgt.n	8018c12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8018c0a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018c0c:	2b00      	cmp	r3, #0
 8018c0e:	f340 8267 	ble.w	80190e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 8018c12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018c14:	2b00      	cmp	r3, #0
 8018c16:	f340 811e 	ble.w	8018e56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ba>
 8018c1a:	1422      	asrs	r2, r4, #16
 8018c1c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018c20:	d42d      	bmi.n	8018c7e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8018c22:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018c24:	1c51      	adds	r1, r2, #1
 8018c26:	4288      	cmp	r0, r1
 8018c28:	dd2c      	ble.n	8018c84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8018c2a:	2b00      	cmp	r3, #0
 8018c2c:	db2a      	blt.n	8018c84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8018c2e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018c30:	1c59      	adds	r1, r3, #1
 8018c32:	4288      	cmp	r0, r1
 8018c34:	dd26      	ble.n	8018c84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8018c36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018c38:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018c3a:	3b01      	subs	r3, #1
 8018c3c:	fb02 4203 	mla	r2, r2, r3, r4
 8018c40:	1412      	asrs	r2, r2, #16
 8018c42:	d42a      	bmi.n	8018c9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8018c44:	990a      	ldr	r1, [sp, #40]	; 0x28
 8018c46:	3201      	adds	r2, #1
 8018c48:	4291      	cmp	r1, r2
 8018c4a:	dd26      	ble.n	8018c9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8018c4c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8018c4e:	fb02 6303 	mla	r3, r2, r3, r6
 8018c52:	141b      	asrs	r3, r3, #16
 8018c54:	d421      	bmi.n	8018c9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8018c56:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018c58:	3301      	adds	r3, #1
 8018c5a:	429a      	cmp	r2, r3
 8018c5c:	dd1d      	ble.n	8018c9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8018c5e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8018c62:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8018c66:	9311      	str	r3, [sp, #68]	; 0x44
 8018c68:	46d1      	mov	r9, sl
 8018c6a:	f1bb 0f00 	cmp.w	fp, #0
 8018c6e:	f300 8162 	bgt.w	8018f36 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x39a>
 8018c72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018c74:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8018c78:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8018c7c:	e0ed      	b.n	8018e5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8018c7e:	1c51      	adds	r1, r2, #1
 8018c80:	f040 80df 	bne.w	8018e42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8018c84:	990a      	ldr	r1, [sp, #40]	; 0x28
 8018c86:	4291      	cmp	r1, r2
 8018c88:	f340 80db 	ble.w	8018e42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8018c8c:	1c5a      	adds	r2, r3, #1
 8018c8e:	f2c0 80d8 	blt.w	8018e42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8018c92:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018c94:	4293      	cmp	r3, r2
 8018c96:	f280 80d4 	bge.w	8018e42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8018c9a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8018c9e:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8018ca2:	9311      	str	r3, [sp, #68]	; 0x44
 8018ca4:	46d0      	mov	r8, sl
 8018ca6:	f1b9 0f00 	cmp.w	r9, #0
 8018caa:	dde2      	ble.n	8018c72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8018cac:	1420      	asrs	r0, r4, #16
 8018cae:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018cb2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018cb6:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8018cba:	f100 8121 	bmi.w	8018f00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x364>
 8018cbe:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8018cc0:	f100 0c01 	add.w	ip, r0, #1
 8018cc4:	4565      	cmp	r5, ip
 8018cc6:	f340 811d 	ble.w	8018f04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8018cca:	2b00      	cmp	r3, #0
 8018ccc:	f2c0 811a 	blt.w	8018f04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8018cd0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8018cd2:	f103 0c01 	add.w	ip, r3, #1
 8018cd6:	4565      	cmp	r5, ip
 8018cd8:	f340 8114 	ble.w	8018f04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8018cdc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018cde:	fb03 0305 	mla	r3, r3, r5, r0
 8018ce2:	0858      	lsrs	r0, r3, #1
 8018ce4:	07dd      	lsls	r5, r3, #31
 8018ce6:	5c38      	ldrb	r0, [r7, r0]
 8018ce8:	bf54      	ite	pl
 8018cea:	f000 000f 	andpl.w	r0, r0, #15
 8018cee:	1100      	asrmi	r0, r0, #4
 8018cf0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8018cf4:	b2c0      	uxtb	r0, r0
 8018cf6:	2a00      	cmp	r2, #0
 8018cf8:	f000 80ee 	beq.w	8018ed8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33c>
 8018cfc:	f103 0e01 	add.w	lr, r3, #1
 8018d00:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8018d04:	f01e 0f01 	tst.w	lr, #1
 8018d08:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018d0c:	bf0c      	ite	eq
 8018d0e:	f00c 0c0f 	andeq.w	ip, ip, #15
 8018d12:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8018d16:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018d1a:	fa5f f58c 	uxtb.w	r5, ip
 8018d1e:	9512      	str	r5, [sp, #72]	; 0x48
 8018d20:	b1f9      	cbz	r1, 8018d62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 8018d22:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018d24:	442b      	add	r3, r5
 8018d26:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018d2a:	07dd      	lsls	r5, r3, #31
 8018d2c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018d30:	bf54      	ite	pl
 8018d32:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018d36:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8018d3a:	3301      	adds	r3, #1
 8018d3c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018d40:	fa5f f58c 	uxtb.w	r5, ip
 8018d44:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018d48:	950d      	str	r5, [sp, #52]	; 0x34
 8018d4a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018d4e:	07dd      	lsls	r5, r3, #31
 8018d50:	bf54      	ite	pl
 8018d52:	f00c 030f 	andpl.w	r3, ip, #15
 8018d56:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8018d5a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8018d5e:	b2db      	uxtb	r3, r3
 8018d60:	9313      	str	r3, [sp, #76]	; 0x4c
 8018d62:	b292      	uxth	r2, r2
 8018d64:	b289      	uxth	r1, r1
 8018d66:	fb02 f301 	mul.w	r3, r2, r1
 8018d6a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8018d6e:	0112      	lsls	r2, r2, #4
 8018d70:	b289      	uxth	r1, r1
 8018d72:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8018d76:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8018d78:	1ad2      	subs	r2, r2, r3
 8018d7a:	ebac 0c01 	sub.w	ip, ip, r1
 8018d7e:	b292      	uxth	r2, r2
 8018d80:	436a      	muls	r2, r5
 8018d82:	fa1f fc8c 	uxth.w	ip, ip
 8018d86:	fb00 200c 	mla	r0, r0, ip, r2
 8018d8a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018d8c:	fb01 0102 	mla	r1, r1, r2, r0
 8018d90:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8018d92:	fb03 1302 	mla	r3, r3, r2, r1
 8018d96:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018d9a:	2b00      	cmp	r3, #0
 8018d9c:	d048      	beq.n	8018e30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8018d9e:	9910      	ldr	r1, [sp, #64]	; 0x40
 8018da0:	4ace      	ldr	r2, [pc, #824]	; (80190dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x540>)
 8018da2:	434b      	muls	r3, r1
 8018da4:	1c59      	adds	r1, r3, #1
 8018da6:	f8d2 e000 	ldr.w	lr, [r2]
 8018daa:	f8b8 2000 	ldrh.w	r2, [r8]
 8018dae:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018db2:	121b      	asrs	r3, r3, #8
 8018db4:	b299      	uxth	r1, r3
 8018db6:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8018dba:	43db      	mvns	r3, r3
 8018dbc:	b2db      	uxtb	r3, r3
 8018dbe:	ea4f 201e 	mov.w	r0, lr, lsr #8
 8018dc2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018dc6:	fb1c fc03 	smulbb	ip, ip, r3
 8018dca:	ea4f 0be2 	mov.w	fp, r2, asr #3
 8018dce:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018dd2:	fb00 c001 	mla	r0, r0, r1, ip
 8018dd6:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8018dda:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 8018dde:	fb1b fb03 	smulbb	fp, fp, r3
 8018de2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018de6:	00d2      	lsls	r2, r2, #3
 8018de8:	fb0c bc01 	mla	ip, ip, r1, fp
 8018dec:	b2d2      	uxtb	r2, r2
 8018dee:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018df2:	fb12 f303 	smulbb	r3, r2, r3
 8018df6:	fa1f fc8c 	uxth.w	ip, ip
 8018dfa:	fa5f fe8e 	uxtb.w	lr, lr
 8018dfe:	b280      	uxth	r0, r0
 8018e00:	fb0e 3101 	mla	r1, lr, r1, r3
 8018e04:	f10c 0201 	add.w	r2, ip, #1
 8018e08:	b289      	uxth	r1, r1
 8018e0a:	1c43      	adds	r3, r0, #1
 8018e0c:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8018e10:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018e14:	0952      	lsrs	r2, r2, #5
 8018e16:	1c4b      	adds	r3, r1, #1
 8018e18:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018e1c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018e20:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8018e24:	4310      	orrs	r0, r2
 8018e26:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8018e2a:	4308      	orrs	r0, r1
 8018e2c:	f8a8 0000 	strh.w	r0, [r8]
 8018e30:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018e32:	441c      	add	r4, r3
 8018e34:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018e36:	f108 0802 	add.w	r8, r8, #2
 8018e3a:	441e      	add	r6, r3
 8018e3c:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8018e40:	e731      	b.n	8018ca6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 8018e42:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8018e44:	441c      	add	r4, r3
 8018e46:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018e48:	441e      	add	r6, r3
 8018e4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018e4c:	3b01      	subs	r3, #1
 8018e4e:	9309      	str	r3, [sp, #36]	; 0x24
 8018e50:	f10a 0a02 	add.w	sl, sl, #2
 8018e54:	e6dd      	b.n	8018c12 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8018e56:	f47f aeee 	bne.w	8018c36 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8018e5a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018e5c:	2b00      	cmp	r3, #0
 8018e5e:	f340 813f 	ble.w	80190e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 8018e62:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018e66:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018e6a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018e6e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018e70:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018e74:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018e78:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018e7c:	eef0 6a48 	vmov.f32	s13, s16
 8018e80:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018e84:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018e88:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018e8c:	ee16 4a90 	vmov	r4, s13
 8018e90:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018e94:	eef0 6a68 	vmov.f32	s13, s17
 8018e98:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018e9c:	ee18 2a10 	vmov	r2, s16
 8018ea0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018ea4:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ea8:	ee18 2a90 	vmov	r2, s17
 8018eac:	932d      	str	r3, [sp, #180]	; 0xb4
 8018eae:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018eb0:	fb92 f3f3 	sdiv	r3, r2, r3
 8018eb4:	932e      	str	r3, [sp, #184]	; 0xb8
 8018eb6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018eb8:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8018eba:	3b01      	subs	r3, #1
 8018ebc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018ec0:	930f      	str	r3, [sp, #60]	; 0x3c
 8018ec2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018ec4:	bf08      	it	eq
 8018ec6:	4613      	moveq	r3, r2
 8018ec8:	ee16 6a90 	vmov	r6, s13
 8018ecc:	9309      	str	r3, [sp, #36]	; 0x24
 8018ece:	eef0 8a67 	vmov.f32	s17, s15
 8018ed2:	eeb0 8a47 	vmov.f32	s16, s14
 8018ed6:	e695      	b.n	8018c04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8018ed8:	2900      	cmp	r1, #0
 8018eda:	f43f af42 	beq.w	8018d62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 8018ede:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018ee0:	442b      	add	r3, r5
 8018ee2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018ee6:	07db      	lsls	r3, r3, #31
 8018ee8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018eec:	bf54      	ite	pl
 8018eee:	f00c 030f 	andpl.w	r3, ip, #15
 8018ef2:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8018ef6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8018efa:	b2db      	uxtb	r3, r3
 8018efc:	930d      	str	r3, [sp, #52]	; 0x34
 8018efe:	e730      	b.n	8018d62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 8018f00:	1c45      	adds	r5, r0, #1
 8018f02:	d195      	bne.n	8018e30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8018f04:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8018f06:	4285      	cmp	r5, r0
 8018f08:	dd92      	ble.n	8018e30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8018f0a:	1c5d      	adds	r5, r3, #1
 8018f0c:	db90      	blt.n	8018e30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8018f0e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8018f10:	429d      	cmp	r5, r3
 8018f12:	dd8d      	ble.n	8018e30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8018f14:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8018f18:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018f1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018f1c:	9301      	str	r3, [sp, #4]
 8018f1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018f20:	9002      	str	r0, [sp, #8]
 8018f22:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8018f26:	9300      	str	r3, [sp, #0]
 8018f28:	463a      	mov	r2, r7
 8018f2a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018f2c:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8018f2e:	4641      	mov	r1, r8
 8018f30:	f7ff fd4a 	bl	80189c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8018f34:	e77c      	b.n	8018e30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x294>
 8018f36:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018f38:	1422      	asrs	r2, r4, #16
 8018f3a:	1433      	asrs	r3, r6, #16
 8018f3c:	fb05 2303 	mla	r3, r5, r3, r2
 8018f40:	085a      	lsrs	r2, r3, #1
 8018f42:	07dd      	lsls	r5, r3, #31
 8018f44:	5cba      	ldrb	r2, [r7, r2]
 8018f46:	bf54      	ite	pl
 8018f48:	f002 020f 	andpl.w	r2, r2, #15
 8018f4c:	1112      	asrmi	r2, r2, #4
 8018f4e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8018f52:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8018f56:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018f5a:	b2d2      	uxtb	r2, r2
 8018f5c:	2900      	cmp	r1, #0
 8018f5e:	f000 80a8 	beq.w	80190b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x516>
 8018f62:	f103 0e01 	add.w	lr, r3, #1
 8018f66:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8018f6a:	f01e 0f01 	tst.w	lr, #1
 8018f6e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018f72:	bf0c      	ite	eq
 8018f74:	f00c 0c0f 	andeq.w	ip, ip, #15
 8018f78:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8018f7c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018f80:	fa5f f58c 	uxtb.w	r5, ip
 8018f84:	9514      	str	r5, [sp, #80]	; 0x50
 8018f86:	b300      	cbz	r0, 8018fca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8018f88:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018f8a:	442b      	add	r3, r5
 8018f8c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018f90:	07dd      	lsls	r5, r3, #31
 8018f92:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018f96:	bf54      	ite	pl
 8018f98:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018f9c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8018fa0:	3301      	adds	r3, #1
 8018fa2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018fa6:	fa5f f58c 	uxtb.w	r5, ip
 8018faa:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018fae:	950e      	str	r5, [sp, #56]	; 0x38
 8018fb0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018fb4:	07dd      	lsls	r5, r3, #31
 8018fb6:	bf54      	ite	pl
 8018fb8:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018fbc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8018fc0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018fc4:	fa5f f38c 	uxtb.w	r3, ip
 8018fc8:	9315      	str	r3, [sp, #84]	; 0x54
 8018fca:	b289      	uxth	r1, r1
 8018fcc:	b280      	uxth	r0, r0
 8018fce:	fb01 f300 	mul.w	r3, r1, r0
 8018fd2:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8018fd6:	0109      	lsls	r1, r1, #4
 8018fd8:	b280      	uxth	r0, r0
 8018fda:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8018fde:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018fe0:	1ac9      	subs	r1, r1, r3
 8018fe2:	ebac 0c00 	sub.w	ip, ip, r0
 8018fe6:	b289      	uxth	r1, r1
 8018fe8:	4369      	muls	r1, r5
 8018fea:	fa1f fc8c 	uxth.w	ip, ip
 8018fee:	fb02 120c 	mla	r2, r2, ip, r1
 8018ff2:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018ff4:	fb00 2001 	mla	r0, r0, r1, r2
 8018ff8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8018ffa:	fb03 0302 	mla	r3, r3, r2, r0
 8018ffe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019002:	2b00      	cmp	r3, #0
 8019004:	d04c      	beq.n	80190a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x504>
 8019006:	9910      	ldr	r1, [sp, #64]	; 0x40
 8019008:	4a34      	ldr	r2, [pc, #208]	; (80190dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x540>)
 801900a:	434b      	muls	r3, r1
 801900c:	1c59      	adds	r1, r3, #1
 801900e:	f8d2 e000 	ldr.w	lr, [r2]
 8019012:	f8b9 2000 	ldrh.w	r2, [r9]
 8019016:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801901a:	121b      	asrs	r3, r3, #8
 801901c:	b299      	uxth	r1, r3
 801901e:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019022:	43db      	mvns	r3, r3
 8019024:	b2db      	uxtb	r3, r3
 8019026:	ea4f 201e 	mov.w	r0, lr, lsr #8
 801902a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801902e:	fb1c fc03 	smulbb	ip, ip, r3
 8019032:	ea4f 08e2 	mov.w	r8, r2, asr #3
 8019036:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801903a:	fb00 c001 	mla	r0, r0, r1, ip
 801903e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019042:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 8019046:	fb18 f803 	smulbb	r8, r8, r3
 801904a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801904e:	00d2      	lsls	r2, r2, #3
 8019050:	fb0c 8c01 	mla	ip, ip, r1, r8
 8019054:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019058:	b2d2      	uxtb	r2, r2
 801905a:	fa1f fc8c 	uxth.w	ip, ip
 801905e:	fa5f fe8e 	uxtb.w	lr, lr
 8019062:	fb12 f203 	smulbb	r2, r2, r3
 8019066:	b280      	uxth	r0, r0
 8019068:	fb0e 2201 	mla	r2, lr, r1, r2
 801906c:	f10c 0801 	add.w	r8, ip, #1
 8019070:	b292      	uxth	r2, r2
 8019072:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 8019076:	f100 0801 	add.w	r8, r0, #1
 801907a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801907e:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 8019082:	1c51      	adds	r1, r2, #1
 8019084:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8019088:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801908c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019090:	ea4c 0c00 	orr.w	ip, ip, r0
 8019094:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019098:	ea4c 0c02 	orr.w	ip, ip, r2
 801909c:	f8a9 c000 	strh.w	ip, [r9]
 80190a0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80190a2:	441c      	add	r4, r3
 80190a4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80190a6:	f109 0902 	add.w	r9, r9, #2
 80190aa:	441e      	add	r6, r3
 80190ac:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 80190b0:	e5db      	b.n	8018c6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 80190b2:	2800      	cmp	r0, #0
 80190b4:	d089      	beq.n	8018fca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 80190b6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80190b8:	442b      	add	r3, r5
 80190ba:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80190be:	07db      	lsls	r3, r3, #31
 80190c0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80190c4:	bf54      	ite	pl
 80190c6:	f00c 0c0f 	andpl.w	ip, ip, #15
 80190ca:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80190ce:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80190d2:	fa5f f38c 	uxtb.w	r3, ip
 80190d6:	930e      	str	r3, [sp, #56]	; 0x38
 80190d8:	e777      	b.n	8018fca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 80190da:	bf00      	nop
 80190dc:	20012184 	.word	0x20012184
 80190e0:	b019      	add	sp, #100	; 0x64
 80190e2:	ecbd 8b08 	vpop	{d8-d11}
 80190e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80190ea:	bf00      	nop

080190ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80190ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80190f0:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 80190f4:	2c00      	cmp	r4, #0
 80190f6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80190fa:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80190fe:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019102:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8019106:	fb04 ce03 	mla	lr, r4, r3, ip
 801910a:	db60      	blt.n	80191ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801910c:	45a1      	cmp	r9, r4
 801910e:	dd5e      	ble.n	80191ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8019110:	f1bc 0f00 	cmp.w	ip, #0
 8019114:	db59      	blt.n	80191ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8019116:	45e0      	cmp	r8, ip
 8019118:	dd57      	ble.n	80191ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801911a:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801911e:	f01e 0f01 	tst.w	lr, #1
 8019122:	5c16      	ldrb	r6, [r2, r0]
 8019124:	bf0c      	ite	eq
 8019126:	f006 060f 	andeq.w	r6, r6, #15
 801912a:	1136      	asrne	r6, r6, #4
 801912c:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8019130:	b2f6      	uxtb	r6, r6
 8019132:	f11c 0001 	adds.w	r0, ip, #1
 8019136:	d44d      	bmi.n	80191d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8019138:	4580      	cmp	r8, r0
 801913a:	dd4b      	ble.n	80191d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801913c:	2d00      	cmp	r5, #0
 801913e:	d04b      	beq.n	80191d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 8019140:	f10e 0a01 	add.w	sl, lr, #1
 8019144:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8019148:	f01a 0f01 	tst.w	sl, #1
 801914c:	5c10      	ldrb	r0, [r2, r0]
 801914e:	bf0c      	ite	eq
 8019150:	f000 000f 	andeq.w	r0, r0, #15
 8019154:	1100      	asrne	r0, r0, #4
 8019156:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801915a:	b2c0      	uxtb	r0, r0
 801915c:	3401      	adds	r4, #1
 801915e:	d43f      	bmi.n	80191e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8019160:	45a1      	cmp	r9, r4
 8019162:	dd3d      	ble.n	80191e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8019164:	2f00      	cmp	r7, #0
 8019166:	f000 8097 	beq.w	8019298 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 801916a:	f1bc 0f00 	cmp.w	ip, #0
 801916e:	db35      	blt.n	80191dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8019170:	45e0      	cmp	r8, ip
 8019172:	dd33      	ble.n	80191dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8019174:	eb03 090e 	add.w	r9, r3, lr
 8019178:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801917c:	f019 0f01 	tst.w	r9, #1
 8019180:	5d14      	ldrb	r4, [r2, r4]
 8019182:	bf0c      	ite	eq
 8019184:	f004 040f 	andeq.w	r4, r4, #15
 8019188:	1124      	asrne	r4, r4, #4
 801918a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801918e:	b2e4      	uxtb	r4, r4
 8019190:	f11c 0c01 	adds.w	ip, ip, #1
 8019194:	d427      	bmi.n	80191e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8019196:	45e0      	cmp	r8, ip
 8019198:	dd25      	ble.n	80191e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801919a:	b335      	cbz	r5, 80191ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801919c:	3301      	adds	r3, #1
 801919e:	449e      	add	lr, r3
 80191a0:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80191a4:	f01e 0f01 	tst.w	lr, #1
 80191a8:	5cd2      	ldrb	r2, [r2, r3]
 80191aa:	bf0c      	ite	eq
 80191ac:	f002 020f 	andeq.w	r2, r2, #15
 80191b0:	1112      	asrne	r2, r2, #4
 80191b2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80191b6:	b2d3      	uxtb	r3, r2
 80191b8:	2d0f      	cmp	r5, #15
 80191ba:	d917      	bls.n	80191ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 80191bc:	4b39      	ldr	r3, [pc, #228]	; (80192a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 80191be:	4a3a      	ldr	r2, [pc, #232]	; (80192a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 80191c0:	483a      	ldr	r0, [pc, #232]	; (80192ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 80191c2:	f240 210d 	movw	r1, #525	; 0x20d
 80191c6:	f000 fc6b 	bl	8019aa0 <__assert_func>
 80191ca:	2600      	movs	r6, #0
 80191cc:	e7b1      	b.n	8019132 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 80191ce:	2000      	movs	r0, #0
 80191d0:	4606      	mov	r6, r0
 80191d2:	e7c3      	b.n	801915c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 80191d4:	2000      	movs	r0, #0
 80191d6:	e7c1      	b.n	801915c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 80191d8:	4628      	mov	r0, r5
 80191da:	e7bf      	b.n	801915c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 80191dc:	2400      	movs	r4, #0
 80191de:	e7d7      	b.n	8019190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 80191e0:	2300      	movs	r3, #0
 80191e2:	461c      	mov	r4, r3
 80191e4:	e7e8      	b.n	80191b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 80191e6:	2300      	movs	r3, #0
 80191e8:	e7e6      	b.n	80191b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 80191ea:	462b      	mov	r3, r5
 80191ec:	2f0f      	cmp	r7, #15
 80191ee:	d8e5      	bhi.n	80191bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 80191f0:	b2ad      	uxth	r5, r5
 80191f2:	b2bf      	uxth	r7, r7
 80191f4:	fb05 fc07 	mul.w	ip, r5, r7
 80191f8:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 80191fc:	012d      	lsls	r5, r5, #4
 80191fe:	b2bf      	uxth	r7, r7
 8019200:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8019204:	eba5 050c 	sub.w	r5, r5, ip
 8019208:	1bd2      	subs	r2, r2, r7
 801920a:	b2ad      	uxth	r5, r5
 801920c:	b292      	uxth	r2, r2
 801920e:	4368      	muls	r0, r5
 8019210:	fb06 0002 	mla	r0, r6, r2, r0
 8019214:	fb07 0404 	mla	r4, r7, r4, r0
 8019218:	fb0c 4303 	mla	r3, ip, r3, r4
 801921c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019220:	2b00      	cmp	r3, #0
 8019222:	d037      	beq.n	8019294 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>
 8019224:	4a22      	ldr	r2, [pc, #136]	; (80192b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 8019226:	6816      	ldr	r6, [r2, #0]
 8019228:	880a      	ldrh	r2, [r1, #0]
 801922a:	b298      	uxth	r0, r3
 801922c:	1215      	asrs	r5, r2, #8
 801922e:	43db      	mvns	r3, r3
 8019230:	b2db      	uxtb	r3, r3
 8019232:	0a34      	lsrs	r4, r6, #8
 8019234:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019238:	fb15 f503 	smulbb	r5, r5, r3
 801923c:	10d7      	asrs	r7, r2, #3
 801923e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8019242:	fb04 5400 	mla	r4, r4, r0, r5
 8019246:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801924a:	08f5      	lsrs	r5, r6, #3
 801924c:	fb17 f703 	smulbb	r7, r7, r3
 8019250:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019254:	00d2      	lsls	r2, r2, #3
 8019256:	fb05 7500 	mla	r5, r5, r0, r7
 801925a:	b2d2      	uxtb	r2, r2
 801925c:	00f6      	lsls	r6, r6, #3
 801925e:	fb12 f303 	smulbb	r3, r2, r3
 8019262:	b2ad      	uxth	r5, r5
 8019264:	b2f6      	uxtb	r6, r6
 8019266:	b2a4      	uxth	r4, r4
 8019268:	fb06 3000 	mla	r0, r6, r0, r3
 801926c:	1c6b      	adds	r3, r5, #1
 801926e:	b280      	uxth	r0, r0
 8019270:	1c62      	adds	r2, r4, #1
 8019272:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8019276:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801927a:	095b      	lsrs	r3, r3, #5
 801927c:	1c42      	adds	r2, r0, #1
 801927e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019282:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8019286:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801928a:	4323      	orrs	r3, r4
 801928c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8019290:	4303      	orrs	r3, r0
 8019292:	800b      	strh	r3, [r1, #0]
 8019294:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019298:	2d0f      	cmp	r5, #15
 801929a:	d88f      	bhi.n	80191bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801929c:	463b      	mov	r3, r7
 801929e:	463c      	mov	r4, r7
 80192a0:	e7a6      	b.n	80191f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 80192a2:	bf00      	nop
 80192a4:	0801d6d1 	.word	0x0801d6d1
 80192a8:	0801dc29 	.word	0x0801dc29
 80192ac:	0801d759 	.word	0x0801d759
 80192b0:	20012184 	.word	0x20012184

080192b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80192b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192b8:	ed2d 8b08 	vpush	{d8-d11}
 80192bc:	b095      	sub	sp, #84	; 0x54
 80192be:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80192c2:	9306      	str	r3, [sp, #24]
 80192c4:	f9bd 30b8 	ldrsh.w	r3, [sp, #184]	; 0xb8
 80192c8:	9307      	str	r3, [sp, #28]
 80192ca:	920d      	str	r2, [sp, #52]	; 0x34
 80192cc:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 80192d0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80192d2:	910a      	str	r1, [sp, #40]	; 0x28
 80192d4:	9308      	str	r3, [sp, #32]
 80192d6:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80192da:	9013      	str	r0, [sp, #76]	; 0x4c
 80192dc:	6850      	ldr	r0, [r2, #4]
 80192de:	6812      	ldr	r2, [r2, #0]
 80192e0:	fb00 1303 	mla	r3, r0, r3, r1
 80192e4:	eb02 0b43 	add.w	fp, r2, r3, lsl #1
 80192e8:	9b07      	ldr	r3, [sp, #28]
 80192ea:	3301      	adds	r3, #1
 80192ec:	f023 0301 	bic.w	r3, r3, #1
 80192f0:	9309      	str	r3, [sp, #36]	; 0x24
 80192f2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80192f4:	681f      	ldr	r7, [r3, #0]
 80192f6:	eeb0 aa40 	vmov.f32	s20, s0
 80192fa:	eef0 9a60 	vmov.f32	s19, s1
 80192fe:	eeb0 9a41 	vmov.f32	s18, s2
 8019302:	eeb0 8a62 	vmov.f32	s16, s5
 8019306:	eef0 8a43 	vmov.f32	s17, s6
 801930a:	eef0 ba44 	vmov.f32	s23, s8
 801930e:	eeb0 ba64 	vmov.f32	s22, s9
 8019312:	eef0 aa45 	vmov.f32	s21, s10
 8019316:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019318:	2b00      	cmp	r3, #0
 801931a:	dc03      	bgt.n	8019324 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801931c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801931e:	2b00      	cmp	r3, #0
 8019320:	f340 825c 	ble.w	80197dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x528>
 8019324:	9b06      	ldr	r3, [sp, #24]
 8019326:	2b00      	cmp	r3, #0
 8019328:	f340 8119 	ble.w	801955e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2aa>
 801932c:	1422      	asrs	r2, r4, #16
 801932e:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019332:	d42d      	bmi.n	8019390 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8019334:	9807      	ldr	r0, [sp, #28]
 8019336:	1c51      	adds	r1, r2, #1
 8019338:	4288      	cmp	r0, r1
 801933a:	dd2c      	ble.n	8019396 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801933c:	2b00      	cmp	r3, #0
 801933e:	db2a      	blt.n	8019396 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8019340:	9808      	ldr	r0, [sp, #32]
 8019342:	1c59      	adds	r1, r3, #1
 8019344:	4288      	cmp	r0, r1
 8019346:	dd26      	ble.n	8019396 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8019348:	9b06      	ldr	r3, [sp, #24]
 801934a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801934c:	3b01      	subs	r3, #1
 801934e:	fb02 4203 	mla	r2, r2, r3, r4
 8019352:	1412      	asrs	r2, r2, #16
 8019354:	d42a      	bmi.n	80193ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 8019356:	9907      	ldr	r1, [sp, #28]
 8019358:	3201      	adds	r2, #1
 801935a:	4291      	cmp	r1, r2
 801935c:	dd26      	ble.n	80193ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801935e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8019360:	fb02 6303 	mla	r3, r2, r3, r6
 8019364:	141b      	asrs	r3, r3, #16
 8019366:	d421      	bmi.n	80193ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 8019368:	9a08      	ldr	r2, [sp, #32]
 801936a:	3301      	adds	r3, #1
 801936c:	429a      	cmp	r2, r3
 801936e:	dd1d      	ble.n	80193ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 8019370:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8019374:	f8dd a018 	ldr.w	sl, [sp, #24]
 8019378:	930e      	str	r3, [sp, #56]	; 0x38
 801937a:	46d8      	mov	r8, fp
 801937c:	f1ba 0f00 	cmp.w	sl, #0
 8019380:	f300 8161 	bgt.w	8019646 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8019384:	9b06      	ldr	r3, [sp, #24]
 8019386:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801938a:	eb0b 0b45 	add.w	fp, fp, r5, lsl #1
 801938e:	e0e8      	b.n	8019562 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ae>
 8019390:	1c51      	adds	r1, r2, #1
 8019392:	f040 80da 	bne.w	801954a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019396:	9907      	ldr	r1, [sp, #28]
 8019398:	4291      	cmp	r1, r2
 801939a:	f340 80d6 	ble.w	801954a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801939e:	1c5a      	adds	r2, r3, #1
 80193a0:	f2c0 80d3 	blt.w	801954a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 80193a4:	9a08      	ldr	r2, [sp, #32]
 80193a6:	4293      	cmp	r3, r2
 80193a8:	f280 80cf 	bge.w	801954a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 80193ac:	f8dd 9018 	ldr.w	r9, [sp, #24]
 80193b0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 80193b4:	46d8      	mov	r8, fp
 80193b6:	f1b9 0f00 	cmp.w	r9, #0
 80193ba:	dde3      	ble.n	8019384 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 80193bc:	1420      	asrs	r0, r4, #16
 80193be:	ea4f 4326 	mov.w	r3, r6, asr #16
 80193c2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80193c6:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80193ca:	f100 8124 	bmi.w	8019616 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 80193ce:	9d07      	ldr	r5, [sp, #28]
 80193d0:	f100 0c01 	add.w	ip, r0, #1
 80193d4:	4565      	cmp	r5, ip
 80193d6:	f340 8120 	ble.w	801961a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 80193da:	2b00      	cmp	r3, #0
 80193dc:	f2c0 811d 	blt.w	801961a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 80193e0:	9d08      	ldr	r5, [sp, #32]
 80193e2:	f103 0c01 	add.w	ip, r3, #1
 80193e6:	4565      	cmp	r5, ip
 80193e8:	f340 8117 	ble.w	801961a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 80193ec:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80193ee:	fb03 0305 	mla	r3, r3, r5, r0
 80193f2:	0858      	lsrs	r0, r3, #1
 80193f4:	07dd      	lsls	r5, r3, #31
 80193f6:	5c38      	ldrb	r0, [r7, r0]
 80193f8:	bf54      	ite	pl
 80193fa:	f000 000f 	andpl.w	r0, r0, #15
 80193fe:	1100      	asrmi	r0, r0, #4
 8019400:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019404:	b2c0      	uxtb	r0, r0
 8019406:	2a00      	cmp	r2, #0
 8019408:	f000 80ea 	beq.w	80195e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32c>
 801940c:	f103 0e01 	add.w	lr, r3, #1
 8019410:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8019414:	f01e 0f01 	tst.w	lr, #1
 8019418:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801941c:	bf0c      	ite	eq
 801941e:	f00c 0c0f 	andeq.w	ip, ip, #15
 8019422:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8019426:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801942a:	fa5f fc8c 	uxtb.w	ip, ip
 801942e:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 8019432:	b1f9      	cbz	r1, 8019474 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8019434:	4453      	add	r3, sl
 8019436:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801943a:	07dd      	lsls	r5, r3, #31
 801943c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019440:	bf54      	ite	pl
 8019442:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019446:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801944a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801944e:	3301      	adds	r3, #1
 8019450:	fa5f fc8c 	uxtb.w	ip, ip
 8019454:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 8019458:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801945c:	07dd      	lsls	r5, r3, #31
 801945e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019462:	bf54      	ite	pl
 8019464:	f00c 030f 	andpl.w	r3, ip, #15
 8019468:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801946c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019470:	b2db      	uxtb	r3, r3
 8019472:	9310      	str	r3, [sp, #64]	; 0x40
 8019474:	b292      	uxth	r2, r2
 8019476:	b289      	uxth	r1, r1
 8019478:	fb02 f301 	mul.w	r3, r2, r1
 801947c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8019480:	0112      	lsls	r2, r2, #4
 8019482:	b289      	uxth	r1, r1
 8019484:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8019488:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801948a:	1ad2      	subs	r2, r2, r3
 801948c:	ebac 0c01 	sub.w	ip, ip, r1
 8019490:	b292      	uxth	r2, r2
 8019492:	436a      	muls	r2, r5
 8019494:	fa1f fc8c 	uxth.w	ip, ip
 8019498:	fb00 200c 	mla	r0, r0, ip, r2
 801949c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801949e:	fb01 0102 	mla	r1, r1, r2, r0
 80194a2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80194a4:	fb03 1302 	mla	r3, r3, r2, r1
 80194a8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80194ac:	2b00      	cmp	r3, #0
 80194ae:	d043      	beq.n	8019538 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 80194b0:	4ac9      	ldr	r2, [pc, #804]	; (80197d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>)
 80194b2:	6811      	ldr	r1, [r2, #0]
 80194b4:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 80194b8:	08ca      	lsrs	r2, r1, #3
 80194ba:	00c9      	lsls	r1, r1, #3
 80194bc:	b2c9      	uxtb	r1, r1
 80194be:	2bff      	cmp	r3, #255	; 0xff
 80194c0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80194c4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80194c8:	460d      	mov	r5, r1
 80194ca:	f000 809c 	beq.w	8019606 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x352>
 80194ce:	f8b8 c000 	ldrh.w	ip, [r8]
 80194d2:	b299      	uxth	r1, r3
 80194d4:	ea4f 202c 	mov.w	r0, ip, asr #8
 80194d8:	43db      	mvns	r3, r3
 80194da:	b2db      	uxtb	r3, r3
 80194dc:	fb1e fe01 	smulbb	lr, lr, r1
 80194e0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80194e4:	fb00 e003 	mla	r0, r0, r3, lr
 80194e8:	ea4f 0eec 	mov.w	lr, ip, asr #3
 80194ec:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80194f0:	fb12 f201 	smulbb	r2, r2, r1
 80194f4:	fb0e 2203 	mla	r2, lr, r3, r2
 80194f8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80194fc:	b292      	uxth	r2, r2
 80194fe:	fb15 f101 	smulbb	r1, r5, r1
 8019502:	fa5f fc8c 	uxtb.w	ip, ip
 8019506:	b280      	uxth	r0, r0
 8019508:	fb0c 1303 	mla	r3, ip, r3, r1
 801950c:	f102 0e01 	add.w	lr, r2, #1
 8019510:	b29b      	uxth	r3, r3
 8019512:	1c41      	adds	r1, r0, #1
 8019514:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8019518:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801951c:	0952      	lsrs	r2, r2, #5
 801951e:	1c59      	adds	r1, r3, #1
 8019520:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019524:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019528:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801952c:	4310      	orrs	r0, r2
 801952e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019532:	4318      	orrs	r0, r3
 8019534:	f8a8 0000 	strh.w	r0, [r8]
 8019538:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801953a:	441c      	add	r4, r3
 801953c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801953e:	f108 0802 	add.w	r8, r8, #2
 8019542:	441e      	add	r6, r3
 8019544:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8019548:	e735      	b.n	80193b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x102>
 801954a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801954c:	441c      	add	r4, r3
 801954e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019550:	441e      	add	r6, r3
 8019552:	9b06      	ldr	r3, [sp, #24]
 8019554:	3b01      	subs	r3, #1
 8019556:	9306      	str	r3, [sp, #24]
 8019558:	f10b 0b02 	add.w	fp, fp, #2
 801955c:	e6e2      	b.n	8019324 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801955e:	f47f aef3 	bne.w	8019348 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8019562:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019564:	2b00      	cmp	r3, #0
 8019566:	f340 8139 	ble.w	80197dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x528>
 801956a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801956e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019572:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019576:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019578:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801957c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019580:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019584:	eef0 6a48 	vmov.f32	s13, s16
 8019588:	ee69 7a27 	vmul.f32	s15, s18, s15
 801958c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019590:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019594:	ee16 4a90 	vmov	r4, s13
 8019598:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801959c:	eef0 6a68 	vmov.f32	s13, s17
 80195a0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80195a4:	ee18 2a10 	vmov	r2, s16
 80195a8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80195ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80195b0:	ee18 2a90 	vmov	r2, s17
 80195b4:	9329      	str	r3, [sp, #164]	; 0xa4
 80195b6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80195b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80195bc:	932a      	str	r3, [sp, #168]	; 0xa8
 80195be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80195c0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80195c2:	3b01      	subs	r3, #1
 80195c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80195c8:	930a      	str	r3, [sp, #40]	; 0x28
 80195ca:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80195cc:	bf08      	it	eq
 80195ce:	4613      	moveq	r3, r2
 80195d0:	ee16 6a90 	vmov	r6, s13
 80195d4:	9306      	str	r3, [sp, #24]
 80195d6:	eef0 8a67 	vmov.f32	s17, s15
 80195da:	eeb0 8a47 	vmov.f32	s16, s14
 80195de:	e69a      	b.n	8019316 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 80195e0:	2900      	cmp	r1, #0
 80195e2:	f43f af47 	beq.w	8019474 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80195e6:	4453      	add	r3, sl
 80195e8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80195ec:	07db      	lsls	r3, r3, #31
 80195ee:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80195f2:	bf54      	ite	pl
 80195f4:	f00c 030f 	andpl.w	r3, ip, #15
 80195f8:	ea4f 132c 	movmi.w	r3, ip, asr #4
 80195fc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019600:	b2db      	uxtb	r3, r3
 8019602:	930b      	str	r3, [sp, #44]	; 0x2c
 8019604:	e736      	b.n	8019474 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8019606:	00d2      	lsls	r2, r2, #3
 8019608:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801960c:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 8019610:	f8a8 1000 	strh.w	r1, [r8]
 8019614:	e790      	b.n	8019538 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8019616:	1c45      	adds	r5, r0, #1
 8019618:	d18e      	bne.n	8019538 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801961a:	9d07      	ldr	r5, [sp, #28]
 801961c:	4285      	cmp	r5, r0
 801961e:	dd8b      	ble.n	8019538 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8019620:	1c5d      	adds	r5, r3, #1
 8019622:	db89      	blt.n	8019538 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8019624:	9d08      	ldr	r5, [sp, #32]
 8019626:	429d      	cmp	r5, r3
 8019628:	dd86      	ble.n	8019538 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801962a:	e9cd 0302 	strd	r0, r3, [sp, #8]
 801962e:	9b07      	ldr	r3, [sp, #28]
 8019630:	9300      	str	r3, [sp, #0]
 8019632:	e9cd 2104 	strd	r2, r1, [sp, #16]
 8019636:	9501      	str	r5, [sp, #4]
 8019638:	4653      	mov	r3, sl
 801963a:	463a      	mov	r2, r7
 801963c:	4641      	mov	r1, r8
 801963e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019640:	f7ff fd54 	bl	80190ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8019644:	e778      	b.n	8019538 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8019646:	9909      	ldr	r1, [sp, #36]	; 0x24
 8019648:	1422      	asrs	r2, r4, #16
 801964a:	1433      	asrs	r3, r6, #16
 801964c:	fb01 2303 	mla	r3, r1, r3, r2
 8019650:	085a      	lsrs	r2, r3, #1
 8019652:	07d9      	lsls	r1, r3, #31
 8019654:	5cba      	ldrb	r2, [r7, r2]
 8019656:	bf54      	ite	pl
 8019658:	f002 020f 	andpl.w	r2, r2, #15
 801965c:	1112      	asrmi	r2, r2, #4
 801965e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019662:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019666:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801966a:	b2d2      	uxtb	r2, r2
 801966c:	2800      	cmp	r0, #0
 801966e:	f000 8099 	beq.w	80197a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4f0>
 8019672:	f103 0e01 	add.w	lr, r3, #1
 8019676:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801967a:	f01e 0f01 	tst.w	lr, #1
 801967e:	5c79      	ldrb	r1, [r7, r1]
 8019680:	bf0c      	ite	eq
 8019682:	f001 010f 	andeq.w	r1, r1, #15
 8019686:	1109      	asrne	r1, r1, #4
 8019688:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801968c:	b2c9      	uxtb	r1, r1
 801968e:	9111      	str	r1, [sp, #68]	; 0x44
 8019690:	f1bc 0f00 	cmp.w	ip, #0
 8019694:	d018      	beq.n	80196c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 8019696:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019698:	440b      	add	r3, r1
 801969a:	0859      	lsrs	r1, r3, #1
 801969c:	07dd      	lsls	r5, r3, #31
 801969e:	5c79      	ldrb	r1, [r7, r1]
 80196a0:	bf54      	ite	pl
 80196a2:	f001 010f 	andpl.w	r1, r1, #15
 80196a6:	1109      	asrmi	r1, r1, #4
 80196a8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80196ac:	b2c9      	uxtb	r1, r1
 80196ae:	3301      	adds	r3, #1
 80196b0:	910c      	str	r1, [sp, #48]	; 0x30
 80196b2:	0859      	lsrs	r1, r3, #1
 80196b4:	07dd      	lsls	r5, r3, #31
 80196b6:	5c79      	ldrb	r1, [r7, r1]
 80196b8:	bf54      	ite	pl
 80196ba:	f001 010f 	andpl.w	r1, r1, #15
 80196be:	1109      	asrmi	r1, r1, #4
 80196c0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80196c4:	b2c9      	uxtb	r1, r1
 80196c6:	9112      	str	r1, [sp, #72]	; 0x48
 80196c8:	b280      	uxth	r0, r0
 80196ca:	fa1f fc8c 	uxth.w	ip, ip
 80196ce:	fb00 f30c 	mul.w	r3, r0, ip
 80196d2:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80196d6:	0100      	lsls	r0, r0, #4
 80196d8:	fa1f fc8c 	uxth.w	ip, ip
 80196dc:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80196e0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80196e2:	1ac0      	subs	r0, r0, r3
 80196e4:	eba1 010c 	sub.w	r1, r1, ip
 80196e8:	b280      	uxth	r0, r0
 80196ea:	b289      	uxth	r1, r1
 80196ec:	4368      	muls	r0, r5
 80196ee:	fb02 0201 	mla	r2, r2, r1, r0
 80196f2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80196f4:	fb0c 2c01 	mla	ip, ip, r1, r2
 80196f8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80196fa:	fb03 c302 	mla	r3, r3, r2, ip
 80196fe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019702:	2b00      	cmp	r3, #0
 8019704:	d045      	beq.n	8019792 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8019706:	4a34      	ldr	r2, [pc, #208]	; (80197d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>)
 8019708:	6811      	ldr	r1, [r2, #0]
 801970a:	2bff      	cmp	r3, #255	; 0xff
 801970c:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 8019710:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 8019714:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 8019718:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801971c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019720:	b2c9      	uxtb	r1, r1
 8019722:	d050      	beq.n	80197c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 8019724:	f8b8 c000 	ldrh.w	ip, [r8]
 8019728:	fa1f f983 	uxth.w	r9, r3
 801972c:	ea4f 202c 	mov.w	r0, ip, asr #8
 8019730:	43db      	mvns	r3, r3
 8019732:	b2db      	uxtb	r3, r3
 8019734:	fb1e fe09 	smulbb	lr, lr, r9
 8019738:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801973c:	fb00 e003 	mla	r0, r0, r3, lr
 8019740:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8019744:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8019748:	fb12 f209 	smulbb	r2, r2, r9
 801974c:	fb0e 2203 	mla	r2, lr, r3, r2
 8019750:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019754:	b292      	uxth	r2, r2
 8019756:	fa5f fc8c 	uxtb.w	ip, ip
 801975a:	fb11 f109 	smulbb	r1, r1, r9
 801975e:	b280      	uxth	r0, r0
 8019760:	fb0c 1103 	mla	r1, ip, r3, r1
 8019764:	f102 0e01 	add.w	lr, r2, #1
 8019768:	b289      	uxth	r1, r1
 801976a:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801976e:	f100 0e01 	add.w	lr, r0, #1
 8019772:	0952      	lsrs	r2, r2, #5
 8019774:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8019778:	1c4b      	adds	r3, r1, #1
 801977a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801977e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019782:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019786:	4302      	orrs	r2, r0
 8019788:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801978c:	430a      	orrs	r2, r1
 801978e:	f8a8 2000 	strh.w	r2, [r8]
 8019792:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019794:	441c      	add	r4, r3
 8019796:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019798:	f108 0802 	add.w	r8, r8, #2
 801979c:	441e      	add	r6, r3
 801979e:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 80197a2:	e5eb      	b.n	801937c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 80197a4:	f1bc 0f00 	cmp.w	ip, #0
 80197a8:	d08e      	beq.n	80196c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 80197aa:	990e      	ldr	r1, [sp, #56]	; 0x38
 80197ac:	440b      	add	r3, r1
 80197ae:	0859      	lsrs	r1, r3, #1
 80197b0:	07db      	lsls	r3, r3, #31
 80197b2:	5c79      	ldrb	r1, [r7, r1]
 80197b4:	bf54      	ite	pl
 80197b6:	f001 010f 	andpl.w	r1, r1, #15
 80197ba:	1109      	asrmi	r1, r1, #4
 80197bc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80197c0:	b2c9      	uxtb	r1, r1
 80197c2:	910c      	str	r1, [sp, #48]	; 0x30
 80197c4:	e780      	b.n	80196c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x414>
 80197c6:	00d2      	lsls	r2, r2, #3
 80197c8:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 80197cc:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 80197d0:	f8a8 1000 	strh.w	r1, [r8]
 80197d4:	e7dd      	b.n	8019792 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 80197d6:	bf00      	nop
 80197d8:	20012184 	.word	0x20012184
 80197dc:	b015      	add	sp, #84	; 0x54
 80197de:	ecbd 8b08 	vpop	{d8-d11}
 80197e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80197e6:	bf00      	nop

080197e8 <CRC_Lock>:
 80197e8:	b530      	push	{r4, r5, lr}
 80197ea:	4a1d      	ldr	r2, [pc, #116]	; (8019860 <CRC_Lock+0x78>)
 80197ec:	6813      	ldr	r3, [r2, #0]
 80197ee:	f023 0301 	bic.w	r3, r3, #1
 80197f2:	6013      	str	r3, [r2, #0]
 80197f4:	4b1b      	ldr	r3, [pc, #108]	; (8019864 <CRC_Lock+0x7c>)
 80197f6:	681a      	ldr	r2, [r3, #0]
 80197f8:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80197fc:	4022      	ands	r2, r4
 80197fe:	f24c 2540 	movw	r5, #49728	; 0xc240
 8019802:	42aa      	cmp	r2, r5
 8019804:	d005      	beq.n	8019812 <CRC_Lock+0x2a>
 8019806:	681b      	ldr	r3, [r3, #0]
 8019808:	f24c 2270 	movw	r2, #49776	; 0xc270
 801980c:	4023      	ands	r3, r4
 801980e:	4293      	cmp	r3, r2
 8019810:	d11d      	bne.n	801984e <CRC_Lock+0x66>
 8019812:	4b15      	ldr	r3, [pc, #84]	; (8019868 <CRC_Lock+0x80>)
 8019814:	681b      	ldr	r3, [r3, #0]
 8019816:	b9d3      	cbnz	r3, 801984e <CRC_Lock+0x66>
 8019818:	4a14      	ldr	r2, [pc, #80]	; (801986c <CRC_Lock+0x84>)
 801981a:	6813      	ldr	r3, [r2, #0]
 801981c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8019820:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 8019824:	d006      	beq.n	8019834 <CRC_Lock+0x4c>
 8019826:	6813      	ldr	r3, [r2, #0]
 8019828:	f240 4283 	movw	r2, #1155	; 0x483
 801982c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8019830:	4293      	cmp	r3, r2
 8019832:	d10c      	bne.n	801984e <CRC_Lock+0x66>
 8019834:	4b0e      	ldr	r3, [pc, #56]	; (8019870 <CRC_Lock+0x88>)
 8019836:	2201      	movs	r2, #1
 8019838:	601a      	str	r2, [r3, #0]
 801983a:	681a      	ldr	r2, [r3, #0]
 801983c:	2a00      	cmp	r2, #0
 801983e:	d1fc      	bne.n	801983a <CRC_Lock+0x52>
 8019840:	4b0c      	ldr	r3, [pc, #48]	; (8019874 <CRC_Lock+0x8c>)
 8019842:	6018      	str	r0, [r3, #0]
 8019844:	6818      	ldr	r0, [r3, #0]
 8019846:	1a43      	subs	r3, r0, r1
 8019848:	4258      	negs	r0, r3
 801984a:	4158      	adcs	r0, r3
 801984c:	bd30      	pop	{r4, r5, pc}
 801984e:	4b0a      	ldr	r3, [pc, #40]	; (8019878 <CRC_Lock+0x90>)
 8019850:	2201      	movs	r2, #1
 8019852:	601a      	str	r2, [r3, #0]
 8019854:	681a      	ldr	r2, [r3, #0]
 8019856:	2a00      	cmp	r2, #0
 8019858:	d1fc      	bne.n	8019854 <CRC_Lock+0x6c>
 801985a:	4b08      	ldr	r3, [pc, #32]	; (801987c <CRC_Lock+0x94>)
 801985c:	e7f1      	b.n	8019842 <CRC_Lock+0x5a>
 801985e:	bf00      	nop
 8019860:	e0002000 	.word	0xe0002000
 8019864:	e000ed00 	.word	0xe000ed00
 8019868:	e0042000 	.word	0xe0042000
 801986c:	5c001000 	.word	0x5c001000
 8019870:	58024c08 	.word	0x58024c08
 8019874:	58024c00 	.word	0x58024c00
 8019878:	40023008 	.word	0x40023008
 801987c:	40023000 	.word	0x40023000

08019880 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8019880:	6101      	str	r1, [r0, #16]
 8019882:	4770      	bx	lr

08019884 <_ZN8touchgfx8Gestures4tickEv>:
 8019884:	7b83      	ldrb	r3, [r0, #14]
 8019886:	b14b      	cbz	r3, 801989c <_ZN8touchgfx8Gestures4tickEv+0x18>
 8019888:	8903      	ldrh	r3, [r0, #8]
 801988a:	3301      	adds	r3, #1
 801988c:	b29b      	uxth	r3, r3
 801988e:	2b07      	cmp	r3, #7
 8019890:	8103      	strh	r3, [r0, #8]
 8019892:	bf81      	itttt	hi
 8019894:	2300      	movhi	r3, #0
 8019896:	8143      	strhhi	r3, [r0, #10]
 8019898:	8183      	strhhi	r3, [r0, #12]
 801989a:	7383      	strbhi	r3, [r0, #14]
 801989c:	4770      	bx	lr
	...

080198a0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80198a0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80198a4:	4604      	mov	r4, r0
 80198a6:	8880      	ldrh	r0, [r0, #4]
 80198a8:	f8ad 0006 	strh.w	r0, [sp, #6]
 80198ac:	4698      	mov	r8, r3
 80198ae:	eba8 0000 	sub.w	r0, r8, r0
 80198b2:	4b1c      	ldr	r3, [pc, #112]	; (8019924 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 80198b4:	9300      	str	r3, [sp, #0]
 80198b6:	b280      	uxth	r0, r0
 80198b8:	2300      	movs	r3, #0
 80198ba:	f88d 3004 	strb.w	r3, [sp, #4]
 80198be:	b203      	sxth	r3, r0
 80198c0:	2b00      	cmp	r3, #0
 80198c2:	bfb8      	it	lt
 80198c4:	4240      	neglt	r0, r0
 80198c6:	4617      	mov	r7, r2
 80198c8:	8aa2      	ldrh	r2, [r4, #20]
 80198ca:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80198ce:	f8ad 800a 	strh.w	r8, [sp, #10]
 80198d2:	bfb8      	it	lt
 80198d4:	b203      	sxthlt	r3, r0
 80198d6:	460e      	mov	r6, r1
 80198d8:	4293      	cmp	r3, r2
 80198da:	88e1      	ldrh	r1, [r4, #6]
 80198dc:	f8ad 1008 	strh.w	r1, [sp, #8]
 80198e0:	f8ad 500c 	strh.w	r5, [sp, #12]
 80198e4:	dc08      	bgt.n	80198f8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 80198e6:	1a69      	subs	r1, r5, r1
 80198e8:	b289      	uxth	r1, r1
 80198ea:	b20b      	sxth	r3, r1
 80198ec:	2b00      	cmp	r3, #0
 80198ee:	bfbc      	itt	lt
 80198f0:	4249      	neglt	r1, r1
 80198f2:	b20b      	sxthlt	r3, r1
 80198f4:	429a      	cmp	r2, r3
 80198f6:	da13      	bge.n	8019920 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 80198f8:	6920      	ldr	r0, [r4, #16]
 80198fa:	6803      	ldr	r3, [r0, #0]
 80198fc:	4669      	mov	r1, sp
 80198fe:	685b      	ldr	r3, [r3, #4]
 8019900:	4798      	blx	r3
 8019902:	eba8 0606 	sub.w	r6, r8, r6
 8019906:	2300      	movs	r3, #0
 8019908:	1bef      	subs	r7, r5, r7
 801990a:	2001      	movs	r0, #1
 801990c:	8123      	strh	r3, [r4, #8]
 801990e:	8166      	strh	r6, [r4, #10]
 8019910:	81a7      	strh	r7, [r4, #12]
 8019912:	f8a4 8004 	strh.w	r8, [r4, #4]
 8019916:	80e5      	strh	r5, [r4, #6]
 8019918:	73a0      	strb	r0, [r4, #14]
 801991a:	b004      	add	sp, #16
 801991c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019920:	2000      	movs	r0, #0
 8019922:	e7fa      	b.n	801991a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 8019924:	0801cbe0 	.word	0x0801cbe0

08019928 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8019928:	b5f0      	push	{r4, r5, r6, r7, lr}
 801992a:	461e      	mov	r6, r3
 801992c:	1e4b      	subs	r3, r1, #1
 801992e:	2b01      	cmp	r3, #1
 8019930:	b085      	sub	sp, #20
 8019932:	4604      	mov	r4, r0
 8019934:	460d      	mov	r5, r1
 8019936:	4617      	mov	r7, r2
 8019938:	d84b      	bhi.n	80199d2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801993a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801993e:	1cd3      	adds	r3, r2, #3
 8019940:	b29b      	uxth	r3, r3
 8019942:	2b06      	cmp	r3, #6
 8019944:	d916      	bls.n	8019974 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8019946:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80199e8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801994a:	f8cd c004 	str.w	ip, [sp, #4]
 801994e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019952:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019956:	6900      	ldr	r0, [r0, #16]
 8019958:	f8ad 100c 	strh.w	r1, [sp, #12]
 801995c:	f04f 0c00 	mov.w	ip, #0
 8019960:	f88d c008 	strb.w	ip, [sp, #8]
 8019964:	f8ad 200a 	strh.w	r2, [sp, #10]
 8019968:	f8ad 300e 	strh.w	r3, [sp, #14]
 801996c:	6803      	ldr	r3, [r0, #0]
 801996e:	a901      	add	r1, sp, #4
 8019970:	689b      	ldr	r3, [r3, #8]
 8019972:	4798      	blx	r3
 8019974:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8019978:	1cd3      	adds	r3, r2, #3
 801997a:	b29b      	uxth	r3, r3
 801997c:	2b06      	cmp	r3, #6
 801997e:	d916      	bls.n	80199ae <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8019980:	f8df c064 	ldr.w	ip, [pc, #100]	; 80199e8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8019984:	f8cd c004 	str.w	ip, [sp, #4]
 8019988:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801998c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019990:	6920      	ldr	r0, [r4, #16]
 8019992:	f8ad 100c 	strh.w	r1, [sp, #12]
 8019996:	f04f 0c01 	mov.w	ip, #1
 801999a:	f88d c008 	strb.w	ip, [sp, #8]
 801999e:	f8ad 200a 	strh.w	r2, [sp, #10]
 80199a2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80199a6:	6803      	ldr	r3, [r0, #0]
 80199a8:	a901      	add	r1, sp, #4
 80199aa:	689b      	ldr	r3, [r3, #8]
 80199ac:	4798      	blx	r3
 80199ae:	4b0d      	ldr	r3, [pc, #52]	; (80199e4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80199b0:	9301      	str	r3, [sp, #4]
 80199b2:	6920      	ldr	r0, [r4, #16]
 80199b4:	f88d 5008 	strb.w	r5, [sp, #8]
 80199b8:	2300      	movs	r3, #0
 80199ba:	f8ad 700a 	strh.w	r7, [sp, #10]
 80199be:	f8ad 600c 	strh.w	r6, [sp, #12]
 80199c2:	f8ad 300e 	strh.w	r3, [sp, #14]
 80199c6:	6803      	ldr	r3, [r0, #0]
 80199c8:	a901      	add	r1, sp, #4
 80199ca:	681b      	ldr	r3, [r3, #0]
 80199cc:	4798      	blx	r3
 80199ce:	b005      	add	sp, #20
 80199d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80199d2:	2900      	cmp	r1, #0
 80199d4:	d1eb      	bne.n	80199ae <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80199d6:	80a2      	strh	r2, [r4, #4]
 80199d8:	80c6      	strh	r6, [r0, #6]
 80199da:	60a1      	str	r1, [r4, #8]
 80199dc:	81a1      	strh	r1, [r4, #12]
 80199de:	73a1      	strb	r1, [r4, #14]
 80199e0:	e7e5      	b.n	80199ae <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80199e2:	bf00      	nop
 80199e4:	0801cbcc 	.word	0x0801cbcc
 80199e8:	0801cbf4 	.word	0x0801cbf4

080199ec <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80199ec:	b570      	push	{r4, r5, r6, lr}
 80199ee:	790b      	ldrb	r3, [r1, #4]
 80199f0:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 80199f4:	2b00      	cmp	r3, #0
 80199f6:	bf0c      	ite	eq
 80199f8:	2301      	moveq	r3, #1
 80199fa:	2300      	movne	r3, #0
 80199fc:	4604      	mov	r4, r0
 80199fe:	460e      	mov	r6, r1
 8019a00:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8019a04:	d110      	bne.n	8019a28 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8019a06:	b185      	cbz	r5, 8019a2a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3e>
 8019a08:	7933      	ldrb	r3, [r6, #4]
 8019a0a:	2b01      	cmp	r3, #1
 8019a0c:	d113      	bne.n	8019a36 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 8019a0e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8019a10:	b188      	cbz	r0, 8019a36 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 8019a12:	6803      	ldr	r3, [r0, #0]
 8019a14:	68db      	ldr	r3, [r3, #12]
 8019a16:	4798      	blx	r3
 8019a18:	b168      	cbz	r0, 8019a36 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 8019a1a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8019a1c:	6803      	ldr	r3, [r0, #0]
 8019a1e:	4621      	mov	r1, r4
 8019a20:	689b      	ldr	r3, [r3, #8]
 8019a22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019a26:	4718      	bx	r3
 8019a28:	b12d      	cbz	r5, 8019a36 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 8019a2a:	6823      	ldr	r3, [r4, #0]
 8019a2c:	4620      	mov	r0, r4
 8019a2e:	695b      	ldr	r3, [r3, #20]
 8019a30:	4798      	blx	r3
 8019a32:	2d00      	cmp	r5, #0
 8019a34:	d1e8      	bne.n	8019a08 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8019a36:	bd70      	pop	{r4, r5, r6, pc}

08019a38 <__aeabi_atexit>:
 8019a38:	460b      	mov	r3, r1
 8019a3a:	4601      	mov	r1, r0
 8019a3c:	4618      	mov	r0, r3
 8019a3e:	f000 b853 	b.w	8019ae8 <__cxa_atexit>

08019a42 <__cxa_pure_virtual>:
 8019a42:	b508      	push	{r3, lr}
 8019a44:	f000 f820 	bl	8019a88 <_ZSt9terminatev>

08019a48 <_ZdlPvj>:
 8019a48:	f000 b80f 	b.w	8019a6a <_ZdlPv>

08019a4c <__cxa_guard_acquire>:
 8019a4c:	6803      	ldr	r3, [r0, #0]
 8019a4e:	07db      	lsls	r3, r3, #31
 8019a50:	d406      	bmi.n	8019a60 <__cxa_guard_acquire+0x14>
 8019a52:	7843      	ldrb	r3, [r0, #1]
 8019a54:	b103      	cbz	r3, 8019a58 <__cxa_guard_acquire+0xc>
 8019a56:	deff      	udf	#255	; 0xff
 8019a58:	2301      	movs	r3, #1
 8019a5a:	7043      	strb	r3, [r0, #1]
 8019a5c:	4618      	mov	r0, r3
 8019a5e:	4770      	bx	lr
 8019a60:	2000      	movs	r0, #0
 8019a62:	4770      	bx	lr

08019a64 <__cxa_guard_release>:
 8019a64:	2301      	movs	r3, #1
 8019a66:	6003      	str	r3, [r0, #0]
 8019a68:	4770      	bx	lr

08019a6a <_ZdlPv>:
 8019a6a:	f000 b88f 	b.w	8019b8c <free>

08019a6e <_ZN10__cxxabiv111__terminateEPFvvE>:
 8019a6e:	b508      	push	{r3, lr}
 8019a70:	4780      	blx	r0
 8019a72:	f000 f80e 	bl	8019a92 <abort>
	...

08019a78 <_ZSt13get_terminatev>:
 8019a78:	4b02      	ldr	r3, [pc, #8]	; (8019a84 <_ZSt13get_terminatev+0xc>)
 8019a7a:	6818      	ldr	r0, [r3, #0]
 8019a7c:	f3bf 8f5b 	dmb	ish
 8019a80:	4770      	bx	lr
 8019a82:	bf00      	nop
 8019a84:	200000f8 	.word	0x200000f8

08019a88 <_ZSt9terminatev>:
 8019a88:	b508      	push	{r3, lr}
 8019a8a:	f7ff fff5 	bl	8019a78 <_ZSt13get_terminatev>
 8019a8e:	f7ff ffee 	bl	8019a6e <_ZN10__cxxabiv111__terminateEPFvvE>

08019a92 <abort>:
 8019a92:	b508      	push	{r3, lr}
 8019a94:	2006      	movs	r0, #6
 8019a96:	f000 fc3d 	bl	801a314 <raise>
 8019a9a:	2001      	movs	r0, #1
 8019a9c:	f7e8 f9a4 	bl	8001de8 <_exit>

08019aa0 <__assert_func>:
 8019aa0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8019aa2:	461c      	mov	r4, r3
 8019aa4:	4b09      	ldr	r3, [pc, #36]	; (8019acc <__assert_func+0x2c>)
 8019aa6:	681b      	ldr	r3, [r3, #0]
 8019aa8:	4605      	mov	r5, r0
 8019aaa:	68d8      	ldr	r0, [r3, #12]
 8019aac:	b152      	cbz	r2, 8019ac4 <__assert_func+0x24>
 8019aae:	4b08      	ldr	r3, [pc, #32]	; (8019ad0 <__assert_func+0x30>)
 8019ab0:	9100      	str	r1, [sp, #0]
 8019ab2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8019ab6:	4907      	ldr	r1, [pc, #28]	; (8019ad4 <__assert_func+0x34>)
 8019ab8:	462b      	mov	r3, r5
 8019aba:	4622      	mov	r2, r4
 8019abc:	f000 f828 	bl	8019b10 <fiprintf>
 8019ac0:	f7ff ffe7 	bl	8019a92 <abort>
 8019ac4:	4b04      	ldr	r3, [pc, #16]	; (8019ad8 <__assert_func+0x38>)
 8019ac6:	461a      	mov	r2, r3
 8019ac8:	e7f2      	b.n	8019ab0 <__assert_func+0x10>
 8019aca:	bf00      	nop
 8019acc:	200000fc 	.word	0x200000fc
 8019ad0:	0801de64 	.word	0x0801de64
 8019ad4:	0801de71 	.word	0x0801de71
 8019ad8:	0801b0a6 	.word	0x0801b0a6

08019adc <atexit>:
 8019adc:	2300      	movs	r3, #0
 8019ade:	4601      	mov	r1, r0
 8019ae0:	461a      	mov	r2, r3
 8019ae2:	4618      	mov	r0, r3
 8019ae4:	f000 bcf2 	b.w	801a4cc <__register_exitproc>

08019ae8 <__cxa_atexit>:
 8019ae8:	b510      	push	{r4, lr}
 8019aea:	4c05      	ldr	r4, [pc, #20]	; (8019b00 <__cxa_atexit+0x18>)
 8019aec:	4613      	mov	r3, r2
 8019aee:	b12c      	cbz	r4, 8019afc <__cxa_atexit+0x14>
 8019af0:	460a      	mov	r2, r1
 8019af2:	4601      	mov	r1, r0
 8019af4:	2002      	movs	r0, #2
 8019af6:	f000 fce9 	bl	801a4cc <__register_exitproc>
 8019afa:	bd10      	pop	{r4, pc}
 8019afc:	4620      	mov	r0, r4
 8019afe:	e7fc      	b.n	8019afa <__cxa_atexit+0x12>
 8019b00:	0801a4cd 	.word	0x0801a4cd

08019b04 <__errno>:
 8019b04:	4b01      	ldr	r3, [pc, #4]	; (8019b0c <__errno+0x8>)
 8019b06:	6818      	ldr	r0, [r3, #0]
 8019b08:	4770      	bx	lr
 8019b0a:	bf00      	nop
 8019b0c:	200000fc 	.word	0x200000fc

08019b10 <fiprintf>:
 8019b10:	b40e      	push	{r1, r2, r3}
 8019b12:	b503      	push	{r0, r1, lr}
 8019b14:	4601      	mov	r1, r0
 8019b16:	ab03      	add	r3, sp, #12
 8019b18:	4805      	ldr	r0, [pc, #20]	; (8019b30 <fiprintf+0x20>)
 8019b1a:	f853 2b04 	ldr.w	r2, [r3], #4
 8019b1e:	6800      	ldr	r0, [r0, #0]
 8019b20:	9301      	str	r3, [sp, #4]
 8019b22:	f000 f921 	bl	8019d68 <_vfiprintf_r>
 8019b26:	b002      	add	sp, #8
 8019b28:	f85d eb04 	ldr.w	lr, [sp], #4
 8019b2c:	b003      	add	sp, #12
 8019b2e:	4770      	bx	lr
 8019b30:	200000fc 	.word	0x200000fc

08019b34 <__libc_init_array>:
 8019b34:	b570      	push	{r4, r5, r6, lr}
 8019b36:	4e0d      	ldr	r6, [pc, #52]	; (8019b6c <__libc_init_array+0x38>)
 8019b38:	4c0d      	ldr	r4, [pc, #52]	; (8019b70 <__libc_init_array+0x3c>)
 8019b3a:	1ba4      	subs	r4, r4, r6
 8019b3c:	10a4      	asrs	r4, r4, #2
 8019b3e:	2500      	movs	r5, #0
 8019b40:	42a5      	cmp	r5, r4
 8019b42:	d109      	bne.n	8019b58 <__libc_init_array+0x24>
 8019b44:	4e0b      	ldr	r6, [pc, #44]	; (8019b74 <__libc_init_array+0x40>)
 8019b46:	4c0c      	ldr	r4, [pc, #48]	; (8019b78 <__libc_init_array+0x44>)
 8019b48:	f000 ffb0 	bl	801aaac <_init>
 8019b4c:	1ba4      	subs	r4, r4, r6
 8019b4e:	10a4      	asrs	r4, r4, #2
 8019b50:	2500      	movs	r5, #0
 8019b52:	42a5      	cmp	r5, r4
 8019b54:	d105      	bne.n	8019b62 <__libc_init_array+0x2e>
 8019b56:	bd70      	pop	{r4, r5, r6, pc}
 8019b58:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8019b5c:	4798      	blx	r3
 8019b5e:	3501      	adds	r5, #1
 8019b60:	e7ee      	b.n	8019b40 <__libc_init_array+0xc>
 8019b62:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8019b66:	4798      	blx	r3
 8019b68:	3501      	adds	r5, #1
 8019b6a:	e7f2      	b.n	8019b52 <__libc_init_array+0x1e>
 8019b6c:	08028284 	.word	0x08028284
 8019b70:	08028284 	.word	0x08028284
 8019b74:	08028284 	.word	0x08028284
 8019b78:	08028298 	.word	0x08028298

08019b7c <malloc>:
 8019b7c:	4b02      	ldr	r3, [pc, #8]	; (8019b88 <malloc+0xc>)
 8019b7e:	4601      	mov	r1, r0
 8019b80:	6818      	ldr	r0, [r3, #0]
 8019b82:	f000 b86d 	b.w	8019c60 <_malloc_r>
 8019b86:	bf00      	nop
 8019b88:	200000fc 	.word	0x200000fc

08019b8c <free>:
 8019b8c:	4b02      	ldr	r3, [pc, #8]	; (8019b98 <free+0xc>)
 8019b8e:	4601      	mov	r1, r0
 8019b90:	6818      	ldr	r0, [r3, #0]
 8019b92:	f000 b817 	b.w	8019bc4 <_free_r>
 8019b96:	bf00      	nop
 8019b98:	200000fc 	.word	0x200000fc

08019b9c <memcpy>:
 8019b9c:	b510      	push	{r4, lr}
 8019b9e:	1e43      	subs	r3, r0, #1
 8019ba0:	440a      	add	r2, r1
 8019ba2:	4291      	cmp	r1, r2
 8019ba4:	d100      	bne.n	8019ba8 <memcpy+0xc>
 8019ba6:	bd10      	pop	{r4, pc}
 8019ba8:	f811 4b01 	ldrb.w	r4, [r1], #1
 8019bac:	f803 4f01 	strb.w	r4, [r3, #1]!
 8019bb0:	e7f7      	b.n	8019ba2 <memcpy+0x6>

08019bb2 <memset>:
 8019bb2:	4402      	add	r2, r0
 8019bb4:	4603      	mov	r3, r0
 8019bb6:	4293      	cmp	r3, r2
 8019bb8:	d100      	bne.n	8019bbc <memset+0xa>
 8019bba:	4770      	bx	lr
 8019bbc:	f803 1b01 	strb.w	r1, [r3], #1
 8019bc0:	e7f9      	b.n	8019bb6 <memset+0x4>
	...

08019bc4 <_free_r>:
 8019bc4:	b538      	push	{r3, r4, r5, lr}
 8019bc6:	4605      	mov	r5, r0
 8019bc8:	2900      	cmp	r1, #0
 8019bca:	d045      	beq.n	8019c58 <_free_r+0x94>
 8019bcc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8019bd0:	1f0c      	subs	r4, r1, #4
 8019bd2:	2b00      	cmp	r3, #0
 8019bd4:	bfb8      	it	lt
 8019bd6:	18e4      	addlt	r4, r4, r3
 8019bd8:	f000 feba 	bl	801a950 <__malloc_lock>
 8019bdc:	4a1f      	ldr	r2, [pc, #124]	; (8019c5c <_free_r+0x98>)
 8019bde:	6813      	ldr	r3, [r2, #0]
 8019be0:	4610      	mov	r0, r2
 8019be2:	b933      	cbnz	r3, 8019bf2 <_free_r+0x2e>
 8019be4:	6063      	str	r3, [r4, #4]
 8019be6:	6014      	str	r4, [r2, #0]
 8019be8:	4628      	mov	r0, r5
 8019bea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8019bee:	f000 beb0 	b.w	801a952 <__malloc_unlock>
 8019bf2:	42a3      	cmp	r3, r4
 8019bf4:	d90c      	bls.n	8019c10 <_free_r+0x4c>
 8019bf6:	6821      	ldr	r1, [r4, #0]
 8019bf8:	1862      	adds	r2, r4, r1
 8019bfa:	4293      	cmp	r3, r2
 8019bfc:	bf04      	itt	eq
 8019bfe:	681a      	ldreq	r2, [r3, #0]
 8019c00:	685b      	ldreq	r3, [r3, #4]
 8019c02:	6063      	str	r3, [r4, #4]
 8019c04:	bf04      	itt	eq
 8019c06:	1852      	addeq	r2, r2, r1
 8019c08:	6022      	streq	r2, [r4, #0]
 8019c0a:	6004      	str	r4, [r0, #0]
 8019c0c:	e7ec      	b.n	8019be8 <_free_r+0x24>
 8019c0e:	4613      	mov	r3, r2
 8019c10:	685a      	ldr	r2, [r3, #4]
 8019c12:	b10a      	cbz	r2, 8019c18 <_free_r+0x54>
 8019c14:	42a2      	cmp	r2, r4
 8019c16:	d9fa      	bls.n	8019c0e <_free_r+0x4a>
 8019c18:	6819      	ldr	r1, [r3, #0]
 8019c1a:	1858      	adds	r0, r3, r1
 8019c1c:	42a0      	cmp	r0, r4
 8019c1e:	d10b      	bne.n	8019c38 <_free_r+0x74>
 8019c20:	6820      	ldr	r0, [r4, #0]
 8019c22:	4401      	add	r1, r0
 8019c24:	1858      	adds	r0, r3, r1
 8019c26:	4282      	cmp	r2, r0
 8019c28:	6019      	str	r1, [r3, #0]
 8019c2a:	d1dd      	bne.n	8019be8 <_free_r+0x24>
 8019c2c:	6810      	ldr	r0, [r2, #0]
 8019c2e:	6852      	ldr	r2, [r2, #4]
 8019c30:	605a      	str	r2, [r3, #4]
 8019c32:	4401      	add	r1, r0
 8019c34:	6019      	str	r1, [r3, #0]
 8019c36:	e7d7      	b.n	8019be8 <_free_r+0x24>
 8019c38:	d902      	bls.n	8019c40 <_free_r+0x7c>
 8019c3a:	230c      	movs	r3, #12
 8019c3c:	602b      	str	r3, [r5, #0]
 8019c3e:	e7d3      	b.n	8019be8 <_free_r+0x24>
 8019c40:	6820      	ldr	r0, [r4, #0]
 8019c42:	1821      	adds	r1, r4, r0
 8019c44:	428a      	cmp	r2, r1
 8019c46:	bf04      	itt	eq
 8019c48:	6811      	ldreq	r1, [r2, #0]
 8019c4a:	6852      	ldreq	r2, [r2, #4]
 8019c4c:	6062      	str	r2, [r4, #4]
 8019c4e:	bf04      	itt	eq
 8019c50:	1809      	addeq	r1, r1, r0
 8019c52:	6021      	streq	r1, [r4, #0]
 8019c54:	605c      	str	r4, [r3, #4]
 8019c56:	e7c7      	b.n	8019be8 <_free_r+0x24>
 8019c58:	bd38      	pop	{r3, r4, r5, pc}
 8019c5a:	bf00      	nop
 8019c5c:	20012298 	.word	0x20012298

08019c60 <_malloc_r>:
 8019c60:	b570      	push	{r4, r5, r6, lr}
 8019c62:	1ccd      	adds	r5, r1, #3
 8019c64:	f025 0503 	bic.w	r5, r5, #3
 8019c68:	3508      	adds	r5, #8
 8019c6a:	2d0c      	cmp	r5, #12
 8019c6c:	bf38      	it	cc
 8019c6e:	250c      	movcc	r5, #12
 8019c70:	2d00      	cmp	r5, #0
 8019c72:	4606      	mov	r6, r0
 8019c74:	db01      	blt.n	8019c7a <_malloc_r+0x1a>
 8019c76:	42a9      	cmp	r1, r5
 8019c78:	d903      	bls.n	8019c82 <_malloc_r+0x22>
 8019c7a:	230c      	movs	r3, #12
 8019c7c:	6033      	str	r3, [r6, #0]
 8019c7e:	2000      	movs	r0, #0
 8019c80:	bd70      	pop	{r4, r5, r6, pc}
 8019c82:	f000 fe65 	bl	801a950 <__malloc_lock>
 8019c86:	4a21      	ldr	r2, [pc, #132]	; (8019d0c <_malloc_r+0xac>)
 8019c88:	6814      	ldr	r4, [r2, #0]
 8019c8a:	4621      	mov	r1, r4
 8019c8c:	b991      	cbnz	r1, 8019cb4 <_malloc_r+0x54>
 8019c8e:	4c20      	ldr	r4, [pc, #128]	; (8019d10 <_malloc_r+0xb0>)
 8019c90:	6823      	ldr	r3, [r4, #0]
 8019c92:	b91b      	cbnz	r3, 8019c9c <_malloc_r+0x3c>
 8019c94:	4630      	mov	r0, r6
 8019c96:	f000 fb05 	bl	801a2a4 <_sbrk_r>
 8019c9a:	6020      	str	r0, [r4, #0]
 8019c9c:	4629      	mov	r1, r5
 8019c9e:	4630      	mov	r0, r6
 8019ca0:	f000 fb00 	bl	801a2a4 <_sbrk_r>
 8019ca4:	1c43      	adds	r3, r0, #1
 8019ca6:	d124      	bne.n	8019cf2 <_malloc_r+0x92>
 8019ca8:	230c      	movs	r3, #12
 8019caa:	6033      	str	r3, [r6, #0]
 8019cac:	4630      	mov	r0, r6
 8019cae:	f000 fe50 	bl	801a952 <__malloc_unlock>
 8019cb2:	e7e4      	b.n	8019c7e <_malloc_r+0x1e>
 8019cb4:	680b      	ldr	r3, [r1, #0]
 8019cb6:	1b5b      	subs	r3, r3, r5
 8019cb8:	d418      	bmi.n	8019cec <_malloc_r+0x8c>
 8019cba:	2b0b      	cmp	r3, #11
 8019cbc:	d90f      	bls.n	8019cde <_malloc_r+0x7e>
 8019cbe:	600b      	str	r3, [r1, #0]
 8019cc0:	50cd      	str	r5, [r1, r3]
 8019cc2:	18cc      	adds	r4, r1, r3
 8019cc4:	4630      	mov	r0, r6
 8019cc6:	f000 fe44 	bl	801a952 <__malloc_unlock>
 8019cca:	f104 000b 	add.w	r0, r4, #11
 8019cce:	1d23      	adds	r3, r4, #4
 8019cd0:	f020 0007 	bic.w	r0, r0, #7
 8019cd4:	1ac3      	subs	r3, r0, r3
 8019cd6:	d0d3      	beq.n	8019c80 <_malloc_r+0x20>
 8019cd8:	425a      	negs	r2, r3
 8019cda:	50e2      	str	r2, [r4, r3]
 8019cdc:	e7d0      	b.n	8019c80 <_malloc_r+0x20>
 8019cde:	428c      	cmp	r4, r1
 8019ce0:	684b      	ldr	r3, [r1, #4]
 8019ce2:	bf16      	itet	ne
 8019ce4:	6063      	strne	r3, [r4, #4]
 8019ce6:	6013      	streq	r3, [r2, #0]
 8019ce8:	460c      	movne	r4, r1
 8019cea:	e7eb      	b.n	8019cc4 <_malloc_r+0x64>
 8019cec:	460c      	mov	r4, r1
 8019cee:	6849      	ldr	r1, [r1, #4]
 8019cf0:	e7cc      	b.n	8019c8c <_malloc_r+0x2c>
 8019cf2:	1cc4      	adds	r4, r0, #3
 8019cf4:	f024 0403 	bic.w	r4, r4, #3
 8019cf8:	42a0      	cmp	r0, r4
 8019cfa:	d005      	beq.n	8019d08 <_malloc_r+0xa8>
 8019cfc:	1a21      	subs	r1, r4, r0
 8019cfe:	4630      	mov	r0, r6
 8019d00:	f000 fad0 	bl	801a2a4 <_sbrk_r>
 8019d04:	3001      	adds	r0, #1
 8019d06:	d0cf      	beq.n	8019ca8 <_malloc_r+0x48>
 8019d08:	6025      	str	r5, [r4, #0]
 8019d0a:	e7db      	b.n	8019cc4 <_malloc_r+0x64>
 8019d0c:	20012298 	.word	0x20012298
 8019d10:	2001229c 	.word	0x2001229c

08019d14 <__sfputc_r>:
 8019d14:	6893      	ldr	r3, [r2, #8]
 8019d16:	3b01      	subs	r3, #1
 8019d18:	2b00      	cmp	r3, #0
 8019d1a:	b410      	push	{r4}
 8019d1c:	6093      	str	r3, [r2, #8]
 8019d1e:	da08      	bge.n	8019d32 <__sfputc_r+0x1e>
 8019d20:	6994      	ldr	r4, [r2, #24]
 8019d22:	42a3      	cmp	r3, r4
 8019d24:	db01      	blt.n	8019d2a <__sfputc_r+0x16>
 8019d26:	290a      	cmp	r1, #10
 8019d28:	d103      	bne.n	8019d32 <__sfputc_r+0x1e>
 8019d2a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019d2e:	f000 bb0d 	b.w	801a34c <__swbuf_r>
 8019d32:	6813      	ldr	r3, [r2, #0]
 8019d34:	1c58      	adds	r0, r3, #1
 8019d36:	6010      	str	r0, [r2, #0]
 8019d38:	7019      	strb	r1, [r3, #0]
 8019d3a:	4608      	mov	r0, r1
 8019d3c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019d40:	4770      	bx	lr

08019d42 <__sfputs_r>:
 8019d42:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019d44:	4606      	mov	r6, r0
 8019d46:	460f      	mov	r7, r1
 8019d48:	4614      	mov	r4, r2
 8019d4a:	18d5      	adds	r5, r2, r3
 8019d4c:	42ac      	cmp	r4, r5
 8019d4e:	d101      	bne.n	8019d54 <__sfputs_r+0x12>
 8019d50:	2000      	movs	r0, #0
 8019d52:	e007      	b.n	8019d64 <__sfputs_r+0x22>
 8019d54:	463a      	mov	r2, r7
 8019d56:	f814 1b01 	ldrb.w	r1, [r4], #1
 8019d5a:	4630      	mov	r0, r6
 8019d5c:	f7ff ffda 	bl	8019d14 <__sfputc_r>
 8019d60:	1c43      	adds	r3, r0, #1
 8019d62:	d1f3      	bne.n	8019d4c <__sfputs_r+0xa>
 8019d64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08019d68 <_vfiprintf_r>:
 8019d68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d6c:	460c      	mov	r4, r1
 8019d6e:	b09d      	sub	sp, #116	; 0x74
 8019d70:	4617      	mov	r7, r2
 8019d72:	461d      	mov	r5, r3
 8019d74:	4606      	mov	r6, r0
 8019d76:	b118      	cbz	r0, 8019d80 <_vfiprintf_r+0x18>
 8019d78:	6983      	ldr	r3, [r0, #24]
 8019d7a:	b90b      	cbnz	r3, 8019d80 <_vfiprintf_r+0x18>
 8019d7c:	f000 fcfa 	bl	801a774 <__sinit>
 8019d80:	4b7c      	ldr	r3, [pc, #496]	; (8019f74 <_vfiprintf_r+0x20c>)
 8019d82:	429c      	cmp	r4, r3
 8019d84:	d158      	bne.n	8019e38 <_vfiprintf_r+0xd0>
 8019d86:	6874      	ldr	r4, [r6, #4]
 8019d88:	89a3      	ldrh	r3, [r4, #12]
 8019d8a:	0718      	lsls	r0, r3, #28
 8019d8c:	d55e      	bpl.n	8019e4c <_vfiprintf_r+0xe4>
 8019d8e:	6923      	ldr	r3, [r4, #16]
 8019d90:	2b00      	cmp	r3, #0
 8019d92:	d05b      	beq.n	8019e4c <_vfiprintf_r+0xe4>
 8019d94:	2300      	movs	r3, #0
 8019d96:	9309      	str	r3, [sp, #36]	; 0x24
 8019d98:	2320      	movs	r3, #32
 8019d9a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8019d9e:	2330      	movs	r3, #48	; 0x30
 8019da0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8019da4:	9503      	str	r5, [sp, #12]
 8019da6:	f04f 0b01 	mov.w	fp, #1
 8019daa:	46b8      	mov	r8, r7
 8019dac:	4645      	mov	r5, r8
 8019dae:	f815 3b01 	ldrb.w	r3, [r5], #1
 8019db2:	b10b      	cbz	r3, 8019db8 <_vfiprintf_r+0x50>
 8019db4:	2b25      	cmp	r3, #37	; 0x25
 8019db6:	d154      	bne.n	8019e62 <_vfiprintf_r+0xfa>
 8019db8:	ebb8 0a07 	subs.w	sl, r8, r7
 8019dbc:	d00b      	beq.n	8019dd6 <_vfiprintf_r+0x6e>
 8019dbe:	4653      	mov	r3, sl
 8019dc0:	463a      	mov	r2, r7
 8019dc2:	4621      	mov	r1, r4
 8019dc4:	4630      	mov	r0, r6
 8019dc6:	f7ff ffbc 	bl	8019d42 <__sfputs_r>
 8019dca:	3001      	adds	r0, #1
 8019dcc:	f000 80c2 	beq.w	8019f54 <_vfiprintf_r+0x1ec>
 8019dd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019dd2:	4453      	add	r3, sl
 8019dd4:	9309      	str	r3, [sp, #36]	; 0x24
 8019dd6:	f898 3000 	ldrb.w	r3, [r8]
 8019dda:	2b00      	cmp	r3, #0
 8019ddc:	f000 80ba 	beq.w	8019f54 <_vfiprintf_r+0x1ec>
 8019de0:	2300      	movs	r3, #0
 8019de2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8019de6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8019dea:	9304      	str	r3, [sp, #16]
 8019dec:	9307      	str	r3, [sp, #28]
 8019dee:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8019df2:	931a      	str	r3, [sp, #104]	; 0x68
 8019df4:	46a8      	mov	r8, r5
 8019df6:	2205      	movs	r2, #5
 8019df8:	f818 1b01 	ldrb.w	r1, [r8], #1
 8019dfc:	485e      	ldr	r0, [pc, #376]	; (8019f78 <_vfiprintf_r+0x210>)
 8019dfe:	f7e6 f9f7 	bl	80001f0 <memchr>
 8019e02:	9b04      	ldr	r3, [sp, #16]
 8019e04:	bb78      	cbnz	r0, 8019e66 <_vfiprintf_r+0xfe>
 8019e06:	06d9      	lsls	r1, r3, #27
 8019e08:	bf44      	itt	mi
 8019e0a:	2220      	movmi	r2, #32
 8019e0c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8019e10:	071a      	lsls	r2, r3, #28
 8019e12:	bf44      	itt	mi
 8019e14:	222b      	movmi	r2, #43	; 0x2b
 8019e16:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8019e1a:	782a      	ldrb	r2, [r5, #0]
 8019e1c:	2a2a      	cmp	r2, #42	; 0x2a
 8019e1e:	d02a      	beq.n	8019e76 <_vfiprintf_r+0x10e>
 8019e20:	9a07      	ldr	r2, [sp, #28]
 8019e22:	46a8      	mov	r8, r5
 8019e24:	2000      	movs	r0, #0
 8019e26:	250a      	movs	r5, #10
 8019e28:	4641      	mov	r1, r8
 8019e2a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8019e2e:	3b30      	subs	r3, #48	; 0x30
 8019e30:	2b09      	cmp	r3, #9
 8019e32:	d969      	bls.n	8019f08 <_vfiprintf_r+0x1a0>
 8019e34:	b360      	cbz	r0, 8019e90 <_vfiprintf_r+0x128>
 8019e36:	e024      	b.n	8019e82 <_vfiprintf_r+0x11a>
 8019e38:	4b50      	ldr	r3, [pc, #320]	; (8019f7c <_vfiprintf_r+0x214>)
 8019e3a:	429c      	cmp	r4, r3
 8019e3c:	d101      	bne.n	8019e42 <_vfiprintf_r+0xda>
 8019e3e:	68b4      	ldr	r4, [r6, #8]
 8019e40:	e7a2      	b.n	8019d88 <_vfiprintf_r+0x20>
 8019e42:	4b4f      	ldr	r3, [pc, #316]	; (8019f80 <_vfiprintf_r+0x218>)
 8019e44:	429c      	cmp	r4, r3
 8019e46:	bf08      	it	eq
 8019e48:	68f4      	ldreq	r4, [r6, #12]
 8019e4a:	e79d      	b.n	8019d88 <_vfiprintf_r+0x20>
 8019e4c:	4621      	mov	r1, r4
 8019e4e:	4630      	mov	r0, r6
 8019e50:	f000 face 	bl	801a3f0 <__swsetup_r>
 8019e54:	2800      	cmp	r0, #0
 8019e56:	d09d      	beq.n	8019d94 <_vfiprintf_r+0x2c>
 8019e58:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8019e5c:	b01d      	add	sp, #116	; 0x74
 8019e5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019e62:	46a8      	mov	r8, r5
 8019e64:	e7a2      	b.n	8019dac <_vfiprintf_r+0x44>
 8019e66:	4a44      	ldr	r2, [pc, #272]	; (8019f78 <_vfiprintf_r+0x210>)
 8019e68:	1a80      	subs	r0, r0, r2
 8019e6a:	fa0b f000 	lsl.w	r0, fp, r0
 8019e6e:	4318      	orrs	r0, r3
 8019e70:	9004      	str	r0, [sp, #16]
 8019e72:	4645      	mov	r5, r8
 8019e74:	e7be      	b.n	8019df4 <_vfiprintf_r+0x8c>
 8019e76:	9a03      	ldr	r2, [sp, #12]
 8019e78:	1d11      	adds	r1, r2, #4
 8019e7a:	6812      	ldr	r2, [r2, #0]
 8019e7c:	9103      	str	r1, [sp, #12]
 8019e7e:	2a00      	cmp	r2, #0
 8019e80:	db01      	blt.n	8019e86 <_vfiprintf_r+0x11e>
 8019e82:	9207      	str	r2, [sp, #28]
 8019e84:	e004      	b.n	8019e90 <_vfiprintf_r+0x128>
 8019e86:	4252      	negs	r2, r2
 8019e88:	f043 0302 	orr.w	r3, r3, #2
 8019e8c:	9207      	str	r2, [sp, #28]
 8019e8e:	9304      	str	r3, [sp, #16]
 8019e90:	f898 3000 	ldrb.w	r3, [r8]
 8019e94:	2b2e      	cmp	r3, #46	; 0x2e
 8019e96:	d10e      	bne.n	8019eb6 <_vfiprintf_r+0x14e>
 8019e98:	f898 3001 	ldrb.w	r3, [r8, #1]
 8019e9c:	2b2a      	cmp	r3, #42	; 0x2a
 8019e9e:	d138      	bne.n	8019f12 <_vfiprintf_r+0x1aa>
 8019ea0:	9b03      	ldr	r3, [sp, #12]
 8019ea2:	1d1a      	adds	r2, r3, #4
 8019ea4:	681b      	ldr	r3, [r3, #0]
 8019ea6:	9203      	str	r2, [sp, #12]
 8019ea8:	2b00      	cmp	r3, #0
 8019eaa:	bfb8      	it	lt
 8019eac:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8019eb0:	f108 0802 	add.w	r8, r8, #2
 8019eb4:	9305      	str	r3, [sp, #20]
 8019eb6:	4d33      	ldr	r5, [pc, #204]	; (8019f84 <_vfiprintf_r+0x21c>)
 8019eb8:	f898 1000 	ldrb.w	r1, [r8]
 8019ebc:	2203      	movs	r2, #3
 8019ebe:	4628      	mov	r0, r5
 8019ec0:	f7e6 f996 	bl	80001f0 <memchr>
 8019ec4:	b140      	cbz	r0, 8019ed8 <_vfiprintf_r+0x170>
 8019ec6:	2340      	movs	r3, #64	; 0x40
 8019ec8:	1b40      	subs	r0, r0, r5
 8019eca:	fa03 f000 	lsl.w	r0, r3, r0
 8019ece:	9b04      	ldr	r3, [sp, #16]
 8019ed0:	4303      	orrs	r3, r0
 8019ed2:	f108 0801 	add.w	r8, r8, #1
 8019ed6:	9304      	str	r3, [sp, #16]
 8019ed8:	f898 1000 	ldrb.w	r1, [r8]
 8019edc:	482a      	ldr	r0, [pc, #168]	; (8019f88 <_vfiprintf_r+0x220>)
 8019ede:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8019ee2:	2206      	movs	r2, #6
 8019ee4:	f108 0701 	add.w	r7, r8, #1
 8019ee8:	f7e6 f982 	bl	80001f0 <memchr>
 8019eec:	2800      	cmp	r0, #0
 8019eee:	d037      	beq.n	8019f60 <_vfiprintf_r+0x1f8>
 8019ef0:	4b26      	ldr	r3, [pc, #152]	; (8019f8c <_vfiprintf_r+0x224>)
 8019ef2:	bb1b      	cbnz	r3, 8019f3c <_vfiprintf_r+0x1d4>
 8019ef4:	9b03      	ldr	r3, [sp, #12]
 8019ef6:	3307      	adds	r3, #7
 8019ef8:	f023 0307 	bic.w	r3, r3, #7
 8019efc:	3308      	adds	r3, #8
 8019efe:	9303      	str	r3, [sp, #12]
 8019f00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019f02:	444b      	add	r3, r9
 8019f04:	9309      	str	r3, [sp, #36]	; 0x24
 8019f06:	e750      	b.n	8019daa <_vfiprintf_r+0x42>
 8019f08:	fb05 3202 	mla	r2, r5, r2, r3
 8019f0c:	2001      	movs	r0, #1
 8019f0e:	4688      	mov	r8, r1
 8019f10:	e78a      	b.n	8019e28 <_vfiprintf_r+0xc0>
 8019f12:	2300      	movs	r3, #0
 8019f14:	f108 0801 	add.w	r8, r8, #1
 8019f18:	9305      	str	r3, [sp, #20]
 8019f1a:	4619      	mov	r1, r3
 8019f1c:	250a      	movs	r5, #10
 8019f1e:	4640      	mov	r0, r8
 8019f20:	f810 2b01 	ldrb.w	r2, [r0], #1
 8019f24:	3a30      	subs	r2, #48	; 0x30
 8019f26:	2a09      	cmp	r2, #9
 8019f28:	d903      	bls.n	8019f32 <_vfiprintf_r+0x1ca>
 8019f2a:	2b00      	cmp	r3, #0
 8019f2c:	d0c3      	beq.n	8019eb6 <_vfiprintf_r+0x14e>
 8019f2e:	9105      	str	r1, [sp, #20]
 8019f30:	e7c1      	b.n	8019eb6 <_vfiprintf_r+0x14e>
 8019f32:	fb05 2101 	mla	r1, r5, r1, r2
 8019f36:	2301      	movs	r3, #1
 8019f38:	4680      	mov	r8, r0
 8019f3a:	e7f0      	b.n	8019f1e <_vfiprintf_r+0x1b6>
 8019f3c:	ab03      	add	r3, sp, #12
 8019f3e:	9300      	str	r3, [sp, #0]
 8019f40:	4622      	mov	r2, r4
 8019f42:	4b13      	ldr	r3, [pc, #76]	; (8019f90 <_vfiprintf_r+0x228>)
 8019f44:	a904      	add	r1, sp, #16
 8019f46:	4630      	mov	r0, r6
 8019f48:	f3af 8000 	nop.w
 8019f4c:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8019f50:	4681      	mov	r9, r0
 8019f52:	d1d5      	bne.n	8019f00 <_vfiprintf_r+0x198>
 8019f54:	89a3      	ldrh	r3, [r4, #12]
 8019f56:	065b      	lsls	r3, r3, #25
 8019f58:	f53f af7e 	bmi.w	8019e58 <_vfiprintf_r+0xf0>
 8019f5c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8019f5e:	e77d      	b.n	8019e5c <_vfiprintf_r+0xf4>
 8019f60:	ab03      	add	r3, sp, #12
 8019f62:	9300      	str	r3, [sp, #0]
 8019f64:	4622      	mov	r2, r4
 8019f66:	4b0a      	ldr	r3, [pc, #40]	; (8019f90 <_vfiprintf_r+0x228>)
 8019f68:	a904      	add	r1, sp, #16
 8019f6a:	4630      	mov	r0, r6
 8019f6c:	f000 f888 	bl	801a080 <_printf_i>
 8019f70:	e7ec      	b.n	8019f4c <_vfiprintf_r+0x1e4>
 8019f72:	bf00      	nop
 8019f74:	0801defc 	.word	0x0801defc
 8019f78:	0801dea4 	.word	0x0801dea4
 8019f7c:	0801df1c 	.word	0x0801df1c
 8019f80:	0801dedc 	.word	0x0801dedc
 8019f84:	0801deaa 	.word	0x0801deaa
 8019f88:	0801deae 	.word	0x0801deae
 8019f8c:	00000000 	.word	0x00000000
 8019f90:	08019d43 	.word	0x08019d43

08019f94 <_printf_common>:
 8019f94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019f98:	4691      	mov	r9, r2
 8019f9a:	461f      	mov	r7, r3
 8019f9c:	688a      	ldr	r2, [r1, #8]
 8019f9e:	690b      	ldr	r3, [r1, #16]
 8019fa0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8019fa4:	4293      	cmp	r3, r2
 8019fa6:	bfb8      	it	lt
 8019fa8:	4613      	movlt	r3, r2
 8019faa:	f8c9 3000 	str.w	r3, [r9]
 8019fae:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8019fb2:	4606      	mov	r6, r0
 8019fb4:	460c      	mov	r4, r1
 8019fb6:	b112      	cbz	r2, 8019fbe <_printf_common+0x2a>
 8019fb8:	3301      	adds	r3, #1
 8019fba:	f8c9 3000 	str.w	r3, [r9]
 8019fbe:	6823      	ldr	r3, [r4, #0]
 8019fc0:	0699      	lsls	r1, r3, #26
 8019fc2:	bf42      	ittt	mi
 8019fc4:	f8d9 3000 	ldrmi.w	r3, [r9]
 8019fc8:	3302      	addmi	r3, #2
 8019fca:	f8c9 3000 	strmi.w	r3, [r9]
 8019fce:	6825      	ldr	r5, [r4, #0]
 8019fd0:	f015 0506 	ands.w	r5, r5, #6
 8019fd4:	d107      	bne.n	8019fe6 <_printf_common+0x52>
 8019fd6:	f104 0a19 	add.w	sl, r4, #25
 8019fda:	68e3      	ldr	r3, [r4, #12]
 8019fdc:	f8d9 2000 	ldr.w	r2, [r9]
 8019fe0:	1a9b      	subs	r3, r3, r2
 8019fe2:	42ab      	cmp	r3, r5
 8019fe4:	dc28      	bgt.n	801a038 <_printf_common+0xa4>
 8019fe6:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8019fea:	6822      	ldr	r2, [r4, #0]
 8019fec:	3300      	adds	r3, #0
 8019fee:	bf18      	it	ne
 8019ff0:	2301      	movne	r3, #1
 8019ff2:	0692      	lsls	r2, r2, #26
 8019ff4:	d42d      	bmi.n	801a052 <_printf_common+0xbe>
 8019ff6:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8019ffa:	4639      	mov	r1, r7
 8019ffc:	4630      	mov	r0, r6
 8019ffe:	47c0      	blx	r8
 801a000:	3001      	adds	r0, #1
 801a002:	d020      	beq.n	801a046 <_printf_common+0xb2>
 801a004:	6823      	ldr	r3, [r4, #0]
 801a006:	68e5      	ldr	r5, [r4, #12]
 801a008:	f8d9 2000 	ldr.w	r2, [r9]
 801a00c:	f003 0306 	and.w	r3, r3, #6
 801a010:	2b04      	cmp	r3, #4
 801a012:	bf08      	it	eq
 801a014:	1aad      	subeq	r5, r5, r2
 801a016:	68a3      	ldr	r3, [r4, #8]
 801a018:	6922      	ldr	r2, [r4, #16]
 801a01a:	bf0c      	ite	eq
 801a01c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801a020:	2500      	movne	r5, #0
 801a022:	4293      	cmp	r3, r2
 801a024:	bfc4      	itt	gt
 801a026:	1a9b      	subgt	r3, r3, r2
 801a028:	18ed      	addgt	r5, r5, r3
 801a02a:	f04f 0900 	mov.w	r9, #0
 801a02e:	341a      	adds	r4, #26
 801a030:	454d      	cmp	r5, r9
 801a032:	d11a      	bne.n	801a06a <_printf_common+0xd6>
 801a034:	2000      	movs	r0, #0
 801a036:	e008      	b.n	801a04a <_printf_common+0xb6>
 801a038:	2301      	movs	r3, #1
 801a03a:	4652      	mov	r2, sl
 801a03c:	4639      	mov	r1, r7
 801a03e:	4630      	mov	r0, r6
 801a040:	47c0      	blx	r8
 801a042:	3001      	adds	r0, #1
 801a044:	d103      	bne.n	801a04e <_printf_common+0xba>
 801a046:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801a04a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a04e:	3501      	adds	r5, #1
 801a050:	e7c3      	b.n	8019fda <_printf_common+0x46>
 801a052:	18e1      	adds	r1, r4, r3
 801a054:	1c5a      	adds	r2, r3, #1
 801a056:	2030      	movs	r0, #48	; 0x30
 801a058:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801a05c:	4422      	add	r2, r4
 801a05e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801a062:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801a066:	3302      	adds	r3, #2
 801a068:	e7c5      	b.n	8019ff6 <_printf_common+0x62>
 801a06a:	2301      	movs	r3, #1
 801a06c:	4622      	mov	r2, r4
 801a06e:	4639      	mov	r1, r7
 801a070:	4630      	mov	r0, r6
 801a072:	47c0      	blx	r8
 801a074:	3001      	adds	r0, #1
 801a076:	d0e6      	beq.n	801a046 <_printf_common+0xb2>
 801a078:	f109 0901 	add.w	r9, r9, #1
 801a07c:	e7d8      	b.n	801a030 <_printf_common+0x9c>
	...

0801a080 <_printf_i>:
 801a080:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801a084:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 801a088:	460c      	mov	r4, r1
 801a08a:	7e09      	ldrb	r1, [r1, #24]
 801a08c:	b085      	sub	sp, #20
 801a08e:	296e      	cmp	r1, #110	; 0x6e
 801a090:	4617      	mov	r7, r2
 801a092:	4606      	mov	r6, r0
 801a094:	4698      	mov	r8, r3
 801a096:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a098:	f000 80b3 	beq.w	801a202 <_printf_i+0x182>
 801a09c:	d822      	bhi.n	801a0e4 <_printf_i+0x64>
 801a09e:	2963      	cmp	r1, #99	; 0x63
 801a0a0:	d036      	beq.n	801a110 <_printf_i+0x90>
 801a0a2:	d80a      	bhi.n	801a0ba <_printf_i+0x3a>
 801a0a4:	2900      	cmp	r1, #0
 801a0a6:	f000 80b9 	beq.w	801a21c <_printf_i+0x19c>
 801a0aa:	2958      	cmp	r1, #88	; 0x58
 801a0ac:	f000 8083 	beq.w	801a1b6 <_printf_i+0x136>
 801a0b0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801a0b4:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 801a0b8:	e032      	b.n	801a120 <_printf_i+0xa0>
 801a0ba:	2964      	cmp	r1, #100	; 0x64
 801a0bc:	d001      	beq.n	801a0c2 <_printf_i+0x42>
 801a0be:	2969      	cmp	r1, #105	; 0x69
 801a0c0:	d1f6      	bne.n	801a0b0 <_printf_i+0x30>
 801a0c2:	6820      	ldr	r0, [r4, #0]
 801a0c4:	6813      	ldr	r3, [r2, #0]
 801a0c6:	0605      	lsls	r5, r0, #24
 801a0c8:	f103 0104 	add.w	r1, r3, #4
 801a0cc:	d52a      	bpl.n	801a124 <_printf_i+0xa4>
 801a0ce:	681b      	ldr	r3, [r3, #0]
 801a0d0:	6011      	str	r1, [r2, #0]
 801a0d2:	2b00      	cmp	r3, #0
 801a0d4:	da03      	bge.n	801a0de <_printf_i+0x5e>
 801a0d6:	222d      	movs	r2, #45	; 0x2d
 801a0d8:	425b      	negs	r3, r3
 801a0da:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 801a0de:	486f      	ldr	r0, [pc, #444]	; (801a29c <_printf_i+0x21c>)
 801a0e0:	220a      	movs	r2, #10
 801a0e2:	e039      	b.n	801a158 <_printf_i+0xd8>
 801a0e4:	2973      	cmp	r1, #115	; 0x73
 801a0e6:	f000 809d 	beq.w	801a224 <_printf_i+0x1a4>
 801a0ea:	d808      	bhi.n	801a0fe <_printf_i+0x7e>
 801a0ec:	296f      	cmp	r1, #111	; 0x6f
 801a0ee:	d020      	beq.n	801a132 <_printf_i+0xb2>
 801a0f0:	2970      	cmp	r1, #112	; 0x70
 801a0f2:	d1dd      	bne.n	801a0b0 <_printf_i+0x30>
 801a0f4:	6823      	ldr	r3, [r4, #0]
 801a0f6:	f043 0320 	orr.w	r3, r3, #32
 801a0fa:	6023      	str	r3, [r4, #0]
 801a0fc:	e003      	b.n	801a106 <_printf_i+0x86>
 801a0fe:	2975      	cmp	r1, #117	; 0x75
 801a100:	d017      	beq.n	801a132 <_printf_i+0xb2>
 801a102:	2978      	cmp	r1, #120	; 0x78
 801a104:	d1d4      	bne.n	801a0b0 <_printf_i+0x30>
 801a106:	2378      	movs	r3, #120	; 0x78
 801a108:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801a10c:	4864      	ldr	r0, [pc, #400]	; (801a2a0 <_printf_i+0x220>)
 801a10e:	e055      	b.n	801a1bc <_printf_i+0x13c>
 801a110:	6813      	ldr	r3, [r2, #0]
 801a112:	1d19      	adds	r1, r3, #4
 801a114:	681b      	ldr	r3, [r3, #0]
 801a116:	6011      	str	r1, [r2, #0]
 801a118:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801a11c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801a120:	2301      	movs	r3, #1
 801a122:	e08c      	b.n	801a23e <_printf_i+0x1be>
 801a124:	681b      	ldr	r3, [r3, #0]
 801a126:	6011      	str	r1, [r2, #0]
 801a128:	f010 0f40 	tst.w	r0, #64	; 0x40
 801a12c:	bf18      	it	ne
 801a12e:	b21b      	sxthne	r3, r3
 801a130:	e7cf      	b.n	801a0d2 <_printf_i+0x52>
 801a132:	6813      	ldr	r3, [r2, #0]
 801a134:	6825      	ldr	r5, [r4, #0]
 801a136:	1d18      	adds	r0, r3, #4
 801a138:	6010      	str	r0, [r2, #0]
 801a13a:	0628      	lsls	r0, r5, #24
 801a13c:	d501      	bpl.n	801a142 <_printf_i+0xc2>
 801a13e:	681b      	ldr	r3, [r3, #0]
 801a140:	e002      	b.n	801a148 <_printf_i+0xc8>
 801a142:	0668      	lsls	r0, r5, #25
 801a144:	d5fb      	bpl.n	801a13e <_printf_i+0xbe>
 801a146:	881b      	ldrh	r3, [r3, #0]
 801a148:	4854      	ldr	r0, [pc, #336]	; (801a29c <_printf_i+0x21c>)
 801a14a:	296f      	cmp	r1, #111	; 0x6f
 801a14c:	bf14      	ite	ne
 801a14e:	220a      	movne	r2, #10
 801a150:	2208      	moveq	r2, #8
 801a152:	2100      	movs	r1, #0
 801a154:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801a158:	6865      	ldr	r5, [r4, #4]
 801a15a:	60a5      	str	r5, [r4, #8]
 801a15c:	2d00      	cmp	r5, #0
 801a15e:	f2c0 8095 	blt.w	801a28c <_printf_i+0x20c>
 801a162:	6821      	ldr	r1, [r4, #0]
 801a164:	f021 0104 	bic.w	r1, r1, #4
 801a168:	6021      	str	r1, [r4, #0]
 801a16a:	2b00      	cmp	r3, #0
 801a16c:	d13d      	bne.n	801a1ea <_printf_i+0x16a>
 801a16e:	2d00      	cmp	r5, #0
 801a170:	f040 808e 	bne.w	801a290 <_printf_i+0x210>
 801a174:	4665      	mov	r5, ip
 801a176:	2a08      	cmp	r2, #8
 801a178:	d10b      	bne.n	801a192 <_printf_i+0x112>
 801a17a:	6823      	ldr	r3, [r4, #0]
 801a17c:	07db      	lsls	r3, r3, #31
 801a17e:	d508      	bpl.n	801a192 <_printf_i+0x112>
 801a180:	6923      	ldr	r3, [r4, #16]
 801a182:	6862      	ldr	r2, [r4, #4]
 801a184:	429a      	cmp	r2, r3
 801a186:	bfde      	ittt	le
 801a188:	2330      	movle	r3, #48	; 0x30
 801a18a:	f805 3c01 	strble.w	r3, [r5, #-1]
 801a18e:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 801a192:	ebac 0305 	sub.w	r3, ip, r5
 801a196:	6123      	str	r3, [r4, #16]
 801a198:	f8cd 8000 	str.w	r8, [sp]
 801a19c:	463b      	mov	r3, r7
 801a19e:	aa03      	add	r2, sp, #12
 801a1a0:	4621      	mov	r1, r4
 801a1a2:	4630      	mov	r0, r6
 801a1a4:	f7ff fef6 	bl	8019f94 <_printf_common>
 801a1a8:	3001      	adds	r0, #1
 801a1aa:	d14d      	bne.n	801a248 <_printf_i+0x1c8>
 801a1ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801a1b0:	b005      	add	sp, #20
 801a1b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801a1b6:	4839      	ldr	r0, [pc, #228]	; (801a29c <_printf_i+0x21c>)
 801a1b8:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 801a1bc:	6813      	ldr	r3, [r2, #0]
 801a1be:	6821      	ldr	r1, [r4, #0]
 801a1c0:	1d1d      	adds	r5, r3, #4
 801a1c2:	681b      	ldr	r3, [r3, #0]
 801a1c4:	6015      	str	r5, [r2, #0]
 801a1c6:	060a      	lsls	r2, r1, #24
 801a1c8:	d50b      	bpl.n	801a1e2 <_printf_i+0x162>
 801a1ca:	07ca      	lsls	r2, r1, #31
 801a1cc:	bf44      	itt	mi
 801a1ce:	f041 0120 	orrmi.w	r1, r1, #32
 801a1d2:	6021      	strmi	r1, [r4, #0]
 801a1d4:	b91b      	cbnz	r3, 801a1de <_printf_i+0x15e>
 801a1d6:	6822      	ldr	r2, [r4, #0]
 801a1d8:	f022 0220 	bic.w	r2, r2, #32
 801a1dc:	6022      	str	r2, [r4, #0]
 801a1de:	2210      	movs	r2, #16
 801a1e0:	e7b7      	b.n	801a152 <_printf_i+0xd2>
 801a1e2:	064d      	lsls	r5, r1, #25
 801a1e4:	bf48      	it	mi
 801a1e6:	b29b      	uxthmi	r3, r3
 801a1e8:	e7ef      	b.n	801a1ca <_printf_i+0x14a>
 801a1ea:	4665      	mov	r5, ip
 801a1ec:	fbb3 f1f2 	udiv	r1, r3, r2
 801a1f0:	fb02 3311 	mls	r3, r2, r1, r3
 801a1f4:	5cc3      	ldrb	r3, [r0, r3]
 801a1f6:	f805 3d01 	strb.w	r3, [r5, #-1]!
 801a1fa:	460b      	mov	r3, r1
 801a1fc:	2900      	cmp	r1, #0
 801a1fe:	d1f5      	bne.n	801a1ec <_printf_i+0x16c>
 801a200:	e7b9      	b.n	801a176 <_printf_i+0xf6>
 801a202:	6813      	ldr	r3, [r2, #0]
 801a204:	6825      	ldr	r5, [r4, #0]
 801a206:	6961      	ldr	r1, [r4, #20]
 801a208:	1d18      	adds	r0, r3, #4
 801a20a:	6010      	str	r0, [r2, #0]
 801a20c:	0628      	lsls	r0, r5, #24
 801a20e:	681b      	ldr	r3, [r3, #0]
 801a210:	d501      	bpl.n	801a216 <_printf_i+0x196>
 801a212:	6019      	str	r1, [r3, #0]
 801a214:	e002      	b.n	801a21c <_printf_i+0x19c>
 801a216:	066a      	lsls	r2, r5, #25
 801a218:	d5fb      	bpl.n	801a212 <_printf_i+0x192>
 801a21a:	8019      	strh	r1, [r3, #0]
 801a21c:	2300      	movs	r3, #0
 801a21e:	6123      	str	r3, [r4, #16]
 801a220:	4665      	mov	r5, ip
 801a222:	e7b9      	b.n	801a198 <_printf_i+0x118>
 801a224:	6813      	ldr	r3, [r2, #0]
 801a226:	1d19      	adds	r1, r3, #4
 801a228:	6011      	str	r1, [r2, #0]
 801a22a:	681d      	ldr	r5, [r3, #0]
 801a22c:	6862      	ldr	r2, [r4, #4]
 801a22e:	2100      	movs	r1, #0
 801a230:	4628      	mov	r0, r5
 801a232:	f7e5 ffdd 	bl	80001f0 <memchr>
 801a236:	b108      	cbz	r0, 801a23c <_printf_i+0x1bc>
 801a238:	1b40      	subs	r0, r0, r5
 801a23a:	6060      	str	r0, [r4, #4]
 801a23c:	6863      	ldr	r3, [r4, #4]
 801a23e:	6123      	str	r3, [r4, #16]
 801a240:	2300      	movs	r3, #0
 801a242:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801a246:	e7a7      	b.n	801a198 <_printf_i+0x118>
 801a248:	6923      	ldr	r3, [r4, #16]
 801a24a:	462a      	mov	r2, r5
 801a24c:	4639      	mov	r1, r7
 801a24e:	4630      	mov	r0, r6
 801a250:	47c0      	blx	r8
 801a252:	3001      	adds	r0, #1
 801a254:	d0aa      	beq.n	801a1ac <_printf_i+0x12c>
 801a256:	6823      	ldr	r3, [r4, #0]
 801a258:	079b      	lsls	r3, r3, #30
 801a25a:	d413      	bmi.n	801a284 <_printf_i+0x204>
 801a25c:	68e0      	ldr	r0, [r4, #12]
 801a25e:	9b03      	ldr	r3, [sp, #12]
 801a260:	4298      	cmp	r0, r3
 801a262:	bfb8      	it	lt
 801a264:	4618      	movlt	r0, r3
 801a266:	e7a3      	b.n	801a1b0 <_printf_i+0x130>
 801a268:	2301      	movs	r3, #1
 801a26a:	464a      	mov	r2, r9
 801a26c:	4639      	mov	r1, r7
 801a26e:	4630      	mov	r0, r6
 801a270:	47c0      	blx	r8
 801a272:	3001      	adds	r0, #1
 801a274:	d09a      	beq.n	801a1ac <_printf_i+0x12c>
 801a276:	3501      	adds	r5, #1
 801a278:	68e3      	ldr	r3, [r4, #12]
 801a27a:	9a03      	ldr	r2, [sp, #12]
 801a27c:	1a9b      	subs	r3, r3, r2
 801a27e:	42ab      	cmp	r3, r5
 801a280:	dcf2      	bgt.n	801a268 <_printf_i+0x1e8>
 801a282:	e7eb      	b.n	801a25c <_printf_i+0x1dc>
 801a284:	2500      	movs	r5, #0
 801a286:	f104 0919 	add.w	r9, r4, #25
 801a28a:	e7f5      	b.n	801a278 <_printf_i+0x1f8>
 801a28c:	2b00      	cmp	r3, #0
 801a28e:	d1ac      	bne.n	801a1ea <_printf_i+0x16a>
 801a290:	7803      	ldrb	r3, [r0, #0]
 801a292:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801a296:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801a29a:	e76c      	b.n	801a176 <_printf_i+0xf6>
 801a29c:	0801deb5 	.word	0x0801deb5
 801a2a0:	0801dec6 	.word	0x0801dec6

0801a2a4 <_sbrk_r>:
 801a2a4:	b538      	push	{r3, r4, r5, lr}
 801a2a6:	4c06      	ldr	r4, [pc, #24]	; (801a2c0 <_sbrk_r+0x1c>)
 801a2a8:	2300      	movs	r3, #0
 801a2aa:	4605      	mov	r5, r0
 801a2ac:	4608      	mov	r0, r1
 801a2ae:	6023      	str	r3, [r4, #0]
 801a2b0:	f7e7 fdc8 	bl	8001e44 <_sbrk>
 801a2b4:	1c43      	adds	r3, r0, #1
 801a2b6:	d102      	bne.n	801a2be <_sbrk_r+0x1a>
 801a2b8:	6823      	ldr	r3, [r4, #0]
 801a2ba:	b103      	cbz	r3, 801a2be <_sbrk_r+0x1a>
 801a2bc:	602b      	str	r3, [r5, #0]
 801a2be:	bd38      	pop	{r3, r4, r5, pc}
 801a2c0:	2001277c 	.word	0x2001277c

0801a2c4 <_raise_r>:
 801a2c4:	291f      	cmp	r1, #31
 801a2c6:	b538      	push	{r3, r4, r5, lr}
 801a2c8:	4604      	mov	r4, r0
 801a2ca:	460d      	mov	r5, r1
 801a2cc:	d904      	bls.n	801a2d8 <_raise_r+0x14>
 801a2ce:	2316      	movs	r3, #22
 801a2d0:	6003      	str	r3, [r0, #0]
 801a2d2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801a2d6:	bd38      	pop	{r3, r4, r5, pc}
 801a2d8:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801a2da:	b112      	cbz	r2, 801a2e2 <_raise_r+0x1e>
 801a2dc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801a2e0:	b94b      	cbnz	r3, 801a2f6 <_raise_r+0x32>
 801a2e2:	4620      	mov	r0, r4
 801a2e4:	f000 f830 	bl	801a348 <_getpid_r>
 801a2e8:	462a      	mov	r2, r5
 801a2ea:	4601      	mov	r1, r0
 801a2ec:	4620      	mov	r0, r4
 801a2ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801a2f2:	f000 b817 	b.w	801a324 <_kill_r>
 801a2f6:	2b01      	cmp	r3, #1
 801a2f8:	d00a      	beq.n	801a310 <_raise_r+0x4c>
 801a2fa:	1c59      	adds	r1, r3, #1
 801a2fc:	d103      	bne.n	801a306 <_raise_r+0x42>
 801a2fe:	2316      	movs	r3, #22
 801a300:	6003      	str	r3, [r0, #0]
 801a302:	2001      	movs	r0, #1
 801a304:	e7e7      	b.n	801a2d6 <_raise_r+0x12>
 801a306:	2400      	movs	r4, #0
 801a308:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801a30c:	4628      	mov	r0, r5
 801a30e:	4798      	blx	r3
 801a310:	2000      	movs	r0, #0
 801a312:	e7e0      	b.n	801a2d6 <_raise_r+0x12>

0801a314 <raise>:
 801a314:	4b02      	ldr	r3, [pc, #8]	; (801a320 <raise+0xc>)
 801a316:	4601      	mov	r1, r0
 801a318:	6818      	ldr	r0, [r3, #0]
 801a31a:	f7ff bfd3 	b.w	801a2c4 <_raise_r>
 801a31e:	bf00      	nop
 801a320:	200000fc 	.word	0x200000fc

0801a324 <_kill_r>:
 801a324:	b538      	push	{r3, r4, r5, lr}
 801a326:	4c07      	ldr	r4, [pc, #28]	; (801a344 <_kill_r+0x20>)
 801a328:	2300      	movs	r3, #0
 801a32a:	4605      	mov	r5, r0
 801a32c:	4608      	mov	r0, r1
 801a32e:	4611      	mov	r1, r2
 801a330:	6023      	str	r3, [r4, #0]
 801a332:	f7e7 fd51 	bl	8001dd8 <_kill>
 801a336:	1c43      	adds	r3, r0, #1
 801a338:	d102      	bne.n	801a340 <_kill_r+0x1c>
 801a33a:	6823      	ldr	r3, [r4, #0]
 801a33c:	b103      	cbz	r3, 801a340 <_kill_r+0x1c>
 801a33e:	602b      	str	r3, [r5, #0]
 801a340:	bd38      	pop	{r3, r4, r5, pc}
 801a342:	bf00      	nop
 801a344:	2001277c 	.word	0x2001277c

0801a348 <_getpid_r>:
 801a348:	f7e7 bd44 	b.w	8001dd4 <_getpid>

0801a34c <__swbuf_r>:
 801a34c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a34e:	460e      	mov	r6, r1
 801a350:	4614      	mov	r4, r2
 801a352:	4605      	mov	r5, r0
 801a354:	b118      	cbz	r0, 801a35e <__swbuf_r+0x12>
 801a356:	6983      	ldr	r3, [r0, #24]
 801a358:	b90b      	cbnz	r3, 801a35e <__swbuf_r+0x12>
 801a35a:	f000 fa0b 	bl	801a774 <__sinit>
 801a35e:	4b21      	ldr	r3, [pc, #132]	; (801a3e4 <__swbuf_r+0x98>)
 801a360:	429c      	cmp	r4, r3
 801a362:	d12a      	bne.n	801a3ba <__swbuf_r+0x6e>
 801a364:	686c      	ldr	r4, [r5, #4]
 801a366:	69a3      	ldr	r3, [r4, #24]
 801a368:	60a3      	str	r3, [r4, #8]
 801a36a:	89a3      	ldrh	r3, [r4, #12]
 801a36c:	071a      	lsls	r2, r3, #28
 801a36e:	d52e      	bpl.n	801a3ce <__swbuf_r+0x82>
 801a370:	6923      	ldr	r3, [r4, #16]
 801a372:	b363      	cbz	r3, 801a3ce <__swbuf_r+0x82>
 801a374:	6923      	ldr	r3, [r4, #16]
 801a376:	6820      	ldr	r0, [r4, #0]
 801a378:	1ac0      	subs	r0, r0, r3
 801a37a:	6963      	ldr	r3, [r4, #20]
 801a37c:	b2f6      	uxtb	r6, r6
 801a37e:	4283      	cmp	r3, r0
 801a380:	4637      	mov	r7, r6
 801a382:	dc04      	bgt.n	801a38e <__swbuf_r+0x42>
 801a384:	4621      	mov	r1, r4
 801a386:	4628      	mov	r0, r5
 801a388:	f000 f98a 	bl	801a6a0 <_fflush_r>
 801a38c:	bb28      	cbnz	r0, 801a3da <__swbuf_r+0x8e>
 801a38e:	68a3      	ldr	r3, [r4, #8]
 801a390:	3b01      	subs	r3, #1
 801a392:	60a3      	str	r3, [r4, #8]
 801a394:	6823      	ldr	r3, [r4, #0]
 801a396:	1c5a      	adds	r2, r3, #1
 801a398:	6022      	str	r2, [r4, #0]
 801a39a:	701e      	strb	r6, [r3, #0]
 801a39c:	6963      	ldr	r3, [r4, #20]
 801a39e:	3001      	adds	r0, #1
 801a3a0:	4283      	cmp	r3, r0
 801a3a2:	d004      	beq.n	801a3ae <__swbuf_r+0x62>
 801a3a4:	89a3      	ldrh	r3, [r4, #12]
 801a3a6:	07db      	lsls	r3, r3, #31
 801a3a8:	d519      	bpl.n	801a3de <__swbuf_r+0x92>
 801a3aa:	2e0a      	cmp	r6, #10
 801a3ac:	d117      	bne.n	801a3de <__swbuf_r+0x92>
 801a3ae:	4621      	mov	r1, r4
 801a3b0:	4628      	mov	r0, r5
 801a3b2:	f000 f975 	bl	801a6a0 <_fflush_r>
 801a3b6:	b190      	cbz	r0, 801a3de <__swbuf_r+0x92>
 801a3b8:	e00f      	b.n	801a3da <__swbuf_r+0x8e>
 801a3ba:	4b0b      	ldr	r3, [pc, #44]	; (801a3e8 <__swbuf_r+0x9c>)
 801a3bc:	429c      	cmp	r4, r3
 801a3be:	d101      	bne.n	801a3c4 <__swbuf_r+0x78>
 801a3c0:	68ac      	ldr	r4, [r5, #8]
 801a3c2:	e7d0      	b.n	801a366 <__swbuf_r+0x1a>
 801a3c4:	4b09      	ldr	r3, [pc, #36]	; (801a3ec <__swbuf_r+0xa0>)
 801a3c6:	429c      	cmp	r4, r3
 801a3c8:	bf08      	it	eq
 801a3ca:	68ec      	ldreq	r4, [r5, #12]
 801a3cc:	e7cb      	b.n	801a366 <__swbuf_r+0x1a>
 801a3ce:	4621      	mov	r1, r4
 801a3d0:	4628      	mov	r0, r5
 801a3d2:	f000 f80d 	bl	801a3f0 <__swsetup_r>
 801a3d6:	2800      	cmp	r0, #0
 801a3d8:	d0cc      	beq.n	801a374 <__swbuf_r+0x28>
 801a3da:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 801a3de:	4638      	mov	r0, r7
 801a3e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a3e2:	bf00      	nop
 801a3e4:	0801defc 	.word	0x0801defc
 801a3e8:	0801df1c 	.word	0x0801df1c
 801a3ec:	0801dedc 	.word	0x0801dedc

0801a3f0 <__swsetup_r>:
 801a3f0:	4b32      	ldr	r3, [pc, #200]	; (801a4bc <__swsetup_r+0xcc>)
 801a3f2:	b570      	push	{r4, r5, r6, lr}
 801a3f4:	681d      	ldr	r5, [r3, #0]
 801a3f6:	4606      	mov	r6, r0
 801a3f8:	460c      	mov	r4, r1
 801a3fa:	b125      	cbz	r5, 801a406 <__swsetup_r+0x16>
 801a3fc:	69ab      	ldr	r3, [r5, #24]
 801a3fe:	b913      	cbnz	r3, 801a406 <__swsetup_r+0x16>
 801a400:	4628      	mov	r0, r5
 801a402:	f000 f9b7 	bl	801a774 <__sinit>
 801a406:	4b2e      	ldr	r3, [pc, #184]	; (801a4c0 <__swsetup_r+0xd0>)
 801a408:	429c      	cmp	r4, r3
 801a40a:	d10f      	bne.n	801a42c <__swsetup_r+0x3c>
 801a40c:	686c      	ldr	r4, [r5, #4]
 801a40e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801a412:	b29a      	uxth	r2, r3
 801a414:	0715      	lsls	r5, r2, #28
 801a416:	d42c      	bmi.n	801a472 <__swsetup_r+0x82>
 801a418:	06d0      	lsls	r0, r2, #27
 801a41a:	d411      	bmi.n	801a440 <__swsetup_r+0x50>
 801a41c:	2209      	movs	r2, #9
 801a41e:	6032      	str	r2, [r6, #0]
 801a420:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801a424:	81a3      	strh	r3, [r4, #12]
 801a426:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801a42a:	e03e      	b.n	801a4aa <__swsetup_r+0xba>
 801a42c:	4b25      	ldr	r3, [pc, #148]	; (801a4c4 <__swsetup_r+0xd4>)
 801a42e:	429c      	cmp	r4, r3
 801a430:	d101      	bne.n	801a436 <__swsetup_r+0x46>
 801a432:	68ac      	ldr	r4, [r5, #8]
 801a434:	e7eb      	b.n	801a40e <__swsetup_r+0x1e>
 801a436:	4b24      	ldr	r3, [pc, #144]	; (801a4c8 <__swsetup_r+0xd8>)
 801a438:	429c      	cmp	r4, r3
 801a43a:	bf08      	it	eq
 801a43c:	68ec      	ldreq	r4, [r5, #12]
 801a43e:	e7e6      	b.n	801a40e <__swsetup_r+0x1e>
 801a440:	0751      	lsls	r1, r2, #29
 801a442:	d512      	bpl.n	801a46a <__swsetup_r+0x7a>
 801a444:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801a446:	b141      	cbz	r1, 801a45a <__swsetup_r+0x6a>
 801a448:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801a44c:	4299      	cmp	r1, r3
 801a44e:	d002      	beq.n	801a456 <__swsetup_r+0x66>
 801a450:	4630      	mov	r0, r6
 801a452:	f7ff fbb7 	bl	8019bc4 <_free_r>
 801a456:	2300      	movs	r3, #0
 801a458:	6363      	str	r3, [r4, #52]	; 0x34
 801a45a:	89a3      	ldrh	r3, [r4, #12]
 801a45c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801a460:	81a3      	strh	r3, [r4, #12]
 801a462:	2300      	movs	r3, #0
 801a464:	6063      	str	r3, [r4, #4]
 801a466:	6923      	ldr	r3, [r4, #16]
 801a468:	6023      	str	r3, [r4, #0]
 801a46a:	89a3      	ldrh	r3, [r4, #12]
 801a46c:	f043 0308 	orr.w	r3, r3, #8
 801a470:	81a3      	strh	r3, [r4, #12]
 801a472:	6923      	ldr	r3, [r4, #16]
 801a474:	b94b      	cbnz	r3, 801a48a <__swsetup_r+0x9a>
 801a476:	89a3      	ldrh	r3, [r4, #12]
 801a478:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801a47c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801a480:	d003      	beq.n	801a48a <__swsetup_r+0x9a>
 801a482:	4621      	mov	r1, r4
 801a484:	4630      	mov	r0, r6
 801a486:	f000 fa23 	bl	801a8d0 <__smakebuf_r>
 801a48a:	89a2      	ldrh	r2, [r4, #12]
 801a48c:	f012 0301 	ands.w	r3, r2, #1
 801a490:	d00c      	beq.n	801a4ac <__swsetup_r+0xbc>
 801a492:	2300      	movs	r3, #0
 801a494:	60a3      	str	r3, [r4, #8]
 801a496:	6963      	ldr	r3, [r4, #20]
 801a498:	425b      	negs	r3, r3
 801a49a:	61a3      	str	r3, [r4, #24]
 801a49c:	6923      	ldr	r3, [r4, #16]
 801a49e:	b953      	cbnz	r3, 801a4b6 <__swsetup_r+0xc6>
 801a4a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801a4a4:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 801a4a8:	d1ba      	bne.n	801a420 <__swsetup_r+0x30>
 801a4aa:	bd70      	pop	{r4, r5, r6, pc}
 801a4ac:	0792      	lsls	r2, r2, #30
 801a4ae:	bf58      	it	pl
 801a4b0:	6963      	ldrpl	r3, [r4, #20]
 801a4b2:	60a3      	str	r3, [r4, #8]
 801a4b4:	e7f2      	b.n	801a49c <__swsetup_r+0xac>
 801a4b6:	2000      	movs	r0, #0
 801a4b8:	e7f7      	b.n	801a4aa <__swsetup_r+0xba>
 801a4ba:	bf00      	nop
 801a4bc:	200000fc 	.word	0x200000fc
 801a4c0:	0801defc 	.word	0x0801defc
 801a4c4:	0801df1c 	.word	0x0801df1c
 801a4c8:	0801dedc 	.word	0x0801dedc

0801a4cc <__register_exitproc>:
 801a4cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801a4d0:	4d2c      	ldr	r5, [pc, #176]	; (801a584 <__register_exitproc+0xb8>)
 801a4d2:	682c      	ldr	r4, [r5, #0]
 801a4d4:	4607      	mov	r7, r0
 801a4d6:	460e      	mov	r6, r1
 801a4d8:	4691      	mov	r9, r2
 801a4da:	4698      	mov	r8, r3
 801a4dc:	b934      	cbnz	r4, 801a4ec <__register_exitproc+0x20>
 801a4de:	4b2a      	ldr	r3, [pc, #168]	; (801a588 <__register_exitproc+0xbc>)
 801a4e0:	4c2a      	ldr	r4, [pc, #168]	; (801a58c <__register_exitproc+0xc0>)
 801a4e2:	602c      	str	r4, [r5, #0]
 801a4e4:	b113      	cbz	r3, 801a4ec <__register_exitproc+0x20>
 801a4e6:	681b      	ldr	r3, [r3, #0]
 801a4e8:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801a4ec:	6863      	ldr	r3, [r4, #4]
 801a4ee:	2b1f      	cmp	r3, #31
 801a4f0:	dd3d      	ble.n	801a56e <__register_exitproc+0xa2>
 801a4f2:	4b27      	ldr	r3, [pc, #156]	; (801a590 <__register_exitproc+0xc4>)
 801a4f4:	b91b      	cbnz	r3, 801a4fe <__register_exitproc+0x32>
 801a4f6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801a4fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801a4fe:	208c      	movs	r0, #140	; 0x8c
 801a500:	f7ff fb3c 	bl	8019b7c <malloc>
 801a504:	4604      	mov	r4, r0
 801a506:	2800      	cmp	r0, #0
 801a508:	d0f5      	beq.n	801a4f6 <__register_exitproc+0x2a>
 801a50a:	2300      	movs	r3, #0
 801a50c:	682a      	ldr	r2, [r5, #0]
 801a50e:	6002      	str	r2, [r0, #0]
 801a510:	6043      	str	r3, [r0, #4]
 801a512:	6028      	str	r0, [r5, #0]
 801a514:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 801a518:	b30f      	cbz	r7, 801a55e <__register_exitproc+0x92>
 801a51a:	f44f 7084 	mov.w	r0, #264	; 0x108
 801a51e:	f7ff fb2d 	bl	8019b7c <malloc>
 801a522:	2800      	cmp	r0, #0
 801a524:	d0e7      	beq.n	801a4f6 <__register_exitproc+0x2a>
 801a526:	2300      	movs	r3, #0
 801a528:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801a52c:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
 801a530:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801a534:	6862      	ldr	r2, [r4, #4]
 801a536:	f840 9022 	str.w	r9, [r0, r2, lsl #2]
 801a53a:	2301      	movs	r3, #1
 801a53c:	4093      	lsls	r3, r2
 801a53e:	eb00 0182 	add.w	r1, r0, r2, lsl #2
 801a542:	f8d0 2100 	ldr.w	r2, [r0, #256]	; 0x100
 801a546:	431a      	orrs	r2, r3
 801a548:	2f02      	cmp	r7, #2
 801a54a:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
 801a54e:	f8c1 8080 	str.w	r8, [r1, #128]	; 0x80
 801a552:	bf02      	ittt	eq
 801a554:	f8d0 2104 	ldreq.w	r2, [r0, #260]	; 0x104
 801a558:	4313      	orreq	r3, r2
 801a55a:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801a55e:	6863      	ldr	r3, [r4, #4]
 801a560:	1c5a      	adds	r2, r3, #1
 801a562:	3302      	adds	r3, #2
 801a564:	6062      	str	r2, [r4, #4]
 801a566:	2000      	movs	r0, #0
 801a568:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 801a56c:	e7c5      	b.n	801a4fa <__register_exitproc+0x2e>
 801a56e:	2f00      	cmp	r7, #0
 801a570:	d0f5      	beq.n	801a55e <__register_exitproc+0x92>
 801a572:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801a576:	2800      	cmp	r0, #0
 801a578:	d1dc      	bne.n	801a534 <__register_exitproc+0x68>
 801a57a:	4b05      	ldr	r3, [pc, #20]	; (801a590 <__register_exitproc+0xc4>)
 801a57c:	2b00      	cmp	r3, #0
 801a57e:	d0ba      	beq.n	801a4f6 <__register_exitproc+0x2a>
 801a580:	e7cb      	b.n	801a51a <__register_exitproc+0x4e>
 801a582:	bf00      	nop
 801a584:	20012434 	.word	0x20012434
 801a588:	0801ded8 	.word	0x0801ded8
 801a58c:	200123a8 	.word	0x200123a8
 801a590:	08019b7d 	.word	0x08019b7d

0801a594 <__sflush_r>:
 801a594:	898a      	ldrh	r2, [r1, #12]
 801a596:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a59a:	4605      	mov	r5, r0
 801a59c:	0710      	lsls	r0, r2, #28
 801a59e:	460c      	mov	r4, r1
 801a5a0:	d458      	bmi.n	801a654 <__sflush_r+0xc0>
 801a5a2:	684b      	ldr	r3, [r1, #4]
 801a5a4:	2b00      	cmp	r3, #0
 801a5a6:	dc05      	bgt.n	801a5b4 <__sflush_r+0x20>
 801a5a8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801a5aa:	2b00      	cmp	r3, #0
 801a5ac:	dc02      	bgt.n	801a5b4 <__sflush_r+0x20>
 801a5ae:	2000      	movs	r0, #0
 801a5b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a5b4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801a5b6:	2e00      	cmp	r6, #0
 801a5b8:	d0f9      	beq.n	801a5ae <__sflush_r+0x1a>
 801a5ba:	2300      	movs	r3, #0
 801a5bc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801a5c0:	682f      	ldr	r7, [r5, #0]
 801a5c2:	6a21      	ldr	r1, [r4, #32]
 801a5c4:	602b      	str	r3, [r5, #0]
 801a5c6:	d032      	beq.n	801a62e <__sflush_r+0x9a>
 801a5c8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801a5ca:	89a3      	ldrh	r3, [r4, #12]
 801a5cc:	075a      	lsls	r2, r3, #29
 801a5ce:	d505      	bpl.n	801a5dc <__sflush_r+0x48>
 801a5d0:	6863      	ldr	r3, [r4, #4]
 801a5d2:	1ac0      	subs	r0, r0, r3
 801a5d4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801a5d6:	b10b      	cbz	r3, 801a5dc <__sflush_r+0x48>
 801a5d8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801a5da:	1ac0      	subs	r0, r0, r3
 801a5dc:	2300      	movs	r3, #0
 801a5de:	4602      	mov	r2, r0
 801a5e0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801a5e2:	6a21      	ldr	r1, [r4, #32]
 801a5e4:	4628      	mov	r0, r5
 801a5e6:	47b0      	blx	r6
 801a5e8:	1c43      	adds	r3, r0, #1
 801a5ea:	89a3      	ldrh	r3, [r4, #12]
 801a5ec:	d106      	bne.n	801a5fc <__sflush_r+0x68>
 801a5ee:	6829      	ldr	r1, [r5, #0]
 801a5f0:	291d      	cmp	r1, #29
 801a5f2:	d848      	bhi.n	801a686 <__sflush_r+0xf2>
 801a5f4:	4a29      	ldr	r2, [pc, #164]	; (801a69c <__sflush_r+0x108>)
 801a5f6:	40ca      	lsrs	r2, r1
 801a5f8:	07d6      	lsls	r6, r2, #31
 801a5fa:	d544      	bpl.n	801a686 <__sflush_r+0xf2>
 801a5fc:	2200      	movs	r2, #0
 801a5fe:	6062      	str	r2, [r4, #4]
 801a600:	04d9      	lsls	r1, r3, #19
 801a602:	6922      	ldr	r2, [r4, #16]
 801a604:	6022      	str	r2, [r4, #0]
 801a606:	d504      	bpl.n	801a612 <__sflush_r+0x7e>
 801a608:	1c42      	adds	r2, r0, #1
 801a60a:	d101      	bne.n	801a610 <__sflush_r+0x7c>
 801a60c:	682b      	ldr	r3, [r5, #0]
 801a60e:	b903      	cbnz	r3, 801a612 <__sflush_r+0x7e>
 801a610:	6560      	str	r0, [r4, #84]	; 0x54
 801a612:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801a614:	602f      	str	r7, [r5, #0]
 801a616:	2900      	cmp	r1, #0
 801a618:	d0c9      	beq.n	801a5ae <__sflush_r+0x1a>
 801a61a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801a61e:	4299      	cmp	r1, r3
 801a620:	d002      	beq.n	801a628 <__sflush_r+0x94>
 801a622:	4628      	mov	r0, r5
 801a624:	f7ff face 	bl	8019bc4 <_free_r>
 801a628:	2000      	movs	r0, #0
 801a62a:	6360      	str	r0, [r4, #52]	; 0x34
 801a62c:	e7c0      	b.n	801a5b0 <__sflush_r+0x1c>
 801a62e:	2301      	movs	r3, #1
 801a630:	4628      	mov	r0, r5
 801a632:	47b0      	blx	r6
 801a634:	1c41      	adds	r1, r0, #1
 801a636:	d1c8      	bne.n	801a5ca <__sflush_r+0x36>
 801a638:	682b      	ldr	r3, [r5, #0]
 801a63a:	2b00      	cmp	r3, #0
 801a63c:	d0c5      	beq.n	801a5ca <__sflush_r+0x36>
 801a63e:	2b1d      	cmp	r3, #29
 801a640:	d001      	beq.n	801a646 <__sflush_r+0xb2>
 801a642:	2b16      	cmp	r3, #22
 801a644:	d101      	bne.n	801a64a <__sflush_r+0xb6>
 801a646:	602f      	str	r7, [r5, #0]
 801a648:	e7b1      	b.n	801a5ae <__sflush_r+0x1a>
 801a64a:	89a3      	ldrh	r3, [r4, #12]
 801a64c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801a650:	81a3      	strh	r3, [r4, #12]
 801a652:	e7ad      	b.n	801a5b0 <__sflush_r+0x1c>
 801a654:	690f      	ldr	r7, [r1, #16]
 801a656:	2f00      	cmp	r7, #0
 801a658:	d0a9      	beq.n	801a5ae <__sflush_r+0x1a>
 801a65a:	0793      	lsls	r3, r2, #30
 801a65c:	680e      	ldr	r6, [r1, #0]
 801a65e:	bf08      	it	eq
 801a660:	694b      	ldreq	r3, [r1, #20]
 801a662:	600f      	str	r7, [r1, #0]
 801a664:	bf18      	it	ne
 801a666:	2300      	movne	r3, #0
 801a668:	eba6 0807 	sub.w	r8, r6, r7
 801a66c:	608b      	str	r3, [r1, #8]
 801a66e:	f1b8 0f00 	cmp.w	r8, #0
 801a672:	dd9c      	ble.n	801a5ae <__sflush_r+0x1a>
 801a674:	4643      	mov	r3, r8
 801a676:	463a      	mov	r2, r7
 801a678:	6a21      	ldr	r1, [r4, #32]
 801a67a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801a67c:	4628      	mov	r0, r5
 801a67e:	47b0      	blx	r6
 801a680:	2800      	cmp	r0, #0
 801a682:	dc06      	bgt.n	801a692 <__sflush_r+0xfe>
 801a684:	89a3      	ldrh	r3, [r4, #12]
 801a686:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801a68a:	81a3      	strh	r3, [r4, #12]
 801a68c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801a690:	e78e      	b.n	801a5b0 <__sflush_r+0x1c>
 801a692:	4407      	add	r7, r0
 801a694:	eba8 0800 	sub.w	r8, r8, r0
 801a698:	e7e9      	b.n	801a66e <__sflush_r+0xda>
 801a69a:	bf00      	nop
 801a69c:	20400001 	.word	0x20400001

0801a6a0 <_fflush_r>:
 801a6a0:	b538      	push	{r3, r4, r5, lr}
 801a6a2:	690b      	ldr	r3, [r1, #16]
 801a6a4:	4605      	mov	r5, r0
 801a6a6:	460c      	mov	r4, r1
 801a6a8:	b1db      	cbz	r3, 801a6e2 <_fflush_r+0x42>
 801a6aa:	b118      	cbz	r0, 801a6b4 <_fflush_r+0x14>
 801a6ac:	6983      	ldr	r3, [r0, #24]
 801a6ae:	b90b      	cbnz	r3, 801a6b4 <_fflush_r+0x14>
 801a6b0:	f000 f860 	bl	801a774 <__sinit>
 801a6b4:	4b0c      	ldr	r3, [pc, #48]	; (801a6e8 <_fflush_r+0x48>)
 801a6b6:	429c      	cmp	r4, r3
 801a6b8:	d109      	bne.n	801a6ce <_fflush_r+0x2e>
 801a6ba:	686c      	ldr	r4, [r5, #4]
 801a6bc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801a6c0:	b17b      	cbz	r3, 801a6e2 <_fflush_r+0x42>
 801a6c2:	4621      	mov	r1, r4
 801a6c4:	4628      	mov	r0, r5
 801a6c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801a6ca:	f7ff bf63 	b.w	801a594 <__sflush_r>
 801a6ce:	4b07      	ldr	r3, [pc, #28]	; (801a6ec <_fflush_r+0x4c>)
 801a6d0:	429c      	cmp	r4, r3
 801a6d2:	d101      	bne.n	801a6d8 <_fflush_r+0x38>
 801a6d4:	68ac      	ldr	r4, [r5, #8]
 801a6d6:	e7f1      	b.n	801a6bc <_fflush_r+0x1c>
 801a6d8:	4b05      	ldr	r3, [pc, #20]	; (801a6f0 <_fflush_r+0x50>)
 801a6da:	429c      	cmp	r4, r3
 801a6dc:	bf08      	it	eq
 801a6de:	68ec      	ldreq	r4, [r5, #12]
 801a6e0:	e7ec      	b.n	801a6bc <_fflush_r+0x1c>
 801a6e2:	2000      	movs	r0, #0
 801a6e4:	bd38      	pop	{r3, r4, r5, pc}
 801a6e6:	bf00      	nop
 801a6e8:	0801defc 	.word	0x0801defc
 801a6ec:	0801df1c 	.word	0x0801df1c
 801a6f0:	0801dedc 	.word	0x0801dedc

0801a6f4 <std>:
 801a6f4:	2300      	movs	r3, #0
 801a6f6:	b510      	push	{r4, lr}
 801a6f8:	4604      	mov	r4, r0
 801a6fa:	e9c0 3300 	strd	r3, r3, [r0]
 801a6fe:	6083      	str	r3, [r0, #8]
 801a700:	8181      	strh	r1, [r0, #12]
 801a702:	6643      	str	r3, [r0, #100]	; 0x64
 801a704:	81c2      	strh	r2, [r0, #14]
 801a706:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801a70a:	6183      	str	r3, [r0, #24]
 801a70c:	4619      	mov	r1, r3
 801a70e:	2208      	movs	r2, #8
 801a710:	305c      	adds	r0, #92	; 0x5c
 801a712:	f7ff fa4e 	bl	8019bb2 <memset>
 801a716:	4b05      	ldr	r3, [pc, #20]	; (801a72c <std+0x38>)
 801a718:	6263      	str	r3, [r4, #36]	; 0x24
 801a71a:	4b05      	ldr	r3, [pc, #20]	; (801a730 <std+0x3c>)
 801a71c:	62a3      	str	r3, [r4, #40]	; 0x28
 801a71e:	4b05      	ldr	r3, [pc, #20]	; (801a734 <std+0x40>)
 801a720:	62e3      	str	r3, [r4, #44]	; 0x2c
 801a722:	4b05      	ldr	r3, [pc, #20]	; (801a738 <std+0x44>)
 801a724:	6224      	str	r4, [r4, #32]
 801a726:	6323      	str	r3, [r4, #48]	; 0x30
 801a728:	bd10      	pop	{r4, pc}
 801a72a:	bf00      	nop
 801a72c:	0801a955 	.word	0x0801a955
 801a730:	0801a977 	.word	0x0801a977
 801a734:	0801a9af 	.word	0x0801a9af
 801a738:	0801a9d3 	.word	0x0801a9d3

0801a73c <_cleanup_r>:
 801a73c:	4901      	ldr	r1, [pc, #4]	; (801a744 <_cleanup_r+0x8>)
 801a73e:	f000 b885 	b.w	801a84c <_fwalk_reent>
 801a742:	bf00      	nop
 801a744:	0801a6a1 	.word	0x0801a6a1

0801a748 <__sfmoreglue>:
 801a748:	b570      	push	{r4, r5, r6, lr}
 801a74a:	1e4a      	subs	r2, r1, #1
 801a74c:	2568      	movs	r5, #104	; 0x68
 801a74e:	4355      	muls	r5, r2
 801a750:	460e      	mov	r6, r1
 801a752:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801a756:	f7ff fa83 	bl	8019c60 <_malloc_r>
 801a75a:	4604      	mov	r4, r0
 801a75c:	b140      	cbz	r0, 801a770 <__sfmoreglue+0x28>
 801a75e:	2100      	movs	r1, #0
 801a760:	e9c0 1600 	strd	r1, r6, [r0]
 801a764:	300c      	adds	r0, #12
 801a766:	60a0      	str	r0, [r4, #8]
 801a768:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801a76c:	f7ff fa21 	bl	8019bb2 <memset>
 801a770:	4620      	mov	r0, r4
 801a772:	bd70      	pop	{r4, r5, r6, pc}

0801a774 <__sinit>:
 801a774:	6983      	ldr	r3, [r0, #24]
 801a776:	b510      	push	{r4, lr}
 801a778:	4604      	mov	r4, r0
 801a77a:	bb33      	cbnz	r3, 801a7ca <__sinit+0x56>
 801a77c:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 801a780:	6503      	str	r3, [r0, #80]	; 0x50
 801a782:	4b12      	ldr	r3, [pc, #72]	; (801a7cc <__sinit+0x58>)
 801a784:	4a12      	ldr	r2, [pc, #72]	; (801a7d0 <__sinit+0x5c>)
 801a786:	681b      	ldr	r3, [r3, #0]
 801a788:	6282      	str	r2, [r0, #40]	; 0x28
 801a78a:	4298      	cmp	r0, r3
 801a78c:	bf04      	itt	eq
 801a78e:	2301      	moveq	r3, #1
 801a790:	6183      	streq	r3, [r0, #24]
 801a792:	f000 f81f 	bl	801a7d4 <__sfp>
 801a796:	6060      	str	r0, [r4, #4]
 801a798:	4620      	mov	r0, r4
 801a79a:	f000 f81b 	bl	801a7d4 <__sfp>
 801a79e:	60a0      	str	r0, [r4, #8]
 801a7a0:	4620      	mov	r0, r4
 801a7a2:	f000 f817 	bl	801a7d4 <__sfp>
 801a7a6:	2200      	movs	r2, #0
 801a7a8:	60e0      	str	r0, [r4, #12]
 801a7aa:	2104      	movs	r1, #4
 801a7ac:	6860      	ldr	r0, [r4, #4]
 801a7ae:	f7ff ffa1 	bl	801a6f4 <std>
 801a7b2:	2201      	movs	r2, #1
 801a7b4:	2109      	movs	r1, #9
 801a7b6:	68a0      	ldr	r0, [r4, #8]
 801a7b8:	f7ff ff9c 	bl	801a6f4 <std>
 801a7bc:	2202      	movs	r2, #2
 801a7be:	2112      	movs	r1, #18
 801a7c0:	68e0      	ldr	r0, [r4, #12]
 801a7c2:	f7ff ff97 	bl	801a6f4 <std>
 801a7c6:	2301      	movs	r3, #1
 801a7c8:	61a3      	str	r3, [r4, #24]
 801a7ca:	bd10      	pop	{r4, pc}
 801a7cc:	0801dea0 	.word	0x0801dea0
 801a7d0:	0801a73d 	.word	0x0801a73d

0801a7d4 <__sfp>:
 801a7d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a7d6:	4b1b      	ldr	r3, [pc, #108]	; (801a844 <__sfp+0x70>)
 801a7d8:	681e      	ldr	r6, [r3, #0]
 801a7da:	69b3      	ldr	r3, [r6, #24]
 801a7dc:	4607      	mov	r7, r0
 801a7de:	b913      	cbnz	r3, 801a7e6 <__sfp+0x12>
 801a7e0:	4630      	mov	r0, r6
 801a7e2:	f7ff ffc7 	bl	801a774 <__sinit>
 801a7e6:	3648      	adds	r6, #72	; 0x48
 801a7e8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801a7ec:	3b01      	subs	r3, #1
 801a7ee:	d503      	bpl.n	801a7f8 <__sfp+0x24>
 801a7f0:	6833      	ldr	r3, [r6, #0]
 801a7f2:	b133      	cbz	r3, 801a802 <__sfp+0x2e>
 801a7f4:	6836      	ldr	r6, [r6, #0]
 801a7f6:	e7f7      	b.n	801a7e8 <__sfp+0x14>
 801a7f8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801a7fc:	b16d      	cbz	r5, 801a81a <__sfp+0x46>
 801a7fe:	3468      	adds	r4, #104	; 0x68
 801a800:	e7f4      	b.n	801a7ec <__sfp+0x18>
 801a802:	2104      	movs	r1, #4
 801a804:	4638      	mov	r0, r7
 801a806:	f7ff ff9f 	bl	801a748 <__sfmoreglue>
 801a80a:	6030      	str	r0, [r6, #0]
 801a80c:	2800      	cmp	r0, #0
 801a80e:	d1f1      	bne.n	801a7f4 <__sfp+0x20>
 801a810:	230c      	movs	r3, #12
 801a812:	603b      	str	r3, [r7, #0]
 801a814:	4604      	mov	r4, r0
 801a816:	4620      	mov	r0, r4
 801a818:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a81a:	4b0b      	ldr	r3, [pc, #44]	; (801a848 <__sfp+0x74>)
 801a81c:	6665      	str	r5, [r4, #100]	; 0x64
 801a81e:	e9c4 5500 	strd	r5, r5, [r4]
 801a822:	60a5      	str	r5, [r4, #8]
 801a824:	e9c4 3503 	strd	r3, r5, [r4, #12]
 801a828:	e9c4 5505 	strd	r5, r5, [r4, #20]
 801a82c:	2208      	movs	r2, #8
 801a82e:	4629      	mov	r1, r5
 801a830:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801a834:	f7ff f9bd 	bl	8019bb2 <memset>
 801a838:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801a83c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801a840:	e7e9      	b.n	801a816 <__sfp+0x42>
 801a842:	bf00      	nop
 801a844:	0801dea0 	.word	0x0801dea0
 801a848:	ffff0001 	.word	0xffff0001

0801a84c <_fwalk_reent>:
 801a84c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801a850:	4680      	mov	r8, r0
 801a852:	4689      	mov	r9, r1
 801a854:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801a858:	2600      	movs	r6, #0
 801a85a:	b914      	cbnz	r4, 801a862 <_fwalk_reent+0x16>
 801a85c:	4630      	mov	r0, r6
 801a85e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801a862:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 801a866:	3f01      	subs	r7, #1
 801a868:	d501      	bpl.n	801a86e <_fwalk_reent+0x22>
 801a86a:	6824      	ldr	r4, [r4, #0]
 801a86c:	e7f5      	b.n	801a85a <_fwalk_reent+0xe>
 801a86e:	89ab      	ldrh	r3, [r5, #12]
 801a870:	2b01      	cmp	r3, #1
 801a872:	d907      	bls.n	801a884 <_fwalk_reent+0x38>
 801a874:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801a878:	3301      	adds	r3, #1
 801a87a:	d003      	beq.n	801a884 <_fwalk_reent+0x38>
 801a87c:	4629      	mov	r1, r5
 801a87e:	4640      	mov	r0, r8
 801a880:	47c8      	blx	r9
 801a882:	4306      	orrs	r6, r0
 801a884:	3568      	adds	r5, #104	; 0x68
 801a886:	e7ee      	b.n	801a866 <_fwalk_reent+0x1a>

0801a888 <__swhatbuf_r>:
 801a888:	b570      	push	{r4, r5, r6, lr}
 801a88a:	460e      	mov	r6, r1
 801a88c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a890:	2900      	cmp	r1, #0
 801a892:	b096      	sub	sp, #88	; 0x58
 801a894:	4614      	mov	r4, r2
 801a896:	461d      	mov	r5, r3
 801a898:	da07      	bge.n	801a8aa <__swhatbuf_r+0x22>
 801a89a:	2300      	movs	r3, #0
 801a89c:	602b      	str	r3, [r5, #0]
 801a89e:	89b3      	ldrh	r3, [r6, #12]
 801a8a0:	061a      	lsls	r2, r3, #24
 801a8a2:	d410      	bmi.n	801a8c6 <__swhatbuf_r+0x3e>
 801a8a4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801a8a8:	e00e      	b.n	801a8c8 <__swhatbuf_r+0x40>
 801a8aa:	466a      	mov	r2, sp
 801a8ac:	f000 f8b8 	bl	801aa20 <_fstat_r>
 801a8b0:	2800      	cmp	r0, #0
 801a8b2:	dbf2      	blt.n	801a89a <__swhatbuf_r+0x12>
 801a8b4:	9a01      	ldr	r2, [sp, #4]
 801a8b6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801a8ba:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801a8be:	425a      	negs	r2, r3
 801a8c0:	415a      	adcs	r2, r3
 801a8c2:	602a      	str	r2, [r5, #0]
 801a8c4:	e7ee      	b.n	801a8a4 <__swhatbuf_r+0x1c>
 801a8c6:	2340      	movs	r3, #64	; 0x40
 801a8c8:	2000      	movs	r0, #0
 801a8ca:	6023      	str	r3, [r4, #0]
 801a8cc:	b016      	add	sp, #88	; 0x58
 801a8ce:	bd70      	pop	{r4, r5, r6, pc}

0801a8d0 <__smakebuf_r>:
 801a8d0:	898b      	ldrh	r3, [r1, #12]
 801a8d2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801a8d4:	079d      	lsls	r5, r3, #30
 801a8d6:	4606      	mov	r6, r0
 801a8d8:	460c      	mov	r4, r1
 801a8da:	d507      	bpl.n	801a8ec <__smakebuf_r+0x1c>
 801a8dc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801a8e0:	6023      	str	r3, [r4, #0]
 801a8e2:	6123      	str	r3, [r4, #16]
 801a8e4:	2301      	movs	r3, #1
 801a8e6:	6163      	str	r3, [r4, #20]
 801a8e8:	b002      	add	sp, #8
 801a8ea:	bd70      	pop	{r4, r5, r6, pc}
 801a8ec:	ab01      	add	r3, sp, #4
 801a8ee:	466a      	mov	r2, sp
 801a8f0:	f7ff ffca 	bl	801a888 <__swhatbuf_r>
 801a8f4:	9900      	ldr	r1, [sp, #0]
 801a8f6:	4605      	mov	r5, r0
 801a8f8:	4630      	mov	r0, r6
 801a8fa:	f7ff f9b1 	bl	8019c60 <_malloc_r>
 801a8fe:	b948      	cbnz	r0, 801a914 <__smakebuf_r+0x44>
 801a900:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801a904:	059a      	lsls	r2, r3, #22
 801a906:	d4ef      	bmi.n	801a8e8 <__smakebuf_r+0x18>
 801a908:	f023 0303 	bic.w	r3, r3, #3
 801a90c:	f043 0302 	orr.w	r3, r3, #2
 801a910:	81a3      	strh	r3, [r4, #12]
 801a912:	e7e3      	b.n	801a8dc <__smakebuf_r+0xc>
 801a914:	4b0d      	ldr	r3, [pc, #52]	; (801a94c <__smakebuf_r+0x7c>)
 801a916:	62b3      	str	r3, [r6, #40]	; 0x28
 801a918:	89a3      	ldrh	r3, [r4, #12]
 801a91a:	6020      	str	r0, [r4, #0]
 801a91c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801a920:	81a3      	strh	r3, [r4, #12]
 801a922:	9b00      	ldr	r3, [sp, #0]
 801a924:	6163      	str	r3, [r4, #20]
 801a926:	9b01      	ldr	r3, [sp, #4]
 801a928:	6120      	str	r0, [r4, #16]
 801a92a:	b15b      	cbz	r3, 801a944 <__smakebuf_r+0x74>
 801a92c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801a930:	4630      	mov	r0, r6
 801a932:	f000 f887 	bl	801aa44 <_isatty_r>
 801a936:	b128      	cbz	r0, 801a944 <__smakebuf_r+0x74>
 801a938:	89a3      	ldrh	r3, [r4, #12]
 801a93a:	f023 0303 	bic.w	r3, r3, #3
 801a93e:	f043 0301 	orr.w	r3, r3, #1
 801a942:	81a3      	strh	r3, [r4, #12]
 801a944:	89a3      	ldrh	r3, [r4, #12]
 801a946:	431d      	orrs	r5, r3
 801a948:	81a5      	strh	r5, [r4, #12]
 801a94a:	e7cd      	b.n	801a8e8 <__smakebuf_r+0x18>
 801a94c:	0801a73d 	.word	0x0801a73d

0801a950 <__malloc_lock>:
 801a950:	4770      	bx	lr

0801a952 <__malloc_unlock>:
 801a952:	4770      	bx	lr

0801a954 <__sread>:
 801a954:	b510      	push	{r4, lr}
 801a956:	460c      	mov	r4, r1
 801a958:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a95c:	f000 f894 	bl	801aa88 <_read_r>
 801a960:	2800      	cmp	r0, #0
 801a962:	bfab      	itete	ge
 801a964:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801a966:	89a3      	ldrhlt	r3, [r4, #12]
 801a968:	181b      	addge	r3, r3, r0
 801a96a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801a96e:	bfac      	ite	ge
 801a970:	6563      	strge	r3, [r4, #84]	; 0x54
 801a972:	81a3      	strhlt	r3, [r4, #12]
 801a974:	bd10      	pop	{r4, pc}

0801a976 <__swrite>:
 801a976:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a97a:	461f      	mov	r7, r3
 801a97c:	898b      	ldrh	r3, [r1, #12]
 801a97e:	05db      	lsls	r3, r3, #23
 801a980:	4605      	mov	r5, r0
 801a982:	460c      	mov	r4, r1
 801a984:	4616      	mov	r6, r2
 801a986:	d505      	bpl.n	801a994 <__swrite+0x1e>
 801a988:	2302      	movs	r3, #2
 801a98a:	2200      	movs	r2, #0
 801a98c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a990:	f000 f868 	bl	801aa64 <_lseek_r>
 801a994:	89a3      	ldrh	r3, [r4, #12]
 801a996:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801a99a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801a99e:	81a3      	strh	r3, [r4, #12]
 801a9a0:	4632      	mov	r2, r6
 801a9a2:	463b      	mov	r3, r7
 801a9a4:	4628      	mov	r0, r5
 801a9a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801a9aa:	f000 b817 	b.w	801a9dc <_write_r>

0801a9ae <__sseek>:
 801a9ae:	b510      	push	{r4, lr}
 801a9b0:	460c      	mov	r4, r1
 801a9b2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a9b6:	f000 f855 	bl	801aa64 <_lseek_r>
 801a9ba:	1c43      	adds	r3, r0, #1
 801a9bc:	89a3      	ldrh	r3, [r4, #12]
 801a9be:	bf15      	itete	ne
 801a9c0:	6560      	strne	r0, [r4, #84]	; 0x54
 801a9c2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801a9c6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801a9ca:	81a3      	strheq	r3, [r4, #12]
 801a9cc:	bf18      	it	ne
 801a9ce:	81a3      	strhne	r3, [r4, #12]
 801a9d0:	bd10      	pop	{r4, pc}

0801a9d2 <__sclose>:
 801a9d2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a9d6:	f000 b813 	b.w	801aa00 <_close_r>
	...

0801a9dc <_write_r>:
 801a9dc:	b538      	push	{r3, r4, r5, lr}
 801a9de:	4c07      	ldr	r4, [pc, #28]	; (801a9fc <_write_r+0x20>)
 801a9e0:	4605      	mov	r5, r0
 801a9e2:	4608      	mov	r0, r1
 801a9e4:	4611      	mov	r1, r2
 801a9e6:	2200      	movs	r2, #0
 801a9e8:	6022      	str	r2, [r4, #0]
 801a9ea:	461a      	mov	r2, r3
 801a9ec:	f7e7 fa10 	bl	8001e10 <_write>
 801a9f0:	1c43      	adds	r3, r0, #1
 801a9f2:	d102      	bne.n	801a9fa <_write_r+0x1e>
 801a9f4:	6823      	ldr	r3, [r4, #0]
 801a9f6:	b103      	cbz	r3, 801a9fa <_write_r+0x1e>
 801a9f8:	602b      	str	r3, [r5, #0]
 801a9fa:	bd38      	pop	{r3, r4, r5, pc}
 801a9fc:	2001277c 	.word	0x2001277c

0801aa00 <_close_r>:
 801aa00:	b538      	push	{r3, r4, r5, lr}
 801aa02:	4c06      	ldr	r4, [pc, #24]	; (801aa1c <_close_r+0x1c>)
 801aa04:	2300      	movs	r3, #0
 801aa06:	4605      	mov	r5, r0
 801aa08:	4608      	mov	r0, r1
 801aa0a:	6023      	str	r3, [r4, #0]
 801aa0c:	f7e7 fa0e 	bl	8001e2c <_close>
 801aa10:	1c43      	adds	r3, r0, #1
 801aa12:	d102      	bne.n	801aa1a <_close_r+0x1a>
 801aa14:	6823      	ldr	r3, [r4, #0]
 801aa16:	b103      	cbz	r3, 801aa1a <_close_r+0x1a>
 801aa18:	602b      	str	r3, [r5, #0]
 801aa1a:	bd38      	pop	{r3, r4, r5, pc}
 801aa1c:	2001277c 	.word	0x2001277c

0801aa20 <_fstat_r>:
 801aa20:	b538      	push	{r3, r4, r5, lr}
 801aa22:	4c07      	ldr	r4, [pc, #28]	; (801aa40 <_fstat_r+0x20>)
 801aa24:	2300      	movs	r3, #0
 801aa26:	4605      	mov	r5, r0
 801aa28:	4608      	mov	r0, r1
 801aa2a:	4611      	mov	r1, r2
 801aa2c:	6023      	str	r3, [r4, #0]
 801aa2e:	f7e7 fa00 	bl	8001e32 <_fstat>
 801aa32:	1c43      	adds	r3, r0, #1
 801aa34:	d102      	bne.n	801aa3c <_fstat_r+0x1c>
 801aa36:	6823      	ldr	r3, [r4, #0]
 801aa38:	b103      	cbz	r3, 801aa3c <_fstat_r+0x1c>
 801aa3a:	602b      	str	r3, [r5, #0]
 801aa3c:	bd38      	pop	{r3, r4, r5, pc}
 801aa3e:	bf00      	nop
 801aa40:	2001277c 	.word	0x2001277c

0801aa44 <_isatty_r>:
 801aa44:	b538      	push	{r3, r4, r5, lr}
 801aa46:	4c06      	ldr	r4, [pc, #24]	; (801aa60 <_isatty_r+0x1c>)
 801aa48:	2300      	movs	r3, #0
 801aa4a:	4605      	mov	r5, r0
 801aa4c:	4608      	mov	r0, r1
 801aa4e:	6023      	str	r3, [r4, #0]
 801aa50:	f7e7 f9f4 	bl	8001e3c <_isatty>
 801aa54:	1c43      	adds	r3, r0, #1
 801aa56:	d102      	bne.n	801aa5e <_isatty_r+0x1a>
 801aa58:	6823      	ldr	r3, [r4, #0]
 801aa5a:	b103      	cbz	r3, 801aa5e <_isatty_r+0x1a>
 801aa5c:	602b      	str	r3, [r5, #0]
 801aa5e:	bd38      	pop	{r3, r4, r5, pc}
 801aa60:	2001277c 	.word	0x2001277c

0801aa64 <_lseek_r>:
 801aa64:	b538      	push	{r3, r4, r5, lr}
 801aa66:	4c07      	ldr	r4, [pc, #28]	; (801aa84 <_lseek_r+0x20>)
 801aa68:	4605      	mov	r5, r0
 801aa6a:	4608      	mov	r0, r1
 801aa6c:	4611      	mov	r1, r2
 801aa6e:	2200      	movs	r2, #0
 801aa70:	6022      	str	r2, [r4, #0]
 801aa72:	461a      	mov	r2, r3
 801aa74:	f7e7 f9e4 	bl	8001e40 <_lseek>
 801aa78:	1c43      	adds	r3, r0, #1
 801aa7a:	d102      	bne.n	801aa82 <_lseek_r+0x1e>
 801aa7c:	6823      	ldr	r3, [r4, #0]
 801aa7e:	b103      	cbz	r3, 801aa82 <_lseek_r+0x1e>
 801aa80:	602b      	str	r3, [r5, #0]
 801aa82:	bd38      	pop	{r3, r4, r5, pc}
 801aa84:	2001277c 	.word	0x2001277c

0801aa88 <_read_r>:
 801aa88:	b538      	push	{r3, r4, r5, lr}
 801aa8a:	4c07      	ldr	r4, [pc, #28]	; (801aaa8 <_read_r+0x20>)
 801aa8c:	4605      	mov	r5, r0
 801aa8e:	4608      	mov	r0, r1
 801aa90:	4611      	mov	r1, r2
 801aa92:	2200      	movs	r2, #0
 801aa94:	6022      	str	r2, [r4, #0]
 801aa96:	461a      	mov	r2, r3
 801aa98:	f7e7 f9ac 	bl	8001df4 <_read>
 801aa9c:	1c43      	adds	r3, r0, #1
 801aa9e:	d102      	bne.n	801aaa6 <_read_r+0x1e>
 801aaa0:	6823      	ldr	r3, [r4, #0]
 801aaa2:	b103      	cbz	r3, 801aaa6 <_read_r+0x1e>
 801aaa4:	602b      	str	r3, [r5, #0]
 801aaa6:	bd38      	pop	{r3, r4, r5, pc}
 801aaa8:	2001277c 	.word	0x2001277c

0801aaac <_init>:
 801aaac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801aaae:	bf00      	nop
 801aab0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801aab2:	bc08      	pop	{r3}
 801aab4:	469e      	mov	lr, r3
 801aab6:	4770      	bx	lr

0801aab8 <_fini>:
 801aab8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801aaba:	bf00      	nop
 801aabc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801aabe:	bc08      	pop	{r3}
 801aac0:	469e      	mov	lr, r3
 801aac2:	4770      	bx	lr
